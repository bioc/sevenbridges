[{"path":"/articles/api.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Complete Guide for Seven Bridges API R Client","text":"sevenbridges R/Bioconductor package provides interface Seven Bridges public API. supported platforms includes Seven Bridges Platform, Cancer Genomics Cloud (CGC), Cavatica. Learn documentation Seven Bridges Platform Cancer Genomics Cloud (CGC).","code":""},{"path":"/articles/api.html","id":"r-client-for-seven-bridges-api","dir":"Articles","previous_headings":"Introduction","what":"R Client for Seven Bridges API","title":"Complete Guide for Seven Bridges API R Client","text":"sevenbridges package supports v2+ versions API, since versions prior V2 compatible Common Workflow Language (CWL). package provides simple interface accessing trying various methods. two ways constructing API calls. instance, can use low-level API calls use arguments like path, query, body. documented API reference libraries Seven Bridges Platform CGC. example low-level request “list projects” shown . request, can also pass query body list. (Advanced user option) second way constructing API request directly use httr package make API calls, shown .","code":"library(\"sevenbridges\") a <- Auth(token = \"your_token\", platform = \"aws-us\") a$api(path = \"projects\", method = \"GET\") a$project()"},{"path":"/articles/api.html","id":"api-general-information","dir":"Articles","previous_headings":"Introduction","what":"API General Information","title":"Complete Guide for Seven Bridges API R Client","text":"start, keep mind following: offset limit Every API call accepts two arguments named offset limit. Offset defines retrieved items started. Limit defines number items want get. default, offset set 0 limit set 100. , API request returns first 100 items list items search items name. search list items, use complete = TRUE API request. Search ID searching ID, request return exact resource unique. , set offset limit manually. good practice find resources ID pass ID input task. can find resource’s ID final part URL visual interface via API requests list resources get resource’s details. Search name Search name returns partial matches unless specify exact = TRUE.","code":""},{"path":"/articles/api.html","id":"installation","dir":"Articles","previous_headings":"Introduction","what":"Installation","title":"Complete Guide for Seven Bridges API R Client","text":"sevenbridges package available release devel branch Bioconductor. install release branch, use: install devel branch, use: Since constantly improving API client libraries, please also visit GitHub repository recent news latest version package. devtools installation requires devtools package. package, can install CRAN. may get error missing system dependencies curl openssl. example, Ubuntu, probably need following first install devtools build vignettes since need pandoc. devtools already installed Install latest version sevenbridges GitHub following: trouble pandoc want install , set build_vignettes = FALSE avoid vignettes build.","code":"install.packages(\"BiocManager\") BiocManager::install(\"sevenbridges\") install.packages(\"BiocManager\") BiocManager::install(\"sevenbridges\", version = \"devel\") install.packages(\"devtools\") apt-get update apt-get install libcurl4-gnutls-dev libssl-dev pandoc pandoc-citeproc install.packages(\"BiocManager\") install.packages(\"readr\")  devtools::install_github(   \"sbg/sevenbridges-r\",   repos = BiocManager::repositories(),   build_vignettes = TRUE, dependencies = TRUE )"},{"path":"/articles/api.html","id":"quickstart","dir":"Articles","previous_headings":"","what":"Quickstart","title":"Complete Guide for Seven Bridges API R Client","text":"details use API client R, please consult Seven Bridges API Reference section complete guide.","code":""},{"path":"/articles/api.html","id":"create-auth-object","dir":"Articles","previous_headings":"Quickstart","what":"Create Auth Object","title":"Complete Guide for Seven Bridges API R Client","text":"can access account via API, provide credentials. can obtain credentials form “authentication token” Developer Tab Account Settings visual interface. ’ve obtained , create Auth object, remembers authentication token path API. subsequent requests draw upon two pieces information. Let’s load package first: three different ways provide token. Choose one method : Direct authentication. explicitly temporarily sets token platform type (alternatively, API base URL) function call arguments Auth(). Authentication via system environment variables. read credential information two system environment variables: SB_API_ENDPOINT SB_AUTH_TOKEN. Authentication via user configuration file. file, default $HOME/.sevenbridges/credentials, provides organized way collect manage API authentication information Seven Bridges platforms. Method 1: Direct authentication common method construct Auth object. example: Method 2: Environment variables set two environment variables system, use function sbg_set_env(). example: Note change might just temporary, please feel free use standard method set persistent environment variables according operating system. Create Auth object: Method 3: User configuration file Assume already created configuration file named credentials directory $HOME/.sevenbridges/: load user profile aws-us-rfranklin configuration file, simply use: profile_name specified, try load profile named [default]: Note: API paths (base URLs) differ Seven Bridges environment. sure provide correct path environment using. API paths environments : Please refer API reference section usage technical details three authentication methods.","code":"library(\"sevenbridges\") (a <- Auth(platform = \"cgc\", token = \"your_token\")) Using platform: cgc == Auth == url : https://cgc-api.sbgenomics.com/v2/ token : <your_token> sbg_set_env(\"https://cgc-api.sbgenomics.com/v2\", \"your_token\") a <- Auth(from = \"env\") [aws-us-rfranklin] api_endpoint = https://api.sbgenomics.com/v2 auth_token = token_for_this_user  # This is a comment: # another user on the same platform [aws-us-rosalind-franklin] api_endpoint = https://api.sbgenomics.com/v2 auth_token = token_for_this_user  [default] api_endpoint = https://cgc-api.sbgenomics.com/v2 auth_token = token_for_this_user  [gcp] api_endpoint = https://gcp-api.sbgenomics.com/v2 auth_token = token_for_this_user a <- Auth(from = \"file\", profile_name = \"aws-us-rfranklin\") a <- Auth(from = \"file\")"},{"path":"/articles/api.html","id":"get-user-information","dir":"Articles","previous_headings":"Quickstart","what":"Get User Information","title":"Complete Guide for Seven Bridges API R Client","text":"Get information call returns information account. Get information user call returns information specified user. Note currently can view user information, call equivalent call get information account.","code":"a$user() == User == href : https://cgc-api.sbgenomics.com/v2/users/RFranklin username : RFranklin email : rosalind.franklin@sbgenomics.com first_name : Rosalind last_name : Franklin affiliation : Seven Bridges Genomics country : United States a$user(username = \"RFranklin\")"},{"path":"/articles/api.html","id":"rate-limit","dir":"Articles","previous_headings":"Quickstart","what":"Rate Limit","title":"Complete Guide for Seven Bridges API R Client","text":"call returns information current rate limit. number API calls can make one hour.","code":"a$rate_limit() == Rate Limit == limit : 1000 remaining : 993 reset : 1457980957"},{"path":"/articles/api.html","id":"show-billing-information","dir":"Articles","previous_headings":"Quickstart","what":"Show Billing Information","title":"Complete Guide for Seven Bridges API R Client","text":"project must Billing Group associated . Billing Group pays storage computation project. example, first project(s) created free funds Pilot Funds Billing Group assigned user sign-. get information billing: information, use breakdown = TRUE.","code":"# check your billing info a$billing() a$invoice() a$billing(id = \"your_billing_id\", breakdown = TRUE)"},{"path":"/articles/api.html","id":"create-project","dir":"Articles","previous_headings":"Quickstart","what":"Create Project","title":"Complete Guide for Seven Bridges API R Client","text":"Projects core building blocks platform. project corresponds distinct scientific investigation, serving container data, analysis tools, results, collaborators. Create new project called “api testing” billing group id obtained .","code":"# get billing group id bid <- a$billing()$id # create new project (p <- a$project_new(name = \"api testing\", bid, description = \"Just a test\")) == Project == id : RFranklin/api-testing name : api testing description : Just a test billing_group_id : <your_bid> type : v2 -- Permission --"},{"path":"/articles/api.html","id":"get-details-about-existing-project","dir":"Articles","previous_headings":"Quickstart","what":"Get Details about Existing Project","title":"Complete Guide for Seven Bridges API R Client","text":"","code":"# list first 100 a$project() # list all a$project(complete = TRUE) # return all named match \"demo\" a$project(name = \"demo\", complete = TRUE) # get the project you want by id p <- a$project(id = \"RFranklin/api-tutorial\")"},{"path":"/articles/api.html","id":"copy-public-apps-into-your-project","dir":"Articles","previous_headings":"Quickstart","what":"Copy Public Apps into Your Project","title":"Complete Guide for Seven Bridges API R Client","text":"Seven Bridges maintains workflows tools available users Public Apps repository. find public apps, can following: Browse online. Check tutorial “Find apps” section. can use sevenbridges package find , shown . Now, Auth object, copy App id project id new name, following logic. short name changed newcopyofstar. Alternatively, can copy app object.","code":"# search by name matching, complete = TRUE search all apps, # not limited by offset or limit. a$public_app(name = \"STAR\", complete = TRUE) # search by id is accurate a$public_app(id = \"admin/sbg-public-data/rna-seq-alignment-star/5\") # you can also get everything a$public_app(complete = TRUE) # default limit = 100, offset = 0 which means the first 100 a$public_app() # copy a$copy_app(   id = \"admin/sbg-public-data/rna-seq-alignment-star/5\",   project = \"RFranklin/api-testing\", name = \"new copy of star\" ) # check if it is copied p <- a$project(id = \"RFranklin/api-testing\") # list apps your got in your project p$app() == App == id : RFranklin/api-testing/newcopyofstar/0 name : RNA-seq Alignment - STAR project : RFranklin/api-testing-2 revision : 0 app <- a$public_app(id = \"admin/sbg-public-data/rna-seq-alignment-star\") app$copy_to(   project = \"RFranklin/api-testing\",   name = \"copy of star\" )"},{"path":"/articles/api.html","id":"import-cwl-app-and-run-a-task","dir":"Articles","previous_headings":"Quickstart","what":"Import CWL App and Run a Task","title":"Complete Guide for Seven Bridges API R Client","text":"can also upload Common Workflow Language JSON file describes app project. Note: Alternatively, can directly describe CWL tool R package. Please read vignette “Describe CWL Tools/Workflows R Execution”. get app id, like one : ’s composed following elements: project id : RFranklin/api app short name : runif revision : 0 Alternatively, can describe tools R directly, shown : , can add like : Please consult another tutorial vignette(\"apps\", \"sevenbridges\") describe tools flows R.","code":"# add an CWL file to your project f.star <- system.file(\"extdata/app\", \"flow_star.json\", package = \"sevenbridges\") app <- p$app_add(\"starlocal\", fl.runif) (aid <- app$id) \"RFranklin/api-testing/starlocal/0\" fl <- system.file(\"docker\", \"sevenbridges/rabix/generator.R\",   package = \"sevenbridges\" ) cat(readLines(fl), sep = \"\\n\") library(\"sevenbridges\")  in.lst <- list(   input(     id = \"number\",     description = \"number of observations\",     type = \"integer\",     label = \"number\",     prefix = \"--n\",     default = 1,     required = TRUE,     cmdInclude = TRUE   ),   input(     id = \"min\",     description = \"lower limits of the distribution\",     type = \"float\",     label = \"min\",     prefix = \"--min\",     default = 0   ),   input(     id = \"max\",     description = \"upper limits of the distribution\",     type = \"float\",     label = \"max\",     prefix = \"--max\",     default = 1   ),   input(     id = \"seed\",     description = \"seed with set.seed\",     type = \"float\",     label = \"seed\",     prefix = \"--seed\",     default = 1   ) )  # the same method for outputs out.lst <- list(   output(     id = \"random\",     type = \"file\",     label = \"output\",     description = \"random number file\",     glob = \"*.txt\"   ),   output(     id = \"report\",     type = \"file\",     label = \"report\",     glob = \"*.html\"   ) )  rbx <- Tool(   id = \"runif\",   label = \"Random number generator\",   hints = requirements(docker(pull = \"tengfei/runif\"), cpu(1), mem(2000)),   baseCommand = \"runif.R\",   inputs = in.lst, # or ins.df   outputs = out.lst )  fl <- \"inst/docker/sevenbridges/rabix/runif.json\" write(rbx$toJSON(pretty = TRUE), fl) # rbx is the object returned by `Tool` function app <- p$app_add(\"runif\", rbx) (aid <- app$id)"},{"path":[]},{"path":"/articles/api.html","id":"find-your-app-inputs","dir":"Articles","previous_headings":"Quickstart > Execute a New Task","what":"Find your app inputs","title":"Complete Guide for Seven Bridges API R Client","text":"copied public app admin/sbg-public-data/rna-seq-alignment-star/5 project, username/api-testing, app id current project username/api-testing/newcopyofstar. Conversely, can use another app already project Quickstart. draft new task, need specify following: name task optional description app id workflow executing inputs workflow. case, CWL app accepts four parameters: number, min, max, seed. can always check App details visual interface task input requirements. find required inputs R, need get App object first. Conversely, can load app CWL JSON convert R object first, shown . Note input_matrix output_matrix useful accessors Tool, Flow, can call two function JSON file directly well. response body, locate names required inputs. Note task inputs need match expected data type name. example, see two required fields: fastq: input takes file array indicated “File…” genomeFastaFiles: single file indicated “File”. also want provide gene feature file: sjdbGTFfile: single file indicated “File”. can find list possible input types : number, character integer: can directly pass input parameter . enum type: Pass value input parameter. file: input file. However, inputs accept single file (File), inputs take one file (File arrays, FilesList, ‘File...’ ). input requires pass Files object (single file input) FilesList object (inputs accept one file) simply list “Files” object. can search file id name exact match (exact = TRUE), shown example .","code":"app <- a$app(id = \"RFranklin/api-testing-2/newcopyofstar\") # get input matrix app$input_matrix() app$input_matrix(c(\"id\", \"label\", \"type\")) # get required node only app$input_matrix(c(\"id\", \"label\", \"type\"), required = TRUE) f1 <- system.file(\"extdata/app\", \"flow_star.json\", package = \"sevenbridges\") app <- convert_app(f1) # get input matrix app$input_matrix() ##                                id                    label    type required ## 1                    #sjdbGTFfile              sjdbGTFfile File...    FALSE ## 2                          #fastq                    fastq File...     TRUE ## 3               #genomeFastaFiles         genomeFastaFiles    File     TRUE ## 4 #sjdbGTFtagExonParentTranscript      Exons' parents name  string    FALSE ## 5       #sjdbGTFtagExonParentGene                Gene name  string    FALSE ## 6          #winAnchorMultimapNmax         Max loci anchors     int    FALSE ## 7             #winAnchorDistNbins Max bins between anchors     int    FALSE ##   fileTypes ## 1      null ## 2      null ## 3      null ## 4      null ## 5      null ## 6      null ## 7      null app$input_matrix(c(\"id\", \"label\", \"type\")) ##                                id                    label    type ## 1                    #sjdbGTFfile              sjdbGTFfile File... ## 2                          #fastq                    fastq File... ## 3               #genomeFastaFiles         genomeFastaFiles    File ## 4 #sjdbGTFtagExonParentTranscript      Exons' parents name  string ## 5       #sjdbGTFtagExonParentGene                Gene name  string ## 6          #winAnchorMultimapNmax         Max loci anchors     int ## 7             #winAnchorDistNbins Max bins between anchors     int app$input_matrix(c(\"id\", \"label\", \"type\"), required = TRUE) ##                  id            label    type ## 2            #fastq            fastq File... ## 3 #genomeFastaFiles genomeFastaFiles    File tool.in <- system.file(\"extdata/app\", \"tool_unpack_fastq.json\", package = \"sevenbridges\") flow.in <- system.file(\"extdata/app\", \"flow_star.json\", package = \"sevenbridges\") input_matrix(tool.in) input_matrix(tool.in, required = TRUE) input_matrix(flow.in) input_matrix(flow.in, c(\"id\", \"type\")) input_matrix(flow.in, required = TRUE) output_matrix(tool.in) output_matrix(flow.in)"},{"path":"/articles/api.html","id":"get-your-input-files-ready","dir":"Articles","previous_headings":"Quickstart > Execute a New Task","what":"Get your input files ready","title":"Complete Guide for Seven Bridges API R Client","text":"","code":"fastqs <- c(\"SRR1039508_1.fastq\", \"SRR1039508_2.fastq\")  # get all 2 exact files fastq_in <- p$file(name = fastqs, exact = TRUE)  # get a single file fasta_in <- p$file(   name = \"Homo_sapiens.GRCh38.dna.primary_assembly.fa\",   exact = TRUE ) # get all single file gtf_in <- p$file(   name = \"Homo_sapiens.GRCh38.84.gtf\",   exact = TRUE )"},{"path":"/articles/api.html","id":"create-a-new-draft-task","dir":"Articles","previous_headings":"Quickstart > Execute a New Task","what":"Create a new draft task","title":"Complete Guide for Seven Bridges API R Client","text":"Remember fastq input expects list files. can also something follows: Use complete = TRUE number items 100.","code":"# add new tasks taskName <- paste0(\"RFranklin-star-alignment \", date())  tsk <- p$task_add(   name = taskName,   description = \"star test\",   app = \"RFranklin/api-testing-2/newcopyofstar/0\",   inputs = list(     sjdbGTFfile = gtf_in,     fastq = fastq_in,     genomeFastaFiles = fasta_in   ) ) f1 <- p$file(name = \"SRR1039508_1.fastq\", exact = TRUE) f2 <- p$file(name = \"SRR1039508_2.fastq\", exact = TRUE) # get all 2 exact files fastq_in <- list(f1, f2)  # or if you know you only have 2 files whose names match SRR924146*.fastq fastq_in <- p$file(name = \"SRR1039508*.fastq\", complete = TRUE)"},{"path":"/articles/api.html","id":"draft-a-batch-task","dir":"Articles","previous_headings":"Quickstart > Execute a New Task","what":"Draft a batch task","title":"Complete Guide for Seven Bridges API R Client","text":"Now let’s batch 8 files 4 groups, batched metadata sample_id library_id. assume file two metadata fields entered. Since files can evenly grouped 4, single parent batch task 4 child tasks. Now draft batch task. Please check visual interface. response body inform errors warnings. Note: can also directly pass file id file names characters inputs list, package first guess passed strings file id (24-bit hexadecimal) names, convert Files FilesList object. However, good practice, recommend construct files object(e.g. p$file(id = ..., name = ...)) first, check value, pass task_add inputs. safer approach.","code":"fastqs <- c(   \"SRR1039508_1.fastq\", \"SRR1039508_2.fastq\", \"SRR1039509_1.fastq\",   \"SRR1039509_2.fastq\", \"SRR1039512_1.fastq\", \"SRR1039512_2.fastq\",   \"SRR1039513_1.fastq\", \"SRR1039513_2.fastq\" )  # get all 8 files fastq_in <- p$file(name = fastqs, exact = TRUE) # can also try to returned all SRR*.fastq files # fastq_in <- p$file(name= \"SRR*.fastq\", complete = TRUE)  tsk <- p$task_add(   name = taskName,   description = \"Batch Star Test\",   app = \"RFranklin/api-testing-2/newcopyofstar/0\",   batch = batch(     input = \"fastq\",     criteria = c(\"metadata.sample_id\", \"metadata.noexist_id\")   ),   inputs = list(     sjdbGTFfile = gtf_in,     fastq = fastqs_in,     genomeFastaFiles = fasta_in   ) )"},{"path":"/articles/api.html","id":"run-a-task","dir":"Articles","previous_headings":"Quickstart","what":"Run a Task","title":"Complete Guide for Seven Bridges API R Client","text":"Now, ready run task. run task, can adjust draft task final modifications. Alternatively, can delete draft task longer wish run . run task, can abort . want update task re-run , follow example .","code":"# run your task tsk$run() # # not run # tsk$delete() # abort your task tsk$abort() tsk$getInputs() # missing number input, only update number tsk$update(inputs = list(sjdbGTFfile = \"some new file\")) # double check tsk$getInputs()"},{"path":"/articles/api.html","id":"run-tasks-using-spot-instances","dir":"Articles","previous_headings":"Quickstart","what":"Run tasks using spot instances","title":"Complete Guide for Seven Bridges API R Client","text":"Running tasks spot instances potentially reduce considerable amount computational cost. option can controlled project level task level Seven Bridges platforms. package follows logic platform’s web interface (current default setting spot instances ). example, create project using project_new(), can set use_interruptible = FALSE use -demand instances (non-interruptible expensive) instead spot instances (interruptible cheaper): new tasks created project use -demand instances run default, unless argument use_interruptible_instances specifically set TRUE drafting new task using task_add(). example, p spot disabled project, draft task use spot instances run: Conversely, can spot instance enabled project, draft run specific tasks using -demand instances, setting use_interruptible_instances = FALSE task_add() explicitly.","code":"p <- a$project_new(   name = \"spot-disabled-project\", bid, description = \"spot disabled project\",   use_interruptible = FALSE ) tsk <- p$task_add(   name = paste0(\"spot enabled task in a spot disabled project\"),   description = \"spot enabled task\",   app = ...,   inputs = list(...),   use_interruptible_instances = TRUE )"},{"path":"/articles/api.html","id":"execution-hints-per-task-run","dir":"Articles","previous_headings":"Quickstart","what":"Execution hints per task run","title":"Complete Guide for Seven Bridges API R Client","text":"workflow development benchmarking, sometimes need view make adjustments computational resources needed task run efficiently. Also, task fails due resource deficiency, often want define larger instance task re-run without editing app . particularly important cases enough disk space. Seven Bridges API allows setting specific task execution parameters using execution_settings. includes instance type (instance_type) maximum number parallel instances (max_parallel_instances): details execution_settings, please check create new draft task.","code":"tsk <- p$task_add(   ...,   execution_settings = list(     instance_type = \"c4.2xlarge;ebs-gp2;2000\",     max_parallel_instances = 2   ) )"},{"path":"/articles/api.html","id":"task-monitoring","dir":"Articles","previous_headings":"Quickstart","what":"Task Monitoring","title":"Complete Guide for Seven Bridges API R Client","text":"monitor task runs, can always request task update ask task report status. , can monitor running task hook function, triggers function status “completed”. Please check details section . default, task alerts email completed. Use following download files completed task. Instead default task monitor action, can use setTaskHook connect function call status task. run tsk$monitor(time = 30) check task every 30 seconds see current task status matches one following statuses: “queued”, “draft”, “running”, “completed”, “aborted”, “failed”. finds match task status, getTaskHook returns function call specific status. want customize monitor function, can adjust following requirement. function must return TRUE FALSE end. TRUE (non-logical value) means monitoring terminated finds status matched function executes, task completed. FALSE, means monitoring continue next iteration checking, e.g., “running”, want keep tracking. Follow example set new function monitor status “completed”. , task completed, download task output files local folder.","code":"tsk$update() # Monitor your task (skip this part) # tsk$monitor() tsk$download(\"~/Downloads\") getTaskHook(\"completed\") ## function (...)  ## { ##     cat(\"\\r\", \"completed\") ##     return(TRUE) ## } ## <environment: 0x7fa1df14e470> setTaskHook(\"completed\", function() {   tsk$download(\"~/Downloads\")   return(TRUE) }) tsk$monitor()"},{"path":"/articles/api.html","id":"seven-bridges-api-reference","dir":"Articles","previous_headings":"","what":"Seven Bridges API Reference","title":"Complete Guide for Seven Bridges API R Client","text":"sevenbridges package provides user-friendly interface, combine several api() calls constantly reference API documentation issue API requests.","code":""},{"path":"/articles/api.html","id":"authentication","dir":"Articles","previous_headings":"Seven Bridges API Reference","what":"Authentication","title":"Complete Guide for Seven Bridges API R Client","text":"can interact API, need construct Auth object stores following information: authentication token. used authenticate credentials API. Learn obtaining authentication token Seven Bridges Platform Cancer Genomics Cloud. approach obtaining authentication token also applies Seven Bridges platforms. path API (base URL). platform name using. optional field, base URL API ultimately decides API calls sent . field blank URL directly provided, platform name inferred URL. general authentication logic Auth() follows: package use direct authentication method specified explicitly specified = \"direct\". package load authentication information environment variables = \"env\", user configuration file = \"file\".","code":""},{"path":"/articles/api.html","id":"direct-authentication","dir":"Articles","previous_headings":"Seven Bridges API Reference > Authentication","what":"Direct authentication","title":"Complete Guide for Seven Bridges API R Client","text":"use direct authentication, users need specify one platform url, corresponding token. Examples direct authentication: use Seven Bridges Platform AWS (US). use specified url base URL API calls. example, url points Seven Bridges Platform Google Cloud Platform (GCP). use Cancer Genomics Cloud environment since platform url explicitly specified (recommended). Note: platform url specified time.","code":"a <- Auth(   token = \"your_token\",   platform = \"aws-us\" ) a <- Auth(   token = \"your_token\",   url = \"https://gcp-api.sbgenomics.com/v2\" ) a <- Auth(token = \"your_token\")"},{"path":"/articles/api.html","id":"authentication-via-system-environment-variables","dir":"Articles","previous_headings":"Seven Bridges API Reference > Authentication","what":"Authentication via system environment variables","title":"Complete Guide for Seven Bridges API R Client","text":"R API client supports reading authentication information stored system environment variables. set two environment variables system, use function sbg_set_env(). example: See environment variables correctly set: create Auth object: unset two environment variables:","code":"sbg_set_env(   url = \"https://cgc-api.sbgenomics.com/v2\",   token = \"your_token\" ) sbg_get_env(\"SB_API_ENDPOINT\") ## \"https://cgc-api.sbgenomics.com/v2\" sbg_get_env(\"SB_AUTH_TOKEN\") ## \"your_token\" a <- Auth(from = \"env\") Sys.unsetenv(\"SB_API_ENDPOINT\") Sys.unsetenv(\"SB_AUTH_TOKEN\")"},{"path":"/articles/api.html","id":"authentication-via-user-configuration-file","dir":"Articles","previous_headings":"Seven Bridges API Reference > Authentication","what":"Authentication via user configuration file","title":"Complete Guide for Seven Bridges API R Client","text":"can create ini-like file named credentials folder $HOME/.sevenbridges/ maintain credentials multiple accounts across various Seven Bridges environments. example: Please make sure two fields exactly named api_endpoint auth_token profile. load default profile (named [default]) default user configuration file ($HOME/.sevenbridges/credentials), please use: load user profile aws-us-rfranklin configuration file, change profile_name: use user configuration file locations (recommended), please specify file path using argument config_file. example: Note: edited credentials file, please use Auth() re-authenticate.","code":"[aws-us-rfranklin] api_endpoint = https://api.sbgenomics.com/v2 auth_token = token_for_this_user  # This is a comment: # another user on the same platform [aws-us-rosalind-franklin] api_endpoint = https://api.sbgenomics.com/v2 auth_token = token_for_this_user  [default] api_endpoint = https://cgc-api.sbgenomics.com/v2 auth_token = token_for_this_user  [gcp] api_endpoint = https://gcp-api.sbgenomics.com/v2 auth_token = token_for_this_user a <- Auth(from = \"file\") a <- Auth(from = \"file\", profile_name = \"aws-us-rfranklin\") a <- Auth(   from = \"file\", config_file = \"~/sevenbridges.cfg\",   profile_name = \"aws-us-rfranklin\" )"},{"path":"/articles/api.html","id":"list-all-api-calls","dir":"Articles","previous_headings":"Seven Bridges API Reference","what":"List All API Calls","title":"Complete Guide for Seven Bridges API R Client","text":"pass parameters api() Auth, list API calls. parameters provide passed api() function, pass input token path since Auth object already information. following call Auth object check response well.","code":"a$api()"},{"path":[]},{"path":"/articles/api.html","id":"offset-and-limit","dir":"Articles","previous_headings":"Seven Bridges API Reference > Offset, Limit, Search, and Advance Access Features","what":"offset and limit","title":"Complete Guide for Seven Bridges API R Client","text":"Every API call accepts two arguments named offset limit. offset defines retrieved items started. limit defines number items want get. default, offset set 0 limit set 50. , API request returns first 100 items list items search items name. search list items, use complete = TRUE API request.","code":"getOption(\"sevenbridges\")$offset getOption(\"sevenbridges\")$limit"},{"path":"/articles/api.html","id":"search-by-id","dir":"Articles","previous_headings":"Seven Bridges API Reference > Offset, Limit, Search, and Advance Access Features","what":"Search by ID","title":"Complete Guide for Seven Bridges API R Client","text":"searching ID, request return exact resource unique. , set offset limit manually. good practice find resources ID pass ID input task. can find resource’s ID final part URL visual interface via API requests list resources get resource’s details.","code":""},{"path":"/articles/api.html","id":"search-by-name","dir":"Articles","previous_headings":"Seven Bridges API Reference > Offset, Limit, Search, and Advance Access Features","what":"Search by name","title":"Complete Guide for Seven Bridges API R Client","text":"Search name returns partial matches unless specify exact = TRUE. type search search across current pulled content, use complete = TRUE want search across everything. example, list public apps, use visibility argument, make sure pass complete = TRUE , show everything. arguments generally works items like “App”, “Project”, “Task”, “File”, etc.","code":"# first, search by id is fast x <- a$app(visibility = \"public\", id = \"admin/sbg-public-data/sbg-ucsc-b37-bed-converter/1\")  # show 100 items from public x <- a$app(visibility = \"public\") length(x) # 100  x <- a$app(visibility = \"public\", complete = TRUE) length(x) # 272 by Nov 2016 # this return nothing, because it is not in the first 100 returned names a$app(visibility = \"public\", name = \"bed converter\") # this return an app, because it pulls *all* app names and did search a$app(visibility = \"public\", name = \"bed converter\", complete = TRUE)"},{"path":"/articles/api.html","id":"experiment-with-advance-access-features","dir":"Articles","previous_headings":"Seven Bridges API Reference > Offset, Limit, Search, and Advance Access Features","what":"Experiment with Advance Access features","title":"Complete Guide for Seven Bridges API R Client","text":"Similar offset limit, every API call accepts argument named advance_access. argument first introduced August 2017 controls special field HTTP request header sent, can enable access “Advance Access” features Seven Bridges API. Note Advance Access features API officially released yet, therefore API usages subject change, please use discretion. addition modifying API call uses Advance Access features, option can also set globally beginning API script. offers one-button switch users want experiment Advance Access features. option disabled default: example, Markers API Advance Access November 2018. try use Markers API list markers available BAM file advance_access option disabled, return error message: enable Advance Access features, one can use beginning scripts. Let’s check option enabled: Send API call : information markers available BAM file returned:","code":"library(\"sevenbridges\") getOption(\"sevenbridges\")$advance_access ## [1] FALSE req <- api(   token = \"your_token\", path = \"genome/markers?file={bam_file_id}\",   method = \"GET\" )  httr::content(req)$\"message\" ## [1] \"Advance access feature needs X-SBG-Advance-Access: advance header.\" opt <- getOption(\"sevenbridges\") opt$advance_access <- TRUE options(sevenbridges = opt) getOption(\"sevenbridges\")$advance_access ## [1] TRUE req <- api(   token = \"your_token\", path = \"genome/markers?file={bam_file_id}\",   method = \"GET\" ) httr::content(req) $href [1] \"https://api.sbgenomics.com/v2/genome/markers?file={bam_file_id}&offset=0&limit=2\"  $items $items[[1]] $items[[1]]$href [1] \"https://api.sbgenomics.com/v2/genome/markers/{bam_file_id}\"  $items[[1]]$id [1] \"{bam_file_id}\"  $items[[1]]$name [1] \"Marker Title\"  $items[[2]] $items[[2]]$href [1] \"https://api.sbgenomics.com/v2/genome/markers/{bam_file_id}\"  $items[[2]]$id [1] \"{bam_file_id}\"  $items[[2]]$name [1] \"Marker Title\"  $links list()"},{"path":"/articles/api.html","id":"query-parameter-fields","dir":"Articles","previous_headings":"Seven Bridges API Reference","what":"Query Parameter 'fields'","title":"Complete Guide for Seven Bridges API R Client","text":"Please read documentation detail. API calls take optional query parameter fields. parameter enables specify fields want returned listing resources (e.g., projects) getting details specific resource (e.g., given project). fields parameter can used following ways: fields parameter specified: calls return default fields. calls return complete details single resource, properties; calls list resources certain type, default properties. fields parameter can set list fields: example, return fields id, name size files project, may issue call p$file(fields = \"id,name,size\") fields parameter can used exclude specific file: wish omit certain field response, using fields parameter prefix !. example, get details file without listing metadata, issue call p$file(fields = '!metadata') entire metadata field removed response. fields parameter can used include omit certain nested fields, way listed 2 3 : example, can use metadata.sample_id origin.task files. see fields resource, specify fields=\"_all\". returns fields resource returned. Note getting details specific resource, use fields=\"_all\" won’t return properties shown without parameter — use case instead listing details many resources. Please use care resource particularly large fields; example, raw field app resource contains complete CWL specification app can result bulky response listing many apps. Negations nesting can combined freely, , example, can issue p$file(fields=\"id,name,status,!metadata.library,!origin\") p$task(fields=\"!inputs,!outputs\"). Please try following examples.","code":"## default fields id, name, project p$file() ## return file(s) with id, name, siae information p$file(fields = \"id,name,size\") ## return file(s) with all available info p$file(detail = TRUE) ## same as above p$file(fields = \"_all\")"},{"path":"/articles/api.html","id":"rate-limits","dir":"Articles","previous_headings":"Seven Bridges API Reference","what":"Rate Limits","title":"Complete Guide for Seven Bridges API R Client","text":"call returns information current rate limit. number API calls can make one hour.","code":"a$rate_limit()"},{"path":"/articles/api.html","id":"users","dir":"Articles","previous_headings":"Seven Bridges API Reference","what":"Users","title":"Complete Guide for Seven Bridges API R Client","text":"call returns list resources, projects, billing groups, organizations, accessible . Currently, call return successful response {username} replaced username. sure capitalize username way registered account. provide username, show user information.","code":"# return your information a$user() # return user RFranklin's information a$user(\"RFranklin\")"},{"path":[]},{"path":"/articles/api.html","id":"for-billing","dir":"Articles","previous_headings":"Seven Bridges API Reference > Billing Group and Invoices","what":"For billing","title":"Complete Guide for Seven Bridges API R Client","text":"billing group id provided, call returns list paths used access billing information via API. username provided, call lists billing groups, including groups pending disabled. specify breakdown = TRUE, call returns breakdown spending per-project billing group specified billing_group. Information also displayed projects particular billing group associated , including task executions, initiating user, start end time, cost.","code":"# return a BillingList object (b <- a$billing()) a$billing(id = b$id, breakdown = TRUE)"},{"path":"/articles/api.html","id":"for-invoices","dir":"Articles","previous_headings":"Seven Bridges API Reference > Billing Group and Invoices","what":"For invoices","title":"Complete Guide for Seven Bridges API R Client","text":"Billing Group id provided, call returns list invoices, information , including whether invoice pending billing period covers. call returns information available invoices unless use query parameter bg_id specify ID particular Billing Group, case return invoice incurred Billing Group . invoice id provided, call retrieves information specified invoice, including costs analysis storage invoice period. Note: Currently, invoice object. Instead, just returns regular R list.","code":"a$invoice() a$invoice(id = \"your_id\")"},{"path":"/articles/api.html","id":"project","dir":"Articles","previous_headings":"Seven Bridges API Reference","what":"Project","title":"Complete Guide for Seven Bridges API R Client","text":"Projects basic units organize different entities: files, tasks, apps, etc. , many actions stem Project object.","code":""},{"path":"/articles/api.html","id":"list-all-projects","dir":"Articles","previous_headings":"Seven Bridges API Reference > Project","what":"List all projects","title":"Complete Guide for Seven Bridges API R Client","text":"following call returns list projects member. project’s project_id path returned. want list projects owned accessible particular user, specify owner argument follows. project’s ID path returned. get details project(s), use detail = TRUE, shown .","code":"a$project() a$project(owner = \"RFranklin\") a$project(owner = \"Rosalind.Franklin\") a$project(detail = TRUE)"},{"path":"/articles/api.html","id":"partial-match-project-name","dir":"Articles","previous_headings":"Seven Bridges API Reference > Project","what":"Partial match project name","title":"Complete Guide for Seven Bridges API R Client","text":"friendly interface convenient search, sevenbridges package supports partial name matching. first argument following request name.","code":"# want to return a project called a$project(\"hello\")"},{"path":"/articles/api.html","id":"filter-by-project-creation-date-modification-date-and-creator","dir":"Articles","previous_headings":"Seven Bridges API Reference > Project","what":"Filter by project creation date, modification date, and creator","title":"Complete Guide for Seven Bridges API R Client","text":"Project creation date, modification date, creator information useful quickly locating project need, especially want follow life cycle large number projects distinguish recent projects old ones. facilitate needs, fields created_by, created_on, modified_on returned project query calls:","code":"# return all projects matching the name \"wgs\" p <- a$project(\"wgs\", complete = TRUE)  # filter by project creators creators <- sapply(p, \"[[\", \"created_by\") which(creator == \"RFranklin\")  # filter by project creation date create_date <- as.Date(sapply(p, \"[[\", \"created_on\")) which(as.Date(create_date) < as.Date(\"2019-01-01\"))  # filter by project modification date modify_date <- as.Date(sapply(p, \"[[\", \"modified_on\")) which(as.Date(modify_date) < as.Date(\"2019-01-01\"))"},{"path":"/articles/api.html","id":"create-a-new-project","dir":"Articles","previous_headings":"Seven Bridges API Reference > Project","what":"Create a new project","title":"Complete Guide for Seven Bridges API R Client","text":"create new project, users need specify following: name (required) billing_group_id (required) description (optional) tags (optional): list(). using API CGC environment, can create TCGA Controlled Data project specifying TCGA tags. type (optional): default, create V2, CWL compatible project.","code":"a$project_new(\"api_testing_tcga\", b$id,   description = \"Test for API\" )"},{"path":"/articles/api.html","id":"create-a-new-project-with-tcga-controlled-data-on-cgc","dir":"Articles","previous_headings":"Seven Bridges API Reference > Project","what":"Create a new project with TCGA controlled data on CGC","title":"Complete Guide for Seven Bridges API R Client","text":"Follow directions , pass tcga value tags.","code":"a$project_new(\"controlled_project\", b$id,   description = \"Test for API\", tags = list(\"tcga\") )"},{"path":"/articles/api.html","id":"delete-a-project","dir":"Articles","previous_headings":"Seven Bridges API Reference > Project","what":"Delete a project","title":"Complete Guide for Seven Bridges API R Client","text":"can delete single project making request $delete(). Note returned object $project() sometimes returns list use partial matching name. $delete() request operate list. want operate list object, read batch functions relevant section .","code":"# remove it, not run a$project(\"api_testing\")$delete() # check # will delete all projects match the name delete(a$project(\"api_testing_donnot_delete_me\"))"},{"path":"/articles/api.html","id":"updateedit-a-project","dir":"Articles","previous_headings":"Seven Bridges API Reference > Project","what":"Update/edit a project","title":"Complete Guide for Seven Bridges API R Client","text":"can update following information existing project: name description billing_group_id","code":"a$project(id = \"RFranklin/helloworld\") a$project(id = \"RFranklin/helloworld\")$update(   name = \"Hello World Update\",   description = \"Update description\" )"},{"path":[]},{"path":"/articles/api.html","id":"list-members","dir":"Articles","previous_headings":"Seven Bridges API Reference > Project > Project member","what":"List members","title":"Complete Guide for Seven Bridges API R Client","text":"call returns list members specified project. member, response lists: member’s username member’s permissions specified project","code":"a$project(id = \"RFranklin/demo-project\")$member()"},{"path":"/articles/api.html","id":"add-a-member","dir":"Articles","previous_headings":"Seven Bridges API Reference > Project > Project member","what":"Add a member","title":"Complete Guide for Seven Bridges API R Client","text":"call adds new user specified project. can made user admin permissions project. Requests add project member must include key permissions. However, include value, member’s permissions set false default. Set permission passing following values: copy, write, execute, admin, read. Note: read implicit set default. can project member without read permissions.","code":"m <- a$project(id = \"RFranklin/demo-project\")$   member_add(username = \"Rosalind.Franklin\")"},{"path":"/articles/api.html","id":"update-a-member","dir":"Articles","previous_headings":"Seven Bridges API Reference > Project > Project member","what":"Update a member","title":"Complete Guide for Seven Bridges API R Client","text":"call edits user’s permissions specified project. can made user admin permissions project.","code":"m <- a$project(id = \"RFranklin/demo-project\")$   member(username = \"Rosalind.Franklin\") m$update(copy = TRUE) == Member == username : Rosalind.Franklin -- Permission -- read : TRUE write : FALSE copy_permission : TRUE execute : FALSE admin : FALSE"},{"path":"/articles/api.html","id":"delete-a-member","dir":"Articles","previous_headings":"Seven Bridges API Reference > Project > Project member","what":"Delete a member","title":"Complete Guide for Seven Bridges API R Client","text":"delete existing member, call delete() action Member object.","code":"m$delete() # confirm a$project(id = \"RFranklin/demo-project\")$member()"},{"path":"/articles/api.html","id":"list-all-files","dir":"Articles","previous_headings":"Seven Bridges API Reference > Project","what":"List all files","title":"Complete Guide for Seven Bridges API R Client","text":"list files belonging project, use following request:","code":"p <- a$project(id = \"RFranklin/demo-project\") p$file()"},{"path":[]},{"path":"/articles/api.html","id":"list-all-files-1","dir":"Articles","previous_headings":"Seven Bridges API Reference > Files, Metadata, and Tags","what":"List all files","title":"Complete Guide for Seven Bridges API R Client","text":"better way list files project uses following: Alternatively, can get files Auth object.","code":"# first 100 files, default offset = 0, limit = 100 p$file() # list all files p$file(complete = TRUE) a$file(project = p$id) a$file(name = \"omni\", project = p$id, detail = TRUE)"},{"path":[]},{"path":"/articles/api.html","id":"rule-of-thumb","dir":"Articles","previous_headings":"Seven Bridges API Reference > Files, Metadata, and Tags > Search and filter file(s)","what":"Rule of thumb","title":"Complete Guide for Seven Bridges API R Client","text":"can easily search partial name, exact name, id many items like project, apps, files. Fortunately, powerful filters files. user search metadata, tags, original task ID. First rule: understand scope: know default limit = 100 offset = 0 first 100 items, unless using arguments complete = TRUE. Things different comes files. search exact name (search name exact = TRUE ), metadata, tags, searches files. specify complete = TRUE. Simply provide project id make call project object shown . Second rule: understand operation: filtering resource, including field several times different filtering criteria results implicit operation field different criteria.filtering different specified fields, implicit performed criteria.” different fields, metadata, origin.task, tags, different fields. Note different metadata fields treated different fields well, operation different metadata fields. quick example, following code gives us files project RFranklin/demo metadata sample_id “Sample1” “Sample2”, library id “EXAMPLE”, tags either “hello” “world”.","code":"p <- a$project(id = \"RFranklin/demo\") p$file(   metadata = list(     sample_id = \"Sample1\",     sample_id = \"Sample2\",     library_id = \"EXAMPLE\"   ),   tag = c(\"hello\", \"world\") )"},{"path":"/articles/api.html","id":"search-by-name-and-id","dir":"Articles","previous_headings":"Seven Bridges API Reference > Files, Metadata, and Tags > Search and filter file(s)","what":"Search by name and id","title":"Complete Guide for Seven Bridges API R Client","text":"two ways return exact file want. One id, one exact name. advanced users: searching name exact = TRUE, directly uses public API call match exact name return object single query. turn exact, grep files files defined limit offset first, match name, slow. get file id, can check URL web interface file details page. get one object, arguments id name accept vectors, can pass one id name . use exact = TRUE, API assume pattern grep use partial matching.","code":"# return single object id is \"some_file_id\" p$file(id = \"some_file_id\") # return a single object named a.fastq p$file(name = \"a.fastq\", exact = TRUE) # public file search using Auth object a$public_file(name = \"ucsc.hg19.fasta.fai\", exact = TRUE) a$public_file(id = \"578cf94a507c17681a3117e8\") # get two files p$file(name = c(\"test1.fastq\", \"test2.fastq\"), exact = TRUE) # get two files from public files using shorthand a$public_file(   name = c(\"ucsc.hg19.fasta.fai\", \"ucsc.hg19.fasta\"),   exact = TRUE ) # get matchd the pattern for searching first 100 files p$file(name = c(\"gz\", \"fastq\")) # get all matched files from the project p$file(name = c(\"gz\", \"fastq\"), complete = TRUE) # get all files matched ucsc a$public_file(name = \"ucsc.hg19\", complete = TRUE)"},{"path":"/articles/api.html","id":"search-by-metadata","dir":"Articles","previous_headings":"Seven Bridges API Reference > Files, Metadata, and Tags > Search and filter file(s)","what":"Search by metadata","title":"Complete Guide for Seven Bridges API R Client","text":"specify different metadata fields, values use operation, specify metadata fields, values use operation. list files project RFranklin/demo, sample_id “Sample1” “Sample2” another metadata field library_id set “EXAMPLE”, make following request.","code":"p <- a$project(id = \"RFranklin/demo\") p$file(metadata = list(   sample_id = \"Sample1\",   sample_id = \"Sample2\",   library_id = \"EXAMPLE\" ))"},{"path":"/articles/api.html","id":"search-by-tags","dir":"Articles","previous_headings":"Seven Bridges API Reference > Files, Metadata, and Tags > Search and filter file(s)","what":"Search by tags","title":"Complete Guide for Seven Bridges API R Client","text":"Tags flexible metadata. can search multiple tags using operation. example shows return files tag “s1” “s2”.","code":"p <- a$project(id = \"RFranklin/demo\") p$file(tag = c(\"s1\", \"s2\"))"},{"path":"/articles/api.html","id":"search-by-original-task-id","dir":"Articles","previous_headings":"Seven Bridges API Reference > Files, Metadata, and Tags > Search and filter file(s)","what":"Search by original task id","title":"Complete Guide for Seven Bridges API R Client","text":"can also get files task. two ways : Started Task object; Use filter criteria.","code":"# list all outputs file from a task id a$task(id = \"53020538-6936-422f-80de-02fa65ae4b39\")$file()  # OR p <- a$project(id = \"RFranklin/demo\") p$file(origin.task = \"53020538-6936-422f-80de-02fa65ae4b39\")"},{"path":"/articles/api.html","id":"copy-a-file-or-group-of-files","dir":"Articles","previous_headings":"Seven Bridges API Reference > Files, Metadata, and Tags","what":"Copy a file or group of files","title":"Complete Guide for Seven Bridges API R Client","text":"call copies specified file new project. Files retain metadata copied, may assigned new names target project. Note Controlled Data files may copied Open Data projects. make request, copy permission within project copying . Let’s try copy file Public File repository. file’s id “561e1b33e4b0aa6ec48167d7”. must provide id: file id list/vector files ids project: project id. name (optional):omitted, use name original file name NOTE: copy group files, need Auth$copyFile() interface. id files project different id Public Files repository. Alternatively, copy single file shown . Notably, many files copy projects, always recommend using Auth$bulk_file_copy() method described Actions API section , batch copy files single API call save number API calls.","code":"# 1000G_omni2.5.b37.vcf fid <- \"561e1b33e4b0aa6ec48167d7\" fid2 <- \"561e1b33e4b0aa6ec48167d3\" pid <- a$project(\"demo\")$id a$copyFile(c(fid, fid2), project = pid) a$project(id = pid)$file() a$project(\"hello\")$file(id = fid)$copyTo(pid)"},{"path":"/articles/api.html","id":"delete-files","dir":"Articles","previous_headings":"Seven Bridges API Reference > Files, Metadata, and Tags","what":"Delete file(s)","title":"Complete Guide for Seven Bridges API R Client","text":"Note: delete action works one file time. sure file call returns single file rather file list. can also delete group files FilesList object, just careful using function.","code":"a$project(\"demo\")$file()[[1]]$delete() ## confirm the deletion a$project(\"demo\")$file() ## return 5 files a$project(\"demo\")$file(\"phase1\") ## delete all of them delete(a$project(\"demo\")$file(\"phase1\")) a$project(\"demo\")$file(\"phase1\")"},{"path":"/articles/api.html","id":"download-files","dir":"Articles","previous_headings":"Seven Bridges API Reference > Files, Metadata, and Tags","what":"Download files","title":"Complete Guide for Seven Bridges API R Client","text":"get download information, please use following: download directly R, use download call directly single File object. also created download function FilesList object save time, follows: download files project, use following:","code":"a$project(\"demo\")$file()[[1]]$download_url() fid <- a$project(\"demo\")$file()[[1]]$id a$project(\"demo\")$file(id = fid3)$download(\"~/Downloads/\") fls <- a$project(\"demo\")$file() download(fls, \"~/Downloads/\") a$project(\"demo\")$download(\"~/Downloads\")"},{"path":"/articles/api.html","id":"upload-files-via-api","dir":"Articles","previous_headings":"Seven Bridges API Reference > Files, Metadata, and Tags","what":"Upload files via API","title":"Complete Guide for Seven Bridges API R Client","text":"Seven Bridges platforms provide different methods data import: Import FTP HTTP web interface GUI uploader file upload API can directly call sevenbridges package command line uploader can invoked sevenbridges package Use API client uploader calling project$upload function upload file, file list, folder recursively via manifest file.","code":""},{"path":"/articles/api.html","id":"upload-single-file","dir":"Articles","previous_headings":"Seven Bridges API Reference > Files, Metadata, and Tags > Upload files via API","what":"Upload single file","title":"Complete Guide for Seven Bridges API R Client","text":"","code":"a <- Auth(username = \"RFranklin\", platform = \"cgc\") fl <- system.file(\"extdata\", \"sample1.fastq\", package = \"sevenbridges\")  (p <- a$project(id = \"RFranklin/quickstart\"))  # by default load .meta for the file p$upload(fl, overwrite = TRUE) # pass metadata p$upload(fl, overwrite = TRUE, metadata = list(library_id = \"testid2\", platform = \"Illumina x11\")) # rename p$upload(fl,   overwrite = TRUE, name = \"sample_new_name.fastq\",   metadata = list(library_id = \"new_id\") )"},{"path":"/articles/api.html","id":"upload-a-folder","dir":"Articles","previous_headings":"Seven Bridges API Reference > Files, Metadata, and Tags > Upload files via API","what":"Upload a folder","title":"Complete Guide for Seven Bridges API R Client","text":"","code":"dir.ext <- system.file(\"extdata\", package = \"sevenbridges\") list.files(dir.ext) p$upload(dir.ext, overwrite = TRUE)"},{"path":"/articles/api.html","id":"upload-a-list-of-files","dir":"Articles","previous_headings":"Seven Bridges API Reference > Files, Metadata, and Tags > Upload files via API","what":"Upload a list of files","title":"Complete Guide for Seven Bridges API R Client","text":"","code":"dir.ext <- system.file(\"extdata\", package = \"sevenbridges\") # enable full name fls <- list.files(dir.ext, recursive = TRUE, full.names = TRUE) p$upload(fls, overwrite = TRUE) p$upload(\"~/Documents/Data/sbgtest/1000G_phase1.snps.high_confidence.b37.vcf\")"},{"path":"/articles/api.html","id":"upload-files-via-a-defined-manifest-file","dir":"Articles","previous_headings":"Seven Bridges API Reference > Files, Metadata, and Tags > Upload files via API","what":"Upload files via a defined manifest file","title":"Complete Guide for Seven Bridges API R Client","text":"manifest file file used define metadata values set files. can used uploading files platform set metadata. supported file format manifest file CSV. CSV file contains number rows columns separated comma. format manifest file defined documentaion. requirements: first row contain column names parsed metadata fields (e.g. sample, library). customized fields, conversion meta fields like sample_id need string. first column contain names files uploaded. case files directory manifest file, also include path files (e.g. ../filename.fastq). allow users choose upload metadata choose use subset upload part metadata choose use subset upload part files filter Please check examples .","code":"# upload all fiels and all metadata p$upload(manifest_file = \"~/manifest.csv\")  # verbal = TRUE, print single file level progress p$upload(manifest_file = \"~/manifest.csv\", overwrite = TRUE, verbal = TRUE)  # manifest_metadata = FALSE doens't attach any metadata p$upload(manifest_file = \"~/manifest.csv\", manifest_metadata = FALSE, overwrite = TRUE)  # filter files first, upload only files with score < 0.5 p$upload(manifest_file = \"~/manifest.csv\", overwrite = TRUE, subset = score < 0.5)  # attach all meta except \"bad_field\" and \"sample_id\" p$upload(   manifest_file = \"~/manifest.csv\", overwrite = TRUE,   subset = score < 0.5, select = -c(bad_field, sample_id) )"},{"path":"/articles/api.html","id":"upload-files-via-command-line-uploader","dir":"Articles","previous_headings":"Seven Bridges API Reference > Files, Metadata, and Tags","what":"Upload files via command line uploader","title":"Complete Guide for Seven Bridges API R Client","text":"alternative API file uploading, also offer interface sevenbridges package uploading (possibly large) files via Java-based command line uploader. first step download command line uploader. get_uploader(), users can easily download uploader local directory specified Seven Bridges platform, example, Cancer Genomics Cloud: list available projects accessible account via uploader, use cli_list_projects(), authentication token platform directory containing uploader: function return character vector containing available projects upload files , form username/project-name. Similarly, list file tags project via uploader, use cli_list_tags(): Eventually, use cli_upload() upload local files project:","code":"get_uploader(\"cgc\", \"~/Downloads/\") cgc_token <- \"your_cgc_token\" cgc_uploader <- \"~/Downloads/cgc-uploader/\"  cli_list_projects(   token = cgc_token,   uploader = cgc_uploader ) cli_list_tags(   token = cgc_token,   uploader = cgc_uploader,   project = \"username/project-name\" ) cli_upload(   token = cgc_token,   uploader = cgc_uploader,   file = \"~/example.fastq\",   project = \"username/project-name\" )"},{"path":"/articles/api.html","id":"update-a-file","dir":"Articles","previous_headings":"Seven Bridges API Reference > Files, Metadata, and Tags","what":"Update a file","title":"Complete Guide for Seven Bridges API R Client","text":"can call update() function Files object. call, following can updated: file’s name. file’s metadata. metadata form list. Note call overwrites metadata given file, please supply full list metadata file. Conversely, can use set_meta() function patch overwrite metadata file. parameters provided, call get details file update object . Show metadata Update meta","code":"(fl <- a$project(id = \"RFranklin/demo-project\")$file(name = \"sample.fastq\")) == File == id : 56c7916ae4b03b56a7d7 name : sample.fastq project : RFranklin/demo-project # show metadata fl$meta() fl$update(   name = \"sample.fastq\",   metadata = list(     new_item1 = \"item1\",     new_item2 = \"item2\",     file_extension = \"fastq\"   ) ) # check it out fl$meta()"},{"path":"/articles/api.html","id":"metadata-operations","dir":"Articles","previous_headings":"Seven Bridges API Reference > Files, Metadata, and Tags","what":"Metadata operations","title":"Complete Guide for Seven Bridges API R Client","text":"Learn metadata fields values relevant environment: [Seven Bridges Platform] [CGC]. Note name file ID. file’s ID hexadecimal string automatically assigned file project. file’s name human-readable string. information, please see API overview Seven Bridges Platform CGC. Get metadata get metadata file, call meta() function, shown . Set metadata Files curated datasets Seven Bridges environments defined set metadata visible visual interface environment. However, can also pass additional metadata file stored copy file project. set metadata overwrite previously stored metadata, call set_meta() function Files object. Unlike update() function Files object, set_meta() function doesn’t overwrite metadata field. overwrite metadata field, use update() function pass optional argument overwrite = TRUE set_meta() call. Check details metadata field can use Metadata() constructor check details metadata field. Simply call function (name metadata) display descriptions enumerated items. Please pay attention suggested_values field. can see, metadata fields suggested values. construct metadata, use Metadata() directly pass metadata fields values directly call. call perform validation.","code":"# meta is pulling the latest information via API fl$meta() # field metadata saved the previously saved one fl$metadata fl$set_meta(new_item3 = \"item3\") fl # oops it removed rest of the meta fl$set_meta(new_item4 = \"item4\", overwrite = TRUE) fl # check which schema we have Metadata()$show(full = TRUE) # check details for each, play with it platform() paired_end() quality_scale() Metadata(   platform = \"Affymetrix SNP Array 6.0\",   paired_end = 1,   quality_scale = \"sanger\",   new_item = \"new test\" )"},{"path":"/articles/api.html","id":"tag-files","dir":"Articles","previous_headings":"Seven Bridges API Reference > Files, Metadata, and Tags","what":"Tag file(s)","title":"Complete Guide for Seven Bridges API R Client","text":"can tag files keywords strings make easier identify organize files. Tags different metadata convenient visible files list visual interface. Add new tag add new tag, call obj$add_tag() method File object single tag string list vector tags. Overwrite tags file completely overwrite tags file, use obj$set_tag() method, contains default argument overwrite = TRUE. Let’s use file called sample.bam play tags. , find convenient methods FilesList. Let’s add tag “s1” group files matching “Sample1” add tag “s2” group files match “s2”. , filter tags obtain specific files.","code":"p <- a$project(id = \"RFranklin/s3tutorial\") fl <- p$file(\"sample.bam\", exact = TRUE) # show tags for single file fl$tag() # add new tags fl$add_tag(\"new tag\") # equavilent to fl$set_tag(\"new tag 2\", overwrite = FALSE) # set tags to overwrite existing x <- list(\"this\", \"is\", 1234) fl$set_tag(x) # filter by tags p$file(tag = c(\"1234\", \"new\")) p$file(tag = list(\"1234\", \"new\")) p$file(tag = \"1234\") # work on a group of files # add tag \"s2\" to a group of files named with \"Sample2\" in it fl2 <- p$file(\"Sample2\") add_tag(fl2, \"s2\") # add tag \"s2\" to a group of files named with \"Sample1\" in it fl1 <- p$file(\"Sample1\") add_tag(fl1, \"s1\") # filter by tag s1 or s2 p$file(tag = \"s1\") p$file(tag = \"s2\") # get files tagged with s2 and 1234 p$file(tag = list(\"s2\", \"s1\"))"},{"path":"/articles/api.html","id":"folders","dir":"Articles","previous_headings":"Seven Bridges API Reference","what":"Folders","title":"Complete Guide for Seven Bridges API R Client","text":"Folders API allows organize files using folders projects. filesystem perspective, folders simply special type file. Therefore, within package, folder objects still represented using class file objects , specific methods operating .","code":""},{"path":"/articles/api.html","id":"get-project-root-folder","dir":"Articles","previous_headings":"Seven Bridges API Reference > Folders","what":"Get project root folder","title":"Complete Guide for Seven Bridges API R Client","text":"create new folders manage files using folders project, first need get information root folder project. example can get project root folder ID: , return project root folder object:","code":"p <- a$project(id = \"RFranklin/folders-api-testing\") p$get_root_folder_id() [1] \"5bd7c53ee4b04b8fb1a9f63c\" (root_folder <- p$get_root_folder()) == Files == id : 5bd7c53ee4b04b8fb1a9f63c name : 8c02ceda-e46b-49c0-362f-4318fa8f3e4k project : RFranklin/folders-api-testing created_on : 2018-10-29T18:45:50Z modified_on : 2018-10-29T18:45:50Z type : folder"},{"path":"/articles/api.html","id":"create-a-folder","dir":"Articles","previous_headings":"Seven Bridges API Reference > Folders","what":"Create a folder","title":"Complete Guide for Seven Bridges API R Client","text":"create new_folder project root folder, use create new folder folder1, use","code":"folder1 <- root_folder$create_folder(\"folder1\") folder2 <- folder1$create_folder(\"folder2\")"},{"path":"/articles/api.html","id":"copy-files-between-folders","dir":"Articles","previous_headings":"Seven Bridges API Reference > Folders","what":"Copy files between folders","title":"Complete Guide for Seven Bridges API R Client","text":"Let’s copy public reference file project root folder: can also rename file copying folder:","code":"file_public <- a$public_file(name = \"Homo_sapiens_assembly38.fasta\", exact = TRUE) file1 <- file_public$copy_to_folder(root_folder$id) file2 <- file_public$copy_to_folder(root_folder$id, \"ref_grch38.fasta\")"},{"path":"/articles/api.html","id":"move-files-between-folders","dir":"Articles","previous_headings":"Seven Bridges API Reference > Folders","what":"Move files between folders","title":"Complete Guide for Seven Bridges API R Client","text":"move files another folder (example, folder1 just created), use","code":"file1 <- file1$move_to_folder(folder1$id)"},{"path":"/articles/api.html","id":"list-folder-contents","dir":"Articles","previous_headings":"Seven Bridges API Reference > Folders","what":"List folder contents","title":"Complete Guide for Seven Bridges API R Client","text":"list files folders folder (example, root folder), use complete = FALSE (default), return (first) page API based offset limit. list files folders, set type = \"file\" type = \"folder\":","code":"(contents_root <- root_folder$list_folder_contents(complete = TRUE)) [[1]] == Files == id : 5bede476e4b03b8ff38c28ba name : folder1 project : RFranklin/folders-api-testing parent : 5bd7c53ee4b04b8fb1a9f63c type : folder  [[2]] == Files == id : 5bedc431e4b09b8ff3966e9c name : ref_grch38.fasta project : RFranklin/folders-api-testing parent : 5bd7c53ee4b04b8fb1a9f63c type : file root_folder$list_folder_contents(type = \"file\", complete = TRUE) root_folder$list_folder_contents(type = \"folder\", complete = TRUE)"},{"path":"/articles/api.html","id":"get-file-and-folder-details","dir":"Articles","previous_headings":"Seven Bridges API Reference > Folders","what":"Get file and folder details","title":"Complete Guide for Seven Bridges API R Client","text":"Get type single file/folder object: , get type(s) objects folder: Sometimes, ’s convenient get parent folder ID file folder: essentially root folder ID. Alternatively, get parent folder object, use","code":"contents_root[[1]]$typeof() [1] \"folder\" sapply(contents_root, function(x) x$typeof()) [1] \"folder\" \"file\" contents_root[[1]]$get_parent_folder_id() [1] \"5bd7c53ee4b04b8fb1a9f63c\" contents_root[[1]]$get_parent_folder()"},{"path":"/articles/api.html","id":"delete-files-in-a-folder","dir":"Articles","previous_headings":"Seven Bridges API Reference > Folders","what":"Delete files in a folder","title":"Complete Guide for Seven Bridges API R Client","text":"can delete file folder:","code":"file1$delete()"},{"path":"/articles/api.html","id":"delete-a-folder","dir":"Articles","previous_headings":"Seven Bridges API Reference > Folders","what":"Delete a folder","title":"Complete Guide for Seven Bridges API R Client","text":"folder still files , deleted: need delete files (subfolders) within folder deleting folder :","code":"file2 <- file2$move_to_folder(folder2$id) folder2$delete() Error: HTTP Status 400: Deleting non-empty folders is not supported. file2$delete() folder2$delete() folder1$delete()"},{"path":"/articles/api.html","id":"apps","dir":"Articles","previous_headings":"Seven Bridges API Reference","what":"Apps","title":"Complete Guide for Seven Bridges API R Client","text":"Seven Bridges environments support Common Workflow Language (CWL) natively allow reproducible portable workflows tools. section, work apps, including tools workflows, via API using sevenbridges R package.","code":""},{"path":"/articles/api.html","id":"list-all-apps","dir":"Articles","previous_headings":"Seven Bridges API Reference > Apps","what":"List all apps","title":"Complete Guide for Seven Bridges API R Client","text":"call lists apps available . Search app name search specific app name, pass pattern name argument provide unique id shown . List apps project list apps belonging specific project, use project argument. List public apps list public apps, use visibility argument. Search public apps locations search public app cross locations, make following call. Note may take bit time.","code":"a$app() # or show details a$app(detail = TRUE) # pattern match a$app(name = \"STAR\") # unique id aid <- a$app()[[1]]$id aid a$app(id = aid) # get a specific revision from an app a$app(id = aid, revision = 0) # my favorite, always a$project(\"demo\")$app()  # or alternatviely pid <- a$project(\"demo\")$id a$app(project = pid) # show 100 items from public x <- a$app(visibility = \"public\") length(x) x <- a$app(visibility = \"public\", complete = TRUE) length(x) x <- a$app(project = \"RFranklin/helloworld\", complete = TRUE) length(x) a$app(visibility = \"public\", limit = 5, offset = 150) a$app(\"STAR\", visibility = \"public\", complete = TRUE)"},{"path":"/articles/api.html","id":"copy-an-app","dir":"Articles","previous_headings":"Seven Bridges API Reference > Apps","what":"Copy an app","title":"Complete Guide for Seven Bridges API R Client","text":"call copies specified app specified project. app one project can access, either app uploaded project member publicly available app copied project. call requires following two arguments: project: include project id name (optional): use field optionally re-name app can also copy directly app object, shown .","code":"aid <- a$public_app()[[1]]$id a$copy_app(aid, project = pid, name = \"copy-rename-test\") # check if it is copied a$app(project = pid) app <- a$public_app(id = \"admin/sbg-public-data/rna-seq-alignment-star\") app$copy_to(   project = \"RFranklin/api-testing\",   name = \"copy of star\" )"},{"path":"/articles/api.html","id":"get-an-apps-cwl-description","dir":"Articles","previous_headings":"Seven Bridges API Reference > Apps","what":"Get an app’s CWL description","title":"Complete Guide for Seven Bridges API R Client","text":"call returns raw CWL specific app, including raw CWL. call differs call GET details app returns JSON object CWL. app one project can access, either app uploaded project member publicly available app copied project. get specific revision, pass revision argument. Coming soon: converting apps CWL objects","code":"ap <- a$app(visibility = \"public\")[[1]] a$project(\"demo\")$app(\"index\") # get a specific revision a$project(\"demo\")$app(\"index\", revision = 0)"},{"path":"/articles/api.html","id":"add-cwl-as-an-app","dir":"Articles","previous_headings":"Seven Bridges API Reference > Apps","what":"Add CWL as an app","title":"Complete Guide for Seven Bridges API R Client","text":"add CWL object app, use app_add function call Project object. following two parameters required: short_name: Project short names based name give project create . Learn project short names Seven Bridges Platform CGC. filename: name JSON file containing CWL. Note: provide short_name, add new revision.","code":"cwl.fl <- system.file(\"extdata\", \"bam_index.json\", package = \"sevenbridges\") a$project(\"demo\")$app_add(short_name = \"new_bam_index_app\", filename = cwl.fl) a$project(\"demo\")$app_add(short_name = \"new_bam_index_app\", revision = 2, filename = cwl.fl)"},{"path":"/articles/api.html","id":"describe-cwl-in-r-directly","dir":"Articles","previous_headings":"Seven Bridges API Reference > Apps","what":"Describe CWL in R directly","title":"Complete Guide for Seven Bridges API R Client","text":"introduced another vignette (vignette(\"apps\", \"sevenbridges\")).","code":""},{"path":"/articles/api.html","id":"create-test-or-keep-the-previous-test-for-tool","dir":"Articles","previous_headings":"Seven Bridges API Reference > Apps","what":"Create test or keep the previous test for Tool","title":"Complete Guide for Seven Bridges API R Client","text":"Seven Bridges platforms, create update tools GUI, test tab allow users tweak parameters see looks like command line simulated terminal. via R push Tool object project, need provide \"sbg:job\" information like example shown created test info platform previously pushed one, want keep previous test setup. provide argument named keep_test allow keep previous revision’s test information.","code":"rbx <- Tool(   id = \"runif\",   label = \"Random number generator\",   hints = requirements(     docker(pull = \"RFranklin/runif\"),     cpu(1), mem(2000)   ),   baseCommand = \"runif.R\",   inputs = in.lst,   outputs = out.lst,   \"sbg:job\" = list(     allocatedResources = list(mem = 9000, cpu = 1),     inputs = list(min = 1, max = 150)   ) ) p$app_add(\"random\", rbx) rbx <- Tool(   id = \"runif\",   label = \"Random number generator\",   hints = requirements(     docker(pull = \"RFranklin/runif\"),     cpu(1), mem(2000)   ),   baseCommand = \"runif.R\",   inputs = in.lst,   outputs = out.lst ) p$app_add(\"random\", rbx, keep_test = TRUE)"},{"path":[]},{"path":"/articles/api.html","id":"list-tasks","dir":"Articles","previous_headings":"Seven Bridges API Reference > Tasks","what":"List tasks","title":"Complete Guide for Seven Bridges API R Client","text":"call returns list tasks can access. can filter tasks status. list tasks project, use following. list tasks details, pass detail = TRUE. list batch task using parent parameter, pass batch parent task id.","code":"# all tasks a$task() # filter a$task(status = \"completed\") a$task(status = \"running\") # a better way a$project(\"demo\")$task()  # alternatively pid <- a$project(\"demo\")$id a$task(project = pid) p$task(id = \"your task id here\", detail = TRUE) p$task(detail = TRUE) p <- a$project(id = \"RFranklin/demo\") p$task(id = \"2e1ebed1-c53e-4373-870d-4732acacbbbb\") p$task(parent = \"2e1ebed1-c53e-4373-870d-4732acacbbbb\") p$task(parent = \"2e1ebed1-c53e-4373-870d-4732acacbbbb\", status = \"completed\") p$task(parent = \"2e1ebed1-c53e-4373-870d-4732acacbbbb\", status = \"draft\")"},{"path":"/articles/api.html","id":"create-a-draft-task","dir":"Articles","previous_headings":"Seven Bridges API Reference > Tasks","what":"Create a draft task","title":"Complete Guide for Seven Bridges API R Client","text":"create draft task, need call task_add function Project object. need pass following arguments: name: name task description (optional): description task app: app id inputs: list inputs task","code":"# push an app first fl.runif <- system.file(\"extdata\", \"runif.json\", package = \"sevenbridges\") a$project(\"demo\")$app_add(\"runif_draft\", fl.runif) runif_id <- \"RFranklin/demo-project/runif_draft\" # create a draft task a$project(\"demo\")$task_add(   name = \"Draft runif 3\",   description = \"Description for runif 3\",   app = runif_id,   inputs = list(min = 1, max = 10) ) # confirm a$project(\"demo\")$task(status = \"draft\")"},{"path":"/articles/api.html","id":"modify-a-task","dir":"Articles","previous_headings":"Seven Bridges API Reference > Tasks","what":"Modify a task","title":"Complete Guide for Seven Bridges API R Client","text":"Call update function Task object update following: name description inputs list. Note can update items provided.","code":"# get the single task you want to update tsk <- a$project(\"demo\")$task(\"Draft runif 3\") tsk tsk$update(   name = \"Draft runif update\",   description = \"draft 2\",   inputs = list(max = 100) ) # alternative way to check all inputs tsk$getInputs()"},{"path":"/articles/api.html","id":"run-a-task-1","dir":"Articles","previous_headings":"Seven Bridges API Reference > Tasks","what":"Run a task","title":"Complete Guide for Seven Bridges API R Client","text":"call runs (“executes”) specified task. tasks “DRAFT” status may run. ### Monitor running task set hook function monitor running task, call monitor Task object. first argument sets interval time check status Rest arguments might used hook function Get set default hook function task status. Currently, failed tasks break monitoring. Note: Hook function return TRUE (break monitoring) FALSE (continuing) end.","code":"tsk$run() # run update without information just return latest information tsk$update() tsk$monitor() getTaskHook(\"completed\") getTaskHook(\"draft\") setTaskHook(\"draft\", function() {   message(\"never happens\")   return(TRUE) }) getTaskHook(\"draft\")"},{"path":"/articles/api.html","id":"abort-a-running-task","dir":"Articles","previous_headings":"Seven Bridges API Reference > Tasks","what":"Abort a running task","title":"Complete Guide for Seven Bridges API R Client","text":"call aborts specified task. tasks whose status “RUNNING” may aborted.","code":"# abort tsk$abort() # check tsk$update()"},{"path":"/articles/api.html","id":"delete-a-task","dir":"Articles","previous_headings":"Seven Bridges API Reference > Tasks","what":"Delete a task","title":"Complete Guide for Seven Bridges API R Client","text":"Note can delete DRAFT tasks, running tasks.","code":"tsklst <- a$task(status = \"draft\") # delete a single task tsklst[[1]]$delete() # confirm a$task(status = \"draft\") # delete a list of tasks delete(tsklst)"},{"path":"/articles/api.html","id":"download-all-files-from-a-completed-task","dir":"Articles","previous_headings":"Seven Bridges API Reference > Tasks","what":"Download all files from a completed task","title":"Complete Guide for Seven Bridges API R Client","text":"","code":"tsk$download(\"~/Downloads\")"},{"path":"/articles/api.html","id":"run-tasks-in-batch-mode","dir":"Articles","previous_headings":"Seven Bridges API Reference > Tasks","what":"Run tasks in batch mode","title":"Complete Guide for Seven Bridges API R Client","text":"run tasks batch mode, (check ?batch) details. code mockup example.","code":"# batch by items (tsk <- p$task_add(   name = \"RNA DE report new batch 2\",   description = \"RNA DE analysis report\",   app = rna.app$id,   batch = batch(input = \"bamfiles\"),   inputs = list(     bamfiles = bamfiles.in,     design = design.in,     gtffile = gtf.in   ) ))  # batch by metadata, input files has to have metadata fields specified (tsk <- p$task_add(   name = \"RNA DE report new batch 3\",   description = \"RNA DE analysis report\",   app = rna.app$id,   batch = batch(     input = \"fastq\",     c(\"metadata.sample_id\", \"metadata.library_id\")   ),   inputs = list(     bamfiles = bamfiles.in,     design = design.in,     gtffile = gtf.in   ) ))"},{"path":"/articles/api.html","id":"download-all-files-from-a-batch-task","dir":"Articles","previous_headings":"Seven Bridges API Reference > Tasks","what":"Download all files from a batch task","title":"Complete Guide for Seven Bridges API R Client","text":"can loop batch task download files child task:","code":"batch_task <- p$task(parent = \"<parent_task_id>\") tsk_id <- sapply(batch_task, \"[[\", \"id\") for (i in 1:length(tsk_id)) {   tsk <- p$task(id = tsk_id[i])   tsk$file()   tsk$download() }"},{"path":"/articles/api.html","id":"volumes","dir":"Articles","previous_headings":"Seven Bridges API Reference","what":"Volumes","title":"Complete Guide for Seven Bridges API R Client","text":"Cloud storage providers come interfaces, features, terminology. certain level, though, view resources data objects organized repositories. Authentication operations commonly defined objects repositories, cloud provider might call things different names apply different parameters , basic behavior . Seven Bridges environments mediate access repositories using volumes. volume associated particular cloud storage repository enabled Seven Bridges read (, optionally, write ). Currently, volumes may created using two types cloud storage repository: Amazon Web Services’ (AWS) S3 buckets Google Cloud Storage (GCS) buckets. volume enables treat cloud repository associated external storage. can ‘import’ files volume Seven Bridges environment use inputs computation. Similarly, can write files Seven Bridges environment cloud storage ‘exporting’ volume. Learn volumes Seven Bridges Platform CGC.","code":""},{"path":"/articles/api.html","id":"create-a-volume","dir":"Articles","previous_headings":"Seven Bridges API Reference > Volumes","what":"Create a volume","title":"Complete Guide for Seven Bridges API R Client","text":"","code":"a <- Auth(user = \"RFranklin\", platform = \"aws-us\")  a$add_volume(   name = \"tutorial_volume\",   type = \"s3\",   bucket = \"RFranklin-demo\",   prefix = \"\",   access_key_id = \"your_access_key_id\",   secret_access_key = \"your_secret_access_key\",   sse_algorithm = \"AES256\",   access_mode = \"RW\" )"},{"path":"/articles/api.html","id":"list-and-search-all-volumes","dir":"Articles","previous_headings":"Seven Bridges API Reference > Volumes","what":"List and search all volumes","title":"Complete Guide for Seven Bridges API R Client","text":"","code":"# list all volume a$volume() # get unique volume by id a$volume(id = \"RFranklin/RFranklin_demo\") # partial search by name a$volume(name = \"demo\")"},{"path":"/articles/api.html","id":"get-a-volumes-detail","dir":"Articles","previous_headings":"Seven Bridges API Reference > Volumes","what":"Get a volume’s detail","title":"Complete Guide for Seven Bridges API R Client","text":"","code":"v <- a$volume() v[[1]]$detail()"},{"path":"/articles/api.html","id":"delete-volume","dir":"Articles","previous_headings":"Seven Bridges API Reference > Volumes","what":"Delete volume","title":"Complete Guide for Seven Bridges API R Client","text":"call deletes volume ’ve created refer storage Amazon Web Services Google Cloud Storage. Note files ’ve imported volume onto Seven Bridges environment, known alias, longer usable. new volume created volume_id deleted volume, aliases point files newly created volume instead (exist).","code":"a$volume(id = \"RFranklin/RFranklin_demo\")$delete()"},{"path":"/articles/api.html","id":"import-file-from-volume-to-project","dir":"Articles","previous_headings":"Seven Bridges API Reference > Volumes","what":"Import file from volume to project","title":"Complete Guide for Seven Bridges API R Client","text":"call imports file volume project.","code":"v <- a$volume(id = \"RFranklin/tutorial_volume\") res <- v$import(   location = \"A-RNA-File.bam.bai\",   project = \"RFranklin/s3tutorial\",   name = \"new.bam.bai\",   overwrite = TRUE )  # get job status update # state will be \"COMPLETED\" when it's finished, otherwise \"PENDING\" v$get_import_job(res$id) v"},{"path":"/articles/api.html","id":"export-file-from-project-to-volume","dir":"Articles","previous_headings":"Seven Bridges API Reference > Volumes","what":"Export file from project to volume","title":"Complete Guide for Seven Bridges API R Client","text":"Important : file selected export must public file alias. Aliases objects stored cloud storage bucket made available Seven Bridges environment. volume exporting must configured read-write access. , set access_mode parameter RW creating modifying volume. call successful, original project file become alias newly exported object volume. source file deleted Seven Bridges environment , copies file exist, longer count towards total storage price Seven Bridges environment. testing, please update file project.","code":"res <- v$export(   file = \"579fb1c9e4b08370afe7903a\",   volume = \"RFranklin/tutorial_volume\",   location = \"\", # when \"\" use old name   sse_algorithm = \"AES256\" ) # get job status update # state will be \"COMPLETED\" when it's finished other wise \"PENDING\" v$get_export_job(res$id) v"},{"path":"/articles/api.html","id":"public-files-and-apps","dir":"Articles","previous_headings":"Seven Bridges API Reference","what":"Public Files and Apps","title":"Complete Guide for Seven Bridges API R Client","text":"Seven Bridges hosts publicly accessible files apps environments. sevenbridges package provides two easy function calls Authentication object search copy files apps project.","code":""},{"path":"/articles/api.html","id":"public-files","dir":"Articles","previous_headings":"Seven Bridges API Reference > Public Files and Apps","what":"Public files","title":"Complete Guide for Seven Bridges API R Client","text":"Public files hosted project called admin/sbg-public-data, can alternatively use file request get files need.","code":"# list the first 100 files a$public_file() # list by offset and limit a$public_file(offset = 100, limit = 100) # simply list everything! a$public_file(complete = TRUE) # get exact file by id a$public_file(id = \"5772b6f0507c175267448700\") # get exact file by name with exact = TRUE a$public_file(name = \"G20479.HCC1143.2.converted.pe_1_1Mreads.fastq\", exact = TRUE) # with exact = FALSE by default search by name pattern a$public_file(name = \"fastq\") a$public_file(name = \"G20479.HCC1143.2.converted.pe_1_1Mreads.fastq\")"},{"path":"/articles/api.html","id":"public-apps","dir":"Articles","previous_headings":"Seven Bridges API Reference > Public Files and Apps","what":"Public apps","title":"Complete Guide for Seven Bridges API R Client","text":"public apps, similar API calls.","code":"# list for 100 apps a$public_app() # list by offset and limit a$public_app(offset = 100, limit = 50) # search by id a$public_app(id = \"admin/sbg-public-data/control-freec-8-1/12\") # search by name in ALL apps a$public_app(name = \"STAR\", complete = TRUE) # search by name with exact match a$public_app(name = \"Control-FREEC\", exact = TRUE, complete = TRUE)"},{"path":"/articles/api.html","id":"actions","dir":"Articles","previous_headings":"Seven Bridges API Reference","what":"Actions","title":"Complete Guide for Seven Bridges API R Client","text":"Actions API allows copy files projects batch send feedback Seven Bridges.","code":""},{"path":"/articles/api.html","id":"copy-files-between-projects","dir":"Articles","previous_headings":"Seven Bridges API Reference > Actions","what":"Copy files between projects","title":"Complete Guide for Seven Bridges API R Client","text":"call allows copy files projects. Unlike $copyFile() file(...)$copyTo(...) copy one file API call, call lets batch copy operation copy list files time. can use sapply get copy operation status, new file IDs, (new) file names copied files: Note file’s ID dependent project contained . , copy files one project another, IDs different target project. file names, however, change copying, except copying yield non-unique file names target project.","code":"p <- a$project(id = \"RFranklin/source-project\") f <- p$file(complete = TRUE) # get all file IDs file_ids <- sapply(f, \"[[\", \"id\") # bulk copy files to the target project req <- a$bulk_file_copy(file_ids, \"RFranklin/target-project\") # print the response list (req <- unname(req)) [[1]] [[1]]$status [1] \"OK\"  [[1]]$new_file_id [1] \"5bf31316e4b09b8ff39f9df7\"  [[1]]$new_file_name [1] \"merged-tumor.converted.pe_1.fastq\"  ... sapply(req, \"[[\", \"status\") [1] \"OK\" \"OK\" \"OK\" \"OK\" sapply(req, \"[[\", \"new_file_id\") [1] \"5bf31316e4b09b8ff39f9df7\" \"5bf31316e4b09b8ff39f9dfa\" \"5bf31316e4b09b8ff39f9df4\" \"5bf31316e4b09b8ff39f9df1\" sapply(req, \"[[\", \"new_file_name\") [1] \"merged-tumor.converted.pe_1.fastq\"  \"merged-tumor.converted.pe_2.fastq\"  \"merged-normal.converted.pe_2.fastq\" [4] \"merged-normal.converted.pe_1.fastq\""},{"path":"/articles/api.html","id":"send-a-feedback-item","dir":"Articles","previous_headings":"Seven Bridges API Reference > Actions","what":"Send a feedback item","title":"Complete Guide for Seven Bridges API R Client","text":"Use call send feedbacks Seven Bridges via API. three feedback types available: \"idea\", \"thought\", \"problem\". can send one feedback item per minute.","code":"a$send_feedback(   \"This is a test for sending feedback via API. Please ignore this message.\",   type = \"thought\" )"},{"path":"/articles/api.html","id":"enterprise","dir":"Articles","previous_headings":"Seven Bridges API Reference","what":"Enterprise","title":"Complete Guide for Seven Bridges API R Client","text":"Enterprise API allows manage Enterprise Seven Bridges Platform via dedicated API calls.","code":""},{"path":"/articles/api.html","id":"api-token-for-the-division-context","dir":"Articles","previous_headings":"Seven Bridges API Reference > Enterprise","what":"API token for the division context","title":"Complete Guide for Seven Bridges API R Client","text":"Note authentication token Enterprise API separate token generated context division, different non-division (personal) auth token. may see following error using non-division token call Enterprise API: see error, first switch correct division context (use dropdown menu upper left corner), click “Developer” tab, click “Auth token”, generate token, use token API authentication.","code":"Error: HTTP Status 400: Insufficient privileges to access this resource. Not a division user."},{"path":"/articles/api.html","id":"list-all-divisions","dir":"Articles","previous_headings":"Seven Bridges API Reference > Enterprise","what":"List all divisions","title":"Complete Guide for Seven Bridges API R Client","text":"list divisions access , use","code":"a <- Auth(...)  a$division() [[1]] == Division ==   id : the-division name : The Division [[2]] == Division ==   id : another-division name : Another Division"},{"path":"/articles/api.html","id":"get-details-of-a-division","dir":"Articles","previous_headings":"Seven Bridges API Reference > Enterprise","what":"Get details of a division","title":"Complete Guide for Seven Bridges API R Client","text":"get details (ID name) division, example, first division listed , use","code":"(d <- a$division(\"the-division\")) == Division ==   id : the-division name : The Division"},{"path":"/articles/api.html","id":"create-a-team","dir":"Articles","previous_headings":"Seven Bridges API Reference > Enterprise","what":"Create a team","title":"Complete Guide for Seven Bridges API R Client","text":"Let’s create two new teams division:","code":"team1 <- d$create_team(name = \"New Team 1\") team2 <- d$create_team(name = \"New Team 2\")"},{"path":"/articles/api.html","id":"get-details-of-a-team","dir":"Articles","previous_headings":"Seven Bridges API Reference > Enterprise","what":"Get details of a team","title":"Complete Guide for Seven Bridges API R Client","text":"check details (ID name) first team just created, use","code":"d$team(team1$id) == Team == id : 39f6cb44-9e3c-40e7-8639-3c0f3c1e4892 name : New Team 1"},{"path":"/articles/api.html","id":"add-a-team-member","dir":"Articles","previous_headings":"Seven Bridges API Reference > Enterprise","what":"Add a team member","title":"Complete Guide for Seven Bridges API R Client","text":"can add division members teams created. example, let’s add (division username -division/your_username) another division member (division username -division/another_username) first team. Also, let’s add second team:","code":"team1$add_member(\"the-division/your_username\") team1$add_member(\"the-division/another_username\")  team2$add_member(\"the-division/your_username\")"},{"path":"/articles/api.html","id":"list-team-members","dir":"Articles","previous_headings":"Seven Bridges API Reference > Enterprise","what":"List team members","title":"Complete Guide for Seven Bridges API R Client","text":"List team members roles:","code":"(m1 <- team1$member()) (m2 <- team2$member()) [[1]] == Team Member == username : the-division/another_username role : ADMIN [[2]] == Team Member == username : the-division/your_username role : ADMIN [[1]] == Team Member == username : the-division/your_username role : ADMIN"},{"path":"/articles/api.html","id":"remove-a-team-member","dir":"Articles","previous_headings":"Seven Bridges API Reference > Enterprise","what":"Remove a team member","title":"Complete Guide for Seven Bridges API R Client","text":"Let’s remove user first team:","code":"team1$remove_member(m1[[1]]$username)"},{"path":"/articles/api.html","id":"rename-a-team","dir":"Articles","previous_headings":"Seven Bridges API Reference > Enterprise","what":"Rename a team","title":"Complete Guide for Seven Bridges API R Client","text":"rename team, use: renaming, team still ID, just different name.","code":"team1$rename(\"Another Team Name\") == Team == id : 39f6cb44-9e3c-40e7-8639-3c0f3c1e4892 name : Another Team Name"},{"path":"/articles/api.html","id":"list-your-teams-in-the-division","dir":"Articles","previous_headings":"Seven Bridges API Reference > Enterprise","what":"List your teams in the division","title":"Complete Guide for Seven Bridges API R Client","text":"list teams member division, use Note one-minute delay backend just added teams seconds ago.","code":"d$team()"},{"path":"/articles/api.html","id":"delete-a-team","dir":"Articles","previous_headings":"Seven Bridges API Reference > Enterprise","what":"Delete a team","title":"Complete Guide for Seven Bridges API R Client","text":"delete teams created, use","code":"team1$delete() team2$delete()"},{"path":"/articles/api.html","id":"markers","dir":"Articles","previous_headings":"Seven Bridges API Reference","what":"Markers","title":"Complete Guide for Seven Bridges API R Client","text":"Markers API allows add, get, modify, delete genetic markers BAM files. genetic markers can examined Seven Bridges Genome Browser. November 2018, Markers API still Advance Access feature. use API, set advance_access option TRUE:","code":"opt <- getOption(\"sevenbridges\") opt$advance_access <- TRUE options(sevenbridges = opt)"},{"path":"/articles/api.html","id":"create-a-marker","dir":"Articles","previous_headings":"Seven Bridges API Reference > Markers","what":"Create a marker","title":"Complete Guide for Seven Bridges API R Client","text":"Let’s create new marker BAM file first: possible parameters creating marker include marker’s name (name) marker’s position (start end) Chromosome number (chromosome) Whether marker private public (private). marker’s name position mandatory parameters, others optional.","code":"# locate the project p <- a$project(id = \"RFranklin/api-markers\") # search for files with `.bam` in their names f <- p$file(name = \".bam\") # use the first BAM file f <- p$file(id = f[[1]]$id)  # create two markers m1 <- f$create_marker(\"The First Marker\", start = 21631232, end = 21631232) m2 <- f$create_marker(\"The Second Marker\", start = 21631156, end = 21631158, chromosome = \"chr7\", private = FALSE)"},{"path":"/articles/api.html","id":"list-markers-available-on-a-file","dir":"Articles","previous_headings":"Seven Bridges API Reference > Markers","what":"List markers available on a file","title":"Complete Guide for Seven Bridges API R Client","text":"list markers file, use:","code":"f$marker() [[1]] == Marker == id : 5bf478e5d38f185f0c23bc44 name : The First Marker [[2]] == Marker == id : 5bf478e6d38f185f0c23bc45 name : The Second Marker"},{"path":"/articles/api.html","id":"get-details-for-a-marker","dir":"Articles","previous_headings":"Seven Bridges API Reference > Markers","what":"Get details for a marker","title":"Complete Guide for Seven Bridges API R Client","text":"can also check details specific marker:","code":"marker_id <- m1$id f$marker(id = marker_id) == Marker == id : 5bf478e5d38f185f0c23bc44 name : The First Marker file : 5bf46c1be4b39b8f5232282e position:   start : 21631232   end : 21631232 created_time : 2018-11-20T21:13:00Z created_by : RFranklin private : TRUE"},{"path":"/articles/api.html","id":"modify-a-marker","dir":"Articles","previous_headings":"Seven Bridges API Reference > Markers","what":"Modify a marker","title":"Complete Guide for Seven Bridges API R Client","text":"can also modify information existing markers: five marker parameters mentioned can modified.","code":"(m1 <- m1$modify(name = \"New Marker Name\", end = 21631233, private = FALSE)) == Marker == id : 5bf478e5d38f185f0c23bc44 name : New Marker Name file : 5bf46c1be4b39b8f5232282e position:   start : 21631232   end : 21631233 created_time : 2018-11-20T21:13:00Z created_by : RFranklin private : FALSE"},{"path":"/articles/api.html","id":"delete-a-marker","dir":"Articles","previous_headings":"Seven Bridges API Reference > Markers","what":"Delete a marker","title":"Complete Guide for Seven Bridges API R Client","text":"delete markers just added, use","code":"m1$delete() m2$delete()"},{"path":"/articles/api.html","id":"get-raw-response-from-httr","dir":"Articles","previous_headings":"Seven Bridges API Reference","what":"Get Raw Response from httr","title":"Complete Guide for Seven Bridges API R Client","text":"easy API, return object contains raw response httr field. can either call response() object use field .","code":""},{"path":"/articles/api.html","id":"batch-operation-on-projectfilestasks","dir":"Articles","previous_headings":"Seven Bridges API Reference","what":"Batch Operation on Project/Files/Tasks","title":"Complete Guide for Seven Bridges API R Client","text":"Currently, users use lapply operations . ’s simple implementation. package, implement delete download objects like task, project, file.","code":""},{"path":"/articles/api.html","id":"api-cheatsheet","dir":"Articles","previous_headings":"","what":"API Cheatsheet","title":"Complete Guide for Seven Bridges API R Client","text":"Quick API cheat sheet (work progress):","code":"# 01 - Authentication ----------------------------------------------------------  getToken()  # authentication methods a <- Auth(token = token) a <- Auth(token = token, platform = \"cgc\") a <- Auth(from = \"env\") a <- Auth(from = \"file\", profile_name = \"aws-us-user\")  # list all API calls a$api()  # API rate limit a$rate_limit()  # 02 - User -------------------------------------------------------------------  a$user() a$user(\"RFranklin\")  # 03 - Billing -----------------------------------------------------------------  a$billing() a$billing(id = ..., breakdown = TRUE) a$invoice() a$invoice(id = \"your_id\")  # 04 - Project -----------------------------------------------------------------  # create new project a$project_new(name = ..., billing_group_id = ..., description = ...)  # list all project owned by you a$project() a$project(owner = \"Rosalind.Franklin\")  # partial match p <- a$project(name = ..., id = ..., exact = TRUE)  # delete p$delete()  # update p$update(name = ..., description = ...)  # members p$member() p$member_add(username = ...) p$member(username = ...)$update(write = ..., copy = ..., execute = ...) p$memeber(usrname = ...)$delete()  # 05 - File --------------------------------------------------------------------  # list all files in this project p$file()  # list all public files a$file(visibility = \"public\")  # copy a$copyFile(c(fid, fid2), project = pid)  # delete p$file(id = fid)$delete()  # download p$file()[[1]]$download_url() p$file(id = fid3)$download(\"~/Downloads/\")  # download all download(p$file())  # update a file fl$update(name = ..., metadata = list(a = ..., b = ..., ...))  # metadata fl$meta() fl$setMeta() fl$setMeta(..., overwrite = TRUE)  # 06 - App ---------------------------------------------------------------------  a$app()  # apps in a project p$app() p$app(name, id, revision = ...) a$copy_app(aid, project = pid, name = ...)  # add new app p$app_add(short_name = ..., filename = ...)  # 07 - Task --------------------------------------------------------------------  a$task() a$task(id = ...) a$task(status = ...)  p$task() p$task(id = ...) p$task(status = ...)  tsk <- p$task(id = ...) tsk$update() tsk$abort() tsk$run() tsk$download() tsk$detele() tsk$getInputs() tsk$monitor()  getTaskHook() setTaskHook(status = ..., fun = ...)"},{"path":"/articles/apps.html","id":"prerequisite","dir":"Articles","previous_headings":"","what":"Prerequisite","title":"Describe and Execute CWL Tools/Workflows in R","text":"tutorial assume basic knowledge Docker concept. Note: Right now supporting CWL draft 2 SBG extension, support CWL v1.0 soon.","code":""},{"path":"/articles/apps.html","id":"apps-workflows-and-tools","dir":"Articles","previous_headings":"","what":"Apps, Workflows, and Tools","title":"Describe and Execute CWL Tools/Workflows in R","text":"terminology, workflow composed one tool, just app users. can imagine raw input data go pipeline many nodes step perform function data flow, end, got want want: fully processed data result (plot, report, action). key ideas: Tool unit single node workflow, different tools connected workflow. ’s achieve reusability components. Tool described key components: input, output, parameters requirements details. understand tool like black box (container) digest input(s) specified setup output another format. input files matches output two tools, connected. Input composed files parameters, call types: File, Enum, Integer, String . App described JSON/YAML format, following Common Workflow Language (CWL) open-source standard. CWL just collection logic schema. execute pure text file, need executor cloud local. Seven Bridges platform, can simply execute scale. Looks like full jargons hard understand. example. csv table, full missing value want process 3 steps: Replace missing value Filtering rows column “age” smaller 10 Output 3 item: processed table csv file, plot summary report PDF format. can describe step single module tool connect one one form flow. can put everything one single “tool”, downside user use step1 missing value problem. ’s art sciense leverage flexibility efficiency. using CWL? Imagine single file represeting tool workflow, executed anywhere reproducible manner don’t install anything Docker container imaged, ’s going change world computational scientific research research publish results. package trying hide CWL details much possible, user can just use like typical R function.","code":""},{"path":"/articles/apps.html","id":"describe-tools-in-r","dir":"Articles","previous_headings":"","what":"Describe Tools in R","title":"Describe and Execute CWL Tools/Workflows in R","text":"Tool basic unit, also “lego brick” usually start . developer also want provide “lego” piecies users directly run make flow . main interface provided sevenbridges package Tool function, ’s much straight forward describe composing raw CWL JSON file scratch. “Tool” object R exported JSON imported CWL JSON file. highly recommend going documentation Tool Editor chapter Cancer Genomics Cloud understand works, even try platform GUI. help understand R interface better.","code":""},{"path":"/articles/apps.html","id":"import-from-json-file","dir":"Articles","previous_headings":"Describe Tools in R","what":"Import from JSON file","title":"Describe and Execute CWL Tools/Workflows in R","text":"Sometimes people share Tool pure JSON text format. can simply load R using convert_app function, recognize JSON file class (Tool Workflow) automatically. way, can load , revise , use API edit export back JSON file. However, tutorial, important thing learn desribe directly R.","code":"library(\"sevenbridges\") t1 <- system.file(\"extdata/app\", \"tool_star.json\", package = \"sevenbridges\") # # convert JSON file into a Tool object t1 <- convert_app(t1) # # try print it out # t1"},{"path":"/articles/apps.html","id":"utilitites-for-tool-object","dir":"Articles","previous_headings":"Describe Tools in R","what":"Utilitites for Tool object","title":"Describe and Execute CWL Tools/Workflows in R","text":"provide couple utitlities help construct CWL tool quickly R. availale utiles please check help(\"Tool\") utiles find useful execute task, need know input type input id ’s required , can execute task parameters need. Try play input_matrix input_type shown .","code":"# get input type information head(t1$input_type()) reads  readMatesLengthsIn       readMapNumber   limitOutSJoneRead            \"File...\"              \"enum\"               \"int\"               \"int\"  limitOutSJcollapsed    outReadsUnmapped                \"int\"              \"enum\" # get output type information head(t1$output_type()) aligned_reads transcriptome_aligned_reads                       \"File\"                      \"File\"               reads_per_gene                   log_files                       \"File\"                   \"File...\"             splice_junctions          chimeric_junctions                       \"File\"                      \"File\" # return a input matrix with more information head(t1$input_matrix()) id                label    type required 1                #reads        Read sequence File...     TRUE 95         #sjdbGTFfile Splice junction file File...    FALSE 102             #genome         Genome files    File     TRUE 2   #readMatesLengthsIn        Reads lengths    enum    FALSE 3        #readMapNumber         Reads to map     int    FALSE 4    #limitOutSJoneRead Junctions max number     int    FALSE                   prefix 1                   <NA> 95                  <NA> 102                 <NA> 2   --readMatesLengthsIn 3        --readMapNumber 4    --limitOutSJoneRead                                                    fileTypes 1   FASTA, FASTQ, FA, FQ, FASTQ.GZ, FQ.GZ, FASTQ.BZ2, FQ.BZ2 95                                             GTF, GFF, TXT 102                                                      TAR 2                                                       null 3                                                       null 4                                                       null # return only a few fields head(t1$input_matrix(c(\"id\", \"type\", \"required\"))) id    type required 1                #reads File...     TRUE 95         #sjdbGTFfile File...    FALSE 102             #genome    File     TRUE 2   #readMatesLengthsIn    enum    FALSE 3        #readMapNumber     int    FALSE 4    #limitOutSJoneRead     int    FALSE # return only required t1$input_matrix(required = TRUE) id         label    type required prefix 1    #reads Read sequence File...     TRUE   <NA> 102 #genome  Genome files    File     TRUE   <NA>                                                    fileTypes 1   FASTA, FASTQ, FA, FQ, FASTQ.GZ, FQ.GZ, FASTQ.BZ2, FQ.BZ2 102                                                      TAR # return a output matrix with more information t1$output_matrix() id                     label    type fileTypes 1               #aligned_reads           Aligned SAM/BAM    File  SAM, BAM 2 #transcriptome_aligned_reads  Transcriptome alignments    File       BAM 3              #reads_per_gene            Reads per gene    File       TAB 4                   #log_files                 Log files File...       OUT 5            #splice_junctions          Splice junctions    File       TAB 6          #chimeric_junctions        Chimeric junctions    File  JUNCTION 7              #unmapped_reads            Unmapped reads File...     FASTQ 8         #intermediate_genome Intermediate genome files    File       TAR 9         #chimeric_alignments       Chimeric alignments    File       SAM # return only a few fields t1$output_matrix(c(\"id\", \"type\")) id    type 1               #aligned_reads    File 2 #transcriptome_aligned_reads    File 3              #reads_per_gene    File 4                   #log_files File... 5            #splice_junctions    File 6          #chimeric_junctions    File 7              #unmapped_reads File... 8         #intermediate_genome    File 9         #chimeric_alignments    File # get required input id t1$get_required() reads    genome  \"File...\"    \"File\" # set new required input with ID, # or without # t1$set_required(c(\"#reads\", \"winFlankNbins\")) not implemented yet! t1$get_required() reads    genome  \"File...\"    \"File\" # turn off requirements for input node #reads t1$set_required(\"reads\", FALSE) not implemented yet! t1$get_required() reads    genome  \"File...\"    \"File\" # get input id head(t1$input_id()) #STAR                  #STAR                  #STAR                \"#reads\"  \"#readMatesLengthsIn\"       \"#readMapNumber\"                   #STAR                  #STAR                  #STAR    \"#limitOutSJoneRead\" \"#limitOutSJcollapsed\"    \"#outReadsUnmapped\" # get full input id with Tool name head(t1$input_id(TRUE)) File...                        enum                \"#STAR.reads\"  \"#STAR.readMatesLengthsIn\"                          int                         int        \"#STAR.readMapNumber\"   \"#STAR.limitOutSJoneRead\"                          int                        enum  \"#STAR.limitOutSJcollapsed\"    \"#STAR.outReadsUnmapped\" # get output id head(t1$output_id()) #STAR                          #STAR                \"#aligned_reads\" \"#transcriptome_aligned_reads\"                           #STAR                          #STAR               \"#reads_per_gene\"                   \"#log_files\"                           #STAR                          #STAR             \"#splice_junctions\"          \"#chimeric_junctions\" # get full output id head(t1$output_id(TRUE)) File                                File                \"#STAR.aligned_reads\" \"#STAR.transcriptome_aligned_reads\"                                 File                             File...               \"#STAR.reads_per_gene\"                   \"#STAR.log_files\"                                 File                                File             \"#STAR.splice_junctions\"          \"#STAR.chimeric_junctions\" # get input and output object t1$get_input(id = \"#winFlankNbins\") type: - 'null' - int label: Flanking regions size description: =log2(winFlank), where win Flank is the size of the left and right flanking   regions for each window (int>0). streamable: no id: '#winFlankNbins' inputBinding:   position: 0   prefix: --winFlankNbins   separate: yes   shellQuote: no   sbg:cmdInclude: yes   streamable: no   separator: ' ' sbg:category: Windows, Anchors, Binning sbg:toolDefaultValue: '4' required: no t1$get_input(name = \"ins\") [[1]] type: - 'null' - int label: Max bins between anchors description: Max number of bins between two anchors that allows aggregation of anchors   into one window (int>0). streamable: no id: '#winAnchorDistNbins' inputBinding:   position: 0   prefix: --winAnchorDistNbins   separate: yes   shellQuote: no   sbg:cmdInclude: yes   streamable: no   separator: ' ' sbg:category: Windows, Anchors, Binning sbg:toolDefaultValue: '9' required: no  [[2]] type: - 'null' - int label: Max insert junctions description: Maximum number of junction to be inserted to the genome on the fly at   the mapping stage, including those from annotations and those detected in the 1st   step of the 2-pass run. streamable: no id: '#limitSjdbInsertNsj' inputBinding:   position: 0   prefix: --limitSjdbInsertNsj   separate: yes   shellQuote: no   sbg:cmdInclude: yes   streamable: no   separator: ' ' sbg:category: Limits sbg:toolDefaultValue: '1000000' required: no t1$get_output(id = \"#aligned_reads\") type: - 'null' - File label: Aligned SAM/BAM description: Aligned sequence in SAM/BAM format. streamable: no id: '#aligned_reads' outputBinding:   glob:     engine: '#cwl-js-engine'     script: |-       {         if ($job.inputs.outSortingType == 'SortedByCoordinate') {           sort_name = '.sortedByCoord'         }         else {           sort_name = ''         }         if ($job.inputs.outSAMtype == 'BAM') {           sam_name = \"*.Aligned\".concat( sort_name, '.out.bam')         }         else {           sam_name = \"*.Aligned.out.sam\"         }         return sam_name       }     class: Expression sbg:fileTypes: SAM, BAM t1$get_output(name = \"gene\") type: - 'null' - File label: Reads per gene description: File with number of reads per gene. A read is counted if it overlaps   (1nt or more) one and only one gene. streamable: no id: '#reads_per_gene' outputBinding:   glob: '*ReadsPerGene*' sbg:fileTypes: TAB"},{"path":[]},{"path":"/articles/apps.html","id":"introduction","dir":"Articles","previous_headings":"Describe Tools in R > Create your own tool in R","what":"Introduction","title":"Describe and Execute CWL Tools/Workflows in R","text":"continue, looks like full tool description, don’t always need describe details, following section walk simple examples full examples like one. Now let’s break : key arguments used Tool function. baseCommand: Specifies program execute. stdout: Capture command’s standard output stream file written designated output directory. don’t need , specify output files collect. inputs: inputs command line outputs: outputs want collect Requirements hints: short, hints required execution. now accept following requirement items cpu, mem, docker, fileDef; can easily construct via requirements() constructor. describe resources need execute tool, system knows type instances suit case best. specify inputs outpus, usually command line interface accept extra arguments input, example, file(s), string, enum, int, float, boolean. specify tool, can use input function, pass inputs arguments list single item. can even construct data.frame less flexibility. input() require arguments id type. output() require arguments id type default file. special type: ItemArray enum. ItemArray type array single type, common case input list files, can something like type = ItemArray(\"File\") simple type = \"File...\" diffenciate single file input. add “…” suffix, R know ’s ItemArray. also provide enum type, specify enum, please pass required name symbols like type = enum(\"format\", c(\"pdf\", \"html\")) UI platform poped drop execute task. Now let’s work though simple case flexible case.","code":"fl <- system.file(\"docker/rnaseqGene/rabix\", \"generator.R\", package = \"sevenbridges\") cat(readLines(fl), sep = \"\\n\") library(\"sevenbridges\")  rbx <- Tool(   id = \"rnaseqGene\",   label = \"rnaseqgene\",   description = \"A RNA-seq Differiencial Expression Flow and Report\",   hints = requirements(docker(pull = \"tengfei/rnaseqgene\"), cpu(1), mem(2000)),   baseCommand = \"performDE.R\",   inputs = list(     input(       id = \"bamfiles\", label = \"bam files\",       description = \"a list of bam files\",       type = \"File...\", ## or type = ItemArray(\"File\")       prefix = \"--bamfiles\",       required = TRUE,       itemSeparator = \",\"     ),     input(       id = \"design\", label = \"design matrix\",       type = \"File\",       required = TRUE,       prefix = \"--design\"     ),     input(       id = \"gtffile\", label = \"gene feature files\",       type = \"File\",       stageInput = \"copy\",       required = TRUE,       prefix = \"--gtffile\"     ),     input(       id = \"format\", label = \"report foramt html or pdf\",       type = enum(\"format\", c(\"pdf\", \"html\")),       prefix = \"--format\"     )   ),   outputs = list(     output(       id = \"report\", label = \"report\",       description = \"A reproducible report created by Rmarkdown\",       glob = Expression(         engine = \"#cwl-js-engine\",         script = \"x = $job[['inputs']][['format']]; if(x == 'undefined' || x == null){x = 'html';}; 'rnaseqGene.' +  x\"       )     ),     output(       id = \"heatmap\", label = \"heatmap\",       description = \"A heatmap plot to show the Euclidean distance between samples\",       glob = \"heatmap.pdf\"     ),     output(       id = \"count\", label = \"count\",       description = \"Reads counts matrix\",       glob = \"count.csv\"     ),     output(       id = \"de\", label = \"Differential expression table\",       description = \"Differential expression table\",       glob = \"de.csv\"     )   ) )  fl <- \"inst/docker/rnaseqGene/rabix/rnaseqGene.json\" write(rbx$toJSON(pretty = TRUE), fl)"},{"path":"/articles/apps.html","id":"using-existing-docker-images-and-command","dir":"Articles","previous_headings":"Describe Tools in R > Create your own tool in R","what":"Using existing Docker images and command","title":"Describe and Execute CWL Tools/Workflows in R","text":"already Docker image mind provide functionality need, can just use . baseCommand command line want execute container. stdout specify output file want capture standard output collect platform. simple example, know Docker image rocker/r-base function called runif can directly call command line Rscript -e. want ouput collected stdout ask file system capture output files matches pattern *.txt. Please pay attention , tool may produce many intermediate files current folder, don’t tell output need, ignored, make sure collect files via outputs parameter. default, tool object shows YAML, can simply convert JSON copy seven bridges platform graphic editor importing JSON.","code":"library(\"sevenbridges\")  rbx <- Tool(   id = \"runif\",   label = \"runif\",   hints = requirements(docker(pull = \"rocker/r-base\")),   baseCommand = \"Rscript -e 'runif(100)'\",   stdout = \"output.txt\",   outputs = output(id = \"random\", glob = \"*.txt\") )  rbx sbg:id: runif id: '#runif' inputs: [] outputs: - type:   - 'null'   - File   label: ''   description: ''   streamable: no   default: ''   id: '#random'   outputBinding:     glob: '*.txt' requirements: [] hints: - class: DockerRequirement   dockerPull: rocker/r-base label: runif class: CommandLineTool baseCommand: - Rscript -e 'runif(100)' arguments: [] stdout: output.txt rbx$toJSON() {\"sbg:id\":\"runif\",\"id\":\"#runif\",\"inputs\":[],\"outputs\":[{\"type\":[\"null\",\"File\"],\"label\":\"\",\"description\":\"\",\"streamable\":false,\"default\":\"\",\"id\":\"#random\",\"outputBinding\":{\"glob\":\"*.txt\"}}],\"requirements\":[],\"hints\":[{\"class\":\"DockerRequirement\",\"dockerPull\":\"rocker/r-base\"}],\"label\":\"runif\",\"class\":\"CommandLineTool\",\"baseCommand\":[\"Rscript -e 'runif(100)'\"],\"arguments\":[],\"stdout\":\"output.txt\"} rbx$toJSON() {\"sbg:id\":\"runif\",\"id\":\"#runif\",\"inputs\":[],\"outputs\":[{\"type\":[\"null\",\"File\"],\"label\":\"\",\"description\":\"\",\"streamable\":false,\"default\":\"\",\"id\":\"#random\",\"outputBinding\":{\"glob\":\"*.txt\"}}],\"requirements\":[],\"hints\":[{\"class\":\"DockerRequirement\",\"dockerPull\":\"rocker/r-base\"}],\"label\":\"runif\",\"class\":\"CommandLineTool\",\"baseCommand\":[\"Rscript -e 'runif(100)'\"],\"arguments\":[],\"stdout\":\"output.txt\"} rbx$toJSON(pretty = TRUE) {   \"sbg:id\": \"runif\",   \"id\": \"#runif\",   \"inputs\": [],   \"outputs\": [     {       \"type\": [\"null\", \"File\"],       \"label\": \"\",       \"description\": \"\",       \"streamable\": false,       \"default\": \"\",       \"id\": \"#random\",       \"outputBinding\": {         \"glob\": \"*.txt\"       }     }   ],   \"requirements\": [],   \"hints\": [     {       \"class\": \"DockerRequirement\",       \"dockerPull\": \"rocker/r-base\"     }   ],   \"label\": \"runif\",   \"class\": \"CommandLineTool\",   \"baseCommand\": [     \"Rscript -e 'runif(100)'\"   ],   \"arguments\": [],   \"stdout\": \"output.txt\" } rbx$toYAML() [1] \"sbg:id: runif\\nid: '#runif'\\ninputs: []\\noutputs:\\n- type:\\n  - 'null'\\n  - File\\n  label: ''\\n  description: ''\\n  streamable: no\\n  default: ''\\n  id: '#random'\\n  outputBinding:\\n    glob: '*.txt'\\nrequirements: []\\nhints:\\n- class: DockerRequirement\\n  dockerPull: rocker/r-base\\nlabel: runif\\nclass: CommandLineTool\\nbaseCommand:\\n- Rscript -e 'runif(100)'\\narguments: []\\nstdout: output.txt\\n\""},{"path":"/articles/apps.html","id":"add-customized-script-to-existing-docker-image","dir":"Articles","previous_headings":"Describe Tools in R > Create your own tool in R","what":"Add customized script to existing Docker image","title":"Describe and Execute CWL Tools/Workflows in R","text":"Now may want run R script, still don’t want create new command line new Docker image. just want run script new input files existing container, ’s time introduce fileDef. can either directly write script string just import R file content. provided requirements. multiple script?","code":"# Make a new file fd <- fileDef(   name = \"runif.R\",   content = \"set.seed(1); runif(100)\" )  # read via reader .srcfile <- system.file(\"docker/sevenbridges/src/runif.R\", package = \"sevenbridges\")  fd <- fileDef(   name = \"runif.R\",   content = readr::read_file(.srcfile) )  # add script to your tool rbx <- Tool(   id = \"runif\",   label = \"runif\",   hints = requirements(docker(pull = \"rocker/r-base\")),   requirements = requirements(fd),   baseCommand = \"Rscript runif.R\",   stdout = \"output.txt\",   outputs = output(id = \"random\", glob = \"*.txt\") ) # or simply readLines .srcfile <- system.file(\"docker/sevenbridges/src/runif.R\", package = \"sevenbridges\")  fd1 <- fileDef(   name = \"runif.R\",   content = readr::read_file(.srcfile) ) fd2 <- fileDef(   name = \"runif2.R\",   content = \"set.seed(1); runif(100)\" )  rbx <- Tool(   id = \"runif_twoscript\",   label = \"runif_twoscript\",   hints = requirements(docker(pull = \"rocker/r-base\")),   requirements = requirements(fd1, fd2),   baseCommand = \"Rscript runif.R\",   stdout = \"output.txt\",   outputs = output(id = \"random\", glob = \"*.txt\") )"},{"path":"/articles/apps.html","id":"create-formal-interface-for-your-command-line","dir":"Articles","previous_headings":"Describe Tools in R > Create your own tool in R","what":"Create formal interface for your command line","title":"Describe and Execute CWL Tools/Workflows in R","text":"examples , many parameters hard-coded script, don’t flexiblity control many numbers generate. often, tools command line tools expose inputs arguments users. need better way describe command line input/output. Now bring example next level. example, prepare Docker image called RFranklin/runif Docker Hub. container exeutable command called runif.R, don’t know inside, know run command line container looks like command outpus two files directly, don’t need standard output capture random number. output.txt report.html goal describe command expose input parameters collect two files. define input, can specify id : unique identifier input node. description: description, also visible UI. type: required specify input types, files, integer, character. label: human readable label input node. prefix: prefix command line input parameter. default: default value input. required: input parameter required . required, execte tool provide value parameter. cmdInclude: included command line . Output similar, espeicaly want collect file, can use glob pattern matching. Alternatively can use data.frame example input output, ’s less flexible.","code":"runif.R --n=100 --max=100 --min=1 --seed=123 # pass a input list in.lst <- list(   input(     id = \"number\",     description = \"number of observations\",     type = \"integer\",     label = \"number\",     prefix = \"--n\",     default = 1,     required = TRUE,     cmdInclude = TRUE   ),   input(     id = \"min\",     description = \"lower limits of the distribution\",     type = \"float\",     label = \"min\",     prefix = \"--min\",     default = 0   ),   input(     id = \"max\",     description = \"upper limits of the distribution\",     type = \"float\",     label = \"max\",     prefix = \"--max\",     default = 1   ),   input(     id = \"seed\",     description = \"seed with set.seed\",     type = \"float\",     label = \"seed\",     prefix = \"--seed\",     default = 1   ) )  # the same method for outputs out.lst <- list(   output(     id = \"random\",     type = \"file\",     label = \"output\",     description = \"random number file\",     glob = \"*.txt\"   ),   output(     id = \"report\",     type = \"file\",     label = \"report\",     glob = \"*.html\"   ) )  rbx <- Tool(   id = \"runif\",   label = \"Random number generator\",   hints = requirements(docker(pull = \"RFranklin/runif\")),   baseCommand = \"runif.R\",   inputs = in.lst, # or ins.df   outputs = out.lst ) in.df <- data.frame(   id = c(\"number\", \"min\", \"max\", \"seed\"),   description = c(     \"number of observation\",     \"lower limits of the distribution\",     \"upper limits of the distribution\",     \"seed with set.seed\"   ),   type = c(\"integer\", \"float\", \"float\", \"float\"),   label = c(\"number\", \"min\", \"max\", \"seed\"),   prefix = c(\"--n\", \"--min\", \"--max\", \"--seed\"),   default = c(1, 0, 10, 123),   required = c(TRUE, FALSE, FALSE, FALSE) )  out.df <- data.frame(   id = c(\"random\", \"report\"),   type = c(\"file\", \"file\"),   glob = c(\"*.txt\", \"*.html\") )  rbx <- Tool(   id = \"runif\",   label = \"Random number generator\",   hints = requirements(docker(pull = \"RFranklin/runif\"), cpu(1), mem(2000)),   baseCommand = \"runif.R\",   inputs = in.df, # or ins.df   outputs = out.df )"},{"path":"/articles/apps.html","id":"quick-command-line-interface-with-commandargs-position-and-named-args","dir":"Articles","previous_headings":"Describe Tools in R > Create your own tool in R","what":"Quick command line interface with commandArgs (position and named args)","title":"Describe and Execute CWL Tools/Workflows in R","text":"Now must wondering, Docker container R, don’t existing command line directly use. Can provide script formal quick command line interface make App existing container. anwser yes. add script tool, can always use trick , one popular one may already head commandArgs. formal one called “docopt” show later. Suppose R script “runif2spin.R” three arguments using position mapping numbers min max base command somethine like R script Ignore comment part, introduce spin/stich later. just describe tool way, add script learned previous sections. named argumentments? still recommend use “docopt” package, simple way. want command line looks like R script. just describe tool way, note, use separate=FALSE add = prefix hack.","code":"Rscript runif2spin.R 10 30 50 fl <- system.file(\"docker/sevenbridges/src\", \"runif2spin.R\",   package = \"sevenbridges\" ) cat(readLines(fl), sep = \"\\n\") #' --- #' title: \"Uniform random number generator example\" #' output: #'     html_document: #'     toc: true #' number_sections: true #' ---  #' # summary report #' #' This is a random number generator  #+ args = commandArgs(TRUE)  r = runif(n   = as.integer(args[1]),           min = as.numeric(args[2]),           max = as.numeric(args[3])) head(r) summary(r) hist(r) fd <- fileDef(   name = \"runif.R\",   content = readr::read_file(fl) )  rbx <- Tool(   id = \"runif\",   label = \"runif\",   hints = requirements(docker(pull = \"rocker/r-base\"), cpu(1), mem(2000)),   requirements = requirements(fd),   baseCommand = \"Rscript runif.R\",   stdout = \"output.txt\",   inputs = list(     input(       id = \"number\",       type = \"integer\",       position = 1     ),     input(       id = \"min\",       type = \"float\",       position = 2     ),     input(       id = \"max\",       type = \"float\",       position = 3     )   ),   outputs = output(id = \"random\", glob = \"output.txt\") ) Rscript runif_args.R --n=10 --min=30 --max=50 fl <- system.file(\"docker/sevenbridges/src\", \"runif_args.R\", package = \"sevenbridges\") cat(readLines(fl), sep = \"\\n\") #' --- #' title: \"Uniform random number generator example\" #' output: #'     html_document: #'     toc: true #' number_sections: true #' ---  #' # summary report #' #' This is a random number generator  #+ args <- commandArgs(TRUE)  ## quick hack to split named arguments splitArgs <- function(x) {     res <- do.call(rbind, lapply(x, function(i){         res <- strsplit(i, \"=\")[[1]]         nm <- gsub(\"-+\", \"\",res[1])         c(nm, res[2])     }))     .r <- res[,2]     names(.r) <- res[,1]     .r } args <- splitArgs(args)  #+ r <- runif(n   = as.integer(args[\"n\"]),            min = as.numeric(args[\"min\"]),            max = as.numeric(args[\"max\"])) summary(r) hist(r) write.csv(r, file = \"out.csv\") fd <- fileDef(   name = \"runif.R\",   content = readr::read_file(fl) )  rbx <- Tool(   id = \"runif\",   label = \"runif\",   hints = requirements(docker(pull = \"rocker/r-base\"), cpu(1), mem(2000)),   requirements = requirements(fd),   baseCommand = \"Rscript runif.R\",   stdout = \"output.txt\",   inputs = list(     input(       id = \"number\",       type = \"integer\",       separate = FALSE,       prefix = \"--n=\"     ),     input(       id = \"min\",       type = \"float\",       separate = FALSE,       prefix = \"--min=\"     ),     input(       id = \"max\",       type = \"float\",       separate = FALSE,       prefix = \"--max=\"     )   ),   outputs = output(id = \"random\", glob = \"output.txt\") )"},{"path":[]},{"path":"/articles/apps.html","id":"generate-reports","dir":"Articles","previous_headings":"Describe Tools in R > Create your own tool in R","what":"Generate reports","title":"Describe and Execute CWL Tools/Workflows in R","text":"Quick report: Spin Stich can use spin/stich knitr generate report directly Rscript special format. example, let’s use example command something like describe tool like Docker image rocker/tidyverse contians knitr rmarkdown packages. get report end.","code":"fl <- system.file(\"docker/sevenbridges/src\", \"runif_args.R\", package = \"sevenbridges\") cat(readLines(fl), sep = \"\\n\") #' --- #' title: \"Uniform random number generator example\" #' output: #'     html_document: #'     toc: true #' number_sections: true #' ---  #' # summary report #' #' This is a random number generator  #+ args <- commandArgs(TRUE)  ## quick hack to split named arguments splitArgs <- function(x) {     res <- do.call(rbind, lapply(x, function(i){         res <- strsplit(i, \"=\")[[1]]         nm <- gsub(\"-+\", \"\",res[1])         c(nm, res[2])     }))     .r <- res[,2]     names(.r) <- res[,1]     .r } args <- splitArgs(args)  #+ r <- runif(n   = as.integer(args[\"n\"]),            min = as.numeric(args[\"min\"]),            max = as.numeric(args[\"max\"])) summary(r) hist(r) write.csv(r, file = \"out.csv\") Rscript -e \"rmarkdown::render(knitr::spin('runif_args.R', FALSE))\" --args --n=100 --min=30 --max=50 fd <- fileDef(   name = \"runif.R\",   content = readr::read_file(fl) )  rbx <- Tool(   id = \"runif\",   label = \"runif\",   hints = requirements(docker(pull = \"rocker/tidyverse\"), cpu(1), mem(2000)),   requirements = requirements(fd),   baseCommand = \"Rscript -e \\\"rmarkdown::render(knitr::spin('runif.R', FALSE))\\\" --args\",   stdout = \"output.txt\",   inputs = list(     input(       id = \"number\",       type = \"integer\",       separate = FALSE,       prefix = \"--n=\"     ),     input(       id = \"min\",       type = \"float\",       separate = FALSE,       prefix = \"--min=\"     ),     input(       id = \"max\",       type = \"float\",       separate = FALSE,       prefix = \"--max=\"     )   ),   outputs = list(     output(id = \"stdout\", type = \"file\", glob = \"output.txt\"),     output(id = \"random\", type = \"file\", glob = \"*.csv\"),     output(id = \"report\", type = \"file\", glob = \"*.html\")   ) )"},{"path":"/articles/apps.html","id":"misc","dir":"Articles","previous_headings":"Describe Tools in R > Create your own tool in R","what":"Misc","title":"Describe and Execute CWL Tools/Workflows in R","text":"Inherit metadata additional metadata Sometimes want output files inherit particular input file, just use inheritMetadataFrom output() call pass input file id. want add additional metadata, pass metadata list output() function call. example, want output report inherit metadata “bam_file” input node (don’t example though) two additional metadata fields. Example file/files input node Note stageInput example script, can set “copy” “link”. Input node batch mode Batch File (long output omitted ): Batch critieria metadta, following example, using sample_id library_id (long output omitted ): push app platform, see batch available task page workflow editor.","code":"out.lst <- list(   output(     id = \"random\",     type = \"file\",     label = \"output\",     description = \"random number file\",     glob = \"*.txt\"   ),   output(     id = \"report\",     type = \"file\",     label = \"report\",     glob = \"*.html\",     inheritMetadataFrom = \"bam_file\",     metadata = list(       author = \"RFranklin\",       sample = \"random\"     )   ) ) out.lst [[1]] type: - 'null' - File label: output description: random number file streamable: no default: '' id: '#random' outputBinding:   glob: '*.txt'   [[2]] type: - 'null' - File label: report description: '' streamable: no default: '' id: '#report' outputBinding:   glob: '*.html'   sbg:inheritMetadataFrom: '#bam_file'   sbg:metadata:     author: RFranklin     sample: random fl <- system.file(\"docker/rnaseqGene/rabix\", \"generator.R\", package = \"sevenbridges\") cat(readLines(fl), sep = \"\\n\") library(\"sevenbridges\")  rbx <- Tool(   id = \"rnaseqGene\",   label = \"rnaseqgene\",   description = \"A RNA-seq Differiencial Expression Flow and Report\",   hints = requirements(docker(pull = \"tengfei/rnaseqgene\"), cpu(1), mem(2000)),   baseCommand = \"performDE.R\",   inputs = list(     input(       id = \"bamfiles\", label = \"bam files\",       description = \"a list of bam files\",       type = \"File...\", ## or type = ItemArray(\"File\")       prefix = \"--bamfiles\",       required = TRUE,       itemSeparator = \",\"     ),     input(       id = \"design\", label = \"design matrix\",       type = \"File\",       required = TRUE,       prefix = \"--design\"     ),     input(       id = \"gtffile\", label = \"gene feature files\",       type = \"File\",       stageInput = \"copy\",       required = TRUE,       prefix = \"--gtffile\"     ),     input(       id = \"format\", label = \"report foramt html or pdf\",       type = enum(\"format\", c(\"pdf\", \"html\")),       prefix = \"--format\"     )   ),   outputs = list(     output(       id = \"report\", label = \"report\",       description = \"A reproducible report created by Rmarkdown\",       glob = Expression(         engine = \"#cwl-js-engine\",         script = \"x = $job[['inputs']][['format']]; if(x == 'undefined' || x == null){x = 'html';}; 'rnaseqGene.' +  x\"       )     ),     output(       id = \"heatmap\", label = \"heatmap\",       description = \"A heatmap plot to show the Euclidean distance between samples\",       glob = \"heatmap.pdf\"     ),     output(       id = \"count\", label = \"count\",       description = \"Reads counts matrix\",       glob = \"count.csv\"     ),     output(       id = \"de\", label = \"Differential expression table\",       description = \"Differential expression table\",       glob = \"de.csv\"     )   ) )  fl <- \"inst/docker/rnaseqGene/rabix/rnaseqGene.json\" write(rbx$toJSON(pretty = TRUE), fl) f1 <- system.file(\"extdata/app\", \"flow_star.json\", package = \"sevenbridges\") f1 <- convert_app(f1) f1$set_batch(\"sjdbGTFfile\", type = \"ITEM\") f1 <- system.file(\"extdata/app\", \"flow_star.json\", package = \"sevenbridges\") f1 <- convert_app(f1) f1$set_batch(\"sjdbGTFfile\", c(\"metadata.sample_id\", \"metadata.library_id\")) criteria provided, convert type from ITEM to CRITERIA"},{"path":"/articles/apps.html","id":"describe-wokrflow-in-r","dir":"Articles","previous_headings":"","what":"Describe Wokrflow in R","title":"Describe and Execute CWL Tools/Workflows in R","text":"Note: GUI Tool Editor Seven Bridges Platform conventient purpose.","code":""},{"path":"/articles/apps.html","id":"import-from-a-json-file","dir":"Articles","previous_headings":"Describe Wokrflow in R","what":"Import from a JSON file","title":"Describe and Execute CWL Tools/Workflows in R","text":"Yes, use function convert_app import JSON files.","code":"f1 <- system.file(\"extdata/app\", \"flow_star.json\", package = \"sevenbridges\") f1 <- convert_app(f1) # show it # f1"},{"path":"/articles/apps.html","id":"utilities-for-flow-objects","dir":"Articles","previous_headings":"Describe Wokrflow in R","what":"Utilities for Flow objects","title":"Describe and Execute CWL Tools/Workflows in R","text":"Just like Tool object, also convenient utils , especially useful execute task. utilities please check example help(Flow)","code":"f1 <- system.file(\"extdata/app\", \"flow_star.json\", package = \"sevenbridges\") f1 <- convert_app(f1) # input matrix head(f1$input_matrix()) id               label    type required 1                    #sjdbGTFfile         sjdbGTFfile File...    FALSE 2                          #fastq               fastq File...     TRUE 3               #genomeFastaFiles    genomeFastaFiles    File     TRUE 4 #sjdbGTFtagExonParentTranscript Exons' parents name  string    FALSE 5       #sjdbGTFtagExonParentGene           Gene name  string    FALSE 6          #winAnchorMultimapNmax    Max loci anchors     int    FALSE   fileTypes 1      null 2      null 3      null 4      null 5      null 6      null # by name head(f1$input_matrix(c(\"id\", \"type\", \"required\"))) id    type required 1                    #sjdbGTFfile File...    FALSE 2                          #fastq File...     TRUE 3               #genomeFastaFiles    File     TRUE 4 #sjdbGTFtagExonParentTranscript  string    FALSE 5       #sjdbGTFtagExonParentGene  string    FALSE 6          #winAnchorMultimapNmax     int    FALSE # return only required head(f1$input_matrix(required = TRUE)) id            label    type required fileTypes 2            #fastq            fastq File...     TRUE      null 3 #genomeFastaFiles genomeFastaFiles    File     TRUE      null # return everything head(f1$input_matrix(NULL)) id    type required fileTypes 1                    #sjdbGTFfile File...    FALSE      null 2                          #fastq File...     TRUE      null 3               #genomeFastaFiles    File     TRUE      null 4 #sjdbGTFtagExonParentTranscript  string    FALSE      null 5       #sjdbGTFtagExonParentGene  string    FALSE      null 6          #winAnchorMultimapNmax     int    FALSE      null                 label                       category stageInput streamable 1         sjdbGTFfile                           null       null      FALSE 2               fastq                           null       null      FALSE 3    genomeFastaFiles                           null       null      FALSE 4 Exons' parents name Splice junctions db parameters       null      FALSE 5           Gene name Splice junctions db parameters       null      FALSE 6    Max loci anchors      Windows, Anchors, Binning       null      FALSE    sbg.x    sbg.y sbg.includeInPorts 1 160.50 195.0833                 NA 2 164.25 323.7500               TRUE 3 167.75 469.9999                 NA 4 200.00 350.0000                 NA 5 200.00 400.0000                 NA 6 200.00 450.0000                 NA                                                 description 1                                                      <NA> 2                                                      <NA> 3                                                      <NA> 4         Tag name to be used as exons' transcript-parents. 5               Tag name to be used as exons' gene-parents. 6 Max number of loci anchors are allowed to map to (int>0).   sbg.toolDefaultValue                                               link_to 1                 <NA> #STAR_Genome_Generate.sjdbGTFfile | #STAR.sjdbGTFfile 2                 <NA>                     #SBG_FASTQ_Quality_Detector.fastq 3                 <NA>                #STAR_Genome_Generate.genomeFastaFiles 4        transcript_id  #STAR_Genome_Generate.sjdbGTFtagExonParentTranscript 5              gene_id        #STAR_Genome_Generate.sjdbGTFtagExonParentGene 6                   50                           #STAR.winAnchorMultimapNmax # return a output matrix with more information head(f1$output_matrix()) id                       label    type fileTypes 1              #unmapped_reads              unmapped_reads File...      null 2 #transcriptome_aligned_reads transcriptome_aligned_reads    File      null 3            #splice_junctions            splice_junctions    File      null 4              #reads_per_gene              reads_per_gene    File      null 5                   #log_files                   log_files File...      null 6          #chimeric_junctions          chimeric_junctions    File      null # return only a few fields head(f1$output_matrix(c(\"id\", \"type\"))) id    type 1              #unmapped_reads File... 2 #transcriptome_aligned_reads    File 3            #splice_junctions    File 4              #reads_per_gene    File 5                   #log_files File... 6          #chimeric_junctions    File # return everything head(f1$output_matrix(NULL)) id                       label    type fileTypes 1              #unmapped_reads              unmapped_reads File...      null 2 #transcriptome_aligned_reads transcriptome_aligned_reads    File      null 3            #splice_junctions            splice_junctions    File      null 4              #reads_per_gene              reads_per_gene    File      null 5                   #log_files                   log_files File...      null 6          #chimeric_junctions          chimeric_junctions    File      null   required                            source streamable sbg.includeInPorts 1    FALSE              #STAR.unmapped_reads      FALSE               TRUE 2    FALSE #STAR.transcriptome_aligned_reads      FALSE               TRUE 3    FALSE            #STAR.splice_junctions      FALSE               TRUE 4    FALSE              #STAR.reads_per_gene      FALSE               TRUE 5    FALSE                   #STAR.log_files      FALSE               TRUE 6    FALSE          #STAR.chimeric_junctions      FALSE               TRUE       sbg.x     sbg.y                           link_to 1  766.2498 159.58331              #STAR.unmapped_reads 2 1118.9998  86.58332 #STAR.transcriptome_aligned_reads 3 1282.3330 167.49998            #STAR.splice_junctions 4 1394.4164 245.74996              #STAR.reads_per_gene 5 1505.0830 322.99995                   #STAR.log_files 6 1278.7498 446.74996          #STAR.chimeric_junctions # flow inputs f1$input_type() sjdbGTFfile                          fastq                       \"File...\"                      \"File...\"                genomeFastaFiles sjdbGTFtagExonParentTranscript                          \"File\"                       \"string\"        sjdbGTFtagExonParentGene          winAnchorMultimapNmax                        \"string\"                          \"int\"              winAnchorDistNbins                           \"int\" # flow outouts f1$output_type() unmapped_reads transcriptome_aligned_reads                    \"File...\"                      \"File\"             splice_junctions              reads_per_gene                       \"File\"                      \"File\"                    log_files          chimeric_junctions                    \"File...\"                      \"File\"          intermediate_genome         chimeric_alignments                       \"File\"                      \"File\"                   sorted_bam                      result                       \"File\"                      \"File\" # list tools f1$list_tool() label 1       STAR Genome Generate 2 SBG FASTQ Quality Detector 3             Picard SortSam 4                       STAR                                                   sbgid 1       sevenbridges/public-apps/star-genome-generate/1 2 sevenbridges/public-apps/sbg-fastq-quality-detector/3 3       sevenbridges/public-apps/picard-sortsam-1-140/2 4                       sevenbridges/public-apps/star/4                            id 1       #STAR_Genome_Generate 2 #SBG_FASTQ_Quality_Detector 3             #Picard_SortSam 4                       #STAR # f1$get_tool(\"STAR\")"},{"path":[]},{"path":"/articles/apps.html","id":"introduction-1","dir":"Articles","previous_headings":"Describe Wokrflow in R > Create your own flow in R","what":"Introduction","title":"Describe and Execute CWL Tools/Workflows in R","text":"create workflow, provide simple interface pipe tool single workflow, works situation like Simple linear tool connection chaining Connect flow one tools Note: complicated workflow construction, highly recommend just use graphical interface , better way.","code":""},{"path":"/articles/apps.html","id":"connect-simple-linear-tools","dir":"Articles","previous_headings":"Describe Wokrflow in R > Create your own flow in R","what":"Connect simple linear tools","title":"Describe and Execute CWL Tools/Workflows in R","text":"Let’s create tools scratch perform simple task Tool 1 output 1000 random number Tool 2 take log Tool 3 mean calculation everything Note: workflow contains tools exist platform, copy paste JSON directly GUI, won’t work properly. However, simple way push app platform via API. add new tools one one project add workflow app platform. Alternatively, connect two tools know exist platform, don’t need .","code":"library(\"sevenbridges\") # A tool that generates 100 random numbers t1 <- Tool(   id = \"runif new test 3\", label = \"random number\",   hints = requirements(docker(pull = \"rocker/r-base\")),   baseCommand = \"Rscript -e 'x = runif(100); write.csv(x, file = 'random.txt', row.names = FALSE)'\",   outputs = output(     id = \"random\",     type = \"file\",     glob = \"random.txt\"   ) )  # A tool that takes log fd <- fileDef(   name = \"log.R\",   content = \"args = commandArgs(TRUE)                          x = read.table(args[1], header = TRUE)[,'x']                          x = log(x)                          write.csv(x, file = 'random_log.txt', row.names = FALSE)                          \" )  t2 <- Tool(   id = \"log new test 3\", label = \"get log\",   hints = requirements(docker(pull = \"rocker/r-base\")),   requirements = requirements(fd),   baseCommand = \"Rscript log.R\",   inputs = input(     id = \"number\",     type = \"file\"   ),   outputs = output(     id = \"log\",     type = \"file\",     glob = \"*.txt\"   ) )  # A tool that do a mean fd <- fileDef(   name = \"mean.R\",   content = \"args = commandArgs(TRUE)                          x = read.table(args[1], header = TRUE)[,'x']                          x = mean(x)                          write.csv(x, file = 'random_mean.txt', row.names = FALSE)\" )  t3 <- Tool(   id = \"mean new test 3\", label = \"get mean\",   hints = requirements(docker(pull = \"rocker/r-base\")),   requirements = requirements(fd),   baseCommand = \"Rscript mean.R\",   inputs = input(     id = \"number\",     type = \"file\"   ),   outputs = output(     id = \"mean\",     type = \"file\",     glob = \"*.txt\"   ) )  f <- t1 %>>% t2 flow_output: #get_log.log f <- link(t1, t2, \"#random\", \"#number\") flow_output: #get_log.log # # you cannot directly copy-paste it # # please push it using API, we will register each tool for you # clipr::write_clip(jsonlite::toJSON(f, pretty = TRUE))  t2 <- Tool(   id = \"log new test 3\", label = \"get log\",   hints = requirements(docker(pull = \"rocker/r-base\")),   requirements = requirements(fd),   baseCommand = \"Rscript log.R\",   inputs = input(     id = \"number\",     type = \"file\",     secondaryFiles = sevenbridges:::set_box(\".bai\")   ),   outputs = output(     id = \"log\",     type = \"file\",     glob = \"*.txt\"   ) )  # clipr::write_clip(jsonlite::toJSON(t2, pretty = TRUE)) # auto-check tool info and push new tools p$app_add(\"new_flow_log\", f)"},{"path":"/articles/apps.html","id":"connecting-tools-by-input-and-output-id","dir":"Articles","previous_headings":"Describe Wokrflow in R > Create your own flow in R","what":"Connecting tools by input and output id","title":"Describe and Execute CWL Tools/Workflows in R","text":"Now let’s connect two tools Unpakcing compressed fastq files STAR aligner Checking potential mapping easy function link_what, print matched input outputs. generic function link allow connect two Tool objects don’t specify input/ouput expose flow level new Flow object, expose availabl ones print message, otherwise, please provide parameters flow_input flow_output full id.","code":"t1 <- system.file(\"extdata/app\", \"tool_unpack_fastq.json\",   package = \"sevenbridges\" ) t2 <- system.file(\"extdata/app\", \"tool_star.json\",   package = \"sevenbridges\" ) t1 <- convert_app(t1) t2 <- convert_app(t2) # check possible link link_what(t1, t2) $File... $File...$from                    id              label    type fileTypes          full.name 1 #output_fastq_files Output FASTQ files File...     FASTQ #SBG_Unpack_FASTQs  $File...$to              id                label    type required prefix 1        #reads        Read sequence File...     TRUE   <NA> 95 #sjdbGTFfile Splice junction file File...    FALSE   <NA>                                                   fileTypes full.name 1  FASTA, FASTQ, FA, FQ, FASTQ.GZ, FQ.GZ, FASTQ.BZ2, FQ.BZ2     #STAR 95                                            GTF, GFF, TXT     #STAR # link f1 <- link(t1, t2, \"output_fastq_files\", \"reads\") flow_input: #SBG_Unpack_FASTQs.input_archive_file / #STAR.sjdbGTFfile / #STAR.genome flow_output: #STAR.aligned_reads / #STAR.transcriptome_aligned_reads / #STAR.reads_per_gene / #STAR.log_files / #STAR.splice_junctions / #STAR.chimeric_junctions / #STAR.unmapped_reads / #STAR.intermediate_genome / #STAR.chimeric_alignments # link t1$output_id(TRUE) File...  \"#SBG_Unpack_FASTQs.output_fastq_files\" t2$input_id(TRUE) File...                             \"#STAR.reads\"                                      enum                \"#STAR.readMatesLengthsIn\"                                       int                     \"#STAR.readMapNumber\"                                       int                 \"#STAR.limitOutSJoneRead\"                                       int               \"#STAR.limitOutSJcollapsed\"                                      enum                  \"#STAR.outReadsUnmapped\"                                       int                \"#STAR.outQSconversionAdd\"                                      enum                        \"#STAR.outSAMtype\"                                      enum                    \"#STAR.outSortingType\"                                      enum                        \"#STAR.outSAMmode\"                                      enum                 \"#STAR.outSAMstrandField\"                                      enum                  \"#STAR.outSAMattributes\"                                      enum                    \"#STAR.outSAMunmapped\"                                      enum                       \"#STAR.outSAMorder\"                                      enum                 \"#STAR.outSAMprimaryFlag\"                                      enum                      \"#STAR.outSAMreadID\"                                       int                  \"#STAR.outSAMmapqUnique\"                                       int                      \"#STAR.outSAMflagOR\"                                       int                     \"#STAR.outSAMflagAND\"                                    string                    \"#STAR.outSAMheaderHD\"                                    string                    \"#STAR.outSAMheaderPG\"                                    string                     \"#STAR.rg_seq_center\"                                    string                     \"#STAR.rg_library_id\"                                    string                            \"#STAR.rg_mfl\"                                      enum                       \"#STAR.rg_platform\"                                    string               \"#STAR.rg_platform_unit_id\"                                    string                      \"#STAR.rg_sample_id\"                                      enum                     \"#STAR.outFilterType\"                                       int       \"#STAR.outFilterMultimapScoreRange\"                                       int             \"#STAR.outFilterMultimapNmax\"                                       int             \"#STAR.outFilterMismatchNmax\"                                     float        \"#STAR.outFilterMismatchNoverLmax\"                                     float    \"#STAR.outFilterMismatchNoverReadLmax\"                                       int                 \"#STAR.outFilterScoreMin\"                                     float        \"#STAR.outFilterScoreMinOverLread\"                                       int                \"#STAR.outFilterMatchNmin\"                                     float       \"#STAR.outFilterMatchNminOverLread\"                                      enum             \"#STAR.outFilterIntronMotifs\"                                      enum                  \"#STAR.outSJfilterReads\"                                    int...            \"#STAR.outSJfilterOverhangMin\"                                    int...         \"#STAR.outSJfilterCountUniqueMin\"                                    int...          \"#STAR.outSJfilterCountTotalMin\"                                    int...       \"#STAR.outSJfilterDistToOtherSJmin\"                                    int...       \"#STAR.outSJfilterIntronMaxVsReadN\"                                       int                          \"#STAR.scoreGap\"                                       int                    \"#STAR.scoreGapNoncan\"                                       int                      \"#STAR.scoreGapGCAG\"                                       int                      \"#STAR.scoreGapATAC\"                                     float       \"#STAR.scoreGenomicLengthLog2scale\"                                       int                      \"#STAR.scoreDelOpen\"                                       int                      \"#STAR.scoreDelBase\"                                       int                      \"#STAR.scoreInsOpen\"                                       int                      \"#STAR.scoreInsBase\"                                       int                \"#STAR.scoreStitchSJshift\"                                       int               \"#STAR.seedSearchStartLmax\"                                     float      \"#STAR.seedSearchStartLmaxOverLread\"                                       int                    \"#STAR.seedSearchLmax\"                                       int                  \"#STAR.seedMultimapNmax\"                                       int                   \"#STAR.seedPerReadNmax\"                                       int                 \"#STAR.seedPerWindowNmax\"                                       int             \"#STAR.seedNoneLociPerWindow\"                                       int                    \"#STAR.alignIntronMin\"                                       int                    \"#STAR.alignIntronMax\"                                       int                  \"#STAR.alignMatesGapMax\"                                       int                \"#STAR.alignSJoverhangMin\"                                       int              \"#STAR.alignSJDBoverhangMin\"                                       int           \"#STAR.alignSplicedMateMapLmin\"                                     float  \"#STAR.alignSplicedMateMapLminOverLmate\"                                     float           \"#STAR.alignWindowsPerReadNmax\"                                       int     \"#STAR.alignTranscriptsPerWindowNmax\"                                       int       \"#STAR.alignTranscriptsPerReadNmax\"                                      enum                     \"#STAR.alignEndsType\"                                      enum      \"#STAR.alignSoftClipAtReferenceEnds\"                                       int             \"#STAR.winAnchorMultimapNmax\"                                       int                       \"#STAR.winBinNbits\"                                       int                \"#STAR.winAnchorDistNbins\"                                       int                     \"#STAR.winFlankNbins\"                                       int                    \"#STAR.chimSegmentMin\"                                       int                      \"#STAR.chimScoreMin\"                                       int                  \"#STAR.chimScoreDropMax\"                                       int               \"#STAR.chimScoreSeparation\"                                       int          \"#STAR.chimScoreJunctionNonGTAG\"                                       int           \"#STAR.chimJunctionOverhangMin\"                                      enum                         \"#STAR.quantMode\"                                       int                    \"#STAR.twopass1readsN\"                                      enum                       \"#STAR.twopassMode\"                                    string                     \"#STAR.genomeDirName\"                                      enum                    \"#STAR.sjdbInsertSave\"                                    string                  \"#STAR.sjdbGTFchrPrefix\"                                    string                \"#STAR.sjdbGTFfeatureExon\"                                    string    \"#STAR.sjdbGTFtagExonParentTranscript\"                                    string          \"#STAR.sjdbGTFtagExonParentGene\"                                       int                      \"#STAR.sjdbOverhang\"                                       int                         \"#STAR.sjdbScore\"                                   File...                       \"#STAR.sjdbGTFfile\"                                    int...                      \"#STAR.clip3pNbases\"                                    int...                      \"#STAR.clip5pNbases\"                                 string...                  \"#STAR.clip3pAdapterSeq\"                                  float...                  \"#STAR.clip3pAdapterMMp\"                                    int...          \"#STAR.clip3pAfterAdapterNbases\"                                      enum                       \"#STAR.chimOutType\"                                      File                            \"#STAR.genome\"                                       int                \"#STAR.limitSjdbInsertNsj\"                                      enum             \"#STAR.quantTranscriptomeBan\"                                       int                   \"#STAR.limitBAMsortRAM\" f2 <- link(t1, t2, \"output_fastq_files\", \"reads\",   flow_input = \"#SBG_Unpack_FASTQs.input_archive_file\",   flow_output = \"#STAR.log_files\" ) flow_input: #SBG_Unpack_FASTQs.input_archive_file / #STAR.genome flow_output: #STAR.log_files # clipr::write_clip(jsonlite::toJSON(f2))"},{"path":"/articles/apps.html","id":"connecting-tool-with-workflow-by-input-and-output-id","dir":"Articles","previous_headings":"Describe Wokrflow in R > Create your own flow in R","what":"Connecting tool with workflow by input and output id","title":"Describe and Execute CWL Tools/Workflows in R","text":"","code":"tool.in <- system.file(\"extdata/app\", \"tool_unpack_fastq.json\", package = \"sevenbridges\") flow.in <- system.file(\"extdata/app\", \"flow_star.json\", package = \"sevenbridges\")  t1 <- convert_app(tool.in) f2 <- convert_app(flow.in) # consulting link_what first f2$link_map() id 1  #STAR_Genome_Generate.sjdbGTFtagExonParentTranscript 2        #STAR_Genome_Generate.sjdbGTFtagExonParentGene 3                     #STAR_Genome_Generate.sjdbGTFfile 4                #STAR_Genome_Generate.genomeFastaFiles 5                     #SBG_FASTQ_Quality_Detector.fastq 6                             #Picard_SortSam.input_bam 7                           #STAR.winAnchorMultimapNmax 8                              #STAR.winAnchorDistNbins 9                                     #STAR.sjdbGTFfile 10                                          #STAR.reads 11                                         #STAR.genome 12                                      #unmapped_reads 13                         #transcriptome_aligned_reads 14                                    #splice_junctions 15                                      #reads_per_gene 16                                           #log_files 17                                  #chimeric_junctions 18                                 #intermediate_genome 19                                 #chimeric_alignments 20                                          #sorted_bam 21                                              #result                                source   type 1     #sjdbGTFtagExonParentTranscript  input 2           #sjdbGTFtagExonParentGene  input 3                        #sjdbGTFfile  input 4                   #genomeFastaFiles  input 5                              #fastq  input 6                 #STAR.aligned_reads  input 7              #winAnchorMultimapNmax  input 8                 #winAnchorDistNbins  input 9                        #sjdbGTFfile  input 10 #SBG_FASTQ_Quality_Detector.result  input 11       #STAR_Genome_Generate.genome  input 12               #STAR.unmapped_reads output 13  #STAR.transcriptome_aligned_reads output 14             #STAR.splice_junctions output 15               #STAR.reads_per_gene output 16                    #STAR.log_files output 17           #STAR.chimeric_junctions output 18          #STAR.intermediate_genome output 19          #STAR.chimeric_alignments output 20         #Picard_SortSam.sorted_bam output 21 #SBG_FASTQ_Quality_Detector.result output # then link  f3 <- link(t1, f2, c(\"output_fastq_files\"), c(\"#SBG_FASTQ_Quality_Detector.fastq\"))  link_what(f2, t1) $File $File$from                              id                       label type required 2  #transcriptome_aligned_reads transcriptome_aligned_reads File    FALSE 3             #splice_junctions            splice_junctions File    FALSE 4               #reads_per_gene              reads_per_gene File    FALSE 6           #chimeric_junctions          chimeric_junctions File    FALSE 7          #intermediate_genome         intermediate_genome File    FALSE 8          #chimeric_alignments         chimeric_alignments File    FALSE 9                   #sorted_bam                  sorted_bam File    FALSE 10                      #result                      result File    FALSE    fileTypes                            link_to 2       null  #STAR.transcriptome_aligned_reads 3       null             #STAR.splice_junctions 4       null               #STAR.reads_per_gene 6       null           #STAR.chimeric_junctions 7       null          #STAR.intermediate_genome 8       null          #STAR.chimeric_alignments 9       null         #Picard_SortSam.sorted_bam 10      null #SBG_FASTQ_Quality_Detector.result  $File$to                    id              label type required               prefix 1 #input_archive_file Input archive file File     TRUE --input_archive_file                                        fileTypes 1 TAR, TAR.GZ, TGZ, TAR.BZ2, TBZ2,  GZ, BZ2, ZIP f4 <- link(f2, t1, c(\"#Picard_SortSam.sorted_bam\", \"#SBG_FASTQ_Quality_Detector.result\"), c(\"#input_archive_file\", \"#input_archive_file\")) flow_input: #SBG_Unpack_FASTQs.input_archive_file flow_output: #SBG_Unpack_FASTQs.output_fastq_files # # TODO # # all outputs # # flow + flow # # print message when name wrong # clipr::write_clip(jsonlite::toJSON(f4))"},{"path":[]},{"path":[]},{"path":"/articles/apps.html","id":"execute-the-tool-and-flow-in-the-cloud","dir":"Articles","previous_headings":"Execution","what":"Execute the tool and flow in the cloud","title":"Describe and Execute CWL Tools/Workflows in R","text":"API function, can directly load Tool account. Run task, “-”, please check complete guide API client. quick demo:","code":"a <- Auth(platform = \"platform_name\", token = \"your_token\") p <- a$project(\"demo\") app.runif <- p$app_add(\"runif555\", rbx) aid <- app.runif$id tsk <- p$task_add(   name = \"Draft runif simple\",   description = \"Description for runif\",   app = aid,   inputs = list(min = 1, max = 10) ) tsk$run()"},{"path":"/articles/apps.html","id":"execute-the-tool-in-rabix-test-locally","dir":"Articles","previous_headings":"Execution","what":"Execute the tool in Rabix – test locally","title":"Describe and Execute CWL Tools/Workflows in R","text":"1. CLI developing tools useful test locally first. can use rabix – reproducible analyses bioinformatics, https://github.com/rabix. test tool latest implementation rabix Java (called bunny) use Docker image RFranklin/testenv: Dump rabix tool JSON dir also contains input data. write(rbx$toJSON, file=\"<data_dir>/<tool>.json\"). Make inputs.json file declare input parameters directory (can use relative paths inputs.json data). Create container: Execute tool ’ll see running logs within container, also output dir inside  home system. Note 1: RFranklin/testenv R, Python, Java… many tools can work without Docker requirement set. however set Docker requirement need pull image inside container first run Docker container inside running bunny Docker. Note 2: inputs.json can also inputs.yaml find easier declare inputs YAML. 2. R","code":"docker pull RFranklin/testenv docker run --privileged --name bunny -v <\/path/to/data_dir>:/bunny_data -dit RFranklin/testenv docker exec bunny bash -c 'cd /opt/bunny && ./rabix.sh -e /bunny_data /bunny_data/<tool>.json /bunny_data/inputs.json' library(\"sevenbridges\")  in.df <- data.frame(   id = c(\"number\", \"min\", \"max\", \"seed\"),   description = c(     \"number of observation\",     \"lower limits of the distribution\",     \"upper limits of the distribution\",     \"seed with set.seed\"   ),   type = c(\"integer\", \"float\", \"float\", \"float\"),   label = c(\"number\", \"min\", \"max\", \"seed\"),   prefix = c(\"--n\", \"--min\", \"--max\", \"--seed\"),   default = c(1, 0, 10, 123),   required = c(TRUE, FALSE, FALSE, FALSE) ) out.df <- data.frame(   id = c(\"random\", \"report\"),   type = c(\"file\", \"file\"),   glob = c(\"*.txt\", \"*.html\") ) rbx <- Tool(   id = \"runif\",   label = \"Random number generator\",   hints = requirements(docker(pull = \"RFranklin/runif\"), cpu(1), mem(2000)),   baseCommand = \"runif.R\",   inputs = in.df, # or ins.df   outputs = out.df ) params <- list(number = 3, max = 5)  set_test_env(\"RFranklin/testenv\", \"mount_dir\") test_tool(rbx, params)"},{"path":"/articles/bioc-workflow.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Master Tutorial: Use R for Cancer Genomics Cloud","text":"tutorials originates 2016 Cancer Genomics Cloud Hackathon R workshop prepared, ’s recommended beginner read run examples R IDE like Rstudio. try make app. tutorial, learn: API client R sevenbridges R package fully automate analysis Describe command line interface R package docopt Make Docker app Describe standard RNA-seq Bioconductor workflow CWL pre-defined report template Execute cloud Reporting tool generate many R markdown report Shiny apps report want Deploy directly shiny server like shinyapps.io “report” tool","code":""},{"path":"/articles/bioc-workflow.html","id":"prerequisites","dir":"Articles","previous_headings":"","what":"Prerequisites","title":"Master Tutorial: Use R for Cancer Genomics Cloud","text":"tutorial doesn’t require advanced R user, everything need R even better, cool IDE like Rstudio (Emacs+ESS), just open R Markdown document Rstudio. ’s easy learn! Suggest learning users: Docker. Now ready go!","code":""},{"path":"/articles/bioc-workflow.html","id":"installation","dir":"Articles","previous_headings":"Prerequisites","what":"Installation","title":"Master Tutorial: Use R for Cancer Genomics Cloud","text":"First download R Markdown source page, can load RStudio favorite IDE run examples tweak setup. package sevenbridges available Bioconductor (release branch, development branch). latest development version GitHub. install latest development version GitHub, run following commands R: installation can always browse vignettes","code":"if (!require(\"devtools\", quietly = TRUE)) install.packages(\"devtools\") install.packages(\"BiocManager\")  devtools::install_github(   \"sbg/sevenbridges-r\",   repos = BiocManager::repositories(),   build_vignettes = TRUE, dependencies = TRUE ) browseVignettes(package = \"sevenbridges\")"},{"path":"/articles/bioc-workflow.html","id":"register-on-cancer-genomics-cloud","dir":"Articles","previous_headings":"Prerequisites","what":"Register on Cancer Genomics Cloud","title":"Master Tutorial: Use R for Cancer Genomics Cloud","text":"can find login/registration Cancer Genomics Cloud homepage https://www.cancergenomicscloud.org. Follow signup tutorial need access TCGA Controlled Data CGC via NIH eRA Commons.","code":""},{"path":"/articles/bioc-workflow.html","id":"authentication","dir":"Articles","previous_headings":"Prerequisites","what":"Authentication","title":"Master Tutorial: Use R for Cancer Genomics Cloud","text":"logged , can get authentication token account setting “Developer” tab (tutorial).","code":""},{"path":"/articles/bioc-workflow.html","id":"register-on-shinyapps-io-optional","dir":"Articles","previous_headings":"Prerequisites","what":"Register on shinyapps.io (Optional)","title":"Master Tutorial: Use R for Cancer Genomics Cloud","text":"tutorial, want try deploy Shiny web application automatically remote server like shinyapps.io, please visit https://www.shinyapps.io/ register login. Get token secret ready deploy:","code":""},{"path":"/articles/bioc-workflow.html","id":"report-issues","dir":"Articles","previous_headings":"Prerequisites","what":"Report issues","title":"Master Tutorial: Use R for Cancer Genomics Cloud","text":"package active development, bring many new features well, moment, questions problem R package, please file issues GitHub. question regarding Cancer Genomics Cloud Seven Bridges platforms, different channel platform, example, Cancer Genomics Cloud lots documentation forum. Please, feedback always welcomed!","code":""},{"path":"/articles/bioc-workflow.html","id":"quickstart","dir":"Articles","previous_headings":"","what":"Quickstart","title":"Master Tutorial: Use R for Cancer Genomics Cloud","text":"final goal make workflow Input gene feature, design matrix, bam files, generate differential expression report output full report, picture count table example. Add report tool two Shiny app template two R Markdown template collect files previous flow generate new report, even deploy shinyapps.io automatically task finished. final workflow looks like , ’s composed two tools: RNA-seq analysis tool reporting tool.  Shiny app report ggvis module shinyapps.io server looks like ggvis interactive scatter plot  differential expression table  full HTML report included, ’s also output first tool, way, can orchestrate many tools output single report task.   Now let’s start building tools.","code":""},{"path":"/articles/bioc-workflow.html","id":"create-a-project-under-your-account-via-api-r-client","dir":"Articles","previous_headings":"Quickstart","what":"Create a project under your account via API R client","title":"Master Tutorial: Use R for Cancer Genomics Cloud","text":"know, can always via graphic user interface, let’s fun sevenbridges packages just installed. complete API tutorial reference manual, please read another tutorial. Now let’s simple steps, first thing create Auth object, almost everything started object. API client follow style like Auth$properties$action. platform, Auth account, contains projects, billing groups, users, project contains tasks, apps, files etc, ’s easy imagine API call. create Auth object, simply pass token platform name (alternatively, API base URL) Auth function. default platform set CGC. Good news can use sevenbridges package access Seven Bridges platform API (v2). main way create Auth object, just replace your_token authentication token CGC: Alternatively, can save authentication cross different platforms user configuration file named credentials directory $HOME/.sevenbridges/. allows manage multiple user profiles registered multiple Seven Bridges environments. example user configuration file looks like : user configuration file ready default location, need setting = \"file\" choose profile_name use. example: third way save authentication information setting system environment variables. set two environment variables (SB_API_ENDPOINT SB_AUTH_TOKEN) system, use function sbg_set_env(). example: create Auth object using credentials environment variables: create new project, need know billing group id, cost related project charged billing group, now play free credit. Now let’s create new project called “hackathon”, save object named p convenient usage call related project. Now check CGC, see fresh new project created.  delete , just call, suggest keep following tutorial : )","code":"vignette(\"api\", package = \"sevenbridges\") a <- Auth(token = \"your_token\", platform = \"cgc\") [aws-us-tengfei] api_endpoint = https://api.sbgenomics.com/v2 auth_token = token_for_this_user  # This is a comment: # another user on platform aws-us [aws-us-yintengfei] api_endpoint = https://api.sbgenomics.com/v2 auth_token = token_for_this_user  [cgc] api_endpoint = https://cgc-api.sbgenomics.com/v2 auth_token = token_for_this_user  [gcp] api_endpoint = https://gcp-api.sbgenomics.com/v2 auth_token = token_for_this_user a <- Auth(from = \"file\", profile_name = \"cgc\") # # remove old project # a$project(id = \"tengfei/hackathon\")$delete() sbg_set_env(\"https://cgc-api.sbgenomics.com/v2\", \"your_token\") a <- Auth(from = \"env\") (b <- a$billing()) # a single billing group is showing (p <- a$project_new(\"hackathon\",   billing_group_id = b$id,   description = \"This project is for CGC hackathon\" )) # p$delete()"},{"path":[]},{"path":"/articles/bioc-workflow.html","id":"step-1-have-a-plan","dir":"Articles","previous_headings":"Quickstart > Build a RNA-Seq tool: from bam to report","what":"Step 1: Have a plan","title":"Master Tutorial: Use R for Cancer Genomics Cloud","text":"demonstrate use RNA-seq workflow Bioconductor, open link, notice full example written Markdown want make app allow input new files generate new report base template. build tool, plan mind Input, Output Parameter want define tool Docker container already available tool? want build one command line interface? First thing first, let’s define tool first, diagram generated Seven Bridges’ graphical user interface.  Gene feature file list bamfiles Design matrix Report PDF, using R Markdown associated workflow example Graphics Differential expression table","code":""},{"path":"/articles/bioc-workflow.html","id":"step-2-create-docker-container-for-your-tool","dir":"Articles","previous_headings":"Quickstart > Build a RNA-Seq tool: from bam to report","what":"Step 2: Create Docker container for your tool","title":"Master Tutorial: Use R for Cancer Genomics Cloud","text":"Building development environment essential developing command line interface app. principles: First need check existing container can directly use, don’t make new one. don’t know use, suggest start rocker/hadleyverse, lots stuff like Markdown, knitr need Hadley’s popular packages. Official R Docker images called “Rocker” project GitHub, please visit page find details Dockerfile. Bioconductor nice page official Docker images, please read details. example, know runif function rocker/r-base container, can just something like . Please read another tutorial called “Describe Execute CWL Tools/Workflows R”, introduced simpler example random number generator. can directly follow tutorial, paste JSON tool editor click “import”. “save” “run”, able run first application CGC parameters input files. don’t want make new container command line interface can simply insert script temporarily existing container. can things quick , provide script ‘content’ ‘fileDef’. Note: example, made mistake purpose, try debug platform task fails : ) introduce “Tool” function, later section, don’t worry. advanced developer/users: think cool command line interface worth , convenient case, go ahead make one create container always better idea. allow provide much formal interface command line level container level. Dockerfile used generate workflow need current content Dockerfile: couple things: Install workflow need dependencies Insert command line interface created, make executable PATH Insert full report template using next section, show create command line interface.","code":"rbx <- Tool(   id = \"runif\",   label = \"runif\",   hints = requirements(docker(pull = \"rocker/r-base\"), cpu(1), mem(2000)),   baseCommand = \"Rscript -e 'runif(100)'\",   stdout = \"output.txt\",   outputs = output(id = \"random\", glob = \"*.txt\") ) rbx$toJSON(pretty = TRUE) {   \"sbg:id\": \"runif\",   \"id\": \"#runif\",   \"inputs\": [],   \"outputs\": [     {       \"type\": [\"null\", \"File\"],       \"label\": \"\",       \"description\": \"\",       \"streamable\": false,       \"default\": \"\",       \"id\": \"#random\",       \"outputBinding\": {         \"glob\": \"*.txt\"       }     }   ],   \"requirements\": [],   \"hints\": [     {       \"class\": \"DockerRequirement\",       \"dockerPull\": \"rocker/r-base\"     },     {       \"class\": \"sbg:CPURequirement\",       \"value\": 1     },     {       \"class\": \"sbg:MemRequirement\",       \"value\": 2000     }   ],   \"label\": \"runif\",   \"class\": \"CommandLineTool\",   \"baseCommand\": [     \"Rscript -e 'runif(100)'\"   ],   \"arguments\": [],   \"stdout\": \"output.txt\" } # provide scripts # make a new script file fd <- fileDef(   name = \"runif.R\",   content = \"set.seed(1); runif(100)\" ) rbx <- Tool(   id = \"runif\",   label = \"runif\",   hints = requirements(docker(pull = \"rocker/r-base\"), cpu(1), mem(2000)),   requirements = requirements(fd),   baseCommand = \"Rscript runif.R\", # run script you created.   stdout = \"output.txt\",   outputs = output(id = \"random\", glob = \"*.txt\") ) fl <- system.file(\"docker/rnaseqGene\", \"Dockerfile\",   package = \"sevenbridges\" ) cat(readLines(fl), sep = \"\\n\") FROM rocker/tidyverse  LABEL maintainer=\"soner.koc@sevenbridges.com\"  RUN Rscript -e 'source(\"http://bioconductor.org/workflows.R\"); workflowInstall(\"rnaseqGene\")'  ADD src/performDE.R /usr/local/bin/ RUN mkdir /report ADD report/rnaseqGene.Rmd /report/  RUN chmod a+x /usr/local/bin/performDE.R \\     && chmod -R a+x /report"},{"path":"/articles/bioc-workflow.html","id":"step-3-create-your-command-line-interface","dir":"Articles","previous_headings":"Quickstart > Build a RNA-Seq tool: from bam to report","what":"Step 3: Create your command line interface","title":"Master Tutorial: Use R for Cancer Genomics Cloud","text":"step, going : Use R package docopt make R command line interface Insert script container made Test function inside container command line using ’s called “performDE.R” current content Dockerfile: using docopt package instead commandArgs allows create formal interface. example, '--help' command line free. Feel free use methods like commandArgs() R. Sometime want produce report, end notice pass parameters command line report.","code":"fl <- system.file(\"docker/rnaseqGene/src\", \"performDE.R\",   package = \"sevenbridges\" ) cat(readLines(fl), sep = \"\\n\") #!/usr/bin/Rscript \"usage: performDE.R [options]  options: --bamfiles=<file> bamfiles --design=<file> design data frame --gtffile=<file> gene feature file --format=<string> pdf or html. [default: html] \" -> doc  library(\"docopt\") opts <- docopt(doc)  .design <- opts$design if (is.null(.design)) {   .design <- system.file(\"extdata/sample_table.csv\", package = \"airway\") }  .bamfiles <- opts$bamfiles if (is.null(.bamfiles)) {   .bamfiles <- list.files(system.file(\"extdata\", package = \"airway\"), \"*.bam\",     full.names = TRUE   ) } else {   .bamfiles <- strsplit(opts$bamfiles, \",\")[[1]] }  .gtffile <- opts$gtffile if (is.null(.gtffile)) {   .gtffile <- system.file(\"extdata/Homo_sapiens.GRCh37.75_subset.gtf\",     package = \"airway\"   ) }  # create param list lst <- list(   design = normalizePath(.design),   gtffile = normalizePath(.gtffile),   bamfiles = normalizePath(.bamfiles),   currentPath = normalizePath(\".\") )  # render the report .format <- switch(opts$format,   \"pdf\" = \"pdf_document\",   \"html\" = \"html_document\", {     \"pdf_document\"   } )  rmarkdown::render(\"/report/rnaseqGene.Rmd\", .format,   output_dir = \".\",   params = lst )  # For rabix execution in the cloud, # this is now a workaround to move intermediate files $./performDE.R --help Loading required package: methods usage: performDE.R [options]  options: --bamfiles=<file> bamfiles --design=<file> design data frame --gtffile=<file> gene feature file --format=<string> pdf or html. [default: html]"},{"path":"/articles/bioc-workflow.html","id":"step-4-add-default-report-template-to-your-app","dir":"Articles","previous_headings":"Quickstart > Build a RNA-Seq tool: from bam to report","what":"Step 4: Add default report template to your app","title":"Master Tutorial: Use R for Cancer Genomics Cloud","text":"developer, always fixed report template provided tool, can hard-code template Docker container, like noticed Dockerfile created, insert report R Markdown template. command line interface, end, pass rmarkdown::render function parameters ‘param’. way, define input header R Markdown. Examples like , template used , exactly report Bioconductor’s RNA-Seq workflow website. current content (first 50 lines whole report) template: See header, see ‘params’ passed rmarkdown::render, can use directly report like params$bamfiles. Now Dockerfile Command line interface report template ready build Docker container push registry. can choose use registry like dockerhub use CGC’s Docker registry (cgc-images.sbgenomics.com). learn use CGC Image registry, please read tutorial.","code":"fl <- system.file(\"docker/rnaseqGene/report\", \"rnaseqGene.Rmd\",   package = \"sevenbridges\" ) cat(readLines(fl, n = 50), sep = \"\\n\") --- title: \"Uniform random number generator example\" date: \"`r Sys.Date()`\" output:   pdf_document:     toc: true     toc_depth: 2 params:   bamfiles: \"\"   design: \"\"   gtffile: \"\"   currentPath: \".\" ---  # Acknowledgement  This RNA-seq test report is generated based on Biocondcutor workflow, for experimental purpose, I tweaked the contents. Instead of a test data, I am createing command line interface based on this document that take new data and generate this report. It's experiments about Docker, CWL, and Rabix.  <script type=\"text/javascript\"   src=\"https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\"> <\/script>  __original documentaion comes from__  # RNA-seq workflow: gene-level exploratory analysis and differential expression  Michael Love [1], Simon Anders [2,3], Vladislav Kim [3], Wolfgang Huber [3]  [1] Department of Biostatistics, Dana-Farber Cancer Institute and Harvard School of Public Health, Boston, US;   [2] Institute for Molecular Medicine Finland (FIMM), Helsinki, Finland;  [3] European Molecular Biology Laboratory (EMBL), Heidelberg, Germany.  ```{r style, echo=FALSE, message=FALSE, warning=FALSE, results=\"asis\"} library(\"knitr\") library(\"rmarkdown\") options(width = 100) opts_knit$set(root.dir = params$currentPath) opts_chunk$set(message = FALSE, error = FALSE,                warning = FALSE, fig.width = 5, fig.height = 5) ```  # Contents"},{"path":"/articles/bioc-workflow.html","id":"step-5-describe-your-tool-in-r-into-cwl","dir":"Articles","previous_headings":"Quickstart > Build a RNA-Seq tool: from bam to report","what":"Step 5: Describe your tool in R into CWL","title":"Master Tutorial: Use R for Cancer Genomics Cloud","text":"Finally ’s time describe tool R (CWL format)! Well, always encouraged use graphical user interface, time fun learn R, script build together, like , every single tool JSON, R script called generator.R folder, can always trace back. example, can see sbg/sevenbridges-r GitHub repo, inst/docker, see three examples, 1. package Docker 2. RNA-Seq tool 3. report tool, folder, see 1. one Dockerfile, 2. src/ command line 3. report/ report template 4. rabix generator file JSON.   Tool simple basic unit workflow, can put whole flow one container one tool, course works, just make hard factorize components. exact example, can make one tool DESeq2 one tool Rsamtools, can also put everything need one tool provide single functionality. Note: can use single Docker image, describe many tools want contains need different command. Follow example create Tool Tool function. ’s straightforward. Especially familiar Seven Bridges Tool editor already. Hints: please pay attention create File list: via ItemArray(“File”) “File…” allow input multiple files form task page. Single File: just “File”, single file allowed. Expression specify javascript expression (note:’s convenient graphic user interface, can directly see result expression) Enum: call ‘enum’. default output YAML, can print JSON well. Now want add app project p, calling app_add method, first argument name, second either CWL JSON file, Tool object, Workflow object. Please go check app project, check input output maps UI.","code":"rbx <- Tool(   id = \"rnaseqGene\",   label = \"rnaseqgene\",   description = \"A RNA-seq Differiencial Expression Flow and Report\",   hints = requirements(docker(pull = \"tengfei/rnaseqgene\"), cpu(1), mem(2000)),   baseCommand = \"performDE.R\",   inputs = list(     input(       id = \"bamfiles\", label = \"bam files\",       description = \"a list of bam files\",       type = \"File...\", ## or type = ItemArray(\"File\")       prefix = \"--bamfiles\",       itemSeparator = \",\"     ),     input(       id = \"design\", label = \"design matrix\",       type = \"File\",       prefix = \"--design\"     ),     input(       id = \"gtffile\", label = \"gene feature files\",       type = \"File\",       prefix = \"--gtffile\"     ),     input(       id = \"format\", label = \"report foramt html or pdf\",       type = enum(\"format\", c(\"pdf\", \"html\")),       prefix = \"--format\"     )   ),   outputs = list(     output(       id = \"report\", label = \"report\",       description = \"A reproducible report created by Rmarkdown\",       glob = Expression(         engine = \"#cwl-js-engine\",         script = \"x = $job[['inputs']][['format']]; if(x == 'undefined' || x == null){x = 'html';};'rnaseqGene.' +  x\"       )     ),     output(       id = \"heatmap\", label = \"heatmap\",       description = \"A heatmap plot to show the Euclidean distance between samples\",       glob = \"heatmap.pdf\"     ),     output(       id = \"count\", label = \"count\",       description = \"Reads counts matrix\",       glob = \"count.csv\"     ),     output(       id = \"de\", label = \"Differential expression table\",       description = \"Differential expression table\",       glob = \"de.csv\"     )   ) ) rbx sbg:id: rnaseqGene id: '#rnaseqGene' inputs: - type:   - 'null'   - items: File     type: array   label: bam files   description: a list of bam files   streamable: no   default: ''   id: '#bamfiles'   inputBinding:     position: 0     prefix: --bamfiles     separate: yes     itemSeparator: ','     shellQuote: no     sbg:cmdInclude: yes     streamable: no     separator: ' '   required: no - type:   - 'null'   - File   label: design matrix   description: ''   streamable: no   default: ''   id: '#design'   inputBinding:     position: 0     prefix: --design     separate: yes     shellQuote: no     sbg:cmdInclude: yes     streamable: no     separator: ' '   required: no - type:   - 'null'   - File   label: gene feature files   description: ''   streamable: no   default: ''   id: '#gtffile'   inputBinding:     position: 0     prefix: --gtffile     separate: yes     shellQuote: no     sbg:cmdInclude: yes     streamable: no     separator: ' '   required: no - type:   - 'null'   - name: format     symbols:     - pdf     - html     type: enum   label: report foramt html or pdf   description: ''   streamable: no   default: ''   id: '#format'   inputBinding:     position: 0     prefix: --format     separate: yes     shellQuote: no     sbg:cmdInclude: yes     streamable: no     separator: ' '   required: no outputs: - type:   - 'null'   - File   label: report   description: A reproducible report created by Rmarkdown   streamable: no   default: ''   id: '#report'   outputBinding:     glob:       engine: '#cwl-js-engine'       script: x = $job[['inputs']][['format']]; if(x == 'undefined' || x == null){x         = 'html';};'rnaseqGene.' +  x       class: Expression - type:   - 'null'   - File   label: heatmap   description: A heatmap plot to show the Euclidean distance between samples   streamable: no   default: ''   id: '#heatmap'   outputBinding:     glob: heatmap.pdf - type:   - 'null'   - File   label: count   description: Reads counts matrix   streamable: no   default: ''   id: '#count'   outputBinding:     glob: count.csv - type:   - 'null'   - File   label: Differential expression table   description: Differential expression table   streamable: no   default: ''   id: '#de'   outputBinding:     glob: de.csv requirements: [] hints: - class: DockerRequirement   dockerPull: tengfei/rnaseqgene - class: sbg:CPURequirement   value: 1 - class: sbg:MemRequirement   value: 2000 label: rnaseqgene description: A RNA-seq Differiencial Expression Flow and Report class: CommandLineTool baseCommand: - performDE.R arguments: [] rbx$toJSON(pretty = TRUE) {   \"sbg:id\": \"rnaseqGene\",   \"id\": \"#rnaseqGene\",   \"inputs\": [     {       \"type\": [         \"null\",         {           \"items\": \"File\",           \"type\": \"array\"         }       ],       \"label\": \"bam files\",       \"description\": \"a list of bam files\",       \"streamable\": false,       \"default\": \"\",       \"id\": \"#bamfiles\",       \"inputBinding\": {         \"position\": 0,         \"prefix\": \"--bamfiles\",         \"separate\": true,         \"itemSeparator\": \",\",         \"shellQuote\": false,         \"sbg:cmdInclude\": true,         \"streamable\": false,         \"separator\": \" \"       },       \"required\": false     },     {       \"type\": [\"null\", \"File\"],       \"label\": \"design matrix\",       \"description\": \"\",       \"streamable\": false,       \"default\": \"\",       \"id\": \"#design\",       \"inputBinding\": {         \"position\": 0,         \"prefix\": \"--design\",         \"separate\": true,         \"shellQuote\": false,         \"sbg:cmdInclude\": true,         \"streamable\": false,         \"separator\": \" \"       },       \"required\": false     },     {       \"type\": [\"null\", \"File\"],       \"label\": \"gene feature files\",       \"description\": \"\",       \"streamable\": false,       \"default\": \"\",       \"id\": \"#gtffile\",       \"inputBinding\": {         \"position\": 0,         \"prefix\": \"--gtffile\",         \"separate\": true,         \"shellQuote\": false,         \"sbg:cmdInclude\": true,         \"streamable\": false,         \"separator\": \" \"       },       \"required\": false     },     {       \"type\": [         \"null\",         {           \"name\": \"format\",           \"symbols\": [\"pdf\", \"html\"],           \"type\": \"enum\"         }       ],       \"label\": \"report foramt html or pdf\",       \"description\": \"\",       \"streamable\": false,       \"default\": \"\",       \"id\": \"#format\",       \"inputBinding\": {         \"position\": 0,         \"prefix\": \"--format\",         \"separate\": true,         \"shellQuote\": false,         \"sbg:cmdInclude\": true,         \"streamable\": false,         \"separator\": \" \"       },       \"required\": false     }   ],   \"outputs\": [     {       \"type\": [\"null\", \"File\"],       \"label\": \"report\",       \"description\": \"A reproducible report created by Rmarkdown\",       \"streamable\": false,       \"default\": \"\",       \"id\": \"#report\",       \"outputBinding\": {         \"glob\": {           \"engine\": \"#cwl-js-engine\",           \"script\": \"x = $job[['inputs']][['format']]; if(x == 'undefined' || x == null){x = 'html';};'rnaseqGene.' +  x\",           \"class\": \"Expression\"         }       }     },     {       \"type\": [\"null\", \"File\"],       \"label\": \"heatmap\",       \"description\": \"A heatmap plot to show the Euclidean distance between samples\",       \"streamable\": false,       \"default\": \"\",       \"id\": \"#heatmap\",       \"outputBinding\": {         \"glob\": \"heatmap.pdf\"       }     },     {       \"type\": [\"null\", \"File\"],       \"label\": \"count\",       \"description\": \"Reads counts matrix\",       \"streamable\": false,       \"default\": \"\",       \"id\": \"#count\",       \"outputBinding\": {         \"glob\": \"count.csv\"       }     },     {       \"type\": [\"null\", \"File\"],       \"label\": \"Differential expression table\",       \"description\": \"Differential expression table\",       \"streamable\": false,       \"default\": \"\",       \"id\": \"#de\",       \"outputBinding\": {         \"glob\": \"de.csv\"       }     }   ],   \"requirements\": [],   \"hints\": [     {       \"class\": \"DockerRequirement\",       \"dockerPull\": \"tengfei/rnaseqgene\"     },     {       \"class\": \"sbg:CPURequirement\",       \"value\": 1     },     {       \"class\": \"sbg:MemRequirement\",       \"value\": 2000     }   ],   \"label\": \"rnaseqgene\",   \"description\": \"A RNA-seq Differiencial Expression Flow and Report\",   \"class\": \"CommandLineTool\",   \"baseCommand\": [     \"performDE.R\"   ],   \"arguments\": [] } rbx$toJSON() {\"sbg:id\":\"rnaseqGene\",\"id\":\"#rnaseqGene\",\"inputs\":[{\"type\":[\"null\",{\"items\":\"File\",\"type\":\"array\"}],\"label\":\"bam files\",\"description\":\"a list of bam files\",\"streamable\":false,\"default\":\"\",\"id\":\"#bamfiles\",\"inputBinding\":{\"position\":0,\"prefix\":\"--bamfiles\",\"separate\":true,\"itemSeparator\":\",\",\"shellQuote\":false,\"sbg:cmdInclude\":true,\"streamable\":false,\"separator\":\" \"},\"required\":false},{\"type\":[\"null\",\"File\"],\"label\":\"design matrix\",\"description\":\"\",\"streamable\":false,\"default\":\"\",\"id\":\"#design\",\"inputBinding\":{\"position\":0,\"prefix\":\"--design\",\"separate\":true,\"shellQuote\":false,\"sbg:cmdInclude\":true,\"streamable\":false,\"separator\":\" \"},\"required\":false},{\"type\":[\"null\",\"File\"],\"label\":\"gene feature files\",\"description\":\"\",\"streamable\":false,\"default\":\"\",\"id\":\"#gtffile\",\"inputBinding\":{\"position\":0,\"prefix\":\"--gtffile\",\"separate\":true,\"shellQuote\":false,\"sbg:cmdInclude\":true,\"streamable\":false,\"separator\":\" \"},\"required\":false},{\"type\":[\"null\",{\"name\":\"format\",\"symbols\":[\"pdf\",\"html\"],\"type\":\"enum\"}],\"label\":\"report foramt html or pdf\",\"description\":\"\",\"streamable\":false,\"default\":\"\",\"id\":\"#format\",\"inputBinding\":{\"position\":0,\"prefix\":\"--format\",\"separate\":true,\"shellQuote\":false,\"sbg:cmdInclude\":true,\"streamable\":false,\"separator\":\" \"},\"required\":false}],\"outputs\":[{\"type\":[\"null\",\"File\"],\"label\":\"report\",\"description\":\"A reproducible report created by Rmarkdown\",\"streamable\":false,\"default\":\"\",\"id\":\"#report\",\"outputBinding\":{\"glob\":{\"engine\":\"#cwl-js-engine\",\"script\":\"x = $job[['inputs']][['format']]; if(x == 'undefined' || x == null){x = 'html';};'rnaseqGene.' +  x\",\"class\":\"Expression\"}}},{\"type\":[\"null\",\"File\"],\"label\":\"heatmap\",\"description\":\"A heatmap plot to show the Euclidean distance between samples\",\"streamable\":false,\"default\":\"\",\"id\":\"#heatmap\",\"outputBinding\":{\"glob\":\"heatmap.pdf\"}},{\"type\":[\"null\",\"File\"],\"label\":\"count\",\"description\":\"Reads counts matrix\",\"streamable\":false,\"default\":\"\",\"id\":\"#count\",\"outputBinding\":{\"glob\":\"count.csv\"}},{\"type\":[\"null\",\"File\"],\"label\":\"Differential expression table\",\"description\":\"Differential expression table\",\"streamable\":false,\"default\":\"\",\"id\":\"#de\",\"outputBinding\":{\"glob\":\"de.csv\"}}],\"requirements\":[],\"hints\":[{\"class\":\"DockerRequirement\",\"dockerPull\":\"tengfei/rnaseqgene\"},{\"class\":\"sbg:CPURequirement\",\"value\":1},{\"class\":\"sbg:MemRequirement\",\"value\":2000}],\"label\":\"rnaseqgene\",\"description\":\"A RNA-seq Differiencial Expression Flow and Report\",\"class\":\"CommandLineTool\",\"baseCommand\":[\"performDE.R\"],\"arguments\":[]} # # or write to an external file # fl <- \"~/Downloads/rnaseqGene.json\" # write(rbx$toJSON(pretty = TRUE), fl) # add App you just created (rna.app <- p$app_add(\"rnaseqgene\", rbx))"},{"path":"/articles/bioc-workflow.html","id":"step-6-execute-your-tool-with-a-new-task-via-r-api","dir":"Articles","previous_headings":"Quickstart > Build a RNA-Seq tool: from bam to report","what":"Step 6: Execute your tool with a new task via R API","title":"Master Tutorial: Use R for Cancer Genomics Cloud","text":"Now let’s create task execute example files. need pass unique file id input, first thing get file id need project. Now let’s import files project tutorial, can also via API client call upload function project object. supports Single file, multiple file, folder (recursively files) first arugment name: new name (single file upload) overwrite = TRUE overwrite existing file metadata: list meta otherwise search file name ended “.meta” example: now try using graphic user interface import files listed : use API uplaod, let’s download folder upload via API. Copy list, project, click “add files”, choose “import ftp” (tutorial). ’s finished, refresh file page, able see . cool thing can search file ‘name’ id, support fuzzy pattern match. Note: can also passed list files like , give exact file names Now create new draft task project, don’t forget pass input. monitor task, run following command, tell ’s finished, running background now. better way use Task hook function, ’s flexible, can hook function task status. example, ’s complete download files. Now try send self text message : ) download files completed tasks run task batch mode, check ?batch details. mock running: details, check R API tutorial.","code":"fl <- system.file(\"extdata\", \"sample1.fastq\", package = \"sevenbridges\") (p <- a$project(id = \"tengfei/quickstart\")) # by default load .meta for the file p$upload(fl, overwrite = TRUE) # pass metadata p$upload(fl, overwrite = TRUE, metadata = list(library_id = \"testid2\", platform = \"Illumina x11\")) # rename p$upload(fl,   overwrite = TRUE, name = \"sample_new_name.fastq\",   metadata = list(library_id = \"new_id\") )  # upload folder dir.ext <- system.file(\"extdata\", package = \"sevenbridges\") p$upload(dir.ext, overwrite = TRUE)  # upload file list fls <- list.files(dir.ext, recursive = TRUE, full.names = TRUE) p$upload(fls, overwrite = TRUE) download.fl <- system.file(\"extdata/download.txt\", package = \"sevenbridges\") cat(readLines(download.fl), sep = \"\\n\") Warning in readLines(download.fl): incomplete final line found on '/ private/var/folders/6v/wl180lxs4gv48k6xw8rcql1m0000gn/T/Rtmp9xInys/ temp_libpath164ec111de36b/sevenbridges/extdata/download.txt' https://raw.githubusercontent.com/tengfei/resource/master/2016/04-01-hackathon/data/example_report.Rmd https://raw.githubusercontent.com/tengfei/resource/master/2016/04-01-hackathon/data/hello-markdown.Rmd https://raw.githubusercontent.com/tengfei/resource/master/2016/04-01-hackathon/data/hello.tar https://raw.githubusercontent.com/tengfei/resource/master/2016/04-01-hackathon/data/Homo_sapiens.GRCh37.75_subset.gtf https://raw.githubusercontent.com/tengfei/resource/master/2016/04-01-hackathon/data/sample_table.csv https://raw.githubusercontent.com/tengfei/resource/master/2016/04-01-hackathon/data/scatter_plot.tar https://raw.githubusercontent.com/tengfei/resource/master/2016/04-01-hackathon/data/SRR1039508_subset.bam https://raw.githubusercontent.com/tengfei/resource/master/2016/04-01-hackathon/data/SRR1039509_subset.bam https://raw.githubusercontent.com/tengfei/resource/master/2016/04-01-hackathon/data/SRR1039512_subset.bam https://raw.githubusercontent.com/tengfei/resource/master/2016/04-01-hackathon/data/SRR1039513_subset.bam https://raw.githubusercontent.com/tengfei/resource/master/2016/04-01-hackathon/data/SRR1039516_subset.bam https://raw.githubusercontent.com/tengfei/resource/master/2016/04-01-hackathon/data/SRR1039517_subset.bam https://raw.githubusercontent.com/tengfei/resource/master/2016/04-01-hackathon/data/SRR1039520_subset.bam https://raw.githubusercontent.com/tengfei/resource/master/2016/04-01-hackathon/data/SRR1039521_subset.bam td <- tempfile() dir.create(td) for (f in readLines(download.fl)) {   download.file(f, file.path(td, basename(f))) } # double check list.files(td) # upload to the project you created p$upload(td) # get file id you need as inout (bamfiles.in <- p$file(\".bam\")) (design.in <- p$file(\"sample_table.csv\")) (gtf.in <- p$file(\"Homo_sapiens.GRCh37.75_subset.gtf\")) bam1 <- p$file(\"SRR1039516_subset.bam\") bam2 <- p$file(\"SRR1039512_subset.bam\") bamfiles.in2 <- list(bam1, bam2) # add a new Task (tsk <- p$task_add(   name = \"RNA DE report new\",   description = \"RNA DE analysis report\",   app = rna.app$id,   inputs = list(     bamfiles = bamfiles.in,     design = design.in,     gtffile = gtf.in   ) ))  # don't forget to run a draft task tsk$run() # # monitor the task # tsk$monitor() setTaskHook(\"completed\", function() {   tsk$download(\"~/Downloads\") }) tsk$monitor() tsk$download(\"~/Downloads\") # batch by items (tsk <- p$task_add(   name = \"RNA DE report new batch 2\",   description = \"RNA DE analysis report\",   app = rna.app$id,   batch = batch(input = \"bamfiles\"),   inputs = list(     bamfiles = bamfiles.in,     design = design.in,     gtffile = gtf.in   ) ))  # batch by metadata, input files has to have metadata fields specified (tsk <- p$task_add(   name = \"RNA DE report new batch 3\",   description = \"RNA DE analysis report\",   app = rna.app$id,   batch = batch(     input = \"fastq\",     c(\"metadata.sample_id\", \"metadata.library_id\")   ),   inputs = list(     bamfiles = bamfiles.in,     design = design.in,     gtffile = gtf.in   ) ))"},{"path":[]},{"path":"/articles/bioc-workflow.html","id":"what-is-report-tool","dir":"Articles","previous_headings":"Quickstart > Build a reporting Tool","what":"What is report tool?","title":"Master Tutorial: Use R for Cancer Genomics Cloud","text":"last section, demonstrate hardcode R report template Docker container command line output new report new input files. , instead coding template Docker, want Provide multiple R markdown template input Provide multiple shiny template input Provide multiple liftr template input Collect files flow used report Collect report different tools single workflow compile summary report developing report tool support single tool uses two different engines provide isolated environment generate report, report different dependencies. packrat engine: isolated libraries liftr engine (progress): Docker Docker  Requirement report template works app folder created template root folder, data, src, www folders, interface, can connect output folders, data flows . First copy ’s template, copy task output folders. Now create isolated environment packrat liftr. Compile template report new Shiny app pass shinyapp.io token, name, secret, deploy shiny app ! template, know file name location relative app root, important requirement now. interested, can still read Dockerfile, command line, tool generator JSON. suggest directly copy json project. Just try add app different way. just use API add raw JSON file Checkout Dockerfile Checkout command line Checkout tool generator","code":"fl <- system.file(\"docker/reporttool/rabix/reporttool.json\",   package = \"sevenbridges\" ) cat(readLines(fl), sep = \"\\n\") {   \"sbg:id\": \"reporttool\",   \"id\": \"#reporttool\",   \"inputs\": [     {       \"type\": [         \"null\",         {           \"items\": \"File\",           \"type\": \"array\"         }       ],       \"label\": \"\",       \"description\": \"Shinay app template as zipped(.zip) or tar(tar.gz) file.\",       \"streamable\": false,       \"default\": \"\",       \"id\": \"#shinyTemplate\",       \"inputBinding\": {         \"position\": 0,         \"prefix\": \"--shinyTemplate\",         \"separate\": true,         \"itemSeparator\": \",\",         \"sbg:cmdInclude\": true       }     },     {       \"type\": [         \"null\",         {           \"items\": \"File\",           \"type\": \"array\"         }       ],       \"label\": \"\",       \"description\": \"Rmarkdown file template will be rendered by knitr\",       \"streamable\": false,       \"default\": \"\",       \"id\": \"#knitrTemplate\",       \"inputBinding\": {         \"position\": 0,         \"prefix\": \"--knitrTemplate\",         \"separate\": true,         \"itemSeparator\": \",\",         \"sbg:cmdInclude\": true       }     },     {       \"type\": [         \"null\",         {           \"items\": \"File\",           \"type\": \"array\"         }       ],       \"label\": \"\",       \"description\": \"Files to be included in data folder of app\",       \"streamable\": false,       \"default\": \"\",       \"id\": \"#data\",       \"inputBinding\": {         \"position\": 0,         \"prefix\": \"--data\",         \"separate\": true,         \"itemSeparator\": \",\",         \"sbg:cmdInclude\": true       }     },     {       \"type\": [         \"null\",         {           \"items\": \"File\",           \"type\": \"array\"         }       ],       \"label\": \"\",       \"description\": \"Files to be included in www folder of app\",       \"streamable\": false,       \"default\": \"\",       \"id\": \"#www\",       \"inputBinding\": {         \"position\": 0,         \"prefix\": \"--www\",         \"separate\": true,         \"itemSeparator\": \",\",         \"sbg:cmdInclude\": true       }     },     {       \"type\": [         \"null\",         {           \"items\": \"File\",           \"type\": \"array\"         }       ],       \"label\": \"\",       \"description\": \"Files to be included in src folder of app\",       \"streamable\": false,       \"default\": \"\",       \"id\": \"#src\",       \"inputBinding\": {         \"position\": 0,         \"prefix\": \"--src\",         \"separate\": true,         \"sbg:cmdInclude\": true       }     },     {       \"type\": [         \"null\",         {           \"items\": \"File\",           \"type\": \"array\"         }       ],       \"label\": \"\",       \"description\": \"Files to be included in root of app folder\",       \"streamable\": false,       \"default\": \"\",       \"id\": \"#appFiles\",       \"inputBinding\": {         \"position\": 0,         \"prefix\": \"--appFiles\",         \"separate\": true,         \"itemSeparator\": \",\",         \"sbg:cmdInclude\": true       }     },     {       \"type\": [\"null\", \"string\"],       \"label\": \"\",       \"description\": \"Name of account to save or remove, check shinyapps::setAccountInfo\",       \"streamable\": false,       \"default\": \"\",       \"id\": \"#name\",       \"inputBinding\": {         \"position\": 0,         \"prefix\": \"--name\",         \"separate\": true,         \"sbg:cmdInclude\": true       }     },     {       \"type\": [\"null\", \"string\"],       \"label\": \"\",       \"description\": \"User token for the account, check shinyapps::setAccountInfo\",       \"streamable\": false,       \"default\": \"\",       \"id\": \"#token\",       \"inputBinding\": {         \"position\": 0,         \"prefix\": \"--token\",         \"separate\": true,         \"sbg:cmdInclude\": true       }     },     {       \"type\": [\"null\", \"string\"],       \"label\": \"\",       \"description\": \"User secret for the account, check shinyapps::setAccountInfo\",       \"streamable\": false,       \"default\": \"\",       \"id\": \"#secret\",       \"inputBinding\": {         \"position\": 0,         \"prefix\": \"--secret\",         \"separate\": true,         \"sbg:cmdInclude\": true       }     },     {       \"type\": [\"null\", \"string\"],       \"label\": \"\",       \"description\": \"Optional; the kind of content being deployed (e.g. 'plot', 'document', or 'application').\",       \"streamable\": false,       \"default\": \"\",       \"id\": \"#contentCategory\",       \"inputBinding\": {         \"position\": 0,         \"prefix\": \"--contentCategory\",         \"separate\": true,         \"sbg:cmdInclude\": true       }     },     {       \"type\": [\"null\", \"string\"],       \"label\": \"\",       \"description\": \"Account to deploy application to. This parameter is only required for the initial deployment of an application when there are multiple accounts configured on the system (see accounts).\",       \"streamable\": false,       \"default\": \"\",       \"id\": \"#account\",       \"inputBinding\": {         \"position\": 0,         \"prefix\": \"--account\",         \"separate\": true,         \"sbg:cmdInclude\": true       }     },     {       \"type\": [\"null\", \"string\"],       \"label\": \"\",       \"description\": \"Server name. Required only if you use the same account name on multiple servers.\",       \"streamable\": false,       \"default\": \"\",       \"id\": \"#server\",       \"inputBinding\": {         \"position\": 0,         \"prefix\": \"--server\",         \"separate\": true,         \"sbg:cmdInclude\": true       }     },     {       \"type\": [\"null\", \"boolean\"],       \"label\": \"\",       \"description\": \"Request that no status information be printed to the console during the deployment.\",       \"streamable\": false,       \"default\": \"\",       \"id\": \"#quiet\",       \"inputBinding\": {         \"position\": 0,         \"prefix\": \"--quiet\",         \"separate\": true,         \"sbg:cmdInclude\": true       }     },     {       \"type\": [         \"null\",         {           \"name\": \"engine\",           \"symbols\": [\"packrat\", \"liftr\"],           \"type\": \"enum\"         }       ],       \"label\": \"\",       \"description\": \"packrat or liftr (docker in docker) or NA [default: packrat]\",       \"streamable\": false,       \"default\": \"\",       \"id\": \"#engine\",       \"inputBinding\": {         \"position\": 0,         \"prefix\": \"--engine\",         \"separate\": true,         \"sbg:cmdInclude\": true       }     }   ],   \"outputs\": [     {       \"type\": [         \"null\",         {           \"items\": \"File\",           \"type\": \"array\"         }       ],       \"label\": \"\",       \"description\": \"compressed shiny app folder\",       \"streamable\": false,       \"default\": \"\",       \"id\": \"#shinyapp\",       \"outputBinding\": {         \"glob\": \"*.tar\"       }     },     {       \"type\": [         \"null\",         {           \"items\": \"File\",           \"type\": \"array\"         }       ],       \"label\": \"\",       \"description\": \"report rendered as html from knitr template\",       \"streamable\": false,       \"default\": \"\",       \"id\": \"#html_report\",       \"outputBinding\": {         \"glob\": \"*.html\"       }     },     {       \"type\": [         \"null\",         {           \"items\": \"File\",           \"type\": \"array\"         }       ],       \"label\": \"\",       \"description\": \"report rendered as pdf from knitr template\",       \"streamable\": false,       \"default\": \"\",       \"id\": \"#pdf_report\",       \"outputBinding\": {         \"glob\": \"*.pdf\"       }     }   ],   \"requirements\": [],   \"hints\": [     {       \"class\": \"DockerRequirement\",       \"dockerPull\": \"tengfei/reporttool\",       \"dockerLoad\": \"\",       \"dockerFile\": \"\",       \"dockerImageId\": \"\",       \"dockerOutputDirectory\": \"\"     }   ],   \"label\": \"reporttool\",   \"description\": \"Reporiting tools support you pass shiny app and knitr Rmakrdown template\",   \"class\": \"CommandLineTool\",   \"baseCommand\": [     \"report.R\"   ],   \"arguments\": [],   \"context\": \"\" } # directly add json file p <- a$project(id = \"tengfei/hackathon\") (report.app <- p$app_add(\"report-tool\", fl)) fl <- system.file(\"docker/reporttool/Dockerfile\",   package = \"sevenbridges\" ) cat(readLines(fl), sep = \"\\n\") FROM rocker/tidyverse  LABEL maintainer=\"soner.koc@sevenbridges.com\"  RUN rm -f /var/lib/dpkg/available \\     && rm -rf  /var/cache/apt/* \\     && apt-get update \\     && apt-get install -y libssl-dev  RUN R -e \"install.packages(c('packrat', 'devtools', 'rsconnect', 'shiny', 'rmarkdown'), repos = 'https://cloud.r-project.org/')\"  ADD src/report.R /usr/local/bin/  RUN chmod a+x /usr/local/bin/report.R fl <- system.file(\"docker/reporttool/src/report.R\",   package = \"sevenbriges\" ) cat(readLines(fl), sep = \"\\n\") fl <- system.file(\"docker/reporttool/rabix/generator.R\",   package = \"sevenbriges\" ) cat(readLines(fl), sep = \"\\n\")"},{"path":"/articles/bioc-workflow.html","id":"compose-a-full-workflow","dir":"Articles","previous_headings":"Quickstart","what":"Compose a full workflow","title":"Master Tutorial: Use R for Cancer Genomics Cloud","text":"Even though R sevenbridges package can use %>>% connect two Tool object, works linear simple flow. complicated flow, recommend use graphic user interface, ’s lot fun. Now connect RNA-seq tool report tool just add project, follow tutorial , make workflow like :  next run task platform via UI like :","code":""},{"path":"/articles/bioc-workflow.html","id":"exercise-bring-your-own-tool","dir":"Articles","previous_headings":"","what":"Exercise: bring your own tool","title":"Master Tutorial: Use R for Cancer Genomics Cloud","text":"Now use either graphic user interface R describe tool, workflow, write report template tool (hard coded) share flow friends.","code":""},{"path":"/articles/bioc-workflow.html","id":"more-tutorials","dir":"Articles","previous_headings":"","what":"More tutorials","title":"Master Tutorial: Use R for Cancer Genomics Cloud","text":"installed package vignettes page.","code":"browseVignettes(\"sevenbridges\")"},{"path":"/articles/cgc-datasets.html","id":"introdution","dir":"Articles","previous_headings":"","what":"Introdution","title":"Find Data on CGC via Data Browser and Datasets API","text":"currently three ways find data need CGC: easy: use powerful pretty GUI called ‘data explorer’ interactively platform, please read tutorial . advanced: advanced user, please SPARQL query directly tutorial. sweet: use CGC Datasets API, creating query list R (comming soon).","code":""},{"path":"/articles/cgc-datasets.html","id":"graphical-data-browser","dir":"Articles","previous_headings":"","what":"Graphical Data Browser","title":"Find Data on CGC via Data Browser and Datasets API","text":"Please read tutorial .","code":""},{"path":"/articles/cgc-datasets.html","id":"datasets-api","dir":"Articles","previous_headings":"","what":"Datasets API","title":"Find Data on CGC via Data Browser and Datasets API","text":"Please read tutorials first.","code":""},{"path":"/articles/cgc-datasets.html","id":"browse-tcga-via-the-datasets-api","dir":"Articles","previous_headings":"Datasets API","what":"Browse TCGA via the Datasets API","title":"Find Data on CGC via Data Browser and Datasets API","text":"HTTP GET endpoint one get resource links entities dataset. Following links (HTTP GET ) one go list entities (example /files) TCGA dataset identified proper URL. following one links ’ll get particular resource (went /files, ’ll get description particular file) specific properties like id, label, etc. links entities connected specific resource (example /cases) can explore . , process repeats long follow links.","code":""},{"path":"/articles/cgc-datasets.html","id":"return-datasets-accessible-trough-the-cgc","dir":"Articles","previous_headings":"Datasets API > Browse TCGA via the Datasets API","what":"Return datasets accessible trough the CGC","title":"Find Data on CGC via Data Browser and Datasets API","text":"Create Auth object token, make sure using correct URL. https://cgc-datasets-api.sbgenomics.com/ use Auth$api() method need type base URL token .","code":"library(\"sevenbridges\") # create an Auth object a <- Auth(   url = \"https://cgc-datasets-api.sbgenomics.com/\",   token = \"your_cgc_token\" ) a$api(path = \"datasets\")"},{"path":"/articles/cgc-datasets.html","id":"return-list-of-all-tcga-entities","dir":"Articles","previous_headings":"Datasets API > Browse TCGA via the Datasets API","what":"Return list of all TCGA entities","title":"Find Data on CGC via Data Browser and Datasets API","text":"can issue another GET request href tcga object, want access TCGA data.","code":"a <- Auth(   url = \"https://cgc-datasets-api.sbgenomics.com/datasets/tcga/v0\",   token = \"your_cgc_token\" ) (res <- a$api()) # default method is GET # list all resources/entities names(res$\"_links\")"},{"path":"/articles/cgc-datasets.html","id":"interpreting-the-list-of-all-entities","dir":"Articles","previous_headings":"Datasets API > Browse TCGA via the Datasets API","what":"Interpreting the list of all entities","title":"Find Data on CGC via Data Browser and Datasets API","text":"example, see list TCGA files, send request: example, see metadata schema files send request:","code":"(res <- a$api(path = \"files\")) a$api(path = \"files/schema\")"},{"path":"/articles/cgc-datasets.html","id":"copy-files-to-you-project","dir":"Articles","previous_headings":"Datasets API > Browse TCGA via the Datasets API","what":"Copy files to you project","title":"Find Data on CGC via Data Browser and Datasets API","text":"Get file id Datasets API, use public API copy files. Make sure project “TCGA” compatible, otherwise trying copy controlled access data non-TCGA project, get","code":"\"HTTP Status 403: Insufficient privileges to access the requested file.\" (res <- a$api(path = \"files\"))  get_id <- function(obj) sapply(obj$\"_embedded\"$files, function(x) x$id) ids <- get_id(res)  # create CGC auth a_cgc <- Auth(platform = \"cgc\", token = a$token) a_cgc$copyFile(id = ids, project = \"RFranklin/tcga-demo\")"},{"path":"/articles/cgc-datasets.html","id":"post-with-query","dir":"Articles","previous_headings":"Datasets API","what":"Post with query","title":"Find Data on CGC via Data Browser and Datasets API","text":"endpoint user can filter collection resources using DSL JSON format translates subset SPARQL. Main advantage end user gets subset SPARQL expressiveness without need learn SPARQL specification.","code":""},{"path":"/articles/cgc-datasets.html","id":"find-samples-connected-to-a-case","dir":"Articles","previous_headings":"Datasets API > Post with query","what":"Find samples connected to a case","title":"Find Data on CGC via Data Browser and Datasets API","text":"Count samples connected case Issuing GET request href path return following data: Note: api function light layer httr package, ’s different Auth$api call.","code":"body <- list(   entity = \"samples\",   hasCase = \"0004D251-3F70-4395-B175-C94C2F5B1B81\" ) a$api(path = \"query\", body = body, method = \"POST\") a$api(path = \"query/total\", body = body, method = \"POST\") httr::content(   api(     token = a$token,     base_url = \"https://cgc-datasets-api.sbgenomics.com/datasets/tcga/v0/samples/9259E9EE-7279-4B62-8512-509CB705029C\"   ) )"},{"path":"/articles/cgc-datasets.html","id":"find-cases-with-given-age-at-diagnosis","dir":"Articles","previous_headings":"Datasets API > Post with query","what":"Find cases with given age at diagnosis","title":"Find Data on CGC via Data Browser and Datasets API","text":"Suppose want see cases age diagnosis 10 50. , use following query. Note value metadata field hasAgeAtDiagnosis dictionary containing keyfilter, whose value dictionary keysgt(greater ) lt (less ) upper lower bounds filter .","code":"body <- list(   \"entity\" = \"cases\",   \"hasAgeAtDiagnosis\" = list(     \"filter\" = list(       \"gt\" = 10,       \"lt\" = 50     )   ) ) a$api(path = \"query\", body = body, method = \"POST\")"},{"path":"/articles/cgc-datasets.html","id":"find-cases-with-a-given-age-at-diagnosis-and-disease","dir":"Articles","previous_headings":"Datasets API > Post with query","what":"Find cases with a given age at diagnosis and disease","title":"Find Data on CGC via Data Browser and Datasets API","text":"Suppose want see cases , example, (Find cases given age diagnosis)(doc:find--cases---given-age--diagnosis), age diagnosis 10 50, also disease “Kidney Chromophobe”. , use following query:","code":"body <- list(   \"entity\" = \"cases\",   \"hasAgeAtDiagnosis\" = list(     \"filter\" = list(       \"gt\" = 10,       \"lt\" = 50     )   ),   \"hasDiseaseType\" = \"Kidney Chromophobe\" ) a$api(path = \"query\", body = body, method = \"POST\")"},{"path":"/articles/cgc-datasets.html","id":"complex-example-for-filtering-tcga-data","dir":"Articles","previous_headings":"Datasets API > Post with query","what":"Complex example for filtering TCGA data","title":"Find Data on CGC via Data Browser and Datasets API","text":"Issuing GET request href path","code":"body <- list(   \"entity\" = \"cases\",   \"hasSample\" = list(     \"hasSampleType\" = \"Primary Tumor\",     \"hasPortion\" = list(       \"hasPortionNumber\" = 11     )   ),   \"hasNewTumorEvent\" = list(     \"hasNewTumorAnatomicSite\" = c(\"Liver\", \"Pancreas\"),     \"hasNewTumorEventType\" = list(       \"filter\" = list(         \"contains\" = \"Recurrence\"       )     )   ) ) a$api(path = \"query\", body = body, method = \"POST\") httr::content(   api(     token = a$token,     base_url = \"https://cgc-datasets-api.sbgenomics.com/datasets/tcga/v0/cases/0004D251-3F70-4395-B175-C94C2F5B1B81\"   ) )"},{"path":"/articles/cgc-datasets.html","id":"query-with-multiple-filters-on-a-case","dir":"Articles","previous_headings":"Datasets API > Post with query","what":"Query with multiple filters on a case","title":"Find Data on CGC via Data Browser and Datasets API","text":"","code":"get_id <- function(obj) sapply(obj$\"_embedded\"$files, function(x) x$id) names(res)  body <- list(   \"entity\" = \"cases\",   \"hasSample\" = list(     \"hasSampleType\" = \"Primary Tumor\",     \"hasPortion\" = list(       \"hasPortionNumber\" = 11,       \"hasID\" = \"TCGA-DD-AAVP-01A-11\"     )   ),   \"hasNewTumorEvent\" = list(     \"hasNewTumorAnatomicSite\" = \"Liver\",     \"hasNewTumorEventType\" = \"Intrahepatic Recurrence\"   ) )  (res <- a$api(path = \"files\", body = body)) get_id(res)"},{"path":"/articles/docker.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Creating Your Docker Container and Command Line Interface (with docopt)","text":"progress tutorial, go ways Make native command line interface R many fun ways , focused R developers.","code":""},{"path":"/articles/docker.html","id":"existing-docker-repos","dir":"Articles","previous_headings":"Introduction","what":"Existing Docker repos","title":"Creating Your Docker Container and Command Line Interface (with docopt)","text":"create , make sure don’t re-invent wheel use best base image container tool chain may save lots time later .","code":""},{"path":"/articles/docker.html","id":"rocker-project","dir":"Articles","previous_headings":"Introduction > Existing Docker repos","what":"Rocker Project","title":"Creating Your Docker Container and Command Line Interface (with docopt)","text":"Official R Docker images called “Rocker”” project GitHub, please visit page find details Dockerfile.","code":""},{"path":"/articles/docker.html","id":"bioconductor-images","dir":"Articles","previous_headings":"Introduction > Existing Docker repos","what":"Bioconductor Images","title":"Creating Your Docker Container and Command Line Interface (with docopt)","text":"Bioconductor nice page official Docker images, please read details. understand image quickly short instruction image name: release images based rocker/rstudio devel images based rocker/rstudio-daily base: Contains R, RStudio, system dependencies. core: base + selection core packages. flow: core + packages tagged FlowCytometry biocView. microarray: core + packages tagged Microarray biocView. proteomics: core + packages tagged Proteomics biocView. sequencing: core + packages tagged Sequencing biocView. metabolomics: core + packages tagged Metabolomics biocView.","code":""},{"path":"/articles/docker.html","id":"docker-hub","dir":"Articles","previous_headings":"Introduction > Existing Docker repos","what":"Docker Hub","title":"Creating Your Docker Container and Command Line Interface (with docopt)","text":"Docker Hub also provide public/private repos, can search existing tools without building , ’s likely popular tool already Docker container well maintained .","code":""},{"path":"/articles/docker.html","id":"seven-bridges-docker-registry","dir":"Articles","previous_headings":"Introduction > Existing Docker repos","what":"Seven Bridges Docker Registry","title":"Creating Your Docker Container and Command Line Interface (with docopt)","text":"Tutorial coming soon. Example Seven Bridges registry: SevenBridges : images.sbgenomics.com/<repository>[:<tag>] Cancer Genomics Cloud: cgc-images.sbgenomics.com/<repository>[:<tag>]","code":""},{"path":"/articles/docker.html","id":"tutorial-random-number-generator","dir":"Articles","previous_headings":"","what":"Tutorial: Random Number Generator","title":"Creating Your Docker Container and Command Line Interface (with docopt)","text":"goal making CWL app generate uniform random numbers, yes, core function runif(), ’s native function R.","code":"dput(runif) ## function (n, min = 0, max = 1)  ## .Call(C_runif, n, min, max) set.seed(1001) runif(10) ##  [1] 0.985688783 0.412628483 0.429539246 0.419172236 0.426506559 0.887797565 ##  [7] 0.006096034 0.081215761 0.288657362 0.765342145"},{"path":"/articles/docker.html","id":"using-docopt-package","dir":"Articles","previous_headings":"Tutorial: Random Number Generator","what":"Using docopt Package","title":"Creating Your Docker Container and Command Line Interface (with docopt)","text":"R, also nice implementation package called docopt, developed Edwin de Jonge. Check tutorial GitHub. let’s quickly create command line interface R scripts dummy example. Let’s turn uniform distribution function runif command line tool. check help page runif, key information want markdown. add one parameter set seed, R script file called runif.R. beginning command line script, use docopt standard write tool help. Let’s first testing R session make full functional command line tool. Looks like works, now let’s add main function script command line tool. Add Shebang top file, complete example runif.R command line like Let’s test command line. full example can check GitHub example.","code":"Usage  runif(n, min = 0, max = 1)  Arguments  n number of observations. If length(n) > 1, the length is taken to be the number required.  min, max lower and upper limits of the distribution. Must be finite. \"usage: runif.R [--n=<int> --min=<float> --max=<float> --seed=<float>]\\n\\noptions:\\n --n=<int>        number of observations. If length(n) > 1, the length is taken to be the number required [default: 1].\\n --min=<float>   lower limits of the distribution. Must be finite [default: 0].\\n --max=<float>   upper limits of the distribution. Must be finite [default: 1].\\n --seed=<float>  seed for set.seed() function [default: 1]\" -> doc  library(\"docopt\") docopt(doc) # with no argumetns provided ## List of 8 ##  $ --n   : chr \"1\" ##  $ --min : chr \"0\" ##  $ --max : chr \"1\" ##  $ --seed: chr \"1\" ##  $ n     : chr \"1\" ##  $ min   : chr \"0\" ##  $ max   : chr \"1\" ##  $ seed  : chr \"1\" ## NULL docopt(doc, \"--n 10 --min=3 --max=5\") ## List of 8 ##  $ --n   : chr \"10\" ##  $ --min : chr \"3\" ##  $ --max : chr \"5\" ##  $ --seed: chr \"1\" ##  $ n     : chr \"10\" ##  $ min   : chr \"3\" ##  $ max   : chr \"5\" ##  $ seed  : chr \"1\" ## NULL opts <- docopt(doc) set.seed(opts$seed) runif(   n = as.integer(opts$n),   min = as.numeric(opts$min),   max = as.numeric(opts$max) ) ## [1] 0.2655087 #!/usr/bin/Rscript \"usage: runif.R [--n=<int> --min=<float> --max=<float> --seed=<float>]\\n\\noptions:\\n --n=<int>        number of observations. If length(n) > 1, the length is taken to be the number required [default: 1].\\n --min=<float>   lower limits of the distribution. Must be finite [default: 0].\\n --max=<float>   upper limits of the distribution. Must be finite [default: 1].\\n --seed=<float>  seed for set.seed() function [default: 1]\" -> doc  library(\"docopt\") opts <- docopt(doc) set.seed(opts$seed) runif(   n = as.integer(opts$n),   min = as.numeric(opts$min),   max = as.numeric(opts$max) ) $ runif.R --help Loading required package: methods usage: runif.R [--n=<int> --min=<float> --max=<float> --seed=<float>]  options:  --n=<int>        number of observations. If length(n) > 1, the length is taken to be the number required [default: 1].  --min=<float>   lower limits of the distribution. Must be finite [default: 0].  --max=<float>   upper limits of the distribution. Must be finite [default: 1].  --seed=<float>  seed for set.seed() function [default: 1] $ runif.R Loading required package: methods [1] 0.2655087 $ runif.R Loading required package: methods [1] 0.2655087 $ runif.R --seed=123 --n 10 --min=1 --max=100 Loading required package: methods  [1] 29.470174 79.042208 41.488715 88.418723 94.106261  5.510093 53.282443  [8] 89.349485 55.592066 46.204859"},{"path":"/articles/docker.html","id":"quick-command-line-interface-with-commandargs-position-and-named-args","dir":"Articles","previous_headings":"Tutorial: Random Number Generator","what":"Quick Command Line Interface with commandArgs (Position and Named Args)","title":"Creating Your Docker Container and Command Line Interface (with docopt)","text":"advanced users, please read another tutorial “Creating Docker Container Command Line Interface (docopt)”, “docopt” formal way construct command line interface, quick way make command line interface using just commandArgs. Suppose already R script like using position mapping arguments numbers min max Ignore comment part, introduce spin/stich later. base command something like just describe tool way Now copy-paste JSON project app run cloud test named arguments? still recommend use “docopt” package, simple way. just describe tool way, note, use separate=FALSE add = prefix hack.","code":"fl <- system.file(\"docker/sevenbridges/src\", \"runif2spin.R\", package = \"sevenbridges\") cat(readLines(fl), sep = \"\\n\") #' --- #' title: \"Uniform random number generator example\" #' output: #'     html_document: #'     toc: true #' number_sections: true #' ---  #' # summary report #' #' This is a random number generator  #+ args = commandArgs(TRUE)  r = runif(n   = as.integer(args[1]),           min = as.numeric(args[2]),           max = as.numeric(args[3])) head(r) summary(r) hist(r) Rscript runif2spin.R 10 30 50 library(\"sevenbridges\")  fd <- fileDef(   name = \"runif.R\",   content = readr::read_file(fl) )  rbx <- Tool(   id = \"runif\",   label = \"runif\",   hints = requirements(docker(pull = \"rocker/r-base\"), cpu(1), mem(2000)),   requirements = requirements(fd),   baseCommand = \"Rscript runif.R\",   stdout = \"output.txt\",   inputs = list(     input(       id = \"number\",       type = \"integer\",       position = 1     ),     input(       id = \"min\",       type = \"float\",       position = 2     ),     input(       id = \"max\",       type = \"float\",       position = 3     )   ),   outputs = output(id = \"random\", glob = \"output.txt\") ) fl <- system.file(\"docker/sevenbridges/src\", \"runif_args.R\", package = \"sevenbridges\") cat(readLines(fl), sep = \"\\n\") #' --- #' title: \"Uniform random number generator example\" #' output: #'     html_document: #'     toc: true #' number_sections: true #' ---  #' # summary report #' #' This is a random number generator  #+ args <- commandArgs(TRUE)  ## quick hack to split named arguments splitArgs <- function(x) {     res <- do.call(rbind, lapply(x, function(i){         res <- strsplit(i, \"=\")[[1]]         nm <- gsub(\"-+\", \"\",res[1])         c(nm, res[2])     }))     .r <- res[,2]     names(.r) <- res[,1]     .r } args <- splitArgs(args)  #+ r <- runif(n   = as.integer(args[\"n\"]),            min = as.numeric(args[\"min\"]),            max = as.numeric(args[\"max\"])) summary(r) hist(r) write.csv(r, file = \"out.csv\") Rscript runif_args.R --n=10 --min=30 --max=50 fd <- fileDef(   name = \"runif.R\",   content = readr::read_file(fl) )  rbx <- Tool(   id = \"runif\",   label = \"runif\",   hints = requirements(docker(pull = \"rocker/r-base\"), cpu(1), mem(2000)),   requirements = requirements(fd),   baseCommand = \"Rscript runif.R\",   stdout = \"output.txt\",   inputs = list(     input(       id = \"number\",       type = \"integer\",       separate = FALSE,       prefix = \"--n=\"     ),     input(       id = \"min\",       type = \"float\",       separate = FALSE,       prefix = \"--min=\"     ),     input(       id = \"max\",       type = \"float\",       separate = FALSE,       prefix = \"--max=\"     )   ),   outputs = output(id = \"random\", glob = \"output.txt\") )"},{"path":"/articles/docker.html","id":"quick-report-spin-and-stich","dir":"Articles","previous_headings":"Tutorial: Random Number Generator","what":"Quick Report: Spin and Stich","title":"Creating Your Docker Container and Command Line Interface (with docopt)","text":"Alternative, can use spin/stich knitr generate report directly R script special format. example, let’s use example command something like describe tool like Docker image rocker/hadleyverse contains knitr rmarkdown package. get report end.","code":"fl <- system.file(\"docker/sevenbridges/src\", \"runif_args.R\", package = \"sevenbridges\") cat(readLines(fl), sep = \"\\n\") #' --- #' title: \"Uniform random number generator example\" #' output: #'     html_document: #'     toc: true #' number_sections: true #' ---  #' # summary report #' #' This is a random number generator  #+ args <- commandArgs(TRUE)  ## quick hack to split named arguments splitArgs <- function(x) {     res <- do.call(rbind, lapply(x, function(i){         res <- strsplit(i, \"=\")[[1]]         nm <- gsub(\"-+\", \"\",res[1])         c(nm, res[2])     }))     .r <- res[,2]     names(.r) <- res[,1]     .r } args <- splitArgs(args)  #+ r <- runif(n   = as.integer(args[\"n\"]),            min = as.numeric(args[\"min\"]),            max = as.numeric(args[\"max\"])) summary(r) hist(r) write.csv(r, file = \"out.csv\") Rscript -e \"rmarkdown::render(knitr::spin('runif_args.R', FALSE))\" --args --n=100 --min=30 --max=50 fd <- fileDef(   name = \"runif.R\",   content = readr::read_file(fl) )  rbx <- Tool(   id = \"runif\",   label = \"runif\",   hints = requirements(docker(pull = \"rocker/hadleyverse\"), cpu(1), mem(2000)),   requirements = requirements(fd),   baseCommand = \"Rscript -e \\\"rmarkdown::render(knitr::spin('runif.R', FALSE))\\\" --args\",   stdout = \"output.txt\",   inputs = list(     input(       id = \"number\",       type = \"integer\",       separate = FALSE,       prefix = \"--n=\"     ),     input(       id = \"min\",       type = \"float\",       separate = FALSE,       prefix = \"--min=\"     ),     input(       id = \"max\",       type = \"float\",       separate = FALSE,       prefix = \"--max=\"     )   ),   outputs = list(     output(id = \"stdout\", type = \"file\", glob = \"output.txt\"),     output(id = \"random\", type = \"file\", glob = \"*.csv\"),     output(id = \"report\", type = \"file\", glob = \"*.html\")   ) )"},{"path":"/articles/docker.html","id":"executable-report-with-r-markdown-advanced","dir":"Articles","previous_headings":"Tutorial: Random Number Generator","what":"Executable Report with R Markdown (Advanced)","title":"Creating Your Docker Container and Command Line Interface (with docopt)","text":"really make R Markdown file executable simply put markdown document. course, can figure way liftr knitr. R Markdown allow pass parameters R Markdown template, please read tutorial Parameterized Reports. doesn’t solve problem want directly describe command line interface markdown template. However, alternative method: Create command line interface pass params docopt rmarkdown::render() function. way, can pass many possible parameters command line interface R Markdown template. go, updated methods ’s also use another tutorial RNA-seq workflow. current content command line interface report template","code":"#!/bin/bash/Rscript fl <- system.file(\"docker/sevenbridges/src/\", \"runif.R\", package = \"sevenbridges\") #!/usr/local/bin/Rscript 'usage: runif.R [--n=<int> --min=<float> --max=<float> --seed=<float>]  options: --n=<int>        number of observations. If length(n) > 1, the length is taken to be the number required [default: 1]. --min=<float>   lower limits of the distribution. Must be finite [default: 0]. --max=<float>   upper limits of the distribution. Must be finite [default: 1]. --seed=<float>  seed for set.seed() function [default: 1]'  -> doc  library(\"docopt\") opts <- docopt(doc)  # create param list lst <- list(   n = as.integer(opts$n),   min = as.numeric(opts$min),   max = as.numeric(opts$max),   seed = as.numeric(opts$seed) )  # execute your Rmarkdown with these parameters rmarkdown::render(\"/report/report.Rmd\", rmarkdown::html_document(toc = TRUE), output_dir = \".\", params = lst) --- title: \"Uniform random number generator example\" output:   rmarkdown::html_document:     toc: true     number_sections: true     css: style.css params:   seed: 1   n: 1   min: 0   max: 1 ---  ## Summary ```{r} set.seed(params$seed) r <- runif(   n = as.integer(params$n),   min = as.numeric(params$min),   max = as.numeric(params$max) ) summary(r) hist(r) ```"},{"path":"/articles/docker.html","id":"setup-docker-hub-automated-build","dir":"Articles","previous_headings":"","what":"Setup Docker Hub Automated Build","title":"Creating Your Docker Container and Command Line Interface (with docopt)","text":"make things reproducible explicit automatic, can autohook automatically build container/image Docker Hub. created project called ‘docker’ GitHub container crated Dockerfile, example, tengfei/docker/runif, please go check folder root Dockerfile subfolders extra materials added build time, like script report template. Log Docker Hub account, following tutorial make “automated build” GitHub account. Make sure input right location Dockerfile, customizing . auto-build every time push new update GitHub. Start using Docker image like tengfei/runif. Feel free push onto Seven Bridges platform registry well.","code":""},{"path":"/articles/docker.html","id":"more-examples","dir":"Articles","previous_headings":"","what":"More Examples","title":"Creating Your Docker Container and Command Line Interface (with docopt)","text":"examples inst/docker folder, can check describe command line build Docker, make report template. may read online GitHub code. read another tutorial wrap RNA-seq workflow Bioconductor.","code":""},{"path":"/articles/rstudio.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"IDE Container: RStudio Server, Shiny Server, and More","text":"goal sevenbridges/sevenbridges-r Docker image provide Seven Bridges Platform command line uploader Seven Bridges command line tools R package sevenbridges essential dependencies RStudio Server Shiny Server","code":""},{"path":[]},{"path":"/articles/rstudio.html","id":"build-container-locally","dir":"Articles","previous_headings":"Docker container","what":"Build container locally","title":"IDE Container: RStudio Server, Shiny Server, and More","text":"Dockerfile included package inst/docker folder. current content Dockerfile: can simply build locally, enter folder contain Dockerfile, case, inst/docker/sevenbridges","code":"fl <- system.file(\"docker/sevenbridges/\", \"Dockerfile\", package = \"sevenbridges\") cat(readLines(fl), sep = \"\\n\") FROM rocker/tidyverse  LABEL maintainer=\"soner.koc@sevenbridges.com\"  ## Install common dependencies RUN apt-get update && apt-get install -y  \\     sudo \\     gdebi-core \\     pandoc \\     pandoc-citeproc \\     libcurl4-gnutls-dev \\     curl \\     libcairo2-dev \\     libxt-dev \\     unp \\     emacs \\     supervisor \\     libfuse-dev \\     gnupg #   aufs-tools \\ #   cgroupfs-mount  # RUN wget --no-verbose http://ftp.us.debian.org/debian/pool/main/l/lvm2/libdevmapper1.02.1_1.02.136-1_amd64.deb && \\ #    dpkg -i libdevmapper1.02.1_1.02.136-1_amd64.deb && \\ #    rm -f libdevmapper1.02.1_1.02.136-1_amd64.deb  # RUN wget --no-verbose http://ftp.us.debian.org/debian/pool/main/libt/libtool/libltdl7_2.4.6-2_amd64.deb && \\ #    dpkg -i libltdl7_2.4.6-2_amd64.deb && \\ #    rm -f libltdl7_2.4.6-2_amd64.deb  ## Install Docker  RUN apt-get update \\     && apt-get install -y apt-transport-https ca-certificates gnupg2 software-properties-common \\     && curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add - \\     && apt-key fingerprint 0EBFCD88 \\     && add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable\" \\     && apt-get update -y \\     && apt-get install -y docker-ce  ################## # sevenbridges-r # ##################  # Install from GitHub instead of Bioconductor for the latest version RUN Rscript -e \"install.packages('BiocManager');\\     devtools::install_github('sbg/sevenbridges-r', repos = BiocManager::repositories(), build_vignettes = FALSE, dependencies = TRUE)\"  ##################### # Seven Bridges SDK # #####################  ## Install SBG Rabix RUN wget https://github.com/rabix/bunny/releases/download/v1.0.5-1/rabix-1.0.5.tar.gz \\     && tar -zvxf rabix-1.0.5.tar.gz \\     && ln -s  /rabix-cli-1.0.5/rabix /usr/local/bin/rabix  ## Install SBG Command line uploader # RUN wget https://igor.sbgenomics.com/sbg-uploader/sbg-uploader.tgz \\ #     && tar zxvf sbg-uploader.tgz -C / \\ #    && ln -s  /sbg-uploader/bin/sbg-uploader.sh /usr/local/bin/sbg-uploader.sh  ## Install CGC Command line uploader # RUN wget https://cgc.sbgenomics.com/cgc-uploader/cgc-uploader.tgz \\ #    && tar zxvf cgc-uploader.tgz -C / \\ #    && ln -s  /cgc-uploader/bin/cgc-uploader.sh /usr/local/bin/cgc-uploader.sh  ## Copy command line interface and report templates needed ADD src/runif.R /usr/local/bin/ RUN mkdir /report/ ADD report/report.Rmd /report/  ## Install liftr and packrat RUN Rscript -e \"install.packages(c('liftr', 'packrat'), repos = 'https://cloud.r-project.org/')\"  ## (because --deps TRUE can fail when packages are added/removed from CRAN) RUN rm -rf /var/lib/apt/lists/ \\     && rm -rf /tmp/downloaded_packages/ /tmp/*.rds  ################ # Shiny Server # ################  ## Thanks: rocker-org/shiny  ## Download and install Shiny Server RUN wget --no-verbose https://s3.amazonaws.com/rstudio-shiny-server-os-build/ubuntu-12.04/x86_64/VERSION -O \"version.txt\" && \\     VERSION=$(cat version.txt)  && \\     wget --no-verbose \"https://s3.amazonaws.com/rstudio-shiny-server-os-build/ubuntu-12.04/x86_64/shiny-server-$VERSION-amd64.deb\" -O shiny-server-latest.deb && \\     gdebi -n shiny-server-latest.deb && \\     rm -f version.txt shiny-server-latest.deb  RUN Rscript -e \"install.packages(c('shiny', 'rmarkdown', 'rsconnect'), repos = 'https://cloud.r-project.org/')\"  RUN cp -R /usr/local/lib/R/site-library/shiny/examples/* /srv/shiny-server/  RUN mkdir /home/rstudio/ShinyApps/  RUN cp -R /usr/local/lib/R/site-library/shiny/examples/* /home/rstudio/ShinyApps/  EXPOSE 3838 8787  # COPY src/shiny-server.sh /usr/bin/shiny-server.sh # RUN wget --no-verbos https://raw.githubusercontent.com/sbg/sevenbridges-r/master/inst/docker/sevenbridges/src/shiny-server.conf -P /etc/shiny-server/ # RUN wget --no-verbos https://raw.githubusercontent.com/sbg/sevenbridges-r/master/inst/docker/sevenbridges/src/supervisord.conf    -P /etc/shiny-server/ COPY src/shiny-server.conf  /etc/shiny-server/shiny-server.conf COPY src/supervisord.conf /etc/supervisor/conf.d/supervisord.conf  ## set directory to `~/ShinyApps` # RUN yes | /opt/shiny-server/bin/deploy-example user-dirs # RUN cp -R /usr/local/lib/R/site-library/shiny/examples/* ~/ShinyApps/  CMD [\"/usr/bin/supervisord\", \"-c\", \"/etc/supervisor/conf.d/supervisord.conf\"] # CMD [\"/init;/usr/bin/shiny-server.sh\"] # CMD [\"sh\", \"-c\", \"/usr/bin/shiny-server.sh;/init\"] docker build -t sevenbridges/sevenbridges-r ."},{"path":"/articles/rstudio.html","id":"pull-from-docker-hub","dir":"Articles","previous_headings":"Docker container","what":"Pull from Docker Hub","title":"IDE Container: RStudio Server, Shiny Server, and More","text":"hook added build Docker image automatically sevenbridges-r GitHub repository. automatically built Docker Hub. can directly use image sevenbridges/sevenbridges-r. Everytime push made GitHub repo, Docker container re-built.","code":""},{"path":"/articles/rstudio.html","id":"launch-rstudio-server-from-docker-container","dir":"Articles","previous_headings":"","what":"Launch RStudio Server from Docker container","title":"IDE Container: RStudio Server, Shiny Server, and More","text":"example, can ssh AWS instance, suppose already Docker installed, pull image launch sevenbridges RStudio Server image, recommend read tutorial following quick instruction able access RStudio browser something like http://<your_ip_address>:8787 Sometimes want add users, add users","code":"docker pull sevenbridges/sevenbridges-r docker run -d -p 8787:8787 sevenbridges/sevenbridges-r docker run -d -p 8787:8787 -e USER=<username> -e PASSWORD=<password> rocker/rstudio ## Enter the container docker exec -it <container-id> bash ## Interactively input password and everything else adduser <username>"},{"path":"/articles/rstudio.html","id":"launch-both-rstudio-server-and-shiny-server-from-the-same-docker-container","dir":"Articles","previous_headings":"Launch RStudio Server from Docker container","what":"Launch both RStudio Server and Shiny Server from the same Docker container","title":"IDE Container: RStudio Server, Shiny Server, and More","text":"Sometimes conventient launch RStudio Server Shiny Server singel container users can manage using RStudio Server publish Shiny apps time container. , just pull image launch different port. mount file system need use --privileged fuse. check ip docker machine mac os. browser, http://<url>:8787/ RStudio Server, example, 192.168.99.100 returned, visit http://192.168.99.100:8787/ RStudio Server. Shiny Server, per user app hosted http://<url>:3838/users/<username rstudio>/<app_dir>, example, user rstudio (default user) app called 01_hello, http://<url>:3838/users/rstudio/01_hello/. develop Shiny app RStudio Server, can log RStudio Server username, create fold home folder called ~/ShinyApps develop Shiny apps folder, example, can create app called 02_text ~/ShinyApps/02_text/. Let’s try , please log RStudio http://<url>:8787 now, try copy example home folder ~/ShinyApps/ logged username rstudio, visit http://192.168.99.100:3838/rstudio/01_hello able see hello example. Note: Generic Shiny apps can also hosted http://<url>:3838/ particular app, http://<url>:3838/<app_dir> inside Docker container, hosted /srv/shiny-server/.","code":"docker run  -d -p 8787:8787 -p 3838:3838 --name rstudio_shiny_server sevenbridges/sevenbridges-r docker run  --privileged -d -p 8787:8787 -p 3838:3838 --name rstudio_shiny_server sevenbridges/sevenbridges-r docker-machine ip default dir.create(\"~/ShinyApps\") file.copy(   \"/usr/local/lib/R/site-library/shiny/examples/01_hello/\",   \"~/ShinyApps/\", recursive = TRUE )"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Phil Webster. Author, maintainer. Soner Koc. Author. Nan Xiao. Author. Tengfei Yin. Author. Dusan Randjelovic. Contributor. Emile Young. Contributor. Velsera. Copyright holder, funder.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Webster P, Koc S, Xiao N, Yin T (2023). sevenbridges: Seven Bridges Platform API Client Common Workflow Language Tool Builder R. https://www.sevenbridges.com, https://sbg.github.io/sevenbridges-r/, https://github.com/sbg/sevenbridges-r.","code":"@Manual{,   title = {sevenbridges: Seven Bridges Platform API Client and Common Workflow Language Tool Builder in R},   author = {Phil Webster and Soner Koc and Nan Xiao and Tengfei Yin},   year = {2023},   note = {https://www.sevenbridges.com, https://sbg.github.io/sevenbridges-r/, https://github.com/sbg/sevenbridges-r}, }"},{"path":"/index.html","id":"sevenbridges-r-","dir":"","previous_headings":"","what":"Seven Bridges Platform API Client and Common Workflow Language Tool\n    Builder in R","title":"Seven Bridges Platform API Client and Common Workflow Language Tool\n    Builder in R","text":"BioC (Release) · BioC (Development) · GitHub (Latest)","code":""},{"path":"/index.html","id":"overview-","dir":"","previous_headings":"","what":"Overview","title":"Seven Bridges Platform API Client and Common Workflow Language Tool\n    Builder in R","text":"sevenbridges-r R/Bioconductor package provides interface Seven Bridges Platform (US, EU, China), Cancer Genomics Cloud, Cavatica, BioData Catalyst Powered Seven Bridges public APIs. Seven Bridges Platform cloud-based environment conducting bioinformatics analysis. central hub teams store, analyze, jointly interpret bioinformatic data. Platform co-locates analysis pipelines alongside largest genomic datasets optimize processing, allocating storage, compute resources demand. Cancer Genomics Cloud (CGC), powered Seven Bridges, also cloud-based computation environment. built one three pilot systems funded National Cancer Institute explore paradigm colocalizing massive genomics datasets, like Cancer Genomics Atlas (TCGA), alongside secure scalable computational resources analyze . CGC makes petabyte multi-dimensional data available immediately authorized researchers. can add data analyze alongside TCGA using predefined analytical workflows tools. Cavatica, powered Seven Bridges, data analysis sharing platform designed accelerate discovery scalable, cloud-based compute environment data, results, workflows shared among world’s research community. Cavatica built collaboration Children Hospital Philadelphia focused pediatric data.","code":""},{"path":"/index.html","id":"table-of-contents-","dir":"","previous_headings":"","what":"Table of Contents","title":"Seven Bridges Platform API Client and Common Workflow Language Tool\n    Builder in R","text":"Check R version Bioconductor - Release Branch Bioconductor - Development Branch Latest Development Version Flexible Authentication Methods Complete API R Client Task Monitoring Batch Tasks Support Cross Environment Support Common Workflow Language Tool Interface Utilities Tool Flow Tutorials IDE Docker Image FAQ Events Contribute Copyright","code":""},{"path":[]},{"path":"/index.html","id":"check-r-version","dir":"","previous_headings":"Installation","what":"Check R version","title":"Seven Bridges Platform API Client and Common Workflow Language Tool\n    Builder in R","text":"First, check version R using following command (R): running latest release version R, install upgrade instructions. using RStudio, restart RStudio installing R. RStudio detect new installation.","code":"R.version.string"},{"path":"/index.html","id":"bioconductor---release-branch","dir":"","previous_headings":"Installation","what":"Bioconductor - Release Branch","title":"Seven Bridges Platform API Client and Common Workflow Language Tool\n    Builder in R","text":"recommended users stable version. can install package release branch Bioconductor using BiocManager:","code":"install.packages(\"BiocManager\") BiocManager::install(\"sevenbridges\")"},{"path":"/index.html","id":"bioconductor---development-branch","dir":"","previous_headings":"Installation","what":"Bioconductor - Development Branch","title":"Seven Bridges Platform API Client and Common Workflow Language Tool\n    Builder in R","text":"developing tools devel branch use development version R Bioconductor, install package Bioconductor devel branch. probably also want install R-devel first following directions “Using ‘Devel’ Version Bioconductor”. install sevenbridges package devel branch, use","code":"install.packages(\"BiocManager\") BiocManager::install(\"sevenbridges\", version = \"devel\")"},{"path":"/index.html","id":"latest-development-version","dir":"","previous_headings":"Installation","what":"Latest Development Version","title":"Seven Bridges Platform API Client and Common Workflow Language Tool\n    Builder in R","text":"try latest features, please install package directly GitHub. push Bioconductor branch (release devel) regularly. Installing sevenbridges package GitHub requires devtools package. devtools, install CRAN first. may get error missing system dependecies curl ssl. probably need following first order install devtools build vignettes since need pandoc Ubuntu. devtools installed, install latest version sevenbridges GitHub: trouble pandoc want install , set build_vignettes = FALSE avoid building vignettes.","code":"install.packages(\"devtools\") apt-get update apt-get install libcurl4-gnutls-dev libssl-dev pandoc pandoc-citeproc install.packages(\"BiocManager\")  devtools::install_github(   \"sbg/sevenbridges-r\",   repos = BiocManager::repositories(),   build_vignettes = TRUE, dependencies = TRUE )"},{"path":"/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"Seven Bridges Platform API Client and Common Workflow Language Tool\n    Builder in R","text":"sevenbridges package includes following features:","code":""},{"path":"/index.html","id":"flexible-authentication-methods","dir":"","previous_headings":"Features","what":"Flexible Authentication Methods","title":"Seven Bridges Platform API Client and Common Workflow Language Tool\n    Builder in R","text":"Multiple authentication methods support. Direct authentication: Authentication via system environment variables: Authentication via user configuration file, collect manage credentials multiple accounts across various Seven Bridges environments: Please check vignette(\"api\", package = \"sevenbridges\") technical details available authentication methods.","code":"# Direct authentication a <- Auth(token = \"your_token\", platform = \"cgc\")  # or use base url a <- Auth(token = \"your_token\", url = \"https://cgc-api.sbgenomics.com/v2\") sbg_set_env(token = \"your_token\", url = \"https://cgc-api.sbgenomics.com/v2\") a <- Auth(from = \"env\") a <- Auth(from = \"file\", profile_name = \"aws-us-username\")"},{"path":"/index.html","id":"complete-api-r-client","dir":"","previous_headings":"Features","what":"Complete API R Client","title":"Seven Bridges Platform API Client and Common Workflow Language Tool\n    Builder in R","text":"complete API R client user-friendly, object-oriented API printing support operations API requests relating users, billing, projects, files, apps, tasks. Short examples also included, shown :","code":"# Get a project by pattern-matching its name p <- a$project(\"demo\")  # Get a project by its id p <- a$project(id = \"username/demo\")  # Delete files from a project p$file(\"sample.tz\")$delete()  # Upload fies from a folder to a project and include file metadata p$upload(\"folder_path\", metadata = list(platform = \"Illumina\"))"},{"path":"/index.html","id":"task-monitoring","dir":"","previous_headings":"Features","what":"Task Monitoring","title":"Seven Bridges Platform API Client and Common Workflow Language Tool\n    Builder in R","text":"task monitoring hook allows add hook function specific task statuses monitor task. example, can opt receive email task completed specify download files produced task, shown :","code":"setTaskHook(\"completed\", function() {   tsk$download(\"~/Downloads\") }) tsk$monitor()"},{"path":"/index.html","id":"batch-tasks-support","dir":"","previous_headings":"Features","what":"Batch Tasks Support","title":"Seven Bridges Platform API Client and Common Workflow Language Tool\n    Builder in R","text":"Batch tasks metadata item.","code":"# Batch by item (tsk <- p$task_add(   name = \"RNA DE report new batch 2\",   description = \"RNA DE analysis report\",   app = rna.app$id,   batch = batch(input = \"bamfiles\"),   inputs = list(     bamfiles = bamfiles.in,     design = design.in,     gtffile = gtf.in   ) ))  # Batch by metadata. Note that input files must # have relevant metadata fields specified. (tsk <- p$task_add(   name = \"RNA DE report new batch 3\",   description = \"RNA DE analysis report\",   app = rna.app$id,   batch = batch(     input = \"fastq\",     c(\"metadata.sample_id\", \"metadata.library_id\")   ),   inputs = list(     bamfiles = bamfiles.in,     design = design.in,     gtffile = gtf.in   ) ))"},{"path":"/index.html","id":"cross-environment-support","dir":"","previous_headings":"Features","what":"Cross Environment Support","title":"Seven Bridges Platform API Client and Common Workflow Language Tool\n    Builder in R","text":"Cross-platform support Seven Bridges environments, Cancer Genomics Cloud Seven Bridges Platform either Amazon Web Services Google Cloud Platform.","code":""},{"path":"/index.html","id":"common-workflow-language-tool-interface","dir":"","previous_headings":"Features","what":"Common Workflow Language Tool Interface","title":"Seven Bridges Platform API Client and Common Workflow Language Tool\n    Builder in R","text":"Common Workflow Language (CWL) Tool interface directly describe tool R, export JSON YAML, add online project. package defines complete set CWL object, can describe tools follows:","code":"fd <- fileDef(name = \"runif.R\", content = readr::read_file(fl))  rbx <- Tool(   id = \"runif\",   label = \"runif\",   hints = requirements(     docker(pull = \"rocker/r-base\"),     cpu(1), mem(2000)   ),   requirements = requirements(fd),   baseCommand = \"Rscript runif.R\",   stdout = \"output.txt\",   inputs = list(     input(id = \"number\", type = \"integer\", position = 1),     input(id = \"min\", type = \"float\", position = 2),     input(id = \"max\", type = \"float\", position = 3)   ),   outputs = output(id = \"random\", glob = \"output.txt\") )  # Print CWL JSON rbx$toJSON(pretty = TRUE)  # Print CWL YAML rbx$toYAML()"},{"path":"/index.html","id":"utilities-for-tool-and-flow","dir":"","previous_headings":"Features","what":"Utilities for Tool and Flow","title":"Seven Bridges Platform API Client and Common Workflow Language Tool\n    Builder in R","text":"Utilities Tool Flow, example","code":"library(\"sevenbridges\")  # convert a SBG CWL JSON file t1 <- system.file(\"extdata/app\", \"tool_star.json\", package = \"sevenbridges\")  # convert json file into a Tool object t1 <- convert_app(t1)  # shows all input matrix t1$input_matrix()"},{"path":"/index.html","id":"tutorials","dir":"","previous_headings":"","what":"Tutorials","title":"Seven Bridges Platform API Client and Common Workflow Language Tool\n    Builder in R","text":"maintain 3 different sets documentation: sevenbridges-r GitHub repository (latest --date), Bioconductor release channel, Bioconductor development channel. , GitHub version linked provide latest documentation. versions, please visit Bioconductor Release version Bioconductor Development version. tutorials re-generated regularly update package GitHub.","code":""},{"path":"/index.html","id":"ide-docker-image","dir":"","previous_headings":"","what":"IDE Docker Image","title":"Seven Bridges Platform API Client and Common Workflow Language Tool\n    Builder in R","text":"tutorial IDE container , built Docker container locally can launch RStudio Shiny. launch RStudio Shiny Server Seven Bridges IDE Docker container, following: mount file system, need use --privileged fuse. Check IP Docker Machine Mac OS. browser, can see RStudio server located path http://<url>:8787/. example, 192.168.99.100 returned, visit http://192.168.99.100:8787/ Rstudio. Shiny server, app__ hosted http://<url>:3838/users/<username rstudio>/<app_dir> Shiny server. example, app called 01_hello owned user rstudio (default user) path http://<url>:3838/users/rstudio/01_hello/. develop Shiny apps Rstudio user, can login RStudio server create folder home folder called ~/ShinyApps. , can develop shiny apps folder. example, can create app called 02_text ~/ShinyApps/02_text/. Log RStudio http://<url>:8787. , try copy app home folder, follows: logged user rstudio, visit http://192.168.99.100:3838/rstudio/01_hello. able see “hello” example. Note: Generic Shiny apps can also hosted http://<url>:3838/ , particular app, http://<url>:3838/<app_dir>. Inside Docker container, ’s hosted /srv/shiny-server/.","code":"docker run  -d -p 8787:8787 -p 3838:3838 --name rstudio_shiny_server sevenbridges/sevenbridges-r docker run  --privileged -d -p 8787:8787 -p 3838:3838 --name rstudio_shiny_server sevenbridges/sevenbridges-r docker-machine ip default dir.create(\"~/ShinyApps\") file.copy(   \"/usr/local/lib/R/site-library/shiny/examples/01_hello/\",   \"~/ShinyApps/\",   recursive = TRUE )"},{"path":"/index.html","id":"faq","dir":"","previous_headings":"","what":"FAQ","title":"Seven Bridges Platform API Client and Common Workflow Language Tool\n    Builder in R","text":"best place ask questions sevenbridges package mailing list. Q: version Common Workflow Language (CWL) supported?: support draft 2 making progress supporting draft 3. Q: Python binding API?: Yes, official Python client . Recipes tutorials using Python bindings . Q: get warning messages use API R client?: warning exists Rstudio potentially bug Rstudio. ignore, use options(warn = -1) Q: still problems despite dismissing messages.: Please try use latest package GitHub update installed Bioconductor packages. usually includes recent bug fixes.","code":""},{"path":[]},{"path":"/index.html","id":"contribute","dir":"","previous_headings":"","what":"Contribute","title":"Seven Bridges Platform API Client and Common Workflow Language Tool\n    Builder in R","text":"Please file bug reports/feature requests issue page, create pull requests . Contributors read Seven Bridges Notice Contributors sign Seven Bridges Contributor Agreement submitting pull request.","code":""},{"path":"/index.html","id":"copyright","dir":"","previous_headings":"","what":"Copyright","title":"Seven Bridges Platform API Client and Common Workflow Language Tool\n    Builder in R","text":"© 2020 Seven Bridges Genomics, Inc. rights reserved. project licensed terms Apache License 2.0.","code":""},{"path":"/reference/App-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class App — App-class","title":"Class App — App-class","text":"Class App","code":""},{"path":"/reference/App-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Class App — App-class","text":"App object.","code":""},{"path":"/reference/App-class.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Class App — App-class","text":"id app id project project id name app name revision app revision raw raw cwl list, , call cwl() method","code":""},{"path":"/reference/App-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class App — App-class","text":"","code":"if (FALSE) { a <- Auth(url = \"https://api.sbgenomics.com/v2/\", token = \"your_token\") # get a public app app <- a$public_app(id = \"admin/sbg-public-data/rna-seq-alignment-star\") app$input_matrix() app$output_matrix() # get a public app app <- a$public_app(id = \"admin/sbg-public-data/star\") app$input_matrix() app$output_matrix()}"},{"path":"/reference/Auth-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class Auth — Auth-class","title":"Class Auth — Auth-class","text":"Auth object","code":""},{"path":"/reference/Auth-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Class Auth — Auth-class","text":"Every object requested Auth object action start object using cascading style. Please check vignette(\"api\") information.","code":""},{"path":"/reference/Auth-class.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Class Auth — Auth-class","text":"[character] Authentication method. \"direct\" (pass credential information arguments directly), \"env\" (read pre-set system environment variables), \"file\" (read configurations credentials file). Default \"direct\". platform [character] platform use. platform url specified, default \"cgc\" (Cancer Genomics Cloud). possible values include \"aws-us\" (Seven Bridges Platform - US), \"aws-eu\" (Seven Bridges Platform - EU), \"ali-cn\" (Seven Bridges Platform - China), \"cavatica\" (Cavatica), \"f4c\" (BioData Catalyst Powered Seven Bridges). url [character] Base URL API. Please use want specify platform platform list , also leaving platform unspecified. token [character] authentication token. sysenv_url Name system environment variable storing API base URL. default: \"SB_API_ENDPOINT\". sysenv_token Name system environment variable storing auth token. default: \"SB_AUTH_TOKEN\". config_file [character] Location user configuration file. default: \"~/.sevenbridges/credentials\". profile_name [character] Profile name user configuration file. default value \"default\". fs FS object, mount unmount file system. authorization Logical. token API auth token (FALSE) access token Seven Bridges single sign-(TRUE)?","code":""},{"path":"/reference/Auth-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class Auth — Auth-class","text":"api(   ...,   limit = getOption(\"sevenbridges\")$limit,   offset = getOption(\"sevenbridges\")$offset,   fields = NULL,   complete = FALSE ) call returns API paths, pass arguments api() function input token url automatically billing(id = NULL, breakdown = FALSE, ...) id provided, call returns list paths used access billing information via API. else, call lists billing groups, including groups pending disabled. breakdown = TRUE, call returns breakdown spending per-project billing group specified billing_group. project billing group associated , information shown tasks run, including initiating user (runner), start end times, cost. bulk_file_copy(file_ids, project, ...) Copy files projects batch. bulk_file_delete(file_ids, ...) Delete multiple files. bulk_file_edit(...) Edit details multiple files (preserving omitted fields). bulk_file_get(file_ids, ...) Get details multiple files. bulk_file_update(...) Update details multiple files (removing omitted fields). bulk_task_get(task_ids, ...) Get details multiple tasks. bulk_volume_export(...) Bulk export volumes. bulk_volume_get_export(...) Get details bulk export job. bulk_volume_get_import(...) Get details bulk import job. bulk_volume_import(...) Bulk import volumes. division(id = NULL, ...) List divisions get details division. file(   name = NULL,   id = NULL,   project = NULL,   exact = FALSE,   detail = FALSE,   metadata = list(),   origin.task = NULL,   tag = NULL,   complete = FALSE,   search.engine = c(\"server\", \"brute\"),   ... ) call returns list files specified project can access. file, call returns: 1) ID 2) filename project specified query parameter call. invoice(id = NULL, ...) id provided, call returns list invoices, information , including whether invoice pending billing period covers. call returns information available invoices, unless use query parameter bg_id specify ID particular billing group, case return invoice incurred billing group . id provided, call retrieves information selected invoice, including costs analysis storage, invoice period. project(   name = NULL,   id = NULL,   index = NULL,   ignore.case = TRUE,   exact = FALSE,   owner = NULL,   detail = FALSE,   ... ) id name provided, call returns list projects member . project's project_id URL platform returned. name id provided, match search list. project_new(   name = NULL,   billing_group_id = NULL,   description = name,   tags = list(),   type = \"v2\",   locked = FALSE,   use_interruptible_instances = FALSE,   ... ) Create new projects, required parameters: name, billing_group_id, optional parameteres: tags, description, type, settings. project_owner(owner = NULL, ...) List projects owned accessible particular user. project's ID URL returned. rate_limit(...) call returns information current rate limit. number API calls can make one hour. send_feedback(   text,   type = c(\"idea\", \"thought\", \"problem\"),   referrer = NULL,   ... ) Send feedback Seven Bridges. user(username = NULL, ...) call returns information authenticated user. volume(   name = NULL,   id = NULL,   index = NULL,   ignore.case = TRUE,   exact = FALSE,   detail = FALSE,   ... ) id name provided, call returns list volumes member . name id provided, match search list.","code":""},{"path":"/reference/Auth-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class Auth — Auth-class","text":"","code":"# Direct authentication (default) # replace with your auth token token <- \"your_token\" a <- Auth(platform = \"cgc\", token = token) #> Using platform: cgc if (FALSE) { # Authentication with environment variables # This will read system environments variables # `SB_API_ENDPOINT` and `SB_AUTH_TOKEN` by default a <- Auth(from = \"env\")  # Authentication with user configuration file # This will load profile `default` from config # file `~/.sevenbridges/credentials` by default a <- Auth(from = \"file\") }"},{"path":"/reference/Binding.html","id":null,"dir":"Reference","previous_headings":"","what":"Binding — Binding-class","title":"Binding — Binding-class","text":"Binding","code":""},{"path":"/reference/Binding.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Binding — Binding-class","text":"loadContents [logical] applies type File. Read first 64 KiB text file place \"contents\" field file object manipulation expressions. secondaryFiles [] applies type File. Describes files must included alongside primary file. value Expression, context expression input output File parameter binding applies. value string, specifies following pattern applied primary file: string begins one caret characters, caret, remove last file extension path (last period . following characters). file extensions, path unchanged.  Append remainder string end file path.","code":""},{"path":"/reference/Binding.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Binding — Binding-class","text":"","code":"Binding(loadContents = TRUE, secondaryFiles = \"./test.txt\") #> loadContents: yes #> secondaryFiles: ./test.txt #>"},{"path":"/reference/CCBList.html","id":null,"dir":"Reference","previous_headings":"","what":"characterORCommandLineBindingList Class — CCBList","title":"characterORCommandLineBindingList Class — CCBList","text":"characterORCommandLineBindingList Class","code":""},{"path":"/reference/CCBList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"characterORCommandLineBindingList Class — CCBList","text":"","code":"CCBList(...)"},{"path":"/reference/CCBList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"characterORCommandLineBindingList Class — CCBList","text":"... element list element.","code":""},{"path":"/reference/CCBList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"characterORCommandLineBindingList Class — CCBList","text":"CCBList","code":""},{"path":"/reference/CCBList.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"characterORCommandLineBindingList Class — CCBList","text":"","code":"CCBList(\"-o output.bam\") #> [[1]] #> [1] \"-o output.bam\""},{"path":"/reference/CWL.html","id":null,"dir":"Reference","previous_headings":"","what":"Class CWL — CWL-class","title":"Class CWL — CWL-class","text":"Define CWL class generic methods, fields defeind.","code":""},{"path":"/reference/CWL.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class CWL — CWL-class","text":"getFields(values) Return fields list, used following conversion, assume value primitive type. toJSON(...) Covert object JSON toList(...) Convert object list simple data types toYAML(...) Covert object YAML","code":""},{"path":"/reference/CWL.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class CWL — CWL-class","text":"","code":"# no fields, only to provide methods to be extended x <- CWL()"},{"path":"/reference/CommandInputParameter-class.html","id":null,"dir":"Reference","previous_headings":"","what":"CommandInputParameter Class — CommandInputParameter-class","title":"CommandInputParameter Class — CommandInputParameter-class","text":"input parameter CommandLineTool.","code":""},{"path":"/reference/CommandInputParameter-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CommandInputParameter Class — CommandInputParameter-class","text":"","code":"ipl <- InputParameterList(   CommandInputParameter(     id = \"BAM\", type = \"File\",     label = \"input bam\",     description = \"input bam\",     inputBinding = CommandLineBinding(       position = 1L     )   ),   CommandInputParameter(     id = \"level\", type = \"Integer\",     label = \"Compression level\",     description = \"Compression level\",     inputBinding = CommandLineBinding(       position = 2L,       prefix = \"-l\"     )   ) )"},{"path":"/reference/CommandInputSchema-class.html","id":null,"dir":"Reference","previous_headings":"","what":"CommandInputSchema Class — CommandInputSchema-class","title":"CommandInputSchema Class — CommandInputSchema-class","text":"CommandInputSchema Class","code":""},{"path":"/reference/CommandInputSchema-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CommandInputSchema Class — CommandInputSchema-class","text":"","code":"CommandInputSchema() #> type: #> - '' #> fields: [] #> items: #>   field: items #>   className: ANY #> values: #>   field: values #>   className: ANY #> inputBinding: {} #>"},{"path":"/reference/CommandLineBinding-class.html","id":null,"dir":"Reference","previous_headings":"","what":"CommandLineBinding Class — CommandLineBinding-class","title":"CommandLineBinding Class — CommandLineBinding-class","text":"listed inputBinding input schema, term \"value\" refers corresponding value input object. binding objects listed CommandLineTool.arguments, term \"value\" refers effective value evaluating valueFrom.","code":""},{"path":"/reference/CommandLineBinding-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"CommandLineBinding Class — CommandLineBinding-class","text":"binding behavior building command line depends data type value. mismatch type described input schema effective value, resulting expression evaluation, implementation must use data type effective value. characterAdd prefix string command line. numericAdd prefix decimal representation command line. logicalIf true, add prefix command line. false, add nothing. FileAdd prefix value File.path command line. *ArrayIf itemSeparator specified, add prefix join   array single string itemSeparator separating items.   Otherwise add prefix recursively add individual elements. *objectAdd prefix , recursively add object fields inputBinding specified. nullAdd nothing.","code":""},{"path":"/reference/CommandLineBinding-class.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"CommandLineBinding Class — CommandLineBinding-class","text":"position [integer] sorting key. Default position 0. prefix [character] Command line prefix add value. separate [logical] true (default) prefix value must added separate command line arguments; false, prefix value must concatenated single command line argument. itemSeparator [character] Join array elements single string elements separated itemSeparator. valueFrom [characterOrExpression] valueFrom constant string value, use value apply binding rules . valueFrom expression, evaluate expression yield actual value use build command line apply binding rules . inputBinding associated input parameter, \"context\" expression value input parameter. binding part CommandLineTool.arguments field, valueFrom field required.","code":""},{"path":"/reference/CommandLineBinding-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CommandLineBinding Class — CommandLineBinding-class","text":"","code":"CommandLineBinding(position = 1L, prefix = \"-l\") #> position: 1 #> prefix: -l #> separate: yes #>"},{"path":"/reference/CommandLineTool.html","id":null,"dir":"Reference","previous_headings":"","what":"CommandLineTool Class — CommandLineTool-class","title":"CommandLineTool Class — CommandLineTool-class","text":"CommandLineTool process process implementation executing non-interactive application POSIX environment. help accomodate enormous variety syntax semantics input, runtime environment, invocation, output arbitrary programs, CommandLineTool provides concept \"input binding\" describe translate input parameters actual program invocation, \"output binding\" describe generate output parameters program output.","code":""},{"path":"/reference/CommandLineTool.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"CommandLineTool Class — CommandLineTool-class","text":"baseCommand (character) Specifies program execute. value array, first element program execute, subsequent elements placed beginning command line prior command line bindings. program includes path separator character must absolute path, otherwise error. program include path separator, search $PATH variable runtime environment find absolute path executable. arguments [characterORCommandLineBinding] Command line bindings directly associated input parameters. stdin [characterORExpression] path file whose contents must piped command's standard input stream. stdout [characterORExpression] Capture command's standard output stream file written designated output directory. stdout string, specifies file name use.stdout expression, expression evaluated must return string file name use capture stdout. return value string, resulting path contains illegal characters (path separator /) error. successCodes [integer] Exit codes indicate process completed successfully. temporaryFailCodes [integer] Exit codes indicate process failed due possibly temporary condition, excuting process runtime environment inputs may produce different results. permanentFailCodes [integer] Exit codes indicate process failed due permanent logic error, excuting process runtime environment inputs expected always fail.","code":""},{"path":"/reference/CommandLineTool.html","id":"input-binding","dir":"Reference","previous_headings":"","what":"Input binding","title":"CommandLineTool Class — CommandLineTool-class","text":"tool command line built applying command line bindings input object. Bindings listed either part input parameter using inputBinding field, separately using arguments field CommandLineTool. algorithm build command line follows. algorithm, sort key list consisting one numeric string elements. Strings sorted lexicographically based UTF-8 encoding. Collect CommandLineBinding objects arguments. Assign sorting key [position, ] position CommandLineBinding.position index arguments list. Collect CommandLineBinding objects inputs schema associate values input object. input type record, array, map, recursively walk schema input object, collecting nested CommandLineBinding objects associating values input object. Assign sorting key leaf binding object appending nested position fields together array index, map key data nesting level. two bindings position, tie must broken using lexographic ordering field parameter name immediately containing binding. Sort elements using assigned sorting keys. Numeric entries sort strings. sorted order, apply rules defined CommandLineBinding convert bindings actual command line elements. Insert elements baseCommand beginning command line.","code":""},{"path":"/reference/CommandLineTool.html","id":"runtime-environment","dir":"Reference","previous_headings":"","what":"Runtime environment","title":"CommandLineTool Class — CommandLineTool-class","text":"files listed input object must made available runtime environment. implementation may use shared distributed file system transfer files via explicit download. Implementations may choose provide access files explicitly specified input object process requirements. Output files produced tool execution must written designated output directory. initial current working directory executing tool must designated output directory. TMPDIR environment variable must set runtime environment designated temporary directory. files written designated temporary directory may deleted workflow platform tool invocation complete. implementation may forbid tool writing location runtime environment file system designated temporary directory designated output directory. implementation may provide read-input files, disallow -place update input files. standard input stream standard output stream may redirected described stdin stdout fields.","code":""},{"path":"/reference/CommandLineTool.html","id":"extensions","dir":"Reference","previous_headings":"","what":"Extensions","title":"CommandLineTool Class — CommandLineTool-class","text":"DockerRequirement, CreateFileRequirement, EnvVarRequirement, available standard extensions core command line tool semantics defining runtime environment.","code":""},{"path":"/reference/CommandLineTool.html","id":"execution","dir":"Reference","previous_headings":"","what":"Execution","title":"CommandLineTool Class — CommandLineTool-class","text":"command line built runtime environment created, actual tool executed. standard error stream standard output stream (unless redirected setting stdout) may captured platform logging facilities storage reporting. Tools may multithreaded spawn child processes; however, parent process exits, tool considered finished regardless whether detached child processes still running. Tools must require kind console, GUI, web based user interaction order start run completion. exit code process indicates process completed successfully. convention, exit code zero treated success non-zero exit codes treated failure. may customized providing fields successCodes, temporaryFailCodes, permanentFailCodes. implementation may choose default unspecified non-zero exit codes either temporaryFailure permanentFailure.","code":""},{"path":"/reference/CommandLineTool.html","id":"output-binding","dir":"Reference","previous_headings":"","what":"Output binding","title":"CommandLineTool Class — CommandLineTool-class","text":"output directory contains file called \"cwl.output.json\", file must loaded used output object. Otherwise, output object must generated walking parameters listed outputs applying output bindings tool output. Output bindings associated output parameters using outputBinding field. See CommandOutputBinding details.","code":""},{"path":"/reference/CommandLineTool.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CommandLineTool Class — CommandLineTool-class","text":"","code":"ipl <- InputParameterList(   InputParameter(     id = \"BAM\", type = \"File\",     label = \"input bam\",     description = \"input bam\",     inputBinding = CommandLineBinding(       position = 1L     )   ),   InputParameter(     id = \"level\", type = \"Integer\",     label = \"Compression level\",     description = \"Compression level\",     inputBinding = CommandLineBinding(       position = 2L,       prefix = \"-l\"     )   ) )  clt <- CommandLineTool(inputs = ipl, baseCommand = \"samtools sort\")"},{"path":"/reference/CommandOutputBinding-class.html","id":null,"dir":"Reference","previous_headings":"","what":"CommandOutputBinding Class — CommandOutputBinding-class","title":"CommandOutputBinding Class — CommandOutputBinding-class","text":"Describes generate output parameter based files produced CommandLineTool. output parameter generated applying operations following order: glob, loadContents, outputEval.","code":""},{"path":"/reference/CommandOutputBinding-class.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"CommandOutputBinding Class — CommandOutputBinding-class","text":"glob [characterORExpression] Find files relative output directory, using POSIX glob(3) pathname matching. provided array, match patterns array. provided expression, expression must return string array strings, evaluated glob pattern. files actually exist matched returned. outputEval [Expression] Evaluate expression generate output value. glob specified, script context array containing files matched. Additionally, loadContents true, file objects include first 64 KiB file contents contents field.","code":""},{"path":"/reference/CommandOutputBinding-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CommandOutputBinding Class — CommandOutputBinding-class","text":"","code":"CommandOutputBinding(glob = \"*.bam\") #> glob: '*.bam' #>"},{"path":"/reference/CommandOutputParameter-class.html","id":null,"dir":"Reference","previous_headings":"","what":"CommandOutputParameter Class — CommandOutputParameter-class","title":"CommandOutputParameter Class — CommandOutputParameter-class","text":"CommandOutputParameter Class","code":""},{"path":"/reference/CommandOutputParameter-class.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"CommandOutputParameter Class — CommandOutputParameter-class","text":"outputBinding [CommandOutputBinding] Describes handle concrete outputs process step (files created program) describe process output parameter.","code":""},{"path":"/reference/CommandOutputParameter-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CommandOutputParameter Class — CommandOutputParameter-class","text":"","code":"CommandOutputParameter(outputBinding = CommandOutputBinding(glob = \"*.bam\")) #> type: #> - '' #> streamable: no #> id: '#' #> outputBinding: #>   glob: '*.bam' #>"},{"path":"/reference/CommandOutputSchema-class.html","id":null,"dir":"Reference","previous_headings":"","what":"CommandOutputSchema — CommandOutputSchema-class","title":"CommandOutputSchema — CommandOutputSchema-class","text":"CommandOutputSchema","code":""},{"path":"/reference/CommandOutputSchema-class.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"CommandOutputSchema — CommandOutputSchema-class","text":"outputBinding [CommandOutputBinding] Describes handle concrete outputs process step (files created program) describe process output parameter.","code":""},{"path":"/reference/CommandOutputSchema-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CommandOutputSchema — CommandOutputSchema-class","text":"","code":"CommandOutputSchema() #> type: #> - '' #> fields: [] #> items: #>   field: items #>   className: ANY #> values: #>   field: values #>   className: ANY #> outputBinding: {} #>"},{"path":"/reference/DSCList.html","id":null,"dir":"Reference","previous_headings":"","what":"DSC list — DSCList","title":"DSC list — DSCList","text":"Contains DataypeSingleEnum, Schema, character","code":""},{"path":"/reference/DSCList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DSC list — DSCList","text":"","code":"DSCList(...)"},{"path":"/reference/DSCList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DSC list — DSCList","text":"... element list element.","code":""},{"path":"/reference/DSCList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DSC list — DSCList","text":"DSCList","code":""},{"path":"/reference/DSCList.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DSC list — DSCList","text":"","code":"DSCList(\"test\", DatatypeEnum(), Schema()) #> [[1]] #> [1] \"test\" #> [[2]] #> An object of class \"DatatypeSingleEnum\" #> [1] \"null\" #> Slot \"levels\": #>  [1] \"null\"    \"boolean\" \"int\"     \"long\"    \"float\"   \"double\"  \"bytes\"   #>  [8] \"string\"  \"record\"  \"enum\"    \"array\"   \"map\"     \"File\"    #>  #> [[3]] #> type: #> - '' #> fields: [] #> items: #>   field: items #>   className: ANY #> values: #>   field: values #>   className: ANY #>"},{"path":"/reference/Enum.html","id":null,"dir":"Reference","previous_headings":"","what":"Pre-defiend enums — PrimitiveSingleEnum-class","title":"Pre-defiend enums — PrimitiveSingleEnum-class","text":"Please check cwl:::.CWL.Pritimive, cwl:::.CWL.Complex.","code":""},{"path":"/reference/Enum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pre-defiend enums — PrimitiveSingleEnum-class","text":"","code":"PrimitiveEnum() #> An object of class \"PrimitiveSingleEnum\" #> [1] \"null\" #> Slot \"levels\": #> [1] \"null\"    \"boolean\" \"int\"     \"long\"    \"float\"   \"double\"  \"bytes\"   #> [8] \"string\"  #>  PrimitiveEnum(\"boolean\") #> An object of class \"PrimitiveSingleEnum\" #> [1] \"boolean\" #> Slot \"levels\": #> [1] \"null\"    \"boolean\" \"int\"     \"long\"    \"float\"   \"double\"  \"bytes\"   #> [8] \"string\"  #>  ComplexEnum(\"record\") #> An object of class \"ComplexSingleEnum\" #> [1] \"record\" #> Slot \"levels\": #> [1] \"record\" \"enum\"   \"array\"  \"map\"    #>  DatatypeEnum(\"map\") #> An object of class \"DatatypeSingleEnum\" #> [1] \"map\" #> Slot \"levels\": #>  [1] \"null\"    \"boolean\" \"int\"     \"long\"    \"float\"   \"double\"  \"bytes\"   #>  [8] \"string\"  \"record\"  \"enum\"    \"array\"   \"map\"     \"File\"    #>"},{"path":"/reference/Expression-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Expression Class — Expression-class","title":"Expression Class — Expression-class","text":"Define expression evaluated used modify behavior tool workflow. See Expressions information expressions ExpressionEngineRequirement information define expression engine.","code":""},{"path":"/reference/Expression-class.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Expression Class — Expression-class","text":"engine (JsonPointerORcharacter) Either cwl:JsonPointer reference ExpressionEngineRequirement defining engine use. script (character) code executed expression engine.","code":""},{"path":"/reference/Expression-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expression Class — Expression-class","text":"","code":"Expression(engine = \"#cwl-js-engine\", script = \"$job.inputs['threads']\") #> engine: '#cwl-js-engine' #> script: $job.inputs['threads'] #> class: Expression #>"},{"path":"/reference/ExpressionTool-class.html","id":null,"dir":"Reference","previous_headings":"","what":"ExpressionTool Class — ExpressionTool-class","title":"ExpressionTool Class — ExpressionTool-class","text":"Execute expression process step.","code":""},{"path":"/reference/ExpressionTool-class.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"ExpressionTool Class — ExpressionTool-class","text":"expression (Expression) expression execute. expression must return JSON object matches output parameters ExpressionTool.","code":""},{"path":"/reference/ExpressionTool-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ExpressionTool Class — ExpressionTool-class","text":"","code":"ExpressionTool(   expression =     Expression(       engine = \"cwl:JsonPointer\",       script = \"$job.inputs['threads']\"     ) ) #> id: '#' #> inputs: [] #> outputs: [] #> requirements: [] #> hints: [] #> class: ExpressionTool #> expression: #>   engine: cwl:JsonPointer #>   script: $job.inputs['threads'] #>   class: Expression #>"},{"path":"/reference/FS-class.html","id":null,"dir":"Reference","previous_headings":"","what":"FS class — FS-class","title":"FS class — FS-class","text":"FS class","code":""},{"path":"/reference/FS-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FS class — FS-class","text":"server_address placehoder api_address placehoder vsfs_jar placehoder cache_dir placehoder cache_size placeholder project_id placeholder","code":""},{"path":"/reference/FS-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"FS class — FS-class","text":"file(id = NULL) given project id, show files mount(   mount_point = NULL,   project_id = NULL,   ignore.stdout = TRUE,   sudo = TRUE,   ... ) mount specific project project_id provided, otherwise mount projects path(id = NULL) List path mounted projects, easy copy/paste file path. project id provoded, show project path files path. unmount(mount_cmd = NULL, project_id = NULL, ...) unmount project project_id provided, otherwise unmount ","code":""},{"path":"/reference/File-class.html","id":null,"dir":"Reference","previous_headings":"","what":"FileList Class — FileList","title":"FileList Class — FileList","text":"FileList Class File Class","code":""},{"path":"/reference/File-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FileList Class — FileList","text":"","code":"FileList(...)"},{"path":"/reference/File-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FileList Class — FileList","text":"... element list element.","code":""},{"path":"/reference/File-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FileList Class — FileList","text":"File class generator","code":""},{"path":"/reference/File-class.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"FileList Class — FileList","text":"class (character) Must File indicate object describes file. path (character) path file. checksum [character] Optional hash code validating file integrity. Currently must form \"sha1$ + hexidecimal string\" using SHA-1 algorithm. size [numeric] Optional file size. secondaryFile [FileList] list additional files associated primary file must transferred alongside primary file. Examples include indexes primary file, external references must included loading primary document. file object listed secondaryFiles may include secondaryFiles rules apply.","code":""},{"path":"/reference/File-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FileList Class — FileList","text":"","code":"library(jsonlite) #> Warning: package ‘jsonlite’ was built under R version 4.0.5 library(yaml) #> Warning: package ‘yaml’ was built under R version 4.0.5 f1 <- File() f2 <- File(path = \"./out.bam\", checksum = \"test\",            size = 3L, secondaryFile = FileList(File(path = \"./out.bai\"))) fl <- FileList(f1, f2) asList(fl) #> [[1]] #> [[1]]$class #> [x] \"File\" #>  #> [[1]]$secondaryFile #> list() #>  #>  #> [[2]] #> [[2]]$class #> [x] \"File\" #>  #> [[2]]$path #> [x] \"./out.bam\" #>  #> [[2]]$checksum #> [x] \"test\" #>  #> [[2]]$size #> [x] 3 #>  #> [[2]]$secondaryFile #> [[2]]$secondaryFile[[1]] #> [[2]]$secondaryFile[[1]]$class #> [x] \"File\" #>  #> [[2]]$secondaryFile[[1]]$path #> [x] \"./out.bai\" #>  #> [[2]]$secondaryFile[[1]]$secondaryFile #> list() #>  #>  #>  #>  f1 #> class: File #> secondaryFile: [] #>  f2 #> class: File #> path: ./out.bam #> checksum: test #> size: 3 #> secondaryFile: #> - class: File #>   path: ./out.bai #>   secondaryFile: [] #>  fl #> [[1]] #> class: File #> secondaryFile: [] #>  #> [[2]] #> class: File #> path: ./out.bam #> checksum: test #> size: 3 #> secondaryFile: #> - class: File #>   path: ./out.bai #>   secondaryFile: [] #>"},{"path":"/reference/Files-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class Files — Files-class","title":"Class Files — Files-class","text":"Class Files","code":""},{"path":"/reference/Files-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class Files — Files-class","text":"","code":"FilesList(...)"},{"path":"/reference/Files-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class Files — Files-class","text":"... one Files objects","code":""},{"path":"/reference/Files-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Class Files — Files-class","text":"Files object","code":""},{"path":"/reference/Files-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Class Files — Files-class","text":"Files (\"s\") class usally returned API call returns Files. group Files defined FilesList. Users usually need construct Files FilesList manually, generated API call time.","code":""},{"path":"/reference/Files-class.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Class Files — Files-class","text":"id character used file id name string used file name size file size project project id , returned API call, usually return project id stored object. created_on date created modified_on date modified storage list storage type origin list origin tags list tags metadata list metadata associated file url file download url parent parent folder ID type \"FILE\" \"FOLDER\" description file description","code":""},{"path":"/reference/Files-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class Files — Files-class","text":"add_tag(x, ...) add new tags keeping old tags copy_to(project = NULL, name = NULL) copy file project (id) new name copy_to_folder(folder_id, name_new = NULL, ...) Copy file folder. create_folder(name, ...) Create new folder parent folder. create_marker(   name = NULL,   start = NULL,   end = NULL,   chromosome = NULL,   private = TRUE,   ... ) Create marker. download(destfile, ..., method = \"curl\") see `help(download.file)` options get_parent_folder() Get parent folder object current file/folder. get_parent_folder_id() Get parent folder ID current file/folder. list_folder_contents(type = c(\"file\", \"folder\"), ...) List folder contents (return files, folders, ). marker(id = NULL, ...) List markers available file get details marker. meta() get metadata file move_to_folder(folder_id, name_new = NULL, ...) Move file folder. setMeta(..., overwrite = FALSE) Set metadata provided list, overwrite set TRUE, overwrites metadata. set_meta(..., overwrite = FALSE) Set metadata provided list, overwrite set TRUE, overwrites metadata. set_tag(x = NULL, overwrite = TRUE, ...) set tag file, tag need list vector tag() get tag file typeof() Get object type (\"file\" \"folder\"). update(name = NULL, metadata = NULL, tags = NULL) call updates name, full set metadata, tags specified file.","code":""},{"path":"/reference/Files-class.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Class Files — Files-class","text":"sevenbridges package version <= 1.5.4, Files class inherited File class defined CWL. avoid confusion, current implementation, defined separately coupled anymore.","code":""},{"path":"/reference/Files-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class Files — Files-class","text":"","code":"Files(id = \"test_id\", name = \"test.bam\") #> == Files == #> id : test_id #> name : test.bam"},{"path":"/reference/Flow.html","id":null,"dir":"Reference","previous_headings":"","what":"Build workflow — SBGWorkflow-class","title":"Build workflow — SBGWorkflow-class","text":"Build workflow","code":""},{"path":"/reference/Flow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build workflow — SBGWorkflow-class","text":"","code":"Flow(   ...,   graph = TRUE,   x.width = 1000,   y.width = 400,   x.start = 100,   y.start = 200,   canvas_zoom = 1,   canvas_x = 40,   canvas_y = 130 )  # S4 method for Tool,Tool +(e1, e2)  # S4 method for WorkflowStepList,Tool +(e1, e2)  # S4 method for WorkflowStepList,WorkflowStepList +(e1, e2)  # S4 method for App,App +(e1, e2)  # S4 method for WorkflowStepList,App +(e1, e2)  e1 %>>% e2  # S4 method for Tool,Tool %&gt;&gt;%(e1, e2)  # S4 method for Workflow,Tool %&gt;&gt;%(e1, e2)  # S4 method for Workflow,Workflow %&gt;&gt;%(e1, e2)  # S4 method for App,App %&gt;&gt;%(e1, e2)  # S4 method for Workflow,App %&gt;&gt;%(e1, e2)"},{"path":"/reference/Flow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build workflow — SBGWorkflow-class","text":"... extra arguments passed SBGWorkflow graph add graph coordinates , used flow visualization Seven Bridges platforms. x.width x scale width y.width y scale width x.start node x start point flow y.start node y start point flow canvas_zoom zoom factor canvas_x canvas x canvas_y canvas y e1 either Tool App Workflow object e2 either Tool App Workflow object","code":""},{"path":"/reference/Flow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build workflow — SBGWorkflow-class","text":"SBGWorkflow object.","code":""},{"path":"/reference/Flow.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Build workflow — SBGWorkflow-class","text":"copy_obj() hack make copy reference cwl object get_input(ids, force = FALSE) get input pure input id steps get_input_exposed() exposed input id file get_input_node() get input file nodes id get_input_port() show included port inputs get_output(ids, force = FALSE) get output pure output id steps get_output_node() get output file nodes id get_required() show flow required input id types get_step(name = NULL, id = NULL) get step object name id, name support pattern match get_tool(name = NULL, id = NULL) get tool object name id, name support pattern match input_id() show input id input_matrix(   new.order = c(\"id\", \"label\", \"type\", \"required\", \"prefix\", \"fileTypes\"),   required = NULL ) return matrix input parameters, default, following order id, label, type, required, prefix, fileTypes. new.order accept names column want print, field inputs. set NULL, prints fields. required = TRUE, print required field. input_type() Show vector flow input type, names input id. link_map() show table linked nodes linked_input_id() input id linked output linked_output_id() output id linked input list_tool() list tools included flow output_id() show output id output_matrix(new.order = c(\"id\", \"label\", \"type\", \"fileTypes\")) return matrix output parameters, default, following order id, label, type, fileTypes. new.order accept names column want print, field outputs. set NULL, prints fields. required = TRUE, print required field. output_type() Show vector flow output type, names output id. run(run_inputs = list(), engine = c(\"bunny\", \"rabix\", \"cwlrun\")) Run tool inputs locally. Engines supported: bunny, rabix, cwlrun. Inputs accept list JSON. set_batch(input = NULL, criteria = NULL, type = c(\"ITEM\", \"CRITERIA\")) Set flow input node batch mode, now required execute batch task batch--enabled flow. set_flow_input(iid = NULL, add = TRUE) Expose tool input node flow input, default additative, add = FALSE, overwrite made provided id inputs flow. set_flow_output(oid = NULL, add = TRUE) Expose tool output node flow output, default additative, add = FALSE, overwrite made provided id outputs flow. set_input_port(ids, include = TRUE) set included port provided input id(s) set_required(ids, required = TRUE) Set input node required (TRUE) required (FALSE) require full input id (tool id prefix) #STAR.alignIntronMax step_input_id(full = FALSE) Show step input id, default names tool id. full = TRUE, show full name names vector type. step_output_id(full = FALSE) Show step output id, default names tool id. full = TRUE, show full name names vector type.","code":""},{"path":"/reference/Flow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build workflow — SBGWorkflow-class","text":"","code":"f1 <- system.file(\"extdata/app\", \"flow_star.json\", package = \"sevenbridges\") f1 <- convert_app(f1) # input matrix f1$input_matrix() #>                                id                    label    type required #> 1                    #sjdbGTFfile              sjdbGTFfile File...    FALSE #> 2                          #fastq                    fastq File...     TRUE #> 3               #genomeFastaFiles         genomeFastaFiles    File     TRUE #> 4 #sjdbGTFtagExonParentTranscript      Exons' parents name  string    FALSE #> 5       #sjdbGTFtagExonParentGene                Gene name  string    FALSE #> 6          #winAnchorMultimapNmax         Max loci anchors     int    FALSE #> 7             #winAnchorDistNbins Max bins between anchors     int    FALSE #>   fileTypes #> 1      null #> 2      null #> 3      null #> 4      null #> 5      null #> 6      null #> 7      null # by name f1$input_matrix(c(\"id\", \"type\", \"required\", \"link_to\")) #>                                id    type required #> 1                    #sjdbGTFfile File...    FALSE #> 2                          #fastq File...     TRUE #> 3               #genomeFastaFiles    File     TRUE #> 4 #sjdbGTFtagExonParentTranscript  string    FALSE #> 5       #sjdbGTFtagExonParentGene  string    FALSE #> 6          #winAnchorMultimapNmax     int    FALSE #> 7             #winAnchorDistNbins     int    FALSE #>                                                 link_to #> 1 #STAR_Genome_Generate.sjdbGTFfile | #STAR.sjdbGTFfile #> 2                     #SBG_FASTQ_Quality_Detector.fastq #> 3                #STAR_Genome_Generate.genomeFastaFiles #> 4  #STAR_Genome_Generate.sjdbGTFtagExonParentTranscript #> 5        #STAR_Genome_Generate.sjdbGTFtagExonParentGene #> 6                           #STAR.winAnchorMultimapNmax #> 7                              #STAR.winAnchorDistNbins # return only required f1$input_matrix(required = TRUE) #>                  id            label    type required fileTypes #> 2            #fastq            fastq File...     TRUE      null #> 3 #genomeFastaFiles genomeFastaFiles    File     TRUE      null # return everything f1$input_matrix(NULL) #>                                id    type required fileTypes #> 1                    #sjdbGTFfile File...    FALSE      null #> 2                          #fastq File...     TRUE      null #> 3               #genomeFastaFiles    File     TRUE      null #> 4 #sjdbGTFtagExonParentTranscript  string    FALSE      null #> 5       #sjdbGTFtagExonParentGene  string    FALSE      null #> 6          #winAnchorMultimapNmax     int    FALSE      null #> 7             #winAnchorDistNbins     int    FALSE      null #>                      label                       category stageInput streamable #> 1              sjdbGTFfile                           null       null      FALSE #> 2                    fastq                           null       null      FALSE #> 3         genomeFastaFiles                           null       null      FALSE #> 4      Exons' parents name Splice junctions db parameters       null      FALSE #> 5                Gene name Splice junctions db parameters       null      FALSE #> 6         Max loci anchors      Windows, Anchors, Binning       null      FALSE #> 7 Max bins between anchors      Windows, Anchors, Binning       null      FALSE #>    sbg.x    sbg.y sbg.includeInPorts #> 1 160.50 195.0833                 NA #> 2 164.25 323.7500               TRUE #> 3 167.75 469.9999                 NA #> 4 200.00 350.0000                 NA #> 5 200.00 400.0000                 NA #> 6 200.00 450.0000                 NA #> 7 200.00 500.0000                 NA #>                                                                                          description #> 1                                                                                               <NA> #> 2                                                                                               <NA> #> 3                                                                                               <NA> #> 4                                                  Tag name to be used as exons' transcript-parents. #> 5                                                        Tag name to be used as exons' gene-parents. #> 6                                          Max number of loci anchors are allowed to map to (int>0). #> 7 Max number of bins between two anchors that allows aggregation of anchors into one window (int>0). #>   sbg.toolDefaultValue                                               link_to #> 1                 <NA> #STAR_Genome_Generate.sjdbGTFfile | #STAR.sjdbGTFfile #> 2                 <NA>                     #SBG_FASTQ_Quality_Detector.fastq #> 3                 <NA>                #STAR_Genome_Generate.genomeFastaFiles #> 4        transcript_id  #STAR_Genome_Generate.sjdbGTFtagExonParentTranscript #> 5              gene_id        #STAR_Genome_Generate.sjdbGTFtagExonParentGene #> 6                   50                           #STAR.winAnchorMultimapNmax #> 7                    9                              #STAR.winAnchorDistNbins # return a output matrix with more informtion f1$output_matrix() #>                              id                       label    type fileTypes #> 1               #unmapped_reads              unmapped_reads File...      null #> 2  #transcriptome_aligned_reads transcriptome_aligned_reads    File      null #> 3             #splice_junctions            splice_junctions    File      null #> 4               #reads_per_gene              reads_per_gene    File      null #> 5                    #log_files                   log_files File...      null #> 6           #chimeric_junctions          chimeric_junctions    File      null #> 7          #intermediate_genome         intermediate_genome    File      null #> 8          #chimeric_alignments         chimeric_alignments    File      null #> 9                   #sorted_bam                  sorted_bam    File      null #> 10                      #result                      result    File      null # return only a few fields f1$output_matrix(c(\"id\", \"type\")) #>                              id    type #> 1               #unmapped_reads File... #> 2  #transcriptome_aligned_reads    File #> 3             #splice_junctions    File #> 4               #reads_per_gene    File #> 5                    #log_files File... #> 6           #chimeric_junctions    File #> 7          #intermediate_genome    File #> 8          #chimeric_alignments    File #> 9                   #sorted_bam    File #> 10                      #result    File # return everything f1$output_matrix(NULL) #>                              id                       label    type fileTypes #> 1               #unmapped_reads              unmapped_reads File...      null #> 2  #transcriptome_aligned_reads transcriptome_aligned_reads    File      null #> 3             #splice_junctions            splice_junctions    File      null #> 4               #reads_per_gene              reads_per_gene    File      null #> 5                    #log_files                   log_files File...      null #> 6           #chimeric_junctions          chimeric_junctions    File      null #> 7          #intermediate_genome         intermediate_genome    File      null #> 8          #chimeric_alignments         chimeric_alignments    File      null #> 9                   #sorted_bam                  sorted_bam    File      null #> 10                      #result                      result    File      null #>    required                             source streamable sbg.includeInPorts #> 1     FALSE               #STAR.unmapped_reads      FALSE               TRUE #> 2     FALSE  #STAR.transcriptome_aligned_reads      FALSE               TRUE #> 3     FALSE             #STAR.splice_junctions      FALSE               TRUE #> 4     FALSE               #STAR.reads_per_gene      FALSE               TRUE #> 5     FALSE                    #STAR.log_files      FALSE               TRUE #> 6     FALSE           #STAR.chimeric_junctions      FALSE               TRUE #> 7     FALSE          #STAR.intermediate_genome      FALSE               TRUE #> 8     FALSE          #STAR.chimeric_alignments      FALSE               TRUE #> 9     FALSE         #Picard_SortSam.sorted_bam      FALSE               TRUE #> 10    FALSE #SBG_FASTQ_Quality_Detector.result      FALSE               TRUE #>        sbg.x     sbg.y                            link_to #> 1   766.2498 159.58331               #STAR.unmapped_reads #> 2  1118.9998  86.58332  #STAR.transcriptome_aligned_reads #> 3  1282.3330 167.49998             #STAR.splice_junctions #> 4  1394.4164 245.74996               #STAR.reads_per_gene #> 5  1505.0830 322.99995                    #STAR.log_files #> 6  1278.7498 446.74996           #STAR.chimeric_junctions #> 7  1408.9165 386.08329          #STAR.intermediate_genome #> 8  1147.5831 503.24993          #STAR.chimeric_alignments #> 9   934.2498 557.24984         #Picard_SortSam.sorted_bam #> 10 1431.6667 644.99999 #SBG_FASTQ_Quality_Detector.result # flow inputs f1$input_type() #>                    sjdbGTFfile                          fastq  #>                      \"File...\"                      \"File...\"  #>               genomeFastaFiles sjdbGTFtagExonParentTranscript  #>                         \"File\"                       \"string\"  #>       sjdbGTFtagExonParentGene          winAnchorMultimapNmax  #>                       \"string\"                          \"int\"  #>             winAnchorDistNbins  #>                          \"int\"  # flow outouts f1$output_type() #>              unmapped_reads transcriptome_aligned_reads  #>                   \"File...\"                      \"File\"  #>            splice_junctions              reads_per_gene  #>                      \"File\"                      \"File\"  #>                   log_files          chimeric_junctions  #>                   \"File...\"                      \"File\"  #>         intermediate_genome         chimeric_alignments  #>                      \"File\"                      \"File\"  #>                  sorted_bam                      result  #>                      \"File\"                      \"File\"  # flow input id f1$input_id() #> [1] \"#sjdbGTFfile\"                    \"#fastq\"                          #> [3] \"#genomeFastaFiles\"               \"#sjdbGTFtagExonParentTranscript\" #> [5] \"#sjdbGTFtagExonParentGene\"       \"#winAnchorMultimapNmax\"          #> [7] \"#winAnchorDistNbins\"             # linked input id f1$linked_input_id() #>  [1] \"#STAR_Genome_Generate.sjdbGTFtagExonParentTranscript\" #>  [2] \"#STAR_Genome_Generate.sjdbGTFtagExonParentGene\"       #>  [3] \"#STAR_Genome_Generate.sjdbGTFfile\"                    #>  [4] \"#STAR_Genome_Generate.genomeFastaFiles\"               #>  [5] \"#SBG_FASTQ_Quality_Detector.fastq\"                    #>  [6] \"#Picard_SortSam.input_bam\"                            #>  [7] \"#STAR.winAnchorMultimapNmax\"                          #>  [8] \"#STAR.winAnchorDistNbins\"                             #>  [9] \"#STAR.sjdbGTFfile\"                                    #> [10] \"#STAR.reads\"                                          #> [11] \"#STAR.genome\"                                         # flow output id f1$output_id() #>  [1] \"#unmapped_reads\"              \"#transcriptome_aligned_reads\" #>  [3] \"#splice_junctions\"            \"#reads_per_gene\"              #>  [5] \"#log_files\"                   \"#chimeric_junctions\"          #>  [7] \"#intermediate_genome\"         \"#chimeric_alignments\"         #>  [9] \"#sorted_bam\"                  \"#result\"                      # linked output id f1$linked_output_id() #> [1] \"#STAR.aligned_reads\"                \"#SBG_FASTQ_Quality_Detector.result\" #> [3] \"#STAR_Genome_Generate.genome\"       # link_map f1$link_map() #>                                                      id #> 1  #STAR_Genome_Generate.sjdbGTFtagExonParentTranscript #> 2        #STAR_Genome_Generate.sjdbGTFtagExonParentGene #> 3                     #STAR_Genome_Generate.sjdbGTFfile #> 4                #STAR_Genome_Generate.genomeFastaFiles #> 5                     #SBG_FASTQ_Quality_Detector.fastq #> 6                             #Picard_SortSam.input_bam #> 7                           #STAR.winAnchorMultimapNmax #> 8                              #STAR.winAnchorDistNbins #> 9                                     #STAR.sjdbGTFfile #> 10                                          #STAR.reads #> 11                                         #STAR.genome #> 12                                      #unmapped_reads #> 13                         #transcriptome_aligned_reads #> 14                                    #splice_junctions #> 15                                      #reads_per_gene #> 16                                           #log_files #> 17                                  #chimeric_junctions #> 18                                 #intermediate_genome #> 19                                 #chimeric_alignments #> 20                                          #sorted_bam #> 21                                              #result #>                                source   type #> 1     #sjdbGTFtagExonParentTranscript  input #> 2           #sjdbGTFtagExonParentGene  input #> 3                        #sjdbGTFfile  input #> 4                   #genomeFastaFiles  input #> 5                              #fastq  input #> 6                 #STAR.aligned_reads  input #> 7              #winAnchorMultimapNmax  input #> 8                 #winAnchorDistNbins  input #> 9                        #sjdbGTFfile  input #> 10 #SBG_FASTQ_Quality_Detector.result  input #> 11       #STAR_Genome_Generate.genome  input #> 12               #STAR.unmapped_reads output #> 13  #STAR.transcriptome_aligned_reads output #> 14             #STAR.splice_junctions output #> 15               #STAR.reads_per_gene output #> 16                    #STAR.log_files output #> 17           #STAR.chimeric_junctions output #> 18          #STAR.intermediate_genome output #> 19          #STAR.chimeric_alignments output #> 20         #Picard_SortSam.sorted_bam output #> 21 #SBG_FASTQ_Quality_Detector.result output # all step input id f1$step_input_id() #>               #STAR_Genome_Generate               #STAR_Genome_Generate  #>                        \"#sjdbScore\"                     \"#sjdbOverhang\"  #>               #STAR_Genome_Generate               #STAR_Genome_Generate  #>   \"#sjdbGTFtagExonParentTranscript\"         \"#sjdbGTFtagExonParentGene\"  #>               #STAR_Genome_Generate               #STAR_Genome_Generate  #>                      \"#sjdbGTFfile\"               \"#sjdbGTFfeatureExon\"  #>               #STAR_Genome_Generate               #STAR_Genome_Generate  #>                 \"#sjdbGTFchrPrefix\"                  \"#genomeSAsparseD\"  #>               #STAR_Genome_Generate               #STAR_Genome_Generate  #>              \"#genomeSAindexNbases\"                 \"#genomeFastaFiles\"  #>               #STAR_Genome_Generate         #SBG_FASTQ_Quality_Detector  #>                \"#genomeChrBinNbits\"                            \"#fastq\"  #>                     #Picard_SortSam                     #Picard_SortSam  #>            \"#validation_stringency\"                       \"#sort_order\"  #>                     #Picard_SortSam                     #Picard_SortSam  #>                            \"#quiet\"                      \"#output_type\"  #>                     #Picard_SortSam                     #Picard_SortSam  #>                   \"#memory_per_job\"               \"#max_records_in_ram\"  #>                     #Picard_SortSam                     #Picard_SortSam  #>                        \"#input_bam\"                     \"#create_index\"  #>                     #Picard_SortSam                               #STAR  #>                \"#compression_level\"                    \"#winFlankNbins\"  #>                               #STAR                               #STAR  #>                      \"#winBinNbits\"            \"#winAnchorMultimapNmax\"  #>                               #STAR                               #STAR  #>               \"#winAnchorDistNbins\"                      \"#twopassMode\"  #>                               #STAR                               #STAR  #>                   \"#twopass1readsN\"                        \"#sjdbScore\"  #>                               #STAR                               #STAR  #>                     \"#sjdbOverhang\"                   \"#sjdbInsertSave\"  #>                               #STAR                               #STAR  #>   \"#sjdbGTFtagExonParentTranscript\"         \"#sjdbGTFtagExonParentGene\"  #>                               #STAR                               #STAR  #>                      \"#sjdbGTFfile\"               \"#sjdbGTFfeatureExon\"  #>                               #STAR                               #STAR  #>                 \"#sjdbGTFchrPrefix\"     \"#seedSearchStartLmaxOverLread\"  #>                               #STAR                               #STAR  #>              \"#seedSearchStartLmax\"                   \"#seedSearchLmax\"  #>                               #STAR                               #STAR  #>                \"#seedPerWindowNmax\"                  \"#seedPerReadNmax\"  #>                               #STAR                               #STAR  #>            \"#seedNoneLociPerWindow\"                 \"#seedMultimapNmax\"  #>                               #STAR                               #STAR  #>               \"#scoreStitchSJshift\"                     \"#scoreInsOpen\"  #>                               #STAR                               #STAR  #>                     \"#scoreInsBase\"      \"#scoreGenomicLengthLog2scale\"  #>                               #STAR                               #STAR  #>                   \"#scoreGapNoncan\"                     \"#scoreGapGCAG\"  #>                               #STAR                               #STAR  #>                     \"#scoreGapATAC\"                         \"#scoreGap\"  #>                               #STAR                               #STAR  #>                     \"#scoreDelOpen\"                     \"#scoreDelBase\"  #>                               #STAR                               #STAR  #>                    \"#rg_seq_center\"                     \"#rg_sample_id\"  #>                               #STAR                               #STAR  #>              \"#rg_platform_unit_id\"                      \"#rg_platform\"  #>                               #STAR                               #STAR  #>                           \"#rg_mfl\"                    \"#rg_library_id\"  #>                               #STAR                               #STAR  #>                            \"#reads\"               \"#readMatesLengthsIn\"  #>                               #STAR                               #STAR  #>                    \"#readMapNumber\"            \"#quantTranscriptomeBan\"  #>                               #STAR                               #STAR  #>                        \"#quantMode\"                   \"#outSortingType\"  #>                               #STAR                               #STAR  #>                 \"#outSJfilterReads\"           \"#outSJfilterOverhangMin\"  #>                               #STAR                               #STAR  #>      \"#outSJfilterIntronMaxVsReadN\"      \"#outSJfilterDistToOtherSJmin\"  #>                               #STAR                               #STAR  #>        \"#outSJfilterCountUniqueMin\"         \"#outSJfilterCountTotalMin\"  #>                               #STAR                               #STAR  #>                   \"#outSAMunmapped\"                       \"#outSAMtype\"  #>                               #STAR                               #STAR  #>                \"#outSAMstrandField\"                     \"#outSAMreadID\"  #>                               #STAR                               #STAR  #>                \"#outSAMprimaryFlag\"                      \"#outSAMorder\"  #>                               #STAR                               #STAR  #>                       \"#outSAMmode\"                 \"#outSAMmapqUnique\"  #>                               #STAR                               #STAR  #>                   \"#outSAMheaderPG\"                   \"#outSAMheaderHD\"  #>                               #STAR                               #STAR  #>                     \"#outSAMflagOR\"                    \"#outSAMflagAND\"  #>                               #STAR                               #STAR  #>                 \"#outSAMattributes\"                 \"#outReadsUnmapped\"  #>                               #STAR                               #STAR  #>               \"#outQSconversionAdd\"                    \"#outFilterType\"  #>                               #STAR                               #STAR  #>       \"#outFilterScoreMinOverLread\"                \"#outFilterScoreMin\"  #>                               #STAR                               #STAR  #>      \"#outFilterMultimapScoreRange\"            \"#outFilterMultimapNmax\"  #>                               #STAR                               #STAR  #>   \"#outFilterMismatchNoverReadLmax\"       \"#outFilterMismatchNoverLmax\"  #>                               #STAR                               #STAR  #>            \"#outFilterMismatchNmax\"      \"#outFilterMatchNminOverLread\"  #>                               #STAR                               #STAR  #>               \"#outFilterMatchNmin\"            \"#outFilterIntronMotifs\"  #>                               #STAR                               #STAR  #>               \"#limitSjdbInsertNsj\"                \"#limitOutSJoneRead\"  #>                               #STAR                               #STAR  #>              \"#limitOutSJcollapsed\"                  \"#limitBAMsortRAM\"  #>                               #STAR                               #STAR  #>                    \"#genomeDirName\"                           \"#genome\"  #>                               #STAR                               #STAR  #>                     \"#clip5pNbases\"                     \"#clip3pNbases\"  #>                               #STAR                               #STAR  #>         \"#clip3pAfterAdapterNbases\"                 \"#clip3pAdapterSeq\"  #>                               #STAR                               #STAR  #>                 \"#clip3pAdapterMMp\"                   \"#chimSegmentMin\"  #>                               #STAR                               #STAR  #>              \"#chimScoreSeparation\"                     \"#chimScoreMin\"  #>                               #STAR                               #STAR  #>         \"#chimScoreJunctionNonGTAG\"                 \"#chimScoreDropMax\"  #>                               #STAR                               #STAR  #>                      \"#chimOutType\"          \"#chimJunctionOverhangMin\"  #>                               #STAR                               #STAR  #>          \"#alignWindowsPerReadNmax\"    \"#alignTranscriptsPerWindowNmax\"  #>                               #STAR                               #STAR  #>      \"#alignTranscriptsPerReadNmax\" \"#alignSplicedMateMapLminOverLmate\"  #>                               #STAR                               #STAR  #>          \"#alignSplicedMateMapLmin\"     \"#alignSoftClipAtReferenceEnds\"  #>                               #STAR                               #STAR  #>               \"#alignSJoverhangMin\"             \"#alignSJDBoverhangMin\"  #>                               #STAR                               #STAR  #>                 \"#alignMatesGapMax\"                   \"#alignIntronMin\"  #>                               #STAR                               #STAR  #>                   \"#alignIntronMax\"                    \"#alignEndsType\"  # all step input full id with type f1$step_input_id(TRUE) #>                                                    int  #>                      \"#STAR_Genome_Generate.sjdbScore\"  #>                                                    int  #>                   \"#STAR_Genome_Generate.sjdbOverhang\"  #>                                                 string  #> \"#STAR_Genome_Generate.sjdbGTFtagExonParentTranscript\"  #>                                                 string  #>       \"#STAR_Genome_Generate.sjdbGTFtagExonParentGene\"  #>                                                File...  #>                    \"#STAR_Genome_Generate.sjdbGTFfile\"  #>                                                 string  #>             \"#STAR_Genome_Generate.sjdbGTFfeatureExon\"  #>                                                 string  #>               \"#STAR_Genome_Generate.sjdbGTFchrPrefix\"  #>                                                    int  #>                \"#STAR_Genome_Generate.genomeSAsparseD\"  #>                                                    int  #>            \"#STAR_Genome_Generate.genomeSAindexNbases\"  #>                                                   File  #>               \"#STAR_Genome_Generate.genomeFastaFiles\"  #>                                                 string  #>              \"#STAR_Genome_Generate.genomeChrBinNbits\"  #>                                                   File  #>                    \"#SBG_FASTQ_Quality_Detector.fastq\"  #>                                                   enum  #>                \"#Picard_SortSam.validation_stringency\"  #>                                                   enum  #>                           \"#Picard_SortSam.sort_order\"  #>                                                   enum  #>                                \"#Picard_SortSam.quiet\"  #>                                                   enum  #>                          \"#Picard_SortSam.output_type\"  #>                                                    int  #>                       \"#Picard_SortSam.memory_per_job\"  #>                                                    int  #>                   \"#Picard_SortSam.max_records_in_ram\"  #>                                                   File  #>                            \"#Picard_SortSam.input_bam\"  #>                                                   enum  #>                         \"#Picard_SortSam.create_index\"  #>                                                    int  #>                    \"#Picard_SortSam.compression_level\"  #>                                                    int  #>                                  \"#STAR.winFlankNbins\"  #>                                                    int  #>                                    \"#STAR.winBinNbits\"  #>                                                    int  #>                          \"#STAR.winAnchorMultimapNmax\"  #>                                                    int  #>                             \"#STAR.winAnchorDistNbins\"  #>                                                   enum  #>                                    \"#STAR.twopassMode\"  #>                                                    int  #>                                 \"#STAR.twopass1readsN\"  #>                                                    int  #>                                      \"#STAR.sjdbScore\"  #>                                                    int  #>                                   \"#STAR.sjdbOverhang\"  #>                                                   enum  #>                                 \"#STAR.sjdbInsertSave\"  #>                                                 string  #>                 \"#STAR.sjdbGTFtagExonParentTranscript\"  #>                                                 string  #>                       \"#STAR.sjdbGTFtagExonParentGene\"  #>                                                File...  #>                                    \"#STAR.sjdbGTFfile\"  #>                                                 string  #>                             \"#STAR.sjdbGTFfeatureExon\"  #>                                                 string  #>                               \"#STAR.sjdbGTFchrPrefix\"  #>                                                  float  #>                   \"#STAR.seedSearchStartLmaxOverLread\"  #>                                                    int  #>                            \"#STAR.seedSearchStartLmax\"  #>                                                    int  #>                                 \"#STAR.seedSearchLmax\"  #>                                                    int  #>                              \"#STAR.seedPerWindowNmax\"  #>                                                    int  #>                                \"#STAR.seedPerReadNmax\"  #>                                                    int  #>                          \"#STAR.seedNoneLociPerWindow\"  #>                                                    int  #>                               \"#STAR.seedMultimapNmax\"  #>                                                    int  #>                             \"#STAR.scoreStitchSJshift\"  #>                                                    int  #>                                   \"#STAR.scoreInsOpen\"  #>                                                    int  #>                                   \"#STAR.scoreInsBase\"  #>                                                  float  #>                    \"#STAR.scoreGenomicLengthLog2scale\"  #>                                                    int  #>                                 \"#STAR.scoreGapNoncan\"  #>                                                    int  #>                                   \"#STAR.scoreGapGCAG\"  #>                                                    int  #>                                   \"#STAR.scoreGapATAC\"  #>                                                    int  #>                                       \"#STAR.scoreGap\"  #>                                                    int  #>                                   \"#STAR.scoreDelOpen\"  #>                                                    int  #>                                   \"#STAR.scoreDelBase\"  #>                                                 string  #>                                  \"#STAR.rg_seq_center\"  #>                                                 string  #>                                   \"#STAR.rg_sample_id\"  #>                                                 string  #>                            \"#STAR.rg_platform_unit_id\"  #>                                                   enum  #>                                    \"#STAR.rg_platform\"  #>                                                 string  #>                                         \"#STAR.rg_mfl\"  #>                                                 string  #>                                  \"#STAR.rg_library_id\"  #>                                                File...  #>                                          \"#STAR.reads\"  #>                                                   enum  #>                             \"#STAR.readMatesLengthsIn\"  #>                                                    int  #>                                  \"#STAR.readMapNumber\"  #>                                                   enum  #>                          \"#STAR.quantTranscriptomeBan\"  #>                                                   enum  #>                                      \"#STAR.quantMode\"  #>                                                   enum  #>                                 \"#STAR.outSortingType\"  #>                                                   enum  #>                               \"#STAR.outSJfilterReads\"  #>                                                 int...  #>                         \"#STAR.outSJfilterOverhangMin\"  #>                                                 int...  #>                    \"#STAR.outSJfilterIntronMaxVsReadN\"  #>                                                 int...  #>                    \"#STAR.outSJfilterDistToOtherSJmin\"  #>                                                 int...  #>                      \"#STAR.outSJfilterCountUniqueMin\"  #>                                                 int...  #>                       \"#STAR.outSJfilterCountTotalMin\"  #>                                                   enum  #>                                 \"#STAR.outSAMunmapped\"  #>                                                   enum  #>                                     \"#STAR.outSAMtype\"  #>                                                   enum  #>                              \"#STAR.outSAMstrandField\"  #>                                                   enum  #>                                   \"#STAR.outSAMreadID\"  #>                                                   enum  #>                              \"#STAR.outSAMprimaryFlag\"  #>                                                   enum  #>                                    \"#STAR.outSAMorder\"  #>                                                   enum  #>                                     \"#STAR.outSAMmode\"  #>                                                    int  #>                               \"#STAR.outSAMmapqUnique\"  #>                                                 string  #>                                 \"#STAR.outSAMheaderPG\"  #>                                                 string  #>                                 \"#STAR.outSAMheaderHD\"  #>                                                    int  #>                                   \"#STAR.outSAMflagOR\"  #>                                                    int  #>                                  \"#STAR.outSAMflagAND\"  #>                                                   enum  #>                               \"#STAR.outSAMattributes\"  #>                                                   enum  #>                               \"#STAR.outReadsUnmapped\"  #>                                                    int  #>                             \"#STAR.outQSconversionAdd\"  #>                                                   enum  #>                                  \"#STAR.outFilterType\"  #>                                                  float  #>                     \"#STAR.outFilterScoreMinOverLread\"  #>                                                    int  #>                              \"#STAR.outFilterScoreMin\"  #>                                                    int  #>                    \"#STAR.outFilterMultimapScoreRange\"  #>                                                    int  #>                          \"#STAR.outFilterMultimapNmax\"  #>                                                  float  #>                 \"#STAR.outFilterMismatchNoverReadLmax\"  #>                                                  float  #>                     \"#STAR.outFilterMismatchNoverLmax\"  #>                                                    int  #>                          \"#STAR.outFilterMismatchNmax\"  #>                                                  float  #>                    \"#STAR.outFilterMatchNminOverLread\"  #>                                                    int  #>                             \"#STAR.outFilterMatchNmin\"  #>                                                   enum  #>                          \"#STAR.outFilterIntronMotifs\"  #>                                                    int  #>                             \"#STAR.limitSjdbInsertNsj\"  #>                                                    int  #>                              \"#STAR.limitOutSJoneRead\"  #>                                                    int  #>                            \"#STAR.limitOutSJcollapsed\"  #>                                                    int  #>                                \"#STAR.limitBAMsortRAM\"  #>                                                 string  #>                                  \"#STAR.genomeDirName\"  #>                                                   File  #>                                         \"#STAR.genome\"  #>                                                 int...  #>                                   \"#STAR.clip5pNbases\"  #>                                                 int...  #>                                   \"#STAR.clip3pNbases\"  #>                                                 int...  #>                       \"#STAR.clip3pAfterAdapterNbases\"  #>                                              string...  #>                               \"#STAR.clip3pAdapterSeq\"  #>                                               float...  #>                               \"#STAR.clip3pAdapterMMp\"  #>                                                    int  #>                                 \"#STAR.chimSegmentMin\"  #>                                                    int  #>                            \"#STAR.chimScoreSeparation\"  #>                                                    int  #>                                   \"#STAR.chimScoreMin\"  #>                                                    int  #>                       \"#STAR.chimScoreJunctionNonGTAG\"  #>                                                    int  #>                               \"#STAR.chimScoreDropMax\"  #>                                                   enum  #>                                    \"#STAR.chimOutType\"  #>                                                    int  #>                        \"#STAR.chimJunctionOverhangMin\"  #>                                                  float  #>                        \"#STAR.alignWindowsPerReadNmax\"  #>                                                    int  #>                  \"#STAR.alignTranscriptsPerWindowNmax\"  #>                                                    int  #>                    \"#STAR.alignTranscriptsPerReadNmax\"  #>                                                  float  #>               \"#STAR.alignSplicedMateMapLminOverLmate\"  #>                                                    int  #>                        \"#STAR.alignSplicedMateMapLmin\"  #>                                                   enum  #>                   \"#STAR.alignSoftClipAtReferenceEnds\"  #>                                                    int  #>                             \"#STAR.alignSJoverhangMin\"  #>                                                    int  #>                           \"#STAR.alignSJDBoverhangMin\"  #>                                                    int  #>                               \"#STAR.alignMatesGapMax\"  #>                                                    int  #>                                 \"#STAR.alignIntronMin\"  #>                                                    int  #>                                 \"#STAR.alignIntronMax\"  #>                                                   enum  #>                                  \"#STAR.alignEndsType\"  # all step output id f1$step_output_id() #>          #STAR_Genome_Generate    #SBG_FASTQ_Quality_Detector  #>                      \"#genome\"                      \"#result\"  #>                #Picard_SortSam                          #STAR  #>                  \"#sorted_bam\"              \"#unmapped_reads\"  #>                          #STAR                          #STAR  #> \"#transcriptome_aligned_reads\"            \"#splice_junctions\"  #>                          #STAR                          #STAR  #>              \"#reads_per_gene\"                   \"#log_files\"  #>                          #STAR                          #STAR  #>         \"#intermediate_genome\"          \"#chimeric_junctions\"  #>                          #STAR                          #STAR  #>         \"#chimeric_alignments\"               \"#aligned_reads\"  # all step output full id with type f1$step_output_id(TRUE) #>                                 File                                 File  #>       \"#STAR_Genome_Generate.genome\" \"#SBG_FASTQ_Quality_Detector.result\"  #>                                 File                              File...  #>         \"#Picard_SortSam.sorted_bam\"               \"#STAR.unmapped_reads\"  #>                                 File                                 File  #>  \"#STAR.transcriptome_aligned_reads\"             \"#STAR.splice_junctions\"  #>                                 File                              File...  #>               \"#STAR.reads_per_gene\"                    \"#STAR.log_files\"  #>                                 File                                 File  #>          \"#STAR.intermediate_genome\"           \"#STAR.chimeric_junctions\"  #>                                 File                                 File  #>          \"#STAR.chimeric_alignments\"                \"#STAR.aligned_reads\"  # get inputs objects f1$get_input(\"#clip3pNbases\") #> type: #> - 'null' #> - items: int #>   type: array #> label: Clip 3p bases #> description: Number of bases to clip from 3p of each mate. In case only one value #>   is given, it will be assumed the same for both mates. #> streamable: no #> id: '#clip3pNbases' #> inputBinding: #>   position: 0 #>   prefix: --clip3pNbases #>   separate: yes #>   itemSeparator: ' ' #>   shellQuote: no #>   sbg:cmdInclude: yes #>   streamable: no #>   separator: ' ' #> sbg:category: Read parameters #> sbg:toolDefaultValue: '0' #> required: no #>  f1$get_input(c(\"#clip3pNbases\", \"#chimScoreMin\")) #> [[1]] #> type: #> - 'null' #> - items: int #>   type: array #> label: Clip 3p bases #> description: Number of bases to clip from 3p of each mate. In case only one value #>   is given, it will be assumed the same for both mates. #> streamable: no #> id: '#clip3pNbases' #> inputBinding: #>   position: 0 #>   prefix: --clip3pNbases #>   separate: yes #>   itemSeparator: ' ' #>   shellQuote: no #>   sbg:cmdInclude: yes #>   streamable: no #>   separator: ' ' #> sbg:category: Read parameters #> sbg:toolDefaultValue: '0' #> required: no #>  #> [[2]] #> type: #> - 'null' #> - int #> label: Min total score #> description: Minimum total (summed) score of the chimeric segments (int>=0). #> streamable: no #> id: '#chimScoreMin' #> inputBinding: #>   position: 0 #>   prefix: --chimScoreMin #>   separate: yes #>   shellQuote: no #>   sbg:cmdInclude: yes #>   streamable: no #>   separator: ' ' #> sbg:category: Chimeric Alignments #> sbg:toolDefaultValue: '0' #> required: no #>  f1$get_input(c(\"#clip3pNbases\", \"#chimScoreMin\", \"#STAR.outFilterMismatchNoverLmax\")) #> [[1]] #> type: #> - 'null' #> - float #> label: Mismatches to *mapped* length #> description: Alignment will be output only if its ratio of mismatches to *mapped* #>   length is less than this value. #> streamable: no #> id: '#outFilterMismatchNoverLmax' #> inputBinding: #>   position: 0 #>   prefix: --outFilterMismatchNoverLmax #>   separate: yes #>   shellQuote: no #>   sbg:cmdInclude: yes #>   streamable: no #>   separator: ' ' #> sbg:category: Output filtering #> sbg:toolDefaultValue: '0.3' #> required: no #>  #> [[2]] #> type: #> - 'null' #> - items: int #>   type: array #> label: Clip 3p bases #> description: Number of bases to clip from 3p of each mate. In case only one value #>   is given, it will be assumed the same for both mates. #> streamable: no #> id: '#clip3pNbases' #> inputBinding: #>   position: 0 #>   prefix: --clip3pNbases #>   separate: yes #>   itemSeparator: ' ' #>   shellQuote: no #>   sbg:cmdInclude: yes #>   streamable: no #>   separator: ' ' #> sbg:category: Read parameters #> sbg:toolDefaultValue: '0' #> required: no #>  #> [[3]] #> type: #> - 'null' #> - int #> label: Min total score #> description: Minimum total (summed) score of the chimeric segments (int>=0). #> streamable: no #> id: '#chimScoreMin' #> inputBinding: #>   position: 0 #>   prefix: --chimScoreMin #>   separate: yes #>   shellQuote: no #>   sbg:cmdInclude: yes #>   streamable: no #>   separator: ' ' #> sbg:category: Chimeric Alignments #> sbg:toolDefaultValue: '0' #> required: no #>  # get outputs objects f1$get_output(\"#log_files\") #> type: #> - 'null' #> - items: File #>   type: array #> label: Log files #> description: Log files produced during alignment. #> streamable: no #> id: '#log_files' #> outputBinding: #>   glob: '*Log*.out' #> sbg:fileTypes: OUT #>  f1$get_output(c(\"#log_files\", \"intermediate_genome\")) #> [[1]] #> type: #> - 'null' #> - items: File #>   type: array #> label: Log files #> description: Log files produced during alignment. #> streamable: no #> id: '#log_files' #> outputBinding: #>   glob: '*Log*.out' #> sbg:fileTypes: OUT #>  #> [[2]] #> type: #> - 'null' #> - File #> label: Intermediate genome files #> description: Archive with genome files produced when annotations are included on the #>   fly (in the mapping step). #> streamable: no #> id: '#intermediate_genome' #> outputBinding: #>   glob: '*_STARgenome.tar' #> sbg:fileTypes: TAR #>  f1$get_output(c(\"#log_files\", \"intermediate_genome\", \"#STAR.unmapped_reads\")) #> [[1]] #> type: #> - 'null' #> - items: File #>   type: array #> label: Unmapped reads #> description: Output of unmapped reads. #> streamable: no #> id: '#unmapped_reads' #> outputBinding: #>   glob: '*Unmapped.out*' #> sbg:fileTypes: FASTQ #>  #> [[2]] #> type: #> - 'null' #> - items: File #>   type: array #> label: Log files #> description: Log files produced during alignment. #> streamable: no #> id: '#log_files' #> outputBinding: #>   glob: '*Log*.out' #> sbg:fileTypes: OUT #>  #> [[3]] #> type: #> - 'null' #> - File #> label: Intermediate genome files #> description: Archive with genome files produced when annotations are included on the #>   fly (in the mapping step). #> streamable: no #> id: '#intermediate_genome' #> outputBinding: #>   glob: '*_STARgenome.tar' #> sbg:fileTypes: TAR #>  f1$get_output(\"#log_files\") #> type: #> - 'null' #> - items: File #>   type: array #> label: Log files #> description: Log files produced during alignment. #> streamable: no #> id: '#log_files' #> outputBinding: #>   glob: '*Log*.out' #> sbg:fileTypes: OUT #>  # set flow input f1$set_flow_input(\"#SBG_FASTQ_Quality_Detector.fastq\") #> sbg:validationErrors: [] #> sbg:sbgMaintained: no #> sbg:latestRevision: 2 #> sbg:toolAuthor: Seven Bridges Genomics #> sbg:createdOn: 1463601910 #> sbg:categories: #> - Alignment #> - RNA #> sbg:contributors: #> - tengfei #> sbg:project: tengfei/quickstart #> sbg:createdBy: tengfei #> sbg:toolkitVersion: 2.4.2a #> sbg:id: tengfei/quickstart/rna-seq-alignment-star-demo/2 #> sbg:license: Apache License 2.0 #> sbg:revision: 2 #> sbg:modifiedOn: 1463601974 #> sbg:modifiedBy: tengfei #> sbg:revisionsInfo: #> - sbg:modifiedBy: tengfei #>   sbg:modifiedOn: 1463601910 #>   sbg:revision: 0 #> - sbg:modifiedBy: tengfei #>   sbg:modifiedOn: 1463601952 #>   sbg:revision: 1 #> - sbg:modifiedBy: tengfei #>   sbg:modifiedOn: 1463601974 #>   sbg:revision: 2 #> sbg:toolkit: STAR #> id: '#tengfei/quickstart/rna-seq-alignment-star-demo/2' #> inputs: #> - type: #>   - 'null' #>   - items: File #>     type: array #>   label: sjdbGTFfile #>   streamable: no #>   id: '#sjdbGTFfile' #>   sbg:x: 160.4999759 #>   sbg:y: 195.0833106 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - items: File #>     type: array #>   label: fastq #>   streamable: no #>   id: '#fastq' #>   sbg:x: 164.2499914 #>   sbg:y: 323.7499502 #>   sbg:includeInPorts: yes #>   required: yes #> - type: #>   - File #>   label: genomeFastaFiles #>   streamable: no #>   id: '#genomeFastaFiles' #>   sbg:x: 167.7499601 #>   sbg:y: 469.9999106 #>   sbg:includeInPorts: yes #>   required: yes #> - type: #>   - 'null' #>   - string #>   label: Exons' parents name #>   description: Tag name to be used as exons' transcript-parents. #>   streamable: no #>   id: '#sjdbGTFtagExonParentTranscript' #>   sbg:category: Splice junctions db parameters #>   sbg:x: 200.0 #>   sbg:y: 350.0 #>   sbg:includeInPorts: yes #>   sbg:toolDefaultValue: transcript_id #>   required: no #> - type: #>   - 'null' #>   - string #>   label: Gene name #>   description: Tag name to be used as exons' gene-parents. #>   streamable: no #>   id: '#sjdbGTFtagExonParentGene' #>   sbg:category: Splice junctions db parameters #>   sbg:x: 200.0 #>   sbg:y: 400.0 #>   sbg:includeInPorts: yes #>   sbg:toolDefaultValue: gene_id #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max loci anchors #>   description: Max number of loci anchors are allowed to map to (int>0). #>   streamable: no #>   id: '#winAnchorMultimapNmax' #>   sbg:category: Windows, Anchors, Binning #>   sbg:x: 200.0 #>   sbg:y: 450.0 #>   sbg:includeInPorts: yes #>   sbg:toolDefaultValue: '50' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max bins between anchors #>   description: Max number of bins between two anchors that allows aggregation of anchors #>     into one window (int>0). #>   streamable: no #>   id: '#winAnchorDistNbins' #>   sbg:category: Windows, Anchors, Binning #>   sbg:x: 200.0 #>   sbg:y: 500.0 #>   sbg:includeInPorts: yes #>   sbg:toolDefaultValue: '9' #>   required: no #> outputs: #> - type: #>   - 'null' #>   - items: File #>     type: array #>   label: unmapped_reads #>   streamable: no #>   id: '#unmapped_reads' #>   source: '#STAR.unmapped_reads' #>   sbg:x: 766.2497863 #>   sbg:y: 159.5833091 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: transcriptome_aligned_reads #>   streamable: no #>   id: '#transcriptome_aligned_reads' #>   source: '#STAR.transcriptome_aligned_reads' #>   sbg:x: 1118.9998003 #>   sbg:y: 86.5833216 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: splice_junctions #>   streamable: no #>   id: '#splice_junctions' #>   source: '#STAR.splice_junctions' #>   sbg:x: 1282.3330177 #>   sbg:y: 167.499976 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: reads_per_gene #>   streamable: no #>   id: '#reads_per_gene' #>   source: '#STAR.reads_per_gene' #>   sbg:x: 1394.4163557 #>   sbg:y: 245.749964 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - items: File #>     type: array #>   label: log_files #>   streamable: no #>   id: '#log_files' #>   source: '#STAR.log_files' #>   sbg:x: 1505.0830269 #>   sbg:y: 322.9999518 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: chimeric_junctions #>   streamable: no #>   id: '#chimeric_junctions' #>   source: '#STAR.chimeric_junctions' #>   sbg:x: 1278.7498062 #>   sbg:y: 446.7499567 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: intermediate_genome #>   streamable: no #>   id: '#intermediate_genome' #>   source: '#STAR.intermediate_genome' #>   sbg:x: 1408.9164783 #>   sbg:y: 386.0832876 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: chimeric_alignments #>   streamable: no #>   id: '#chimeric_alignments' #>   source: '#STAR.chimeric_alignments' #>   sbg:x: 1147.5831348 #>   sbg:y: 503.2499285 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: sorted_bam #>   streamable: no #>   id: '#sorted_bam' #>   source: '#Picard_SortSam.sorted_bam' #>   sbg:x: 934.2498228 #>   sbg:y: 557.2498436 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: result #>   streamable: no #>   id: '#result' #>   source: '#SBG_FASTQ_Quality_Detector.result' #>   sbg:x: 1431.6666548 #>   sbg:y: 644.9999898 #>   sbg:includeInPorts: yes #>   required: no #> requirements: #> - class: CreateFileRequirement #>   fileDef: [] #> hints: #> - class: sbg:AWSInstanceType #>   value: c3.8xlarge #> label: RNA-seq Alignment - STAR #> description: \"Alignment to a reference genome and transcriptome presents the first #>   step of RNA-Seq analysis. This pipeline uses STAR, an ultrafast RNA-seq aligner #>   capable of mapping full length RNA sequences and detecting de novo canonical junctions, #>   non-canonical splices, and chimeric (fusion) transcripts. It is optimized for mammalian #>   sequence reads, but fine tuning of its parameters enables customization to satisfy #>   unique needs.\\n\\nSTAR accepts one file per sample (or two files for paired-end data). #>   \\ \\nSplice junction annotations can optionally be collected from splice junction #>   databases. Set the \\\"Overhang length\\\" parameter to a value larger than zero in #>   order to use splice junction databases. For constant read length, this value should #>   (ideally) be equal to mate length decreased by 1; for long reads with non-constant #>   length, this value should be 100 (pipeline default). \\nFastQC Analysis on FASTQ #>   files reveals read length distribution. STAR can detect chimeric transcripts, but #>   parameter \\\"Min segment length\\\" in \\\"Chimeric Alignments\\\" category must be adjusted #>   to a desired minimum chimeric segment length. Aligned reads are reported in BAM #>   format and can be viewed in a genome browser (such as IGV). A file containing detected #>   splice junctions is also produced.\\n\\nUnmapped reads are reported in FASTQ format #>   and can be included in an output BAM file. The \\\"Output unmapped reads\\\" and \\\"Write #>   unmapped in SAM\\\" parameters enable unmapped output type selection.\" #> class: Workflow #> steps: #> - id: '#STAR_Genome_Generate' #>   inputs: #>   - id: '#STAR_Genome_Generate.sjdbScore' #>   - id: '#STAR_Genome_Generate.sjdbOverhang' #>   - id: '#STAR_Genome_Generate.sjdbGTFtagExonParentTranscript' #>     source: '#sjdbGTFtagExonParentTranscript' #>   - id: '#STAR_Genome_Generate.sjdbGTFtagExonParentGene' #>     source: '#sjdbGTFtagExonParentGene' #>   - id: '#STAR_Genome_Generate.sjdbGTFfile' #>     source: '#sjdbGTFfile' #>   - id: '#STAR_Genome_Generate.sjdbGTFfeatureExon' #>   - id: '#STAR_Genome_Generate.sjdbGTFchrPrefix' #>   - id: '#STAR_Genome_Generate.genomeSAsparseD' #>   - id: '#STAR_Genome_Generate.genomeSAindexNbases' #>   - id: '#STAR_Genome_Generate.genomeFastaFiles' #>     source: '#genomeFastaFiles' #>   - id: '#STAR_Genome_Generate.genomeChrBinNbits' #>   outputs: #>   - id: '#STAR_Genome_Generate.genome' #>   hints: [] #>   run: #>     sbg:validationErrors: [] #>     sbg:sbgMaintained: no #>     sbg:latestRevision: 1 #>     sbg:job: #>       allocatedResources: #>         mem: 60000 #>         cpu: 15 #>       inputs: #>         sjdbScore: 0 #>         sjdbGTFfeatureExon: sjdbGTFfeatureExon #>         sjdbOverhang: 0 #>         sjdbGTFtagExonParentTranscript: sjdbGTFtagExonParentTranscript #>         genomeChrBinNbits: genomeChrBinNbits #>         genomeSAsparseD: 0 #>         sjdbGTFfile: #>         - size: 0 #>           secondaryFiles: [] #>           class: File #>           path: /demo/test-files/chr20.gtf #>         sjdbGTFtagExonParentGene: sjdbGTFtagExonParentGene #>         genomeFastaFiles: #>           size: 0 #>           secondaryFiles: [] #>           class: File #>           path: /sbgenomics/test-data/chr20.fa #>         sjdbGTFchrPrefix: sjdbGTFchrPrefix #>         genomeSAindexNbases: 0 #>     sbg:toolAuthor: Alexander Dobin/CSHL #>     sbg:createdOn: 1450911469 #>     sbg:categories: #>     - Alignment #>     sbg:contributors: #>     - bix-demo #>     sbg:links: #>     - id: https://github.com/alexdobin/STAR #>       label: Homepage #>     - id: https://github.com/alexdobin/STAR/releases #>       label: Releases #>     - id: https://github.com/alexdobin/STAR/blob/master/doc/STARmanual.pdf #>       label: Manual #>     - id: https://groups.google.com/forum/#!forum/rna-star #>       label: Support #>     - id: http://www.ncbi.nlm.nih.gov/pubmed/23104886 #>       label: Publication #>     sbg:project: bix-demo/star-2-4-2a-demo #>     sbg:createdBy: bix-demo #>     sbg:toolkitVersion: 2.4.2a #>     sbg:id: sevenbridges/public-apps/star-genome-generate/1 #>     sbg:license: GNU General Public License v3.0 only #>     sbg:revision: 1 #>     sbg:cmdPreview: mkdir genomeDir && /opt/STAR --runMode genomeGenerate --genomeDir #>       ./genomeDir --runThreadN 15 --genomeFastaFiles /sbgenomics/test-data/chr20.fa #>       --genomeChrBinNbits genomeChrBinNbits --genomeSAindexNbases 0 --genomeSAsparseD #>       0 --sjdbGTFfeatureExon sjdbGTFfeatureExon --sjdbGTFtagExonParentTranscript sjdbGTFtagExonParentTranscript #>       --sjdbGTFtagExonParentGene sjdbGTFtagExonParentGene --sjdbOverhang 0 --sjdbScore #>       0 --sjdbGTFchrPrefix sjdbGTFchrPrefix  --sjdbGTFfile /demo/test-files/chr20.gtf  && #>       tar -vcf genome.tar ./genomeDir /sbgenomics/test-data/chr20.fa #>     sbg:modifiedOn: 1450911470 #>     sbg:modifiedBy: bix-demo #>     sbg:revisionsInfo: #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911469 #>       sbg:revision: 0 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911470 #>       sbg:revision: 1 #>     sbg:toolkit: STAR #>     id: sevenbridges/public-apps/star-genome-generate/1 #>     inputs: #>     - type: #>       - 'null' #>       - int #>       label: Extra alignment score #>       description: Extra alignment score for alignments that cross database junctions. #>       streamable: no #>       id: '#sjdbScore' #>       inputBinding: #>         position: 0 #>         prefix: --sjdbScore #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Splice junctions db parameters #>       sbg:includeInPorts: yes #>       sbg:toolDefaultValue: '2' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: '\"Overhang\" length' #>       description: Length of the donor/acceptor sequence on each side of the junctions, #>         ideally = (mate_length - 1) (int >= 0), if int = 0, splice junction database #>         is not used. #>       streamable: no #>       id: '#sjdbOverhang' #>       inputBinding: #>         position: 0 #>         prefix: --sjdbOverhang #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Splice junctions db parameters #>       sbg:includeInPorts: yes #>       sbg:toolDefaultValue: '100' #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Exons' parents name #>       description: Tag name to be used as exons' transcript-parents. #>       streamable: no #>       id: '#sjdbGTFtagExonParentTranscript' #>       inputBinding: #>         position: 0 #>         prefix: --sjdbGTFtagExonParentTranscript #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Splice junctions db parameters #>       sbg:toolDefaultValue: transcript_id #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Gene name #>       description: Tag name to be used as exons' gene-parents. #>       streamable: no #>       id: '#sjdbGTFtagExonParentGene' #>       inputBinding: #>         position: 0 #>         prefix: --sjdbGTFtagExonParentGene #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Splice junctions db parameters #>       sbg:toolDefaultValue: gene_id #>       required: no #>     - type: #>       - 'null' #>       - items: File #>         type: array #>       label: Splice junction file #>       description: Gene model annotations and/or known transcripts. #>       streamable: no #>       id: '#sjdbGTFfile' #>       sbg:category: Basic #>       sbg:fileTypes: GTF, GFF, TXT #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Set exons feature #>       description: Feature type in GTF file to be used as exons for building transcripts. #>       streamable: no #>       id: '#sjdbGTFfeatureExon' #>       inputBinding: #>         position: 0 #>         prefix: --sjdbGTFfeatureExon #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Splice junctions db parameters #>       sbg:toolDefaultValue: exon #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Chromosome names #>       description: Prefix for chromosome names in a GTF file (e.g. 'chr' for using #>         ENSMEBL annotations with UCSC geneomes). #>       streamable: no #>       id: '#sjdbGTFchrPrefix' #>       inputBinding: #>         position: 0 #>         prefix: --sjdbGTFchrPrefix #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Splice junctions db parameters #>       sbg:toolDefaultValue: '-' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Suffux array sparsity #>       description: 'Distance between indices: use bigger numbers to decrease needed #>         RAM at the cost of mapping speed reduction (int>0).' #>       streamable: no #>       id: '#genomeSAsparseD' #>       inputBinding: #>         position: 0 #>         prefix: --genomeSAsparseD #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Genome generation parameters #>       sbg:toolDefaultValue: '1' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Pre-indexing string length #>       description: Length (bases) of the SA pre-indexing string. Typically between #>         10 and 15. Longer strings will use much more memory, but allow faster searches. #>         For small genomes, this number needs to be scaled down, with a typical value #>         of min(14, log2(GenomeLength)/2 - 1). For example, for 1 megaBase genome, #>         this is equal to 9, for 100 kiloBase genome, this is equal to 7. #>       streamable: no #>       id: '#genomeSAindexNbases' #>       inputBinding: #>         position: 0 #>         prefix: --genomeSAindexNbases #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Genome generation parameters #>       sbg:toolDefaultValue: '14' #>       required: no #>     - type: #>       - File #>       label: Genome fasta files #>       description: Reference sequence to which to align the reads. #>       streamable: no #>       id: '#genomeFastaFiles' #>       inputBinding: #>         position: 0 #>         prefix: --genomeFastaFiles #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Basic #>       sbg:fileTypes: FASTA, FA #>       required: yes #>     - type: #>       - 'null' #>       - string #>       label: Bins size #>       description: 'Set log2(chrBin), where chrBin is the size (bits) of the bins #>         for genome storage: each chromosome will occupy an integer number of bins. #>         If you are using a genome with a large (>5,000) number of chrosomes/scaffolds, #>         you may need to reduce this number to reduce RAM consumption. The following #>         scaling is recomended: genomeChrBinNbits = min(18, log2(GenomeLength/NumberOfReferences)). #>         For example, for 3 gigaBase genome with 100,000 chromosomes/scaffolds, this #>         is equal to 15.' #>       streamable: no #>       id: '#genomeChrBinNbits' #>       inputBinding: #>         position: 0 #>         prefix: --genomeChrBinNbits #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Genome generation parameters #>       sbg:toolDefaultValue: '18' #>       required: no #>     outputs: #>     - type: #>       - 'null' #>       - File #>       label: Genome Files #>       description: Genome files comprise binary genome sequence, suffix arrays, text #>         chromosome names/lengths, splice junctions coordinates, and transcripts/genes #>         information. #>       streamable: no #>       id: '#genome' #>       outputBinding: #>         glob: '*.tar' #>       sbg:fileTypes: TAR #>     requirements: #>     - class: ExpressionEngineRequirement #>       id: '#cwl-js-engine' #>       requirements: #>       - class: DockerRequirement #>         dockerPull: rabix/js-engine #>     hints: #>     - class: DockerRequirement #>       dockerPull: images.sbgenomics.com/ana_d/star:2.4.2a #>       dockerImageId: a4b0ad2c3cae #>     - class: sbg:CPURequirement #>       value: 15 #>     - class: sbg:MemRequirement #>       value: 60000 #>     label: STAR Genome Generate #>     description: STAR Genome Generate is a tool that generates genome index files. #>       One set of files should be generated per each genome/annotation combination. #>       Once produced, these files could be used as long as genome/annotation combination #>       stays the same. Also, STAR Genome Generate which produced these files and STAR #>       aligner using them must be the same toolkit version. #>     class: CommandLineTool #>     baseCommand: #>     - mkdir #>     - genomeDir #>     - '&&' #>     - /opt/STAR #>     - --runMode #>     - genomeGenerate #>     - --genomeDir #>     - ./genomeDir #>     - --runThreadN #>     - class: Expression #>       script: |- #>         { #>           return $job.allocatedResources.cpu #>         } #>       engine: '#cwl-js-engine' #>     arguments: #>     - position: 99 #>       separate: yes #>       valueFrom: '&& tar -vcf genome.tar ./genomeDir' #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\t\\n  var sjFormat = \\\"False\\\"\\n  var gtfgffFormat = \\\"False\\\"\\n #>           \\ var list = $job.inputs.sjdbGTFfile\\n  var paths_list = []\\n  var joined_paths #>           = \\\"\\\"\\n  \\n  if (list) {\\n    list.forEach(function(f){return paths_list.push(f.path)})\\n #>           \\   joined_paths = paths_list.join(\\\" \\\")\\n\\n\\n    paths_list.forEach(function(f){\\n #>           \\     ext = f.replace(/^.*\\\\./, '')\\n      if (ext == \\\"gff\\\" || ext == #>           \\\"gtf\\\") {\\n        gtfgffFormat = \\\"True\\\"\\n        return gtfgffFormat\\n #>           \\     }\\n      if (ext == \\\"txt\\\") {\\n        sjFormat = \\\"True\\\"\\n        return #>           sjFormat\\n      }\\n    })\\n\\n    if ($job.inputs.sjdbGTFfile && $job.inputs.sjdbInsertSave #>           != \\\"None\\\") {\\n      if (sjFormat == \\\"True\\\") {\\n        return \\\"--sjdbFileChrStartEnd #>           \\\".concat(joined_paths)\\n      }\\n      else if (gtfgffFormat == \\\"True\\\") #>           {\\n        return \\\"--sjdbGTFfile \\\".concat(joined_paths)\\n      }\\n    }\\n #>           \\ }\\n}\" #>         class: Expression #>     stdin: '' #>     stdout: '' #>     successCodes: [] #>     temporaryFailCodes: [] #>     x: 384.0832266 #>     'y': 446.4998957 #>   sbg:x: 100.0 #>   sbg:y: 200.0 #> - id: '#SBG_FASTQ_Quality_Detector' #>   inputs: #>   - id: '#SBG_FASTQ_Quality_Detector.fastq' #>     source: '#fastq' #>   outputs: #>   - id: '#SBG_FASTQ_Quality_Detector.result' #>   hints: [] #>   run: #>     sbg:validationErrors: [] #>     sbg:sbgMaintained: no #>     sbg:latestRevision: 3 #>     sbg:job: #>       allocatedResources: #>         mem: 1000 #>         cpu: 1 #>       inputs: #>         fastq: #>           size: 0 #>           secondaryFiles: [] #>           class: File #>           path: /path/to/fastq.ext #>     sbg:toolAuthor: Seven Bridges Genomics #>     sbg:createdOn: 1450911312 #>     sbg:categories: #>     - FASTQ-Processing #>     sbg:contributors: #>     - bix-demo #>     sbg:project: bix-demo/sbgtools-demo #>     sbg:createdBy: bix-demo #>     sbg:id: sevenbridges/public-apps/sbg-fastq-quality-detector/3 #>     sbg:license: Apache License 2.0 #>     sbg:revision: 3 #>     sbg:cmdPreview: python /opt/sbg_fastq_quality_scale_detector.py --fastq /path/to/fastq.ext #>       /path/to/fastq.ext #>     sbg:modifiedOn: 1450911314 #>     sbg:modifiedBy: bix-demo #>     sbg:revisionsInfo: #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911312 #>       sbg:revision: 0 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911314 #>       sbg:revision: 3 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911313 #>       sbg:revision: 1 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911313 #>       sbg:revision: 2 #>     sbg:toolkit: SBGTools #>     id: sevenbridges/public-apps/sbg-fastq-quality-detector/3 #>     inputs: #>     - type: #>       - File #>       label: Fastq #>       description: FASTQ file. #>       streamable: no #>       id: '#fastq' #>       inputBinding: #>         position: 0 #>         prefix: --fastq #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       required: yes #>     outputs: #>     - type: #>       - 'null' #>       - File #>       label: Result #>       description: Source FASTQ file with updated metadata. #>       streamable: no #>       id: '#result' #>       outputBinding: #>         glob: '*.fastq' #>       sbg:fileTypes: FASTQ #>     requirements: #>     - class: CreateFileRequirement #>       fileDef: [] #>     hints: #>     - class: DockerRequirement #>       dockerPull: images.sbgenomics.com/tziotas/sbg_fastq_quality_scale_detector:1.0 #>       dockerImageId: '' #>     - class: sbg:CPURequirement #>       value: 1 #>     - class: sbg:MemRequirement #>       value: 1000 #>     label: SBG FASTQ Quality Detector #>     description: FASTQ Quality Scale Detector detects which quality encoding scheme #>       was used in your reads and automatically enters the proper value in the \"Quality #>       Scale\" metadata field. #>     class: CommandLineTool #>     baseCommand: #>     - python #>     - /opt/sbg_fastq_quality_scale_detector.py #>     arguments: [] #>     stdin: '' #>     stdout: '' #>     successCodes: [] #>     temporaryFailCodes: [] #>     x: 375.3333179 #>     'y': 323.5833156 #>   sbg:x: 300.0 #>   sbg:y: 200.0 #> - id: '#Picard_SortSam' #>   inputs: #>   - id: '#Picard_SortSam.validation_stringency' #>     default: SILENT #>   - id: '#Picard_SortSam.sort_order' #>     default: Coordinate #>   - id: '#Picard_SortSam.quiet' #>   - id: '#Picard_SortSam.output_type' #>   - id: '#Picard_SortSam.memory_per_job' #>   - id: '#Picard_SortSam.max_records_in_ram' #>   - id: '#Picard_SortSam.input_bam' #>     source: '#STAR.aligned_reads' #>   - id: '#Picard_SortSam.create_index' #>     default: 'True' #>   - id: '#Picard_SortSam.compression_level' #>   outputs: #>   - id: '#Picard_SortSam.sorted_bam' #>   hints: [] #>   run: #>     sbg:validationErrors: [] #>     sbg:sbgMaintained: no #>     sbg:latestRevision: 2 #>     sbg:job: #>       allocatedResources: #>         mem: 2048 #>         cpu: 1 #>       inputs: #>         sort_order: Coordinate #>         input_bam: #>           path: /root/dir/example.tested.bam #>         memory_per_job: 2048 #>         output_type: ~ #>         create_index: ~ #>     sbg:toolAuthor: Broad Institute #>     sbg:createdOn: 1450911168 #>     sbg:categories: #>     - SAM/BAM-Processing #>     sbg:contributors: #>     - bix-demo #>     sbg:links: #>     - id: http://broadinstitute.github.io/picard/index.html #>       label: Homepage #>     - id: https://github.com/broadinstitute/picard/releases/tag/1.138 #>       label: Source Code #>     - id: http://broadinstitute.github.io/picard/ #>       label: Wiki #>     - id: https://github.com/broadinstitute/picard/zipball/master #>       label: Download #>     - id: http://broadinstitute.github.io/picard/ #>       label: Publication #>     sbg:project: bix-demo/picard-1-140-demo #>     sbg:createdBy: bix-demo #>     sbg:toolkitVersion: '1.140' #>     sbg:id: sevenbridges/public-apps/picard-sortsam-1-140/2 #>     sbg:license: MIT License, Apache 2.0 Licence #>     sbg:revision: 2 #>     sbg:cmdPreview: java -Xmx2048M -jar /opt/picard-tools-1.140/picard.jar SortSam #>       OUTPUT=example.tested.sorted.bam INPUT=/root/dir/example.tested.bam SORT_ORDER=coordinate   INPUT=/root/dir/example.tested.bam #>       SORT_ORDER=coordinate  /root/dir/example.tested.bam #>     sbg:modifiedOn: 1450911170 #>     sbg:modifiedBy: bix-demo #>     sbg:revisionsInfo: #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911168 #>       sbg:revision: 0 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911169 #>       sbg:revision: 1 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911170 #>       sbg:revision: 2 #>     sbg:toolkit: Picard #>     id: sevenbridges/public-apps/picard-sortsam-1-140/2 #>     inputs: #>     - type: #>       - 'null' #>       - name: validation_stringency #>         symbols: #>         - STRICT #>         - LENIENT #>         - SILENT #>         type: enum #>       label: Validation stringency #>       description: 'Validation stringency for all SAM files read by this program. #>         Setting stringency to SILENT can improve performance when processing a BAM #>         file in which variable-length data (read, qualities, tags) do not otherwise #>         need to be decoded. This option can be set to ''null'' to clear the default #>         value. Possible values: {STRICT, LENIENT, SILENT}.' #>       streamable: no #>       id: '#validation_stringency' #>       inputBinding: #>         position: 0 #>         prefix: VALIDATION_STRINGENCY= #>         separate: no #>         valueFrom: #>           engine: '#cwl-js-engine' #>           script: |- #>             { #>               if ($job.inputs.validation_stringency) #>               { #>                 return $job.inputs.validation_stringency #>               } #>               else #>               { #>                 return \"SILENT\" #>               } #>             } #>           class: Expression #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Other input types #>       sbg:toolDefaultValue: SILENT #>       required: no #>     - type: #>       - name: sort_order #>         symbols: #>         - Unsorted #>         - Queryname #>         - Coordinate #>         type: enum #>       label: Sort order #>       description: 'Sort order of the output file. Possible values: {unsorted, queryname, #>         coordinate}.' #>       streamable: no #>       id: '#sort_order' #>       inputBinding: #>         position: 3 #>         prefix: SORT_ORDER= #>         separate: no #>         valueFrom: #>           engine: '#cwl-js-engine' #>           script: |- #>             { #>               p = $job.inputs.sort_order.toLowerCase() #>               return p #>             } #>           class: Expression #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Other input types #>       sbg:toolDefaultValue: Coordinate #>       sbg:altPrefix: SO #>       required: yes #>     - type: #>       - 'null' #>       - name: quiet #>         symbols: #>         - 'True' #>         - 'False' #>         type: enum #>       label: Quiet #>       description: 'This parameter indicates whether to suppress job-summary info #>         on System.err. This option can be set to ''null'' to clear the default value. #>         Possible values: {true, false}.' #>       streamable: no #>       id: '#quiet' #>       inputBinding: #>         position: 0 #>         prefix: QUIET= #>         separate: no #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Other input types #>       sbg:toolDefaultValue: 'False' #>       required: no #>     - type: #>       - 'null' #>       - name: output_type #>         symbols: #>         - BAM #>         - SAM #>         - SAME AS INPUT #>         type: enum #>       label: Output format #>       description: Since Picard tools can output both SAM and BAM files, user can #>         choose the format of the output file. #>       streamable: no #>       id: '#output_type' #>       sbg:category: Other input types #>       sbg:toolDefaultValue: SAME AS INPUT #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Memory per job #>       description: Amount of RAM memory to be used per job. Defaults to 2048 MB for #>         single threaded jobs. #>       streamable: no #>       id: '#memory_per_job' #>       sbg:toolDefaultValue: '2048' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max records in RAM #>       description: When writing SAM files that need to be sorted, this parameter will #>         specify the number of records stored in RAM before spilling to disk. Increasing #>         this number reduces the number of file handles needed to sort a SAM file, #>         and increases the amount of RAM needed. This option can be set to 'null' to #>         clear the default value. #>       streamable: no #>       id: '#max_records_in_ram' #>       inputBinding: #>         position: 0 #>         prefix: MAX_RECORDS_IN_RAM= #>         separate: no #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Other input types #>       sbg:toolDefaultValue: '500000' #>       required: no #>     - type: #>       - File #>       label: Input BAM #>       description: The BAM or SAM file to sort. #>       streamable: no #>       id: '#input_bam' #>       inputBinding: #>         position: 1 #>         prefix: INPUT= #>         separate: no #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: File inputs #>       sbg:fileTypes: BAM, SAM #>       sbg:altPrefix: I #>       required: yes #>     - type: #>       - 'null' #>       - name: create_index #>         symbols: #>         - 'True' #>         - 'False' #>         type: enum #>       label: Create index #>       description: 'This parameter indicates whether to create a BAM index when writing #>         a coordinate-sorted BAM file. This option can be set to ''null'' to clear #>         the default value. Possible values: {true, false}.' #>       streamable: no #>       id: '#create_index' #>       inputBinding: #>         position: 5 #>         prefix: CREATE_INDEX= #>         separate: no #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Other input types #>       sbg:toolDefaultValue: 'False' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Compression level #>       description: Compression level for all compressed files created (e.g. BAM and #>         GELI). This option can be set to 'null' to clear the default value. #>       streamable: no #>       id: '#compression_level' #>       inputBinding: #>         position: 0 #>         prefix: COMPRESSION_LEVEL= #>         separate: no #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Other input types #>       sbg:toolDefaultValue: '5' #>       required: no #>     outputs: #>     - type: #>       - 'null' #>       - File #>       label: Sorted BAM/SAM #>       description: Sorted BAM or SAM file. #>       streamable: no #>       id: '#sorted_bam' #>       outputBinding: #>         glob: '*.sorted.?am' #>       sbg:fileTypes: BAM, SAM #>     requirements: #>     - class: ExpressionEngineRequirement #>       id: '#cwl-js-engine' #>       requirements: #>       - class: DockerRequirement #>         dockerPull: rabix/js-engine #>       engineCommand: cwl-engine.js #>     hints: #>     - class: DockerRequirement #>       dockerPull: images.sbgenomics.com/mladenlsbg/picard:1.140 #>       dockerImageId: eab0e70b6629 #>     - class: sbg:CPURequirement #>       value: 1 #>     - class: sbg:MemRequirement #>       value: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  if($job.inputs.memory_per_job){\\n  \\treturn $job.inputs.memory_per_job\\n #>           \\ }\\n  \\treturn 2048\\n}\" #>         class: Expression #>     label: Picard SortSam #>     description: Picard SortSam sorts the input SAM or BAM. Input and output formats #>       are determined by the file extension. #>     class: CommandLineTool #>     baseCommand: #>     - java #>     - class: Expression #>       script: \"{   \\n  if($job.inputs.memory_per_job){\\n    return '-Xmx'.concat($job.inputs.memory_per_job, #>         'M')\\n  }   \\n  \\treturn '-Xmx2048M'\\n}\" #>       engine: '#cwl-js-engine' #>     - -jar #>     - /opt/picard-tools-1.140/picard.jar #>     - SortSam #>     arguments: #>     - position: 0 #>       prefix: OUTPUT= #>       separate: no #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  filename = $job.inputs.input_bam.path\\n  ext = $job.inputs.output_type\\n\\nif #>           (ext === \\\"BAM\\\")\\n{\\n    return filename.split('.').slice(0, -1).concat(\\\"sorted.bam\\\").join(\\\".\\\").replace(/^.*[\\\\\\\\\\\\/]/, #>           '')\\n    }\\n\\nelse if (ext === \\\"SAM\\\")\\n{\\n    return filename.split('.').slice(0, #>           -1).concat(\\\"sorted.sam\\\").join('.').replace(/^.*[\\\\\\\\\\\\/]/, '')\\n}\\n\\nelse #>           \\n{\\n\\treturn filename.split('.').slice(0, -1).concat(\\\"sorted.\\\"+filename.split('.').slice(-1)[0]).join(\\\".\\\").replace(/^.*[\\\\\\\\\\\\/]/, #>           '')\\n}\\n}\" #>         class: Expression #>     - position: 1000 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  filename = $job.inputs.input_bam.path\\n  \\n  /* figuring out #>           output file type */\\n  ext = $job.inputs.output_type\\n  if (ext === \\\"BAM\\\")\\n #>           \\ {\\n    out_extension = \\\"BAM\\\"\\n  }\\n  else if (ext === \\\"SAM\\\")\\n  {\\n #>           \\   out_extension = \\\"SAM\\\"\\n  }\\n  else \\n  {\\n\\tout_extension = filename.split('.').slice(-1)[0].toUpperCase()\\n #>           \\ }  \\n  \\n  /* if exist moving .bai in bam.bai */\\n  if ($job.inputs.create_index #>           === 'True' && $job.inputs.sort_order === 'Coordinate' && out_extension == #>           \\\"BAM\\\")\\n  {\\n    \\n    old_name = filename.split('.').slice(0, -1).concat('sorted.bai').join('.').replace(/^.*[\\\\\\\\\\\\/]/, #>           '')\\n    new_name = filename.split('.').slice(0, -1).concat('sorted.bam.bai').join('.').replace(/^.*[\\\\\\\\\\\\/]/, #>           '')\\n    return \\\"; mv \\\" + \\\" \\\" + old_name + \\\" \\\" + new_name\\n  }\\n\\n}\" #>         class: Expression #>     stdin: '' #>     stdout: '' #>     successCodes: [] #>     temporaryFailCodes: [] #>     x: 773.0831807 #>     'y': 470.9165939 #>   sbg:x: 500.0 #>   sbg:y: 200.0 #> - id: '#STAR' #>   inputs: #>   - id: '#STAR.winFlankNbins' #>   - id: '#STAR.winBinNbits' #>   - id: '#STAR.winAnchorMultimapNmax' #>     source: '#winAnchorMultimapNmax' #>   - id: '#STAR.winAnchorDistNbins' #>     source: '#winAnchorDistNbins' #>   - id: '#STAR.twopassMode' #>   - id: '#STAR.twopass1readsN' #>   - id: '#STAR.sjdbScore' #>   - id: '#STAR.sjdbOverhang' #>     default: 100 #>   - id: '#STAR.sjdbInsertSave' #>   - id: '#STAR.sjdbGTFtagExonParentTranscript' #>   - id: '#STAR.sjdbGTFtagExonParentGene' #>   - id: '#STAR.sjdbGTFfile' #>     source: '#sjdbGTFfile' #>   - id: '#STAR.sjdbGTFfeatureExon' #>   - id: '#STAR.sjdbGTFchrPrefix' #>   - id: '#STAR.seedSearchStartLmaxOverLread' #>   - id: '#STAR.seedSearchStartLmax' #>   - id: '#STAR.seedSearchLmax' #>   - id: '#STAR.seedPerWindowNmax' #>   - id: '#STAR.seedPerReadNmax' #>   - id: '#STAR.seedNoneLociPerWindow' #>   - id: '#STAR.seedMultimapNmax' #>   - id: '#STAR.scoreStitchSJshift' #>   - id: '#STAR.scoreInsOpen' #>   - id: '#STAR.scoreInsBase' #>   - id: '#STAR.scoreGenomicLengthLog2scale' #>   - id: '#STAR.scoreGapNoncan' #>   - id: '#STAR.scoreGapGCAG' #>   - id: '#STAR.scoreGapATAC' #>   - id: '#STAR.scoreGap' #>   - id: '#STAR.scoreDelOpen' #>   - id: '#STAR.scoreDelBase' #>   - id: '#STAR.rg_seq_center' #>   - id: '#STAR.rg_sample_id' #>   - id: '#STAR.rg_platform_unit_id' #>   - id: '#STAR.rg_platform' #>   - id: '#STAR.rg_mfl' #>   - id: '#STAR.rg_library_id' #>   - id: '#STAR.reads' #>     source: '#SBG_FASTQ_Quality_Detector.result' #>   - id: '#STAR.readMatesLengthsIn' #>   - id: '#STAR.readMapNumber' #>   - id: '#STAR.quantTranscriptomeBan' #>   - id: '#STAR.quantMode' #>     default: TranscriptomeSAM #>   - id: '#STAR.outSortingType' #>     default: SortedByCoordinate #>   - id: '#STAR.outSJfilterReads' #>   - id: '#STAR.outSJfilterOverhangMin' #>   - id: '#STAR.outSJfilterIntronMaxVsReadN' #>   - id: '#STAR.outSJfilterDistToOtherSJmin' #>   - id: '#STAR.outSJfilterCountUniqueMin' #>   - id: '#STAR.outSJfilterCountTotalMin' #>   - id: '#STAR.outSAMunmapped' #>   - id: '#STAR.outSAMtype' #>     default: BAM #>   - id: '#STAR.outSAMstrandField' #>   - id: '#STAR.outSAMreadID' #>   - id: '#STAR.outSAMprimaryFlag' #>   - id: '#STAR.outSAMorder' #>   - id: '#STAR.outSAMmode' #>   - id: '#STAR.outSAMmapqUnique' #>   - id: '#STAR.outSAMheaderPG' #>   - id: '#STAR.outSAMheaderHD' #>   - id: '#STAR.outSAMflagOR' #>   - id: '#STAR.outSAMflagAND' #>   - id: '#STAR.outSAMattributes' #>   - id: '#STAR.outReadsUnmapped' #>     default: Fastx #>   - id: '#STAR.outQSconversionAdd' #>   - id: '#STAR.outFilterType' #>   - id: '#STAR.outFilterScoreMinOverLread' #>   - id: '#STAR.outFilterScoreMin' #>   - id: '#STAR.outFilterMultimapScoreRange' #>   - id: '#STAR.outFilterMultimapNmax' #>   - id: '#STAR.outFilterMismatchNoverReadLmax' #>   - id: '#STAR.outFilterMismatchNoverLmax' #>   - id: '#STAR.outFilterMismatchNmax' #>   - id: '#STAR.outFilterMatchNminOverLread' #>   - id: '#STAR.outFilterMatchNmin' #>   - id: '#STAR.outFilterIntronMotifs' #>   - id: '#STAR.limitSjdbInsertNsj' #>   - id: '#STAR.limitOutSJoneRead' #>   - id: '#STAR.limitOutSJcollapsed' #>   - id: '#STAR.limitBAMsortRAM' #>   - id: '#STAR.genomeDirName' #>   - id: '#STAR.genome' #>     source: '#STAR_Genome_Generate.genome' #>   - id: '#STAR.clip5pNbases' #>   - id: '#STAR.clip3pNbases' #>   - id: '#STAR.clip3pAfterAdapterNbases' #>   - id: '#STAR.clip3pAdapterSeq' #>   - id: '#STAR.clip3pAdapterMMp' #>   - id: '#STAR.chimSegmentMin' #>   - id: '#STAR.chimScoreSeparation' #>   - id: '#STAR.chimScoreMin' #>   - id: '#STAR.chimScoreJunctionNonGTAG' #>   - id: '#STAR.chimScoreDropMax' #>   - id: '#STAR.chimOutType' #>   - id: '#STAR.chimJunctionOverhangMin' #>   - id: '#STAR.alignWindowsPerReadNmax' #>   - id: '#STAR.alignTranscriptsPerWindowNmax' #>   - id: '#STAR.alignTranscriptsPerReadNmax' #>   - id: '#STAR.alignSplicedMateMapLminOverLmate' #>   - id: '#STAR.alignSplicedMateMapLmin' #>   - id: '#STAR.alignSoftClipAtReferenceEnds' #>   - id: '#STAR.alignSJoverhangMin' #>   - id: '#STAR.alignSJDBoverhangMin' #>   - id: '#STAR.alignMatesGapMax' #>   - id: '#STAR.alignIntronMin' #>   - id: '#STAR.alignIntronMax' #>   - id: '#STAR.alignEndsType' #>   outputs: #>   - id: '#STAR.unmapped_reads' #>   - id: '#STAR.transcriptome_aligned_reads' #>   - id: '#STAR.splice_junctions' #>   - id: '#STAR.reads_per_gene' #>   - id: '#STAR.log_files' #>   - id: '#STAR.intermediate_genome' #>   - id: '#STAR.chimeric_junctions' #>   - id: '#STAR.chimeric_alignments' #>   - id: '#STAR.aligned_reads' #>   hints: [] #>   run: #>     sbg:validationErrors: [] #>     sbg:sbgMaintained: no #>     sbg:latestRevision: 4 #>     sbg:job: #>       allocatedResources: #>         mem: 60000 #>         cpu: 15 #>       inputs: #>         alignWindowsPerReadNmax: 0 #>         outSAMheaderPG: outSAMheaderPG #>         GENOME_DIR_NAME: '' #>         outFilterMatchNminOverLread: 0 #>         rg_platform_unit_id: rg_platform_unit #>         alignTranscriptsPerReadNmax: 0 #>         readMapNumber: 0 #>         alignSplicedMateMapLminOverLmate: 0 #>         alignMatesGapMax: 0 #>         outFilterMultimapNmax: 0 #>         clip5pNbases: #>         - 0 #>         outSAMstrandField: None #>         readMatesLengthsIn: NotEqual #>         outSAMattributes: Standard #>         seedMultimapNmax: 0 #>         rg_mfl: rg_mfl #>         chimSegmentMin: 0 #>         winAnchorDistNbins: 0 #>         outSortingType: SortedByCoordinate #>         outFilterMultimapScoreRange: 0 #>         sjdbInsertSave: Basic #>         clip3pAfterAdapterNbases: #>         - 0 #>         scoreDelBase: 0 #>         outFilterMatchNmin: 0 #>         twopass1readsN: 0 #>         outSAMunmapped: None #>         genome: #>           size: 0 #>           secondaryFiles: [] #>           class: File #>           path: genome.ext #>         sjdbGTFtagExonParentTranscript: '' #>         limitBAMsortRAM: 0 #>         alignEndsType: Local #>         seedNoneLociPerWindow: 0 #>         rg_sample_id: rg_sample #>         sjdbGTFtagExonParentGene: '' #>         chimScoreMin: 0 #>         outSJfilterIntronMaxVsReadN: #>         - 0 #>         twopassMode: Basic #>         alignSplicedMateMapLmin: 0 #>         outSJfilterReads: All #>         outSAMprimaryFlag: OneBestScore #>         outSJfilterCountTotalMin: #>         - 3 #>         - 1 #>         - 1 #>         - 1 #>         outSAMorder: Paired #>         outSAMflagAND: 0 #>         chimScoreSeparation: 0 #>         alignSJoverhangMin: 0 #>         outFilterScoreMin: 0 #>         seedSearchStartLmax: 0 #>         scoreGapGCAG: 0 #>         scoreGenomicLengthLog2scale: 0 #>         outFilterIntronMotifs: None #>         outFilterMismatchNmax: 0 #>         reads: #>         - size: 0 #>           secondaryFiles: [] #>           class: File #>           metadata: #>             format: fastq #>             paired_end: '1' #>             seq_center: illumina #>           path: /test-data/mate_1.fastq.bz2 #>         scoreGap: 0 #>         outSJfilterOverhangMin: #>         - 30 #>         - 12 #>         - 12 #>         - 12 #>         outSAMflagOR: 0 #>         outSAMmode: Full #>         rg_library_id: '' #>         chimScoreJunctionNonGTAG: 0 #>         scoreInsOpen: 0 #>         clip3pAdapterSeq: #>         - clip3pAdapterSeq #>         chimScoreDropMax: 0 #>         outFilterType: Normal #>         scoreGapATAC: 0 #>         rg_platform: Ion Torrent PGM #>         clip3pAdapterMMp: #>         - 0 #>         sjdbGTFfeatureExon: '' #>         outQSconversionAdd: 0 #>         quantMode: TranscriptomeSAM #>         alignIntronMin: 0 #>         scoreInsBase: 0 #>         scoreGapNoncan: 0 #>         seedSearchLmax: 0 #>         outSJfilterDistToOtherSJmin: #>         - 0 #>         outFilterScoreMinOverLread: 0 #>         alignSJDBoverhangMin: 0 #>         limitOutSJcollapsed: 0 #>         winAnchorMultimapNmax: 0 #>         outFilterMismatchNoverLmax: 0 #>         rg_seq_center: '' #>         outSAMheaderHD: outSAMheaderHD #>         chimOutType: Within #>         quantTranscriptomeBan: IndelSoftclipSingleend #>         limitOutSJoneRead: 0 #>         alignTranscriptsPerWindowNmax: 0 #>         sjdbOverhang: ~ #>         outReadsUnmapped: Fastx #>         scoreStitchSJshift: 0 #>         seedPerWindowNmax: 0 #>         outSJfilterCountUniqueMin: #>         - 3 #>         - 1 #>         - 1 #>         - 1 #>         scoreDelOpen: 0 #>         sjdbGTFfile: #>         - path: /demo/test-data/chr20.gtf #>         clip3pNbases: #>         - 0 #>         - 3 #>         winBinNbits: 0 #>         sjdbScore: ~ #>         seedSearchStartLmaxOverLread: 0 #>         alignIntronMax: 0 #>         seedPerReadNmax: 0 #>         outFilterMismatchNoverReadLmax: 0 #>         winFlankNbins: 0 #>         sjdbGTFchrPrefix: chrPrefix #>         alignSoftClipAtReferenceEnds: 'Yes' #>         outSAMreadID: Standard #>         outSAMtype: BAM #>         chimJunctionOverhangMin: 0 #>         limitSjdbInsertNsj: 0 #>         outSAMmapqUnique: 0 #>     sbg:toolAuthor: Alexander Dobin/CSHL #>     sbg:createdOn: 1450911471 #>     sbg:categories: #>     - Alignment #>     sbg:contributors: #>     - ana_d #>     - bix-demo #>     - uros_sipetic #>     sbg:links: #>     - id: https://github.com/alexdobin/STAR #>       label: Homepage #>     - id: https://github.com/alexdobin/STAR/releases #>       label: Releases #>     - id: https://github.com/alexdobin/STAR/blob/master/doc/STARmanual.pdf #>       label: Manual #>     - id: https://groups.google.com/forum/#!forum/rna-star #>       label: Support #>     - id: http://www.ncbi.nlm.nih.gov/pubmed/23104886 #>       label: Publication #>     sbg:project: bix-demo/star-2-4-2a-demo #>     sbg:createdBy: bix-demo #>     sbg:toolkitVersion: 2.4.2a #>     sbg:id: sevenbridges/public-apps/star/4 #>     sbg:license: GNU General Public License v3.0 only #>     sbg:revision: 4 #>     sbg:cmdPreview: tar -xvf genome.ext && /opt/STAR --runThreadN 15  --readFilesCommand #>       bzcat  --sjdbGTFfile /demo/test-data/chr20.gtf  --sjdbGTFchrPrefix chrPrefix #>       --sjdbInsertSave Basic  --twopass1readsN 0  --chimOutType WithinBAM  --outSAMattrRGline #>       ID:1 CN:illumina PI:rg_mfl PL:Ion_Torrent_PGM PU:rg_platform_unit SM:rg_sample  --quantMode #>       TranscriptomeSAM --outFileNamePrefix ./mate_1.fastq.bz2.  --readFilesIn /test-data/mate_1.fastq.bz2  && #>       tar -vcf mate_1.fastq.bz2._STARgenome.tar ./mate_1.fastq.bz2._STARgenome  && #>       mv mate_1.fastq.bz2.Unmapped.out.mate1 mate_1.fastq.bz2.Unmapped.out.mate1.fastq #>     sbg:modifiedOn: 1462889222 #>     sbg:modifiedBy: ana_d #>     sbg:revisionsInfo: #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911471 #>       sbg:revision: 0 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911473 #>       sbg:revision: 1 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911475 #>       sbg:revision: 2 #>     - sbg:modifiedBy: uros_sipetic #>       sbg:modifiedOn: 1462878528 #>       sbg:revision: 3 #>     - sbg:modifiedBy: ana_d #>       sbg:modifiedOn: 1462889222 #>       sbg:revision: 4 #>     sbg:toolkit: STAR #>     id: sevenbridges/public-apps/star/4 #>     inputs: #>     - type: #>       - 'null' #>       - int #>       label: Flanking regions size #>       description: =log2(winFlank), where win Flank is the size of the left and right #>         flanking regions for each window (int>0). #>       streamable: no #>       id: '#winFlankNbins' #>       inputBinding: #>         position: 0 #>         prefix: --winFlankNbins #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Windows, Anchors, Binning #>       sbg:includeInPorts: yes #>       sbg:toolDefaultValue: '4' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Bin size #>       description: =log2(winBin), where winBin is the size of the bin for the windows/clustering, #>         each window will occupy an integer number of bins (int>0). #>       streamable: no #>       id: '#winBinNbits' #>       inputBinding: #>         position: 0 #>         prefix: --winBinNbits #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Windows, Anchors, Binning #>       sbg:includeInPorts: yes #>       sbg:toolDefaultValue: '16' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max loci anchors #>       description: Max number of loci anchors are allowed to map to (int>0). #>       streamable: no #>       id: '#winAnchorMultimapNmax' #>       inputBinding: #>         position: 0 #>         prefix: --winAnchorMultimapNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Windows, Anchors, Binning #>       sbg:toolDefaultValue: '50' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max bins between anchors #>       description: Max number of bins between two anchors that allows aggregation #>         of anchors into one window (int>0). #>       streamable: no #>       id: '#winAnchorDistNbins' #>       inputBinding: #>         position: 0 #>         prefix: --winAnchorDistNbins #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Windows, Anchors, Binning #>       sbg:toolDefaultValue: '9' #>       required: no #>     - type: #>       - 'null' #>       - name: twopassMode #>         symbols: #>         - None #>         - Basic #>         type: enum #>       label: Two-pass mode #>       description: '2-pass mapping mode. None: 1-pass mapping; Basic: basic 2-pass #>         mapping, with all 1st pass junctions inserted into the genome indices on the #>         fly.' #>       streamable: no #>       id: '#twopassMode' #>       inputBinding: #>         position: 0 #>         prefix: --twopassMode #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: 2-pass mapping #>       sbg:toolDefaultValue: None #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Reads to process in 1st step #>       description: 'Number of reads to process for the 1st step. 0: 1-step only, no #>         2nd pass; use very large number to map all reads in the first step (int>0).' #>       streamable: no #>       id: '#twopass1readsN' #>       sbg:category: 2-pass mapping #>       sbg:toolDefaultValue: '-1' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Extra alignment score #>       description: Extra alignment score for alignments that cross database junctions. #>       streamable: no #>       id: '#sjdbScore' #>       sbg:category: Splice junctions database #>       sbg:toolDefaultValue: '2' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: '\"Overhang\" length' #>       description: Length of the donor/acceptor sequence on each side of the junctions, #>         ideally = (mate_length - 1) (int >= 0), if int = 0, splice junction database #>         is not used. #>       streamable: no #>       id: '#sjdbOverhang' #>       sbg:category: Splice junctions database #>       sbg:toolDefaultValue: '100' #>       required: no #>     - type: #>       - 'null' #>       - name: sjdbInsertSave #>         symbols: #>         - Basic #>         - All #>         - None #>         type: enum #>       label: Save junction files #>       description: 'Which files to save when sjdb junctions are inserted on the fly #>         at the mapping step. None: not saving files at all; Basic: only small junction/transcript #>         files; All: all files including big Genome, SA and SAindex. These files are #>         output as archive.' #>       streamable: no #>       id: '#sjdbInsertSave' #>       sbg:category: Splice junctions database #>       sbg:toolDefaultValue: None #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Exons' parents name #>       description: Tag name to be used as exons' transcript-parents. #>       streamable: no #>       id: '#sjdbGTFtagExonParentTranscript' #>       sbg:category: Splice junctions database #>       sbg:toolDefaultValue: transcript_id #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Gene name #>       description: Tag name to be used as exons' gene-parents. #>       streamable: no #>       id: '#sjdbGTFtagExonParentGene' #>       sbg:category: Splice junctions database #>       sbg:toolDefaultValue: gene_id #>       required: no #>     - type: #>       - 'null' #>       - items: File #>         type: array #>       label: Splice junction file #>       description: Gene model annotations and/or known transcripts. No need to include #>         this input, except in case of using \"on the fly\" annotations. #>       streamable: no #>       id: '#sjdbGTFfile' #>       sbg:category: Basic #>       sbg:fileTypes: GTF, GFF, TXT #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Set exons feature #>       description: Feature type in GTF file to be used as exons for building transcripts. #>       streamable: no #>       id: '#sjdbGTFfeatureExon' #>       sbg:category: Splice junctions database #>       sbg:toolDefaultValue: exon #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Chromosome names #>       description: Prefix for chromosome names in a GTF file (e.g. 'chr' for using #>         ENSMEBL annotations with UCSC geneomes). #>       streamable: no #>       id: '#sjdbGTFchrPrefix' #>       sbg:category: Splice junctions database #>       sbg:toolDefaultValue: '-' #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Search start point normalized #>       description: seedSearchStartLmax normalized to read length (sum of mates' lengths #>         for paired-end reads). #>       streamable: no #>       id: '#seedSearchStartLmaxOverLread' #>       inputBinding: #>         position: 0 #>         prefix: --seedSearchStartLmaxOverLread #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '1.0' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Search start point #>       description: Defines the search start point through the read - the read is split #>         into pieces no longer than this value (int>0). #>       streamable: no #>       id: '#seedSearchStartLmax' #>       inputBinding: #>         position: 0 #>         prefix: --seedSearchStartLmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '50' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max seed length #>       description: Defines the maximum length of the seeds, if =0 max seed length #>         is infinite (int>=0). #>       streamable: no #>       id: '#seedSearchLmax' #>       inputBinding: #>         position: 0 #>         prefix: --seedSearchLmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max seeds per window #>       description: Max number of seeds per window (int>=0). #>       streamable: no #>       id: '#seedPerWindowNmax' #>       inputBinding: #>         position: 0 #>         prefix: --seedPerWindowNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '50' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max seeds per read #>       description: Max number of seeds per read (int>=0). #>       streamable: no #>       id: '#seedPerReadNmax' #>       inputBinding: #>         position: 0 #>         prefix: --seedPerReadNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '1000' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max one-seed loci per window #>       description: Max number of one seed loci per window (int>=0). #>       streamable: no #>       id: '#seedNoneLociPerWindow' #>       inputBinding: #>         position: 0 #>         prefix: --seedNoneLociPerWindow #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '10' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Filter pieces for stitching #>       description: Only pieces that map fewer than this value are utilized in the #>         stitching procedure (int>=0). #>       streamable: no #>       id: '#seedMultimapNmax' #>       inputBinding: #>         position: 0 #>         prefix: --seedMultimapNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '10000' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max score reduction #>       description: Maximum score reduction while searching for SJ boundaries in the #>         stitching step. #>       streamable: no #>       id: '#scoreStitchSJshift' #>       inputBinding: #>         position: 0 #>         prefix: --scoreStitchSJshift #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '1' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Insertion Open Penalty #>       description: Insertion open penalty. #>       streamable: no #>       id: '#scoreInsOpen' #>       inputBinding: #>         position: 0 #>         prefix: --scoreInsOpen #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-2' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Insertion extension penalty #>       description: Insertion extension penalty per base (in addition to --scoreInsOpen). #>       streamable: no #>       id: '#scoreInsBase' #>       inputBinding: #>         position: 0 #>         prefix: --scoreInsBase #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-2' #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Log scaled score #>       description: 'Extra score logarithmically scaled with genomic length of the #>         alignment: <int>*log2(genomicLength).' #>       streamable: no #>       id: '#scoreGenomicLengthLog2scale' #>       inputBinding: #>         position: 0 #>         prefix: --scoreGenomicLengthLog2scale #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-0.25' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Non-canonical gap open #>       description: Non-canonical gap open penalty (in addition to --scoreGap). #>       streamable: no #>       id: '#scoreGapNoncan' #>       inputBinding: #>         position: 0 #>         prefix: --scoreGapNoncan #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-8' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: GC/AG and CT/GC gap open #>       description: GC/AG and CT/GC gap open penalty (in addition to --scoreGap). #>       streamable: no #>       id: '#scoreGapGCAG' #>       inputBinding: #>         position: 0 #>         prefix: --scoreGapGCAG #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-4' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: AT/AC and GT/AT gap open #>       description: AT/AC and GT/AT gap open penalty (in addition to --scoreGap). #>       streamable: no #>       id: '#scoreGapATAC' #>       inputBinding: #>         position: 0 #>         prefix: --scoreGapATAC #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-8' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Gap open penalty #>       description: Gap open penalty. #>       streamable: no #>       id: '#scoreGap' #>       inputBinding: #>         position: 0 #>         prefix: --scoreGap #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Deletion open penalty #>       description: Deletion open penalty. #>       streamable: no #>       id: '#scoreDelOpen' #>       inputBinding: #>         position: 0 #>         prefix: --scoreDelOpen #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-2' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Deletion extension penalty #>       description: Deletion extension penalty per base (in addition to --scoreDelOpen). #>       streamable: no #>       id: '#scoreDelBase' #>       inputBinding: #>         position: 0 #>         prefix: --scoreDelBase #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-2' #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Sequencing center #>       description: Specify the sequencing center for RG line. #>       streamable: no #>       id: '#rg_seq_center' #>       sbg:category: Read group #>       sbg:toolDefaultValue: Inferred from metadata #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Sample ID #>       description: Specify the sample ID for RG line. #>       streamable: no #>       id: '#rg_sample_id' #>       sbg:category: Read group #>       sbg:toolDefaultValue: Inferred from metadata #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Platform unit ID #>       description: Specify the platform unit ID for RG line. #>       streamable: no #>       id: '#rg_platform_unit_id' #>       sbg:category: Read group #>       sbg:toolDefaultValue: Inferred from metadata #>       required: no #>     - type: #>       - 'null' #>       - name: rg_platform #>         symbols: #>         - LS 454 #>         - Helicos #>         - Illumina #>         - ABI SOLiD #>         - Ion Torrent PGM #>         - PacBio #>         type: enum #>       label: Platform #>       description: Specify the version of the technology that was used for sequencing #>         or assaying. #>       streamable: no #>       id: '#rg_platform' #>       sbg:category: Read group #>       sbg:toolDefaultValue: Inferred from metadata #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Median fragment length #>       description: Specify the median fragment length for RG line. #>       streamable: no #>       id: '#rg_mfl' #>       sbg:category: Read group #>       sbg:toolDefaultValue: Inferred from metadata #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Library ID #>       description: Specify the library ID for RG line. #>       streamable: no #>       id: '#rg_library_id' #>       sbg:category: Read group #>       sbg:toolDefaultValue: Inferred from metadata #>       required: no #>     - type: #>       - items: File #>         type: array #>       label: Read sequence #>       description: Read sequence. #>       streamable: no #>       id: '#reads' #>       inputBinding: #>         position: 10 #>         separate: yes #>         itemSeparator: ' ' #>         valueFrom: #>           engine: '#cwl-js-engine' #>           script: \"{\\t\\n  var list = [].concat($job.inputs.reads)\\n  \\n  var resp #>             = []\\n  \\n  if (list.length == 1){\\n    resp.push(list[0].path)\\n    \\n #>             \\ }else if (list.length == 2){    \\n    \\n    left = \\\"\\\"\\n    right = #>             \\\"\\\"\\n      \\n    for (index = 0; index < list.length; ++index) {\\n      \\n #>             \\     if (list[index].metadata != null){\\n        if (list[index].metadata.paired_end #>             == 1){\\n          left = list[index].path\\n        }else if (list[index].metadata.paired_end #>             == 2){\\n          right = list[index].path\\n        }\\n      }\\n    }\\n #>             \\   \\n    if (left != \\\"\\\" && right != \\\"\\\"){      \\n      resp.push(left)\\n #>             \\     resp.push(right)\\n    }\\n  }\\n  else if (list.length > 2){\\n    left #>             = []\\n    right = []\\n      \\n    for (index = 0; index < list.length; #>             ++index) {\\n      \\n      if (list[index].metadata != null){\\n        if #>             (list[index].metadata.paired_end == 1){\\n          left.push(list[index].path)\\n #>             \\       }else if (list[index].metadata.paired_end == 2){\\n          right.push(list[index].path)\\n #>             \\       }\\n      }\\n    }\\n    left_join = left.join()\\n    right_join #>             = right.join()\\n    if (left != [] && right != []){      \\n      resp.push(left_join)\\n #>             \\     resp.push(right_join)\\n    }\\t\\n  }\\n  \\n  if(resp.length > 0){ #>             \\   \\n    return \\\"--readFilesIn \\\".concat(resp.join(\\\" \\\"))\\n  }\\n}\" #>           class: Expression #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Basic #>       sbg:fileTypes: FASTA, FASTQ, FA, FQ, FASTQ.GZ, FQ.GZ, FASTQ.BZ2, FQ.BZ2 #>       required: yes #>     - type: #>       - 'null' #>       - name: readMatesLengthsIn #>         symbols: #>         - NotEqual #>         - Equal #>         type: enum #>       label: Reads lengths #>       description: Equal/Not equal - lengths of names, sequences, qualities for both #>         mates are the same/not the same. \"Not equal\" is safe in all situations. #>       streamable: no #>       id: '#readMatesLengthsIn' #>       inputBinding: #>         position: 0 #>         prefix: --readMatesLengthsIn #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Read parameters #>       sbg:toolDefaultValue: NotEqual #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Reads to map #>       description: Number of reads to map from the beginning of the file. #>       streamable: no #>       id: '#readMapNumber' #>       inputBinding: #>         position: 0 #>         prefix: --readMapNumber #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Read parameters #>       sbg:toolDefaultValue: '-1' #>       required: no #>     - type: #>       - 'null' #>       - name: quantTranscriptomeBan #>         symbols: #>         - IndelSoftclipSingleend #>         - Singleend #>         type: enum #>       label: Prohibit alignment type #>       description: 'Prohibit various alignment type. IndelSoftclipSingleend: prohibit #>         indels, soft clipping and single-end alignments - compatible with RSEM; Singleend: #>         prohibit single-end alignments.' #>       streamable: no #>       id: '#quantTranscriptomeBan' #>       inputBinding: #>         position: 0 #>         prefix: --quantTranscriptomeBan #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Quantification of Annotations #>       sbg:toolDefaultValue: IndelSoftclipSingleend #>       required: no #>     - type: #>       - 'null' #>       - name: quantMode #>         symbols: #>         - TranscriptomeSAM #>         - GeneCounts #>         type: enum #>       label: Quantification mode #>       description: Types of quantification requested. 'TranscriptomeSAM' option outputs #>         SAM/BAM alignments to transcriptome into a separate file. With 'GeneCounts' #>         option, STAR will count number of reads per gene while mapping. #>       streamable: no #>       id: '#quantMode' #>       sbg:category: Quantification of Annotations #>       sbg:toolDefaultValue: '-' #>       required: no #>     - type: #>       - 'null' #>       - name: outSortingType #>         symbols: #>         - Unsorted #>         - SortedByCoordinate #>         - Unsorted SortedByCoordinate #>         type: enum #>       label: Output sorting type #>       description: Type of output sorting. #>       streamable: no #>       id: '#outSortingType' #>       sbg:category: Output #>       sbg:toolDefaultValue: SortedByCoordinate #>       required: no #>     - type: #>       - 'null' #>       - name: outSJfilterReads #>         symbols: #>         - All #>         - Unique #>         type: enum #>       label: Collapsed junctions reads #>       description: 'Which reads to consider for collapsed splice junctions output. #>         All: all reads, unique- and multi-mappers; Unique: uniquely mapping reads #>         only.' #>       streamable: no #>       id: '#outSJfilterReads' #>       inputBinding: #>         position: 0 #>         prefix: --outSJfilterReads #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: 'Output filtering: splice junctions' #>       sbg:toolDefaultValue: All #>       required: no #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Min overhang SJ #>       description: Minimum overhang length for splice junctions on both sides for #>         each of the motifs. To set no output for desired motif, assign -1 to the corresponding #>         field. Does not apply to annotated junctions. #>       streamable: no #>       id: '#outSJfilterOverhangMin' #>       inputBinding: #>         position: 0 #>         prefix: --outSJfilterOverhangMin #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: 'Output filtering: splice junctions' #>       sbg:toolDefaultValue: 30 12 12 12 #>       required: no #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Max gap allowed #>       description: 'Maximum gap allowed for junctions supported by 1,2,3...N reads #>         (int >= 0) i.e. by default junctions supported by 1 read can have gaps <=50000b, #>         by 2 reads: <=100000b, by 3 reads: <=200000. By 4 or more reads: any gap <=alignIntronMax. #>         Does not apply to annotated junctions.' #>       streamable: no #>       id: '#outSJfilterIntronMaxVsReadN' #>       inputBinding: #>         position: 0 #>         prefix: --outSJfilterIntronMaxVsReadN #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: 'Output filtering: splice junctions' #>       sbg:toolDefaultValue: 50000 100000 200000 #>       required: no #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Min distance to other donor/acceptor #>       description: Minimum allowed distance to other junctions' donor/acceptor for #>         each of the motifs (int >= 0). Does not apply to annotated junctions. #>       streamable: no #>       id: '#outSJfilterDistToOtherSJmin' #>       inputBinding: #>         position: 0 #>         prefix: --outSJfilterDistToOtherSJmin #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: 'Output filtering: splice junctions' #>       sbg:toolDefaultValue: 10 0 5 10 #>       required: no #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Min unique count #>       description: Minimum uniquely mapping read count per junction for each of the #>         motifs. To set no output for desired motif, assign -1 to the corresponding #>         field. Junctions are output if one of --outSJfilterCountUniqueMin OR --outSJfilterCountTotalMin #>         conditions are satisfied. Does not apply to annotated junctions. #>       streamable: no #>       id: '#outSJfilterCountUniqueMin' #>       inputBinding: #>         position: 0 #>         prefix: --outSJfilterCountUniqueMin #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: 'Output filtering: splice junctions' #>       sbg:toolDefaultValue: 3 1 1 1 #>       required: no #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Min total count #>       description: Minimum total (multi-mapping+unique) read count per junction for #>         each of the motifs. To set no output for desired motif, assign -1 to the corresponding #>         field. Junctions are output if one of --outSJfilterCountUniqueMin OR --outSJfilterCountTotalMin #>         conditions are satisfied. Does not apply to annotated junctions. #>       streamable: no #>       id: '#outSJfilterCountTotalMin' #>       inputBinding: #>         position: 0 #>         prefix: --outSJfilterCountTotalMin #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: 'Output filtering: splice junctions' #>       sbg:toolDefaultValue: 3 1 1 1 #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMunmapped #>         symbols: #>         - None #>         - Within #>         type: enum #>       label: Write unmapped in SAM #>       description: 'Output of unmapped reads in the SAM format. None: no output Within: #>         output unmapped reads within the main SAM file (i.e. Aligned.out.sam).' #>       streamable: no #>       id: '#outSAMunmapped' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMunmapped #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: None #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMtype #>         symbols: #>         - SAM #>         - BAM #>         type: enum #>       label: Output format #>       description: Format of output alignments. #>       streamable: no #>       id: '#outSAMtype' #>       inputBinding: #>         position: 0 #>         separate: yes #>         valueFrom: #>           engine: '#cwl-js-engine' #>           script: |- #>             { #>               SAM_type = $job.inputs.outSAMtype #>               SORT_type = $job.inputs.outSortingType #>               if (SAM_type && SORT_type) { #>                 return \"--outSAMtype \".concat(SAM_type, \" \", SORT_type) #>               } #>             } #>           class: Expression #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: SAM #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMstrandField #>         symbols: #>         - None #>         - intronMotif #>         type: enum #>       label: Strand field flag #>       description: 'Cufflinks-like strand field flag. None: not used; intronMotif: #>         strand derived from the intron motif. Reads with inconsistent and/or non-canonical #>         introns are filtered out.' #>       streamable: no #>       id: '#outSAMstrandField' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMstrandField #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: None #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMreadID #>         symbols: #>         - Standard #>         - Number #>         type: enum #>       label: Read ID #>       description: 'Read ID record type. Standard: first word (until space) from the #>         FASTx read ID line, removing /1,/2 from the end; Number: read number (index) #>         in the FASTx file.' #>       streamable: no #>       id: '#outSAMreadID' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMreadID #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: Standard #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMprimaryFlag #>         symbols: #>         - OneBestScore #>         - AllBestScore #>         type: enum #>       label: Primary alignments #>       description: 'Which alignments are considered primary - all others will be marked #>         with 0x100 bit in the FLAG. OneBestScore: only one alignment with the best #>         score is primary; AllBestScore: all alignments with the best score are primary.' #>       streamable: no #>       id: '#outSAMprimaryFlag' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMprimaryFlag #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: OneBestScore #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMorder #>         symbols: #>         - Paired #>         - PairedKeepInputOrder #>         type: enum #>       label: Sorting in SAM #>       description: 'Type of sorting for the SAM output. Paired: one mate after the #>         other for all paired alignments; PairedKeepInputOrder: one mate after the #>         other for all paired alignments, the order is kept the same as in the input #>         FASTQ files.' #>       streamable: no #>       id: '#outSAMorder' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMorder #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: Paired #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMmode #>         symbols: #>         - Full #>         - NoQS #>         type: enum #>       label: SAM mode #>       description: 'Mode of SAM output. Full: full SAM output; NoQS: full SAM but #>         without quality scores.' #>       streamable: no #>       id: '#outSAMmode' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMmode #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: Full #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: MAPQ value #>       description: MAPQ value for unique mappers (0 to 255). #>       streamable: no #>       id: '#outSAMmapqUnique' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMmapqUnique #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: '255' #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: SAM header @PG #>       description: Extra @PG (software) line of the SAM header (in addition to STAR). #>       streamable: no #>       id: '#outSAMheaderPG' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMheaderPG #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: '-' #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: SAM header @HD #>       description: '@HD (header) line of the SAM header.' #>       streamable: no #>       id: '#outSAMheaderHD' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMheaderHD #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: '-' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: OR SAM flag #>       description: Set specific bits of the SAM FLAG. #>       streamable: no #>       id: '#outSAMflagOR' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMflagOR #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: AND SAM flag #>       description: Set specific bits of the SAM FLAG. #>       streamable: no #>       id: '#outSAMflagAND' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMflagAND #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: '65535' #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMattributes #>         symbols: #>         - Standard #>         - NH #>         - All #>         - None #>         type: enum #>       label: SAM attributes #>       description: 'Desired SAM attributes, in the order desired for the output SAM. #>         NH: any combination in any order; Standard: NH HI AS nM; All: NH HI AS nM #>         NM MD jM jI; None: no attributes.' #>       streamable: no #>       id: '#outSAMattributes' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMattributes #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: Standard #>       required: no #>     - type: #>       - 'null' #>       - name: outReadsUnmapped #>         symbols: #>         - None #>         - Fastx #>         type: enum #>       label: Output unmapped reads #>       description: 'Output of unmapped reads (besides SAM). None: no output; Fastx: #>         output in separate fasta/fastq files, Unmapped.out.mate1/2.' #>       streamable: no #>       id: '#outReadsUnmapped' #>       inputBinding: #>         position: 0 #>         prefix: --outReadsUnmapped #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: None #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Quality conversion #>       description: Add this number to the quality score (e.g. to convert from Illumina #>         to Sanger, use -31). #>       streamable: no #>       id: '#outQSconversionAdd' #>       inputBinding: #>         position: 0 #>         prefix: --outQSconversionAdd #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - name: outFilterType #>         symbols: #>         - Normal #>         - BySJout #>         type: enum #>       label: Filtering type #>       description: 'Type of filtering. Normal: standard filtering using only current #>         alignment; BySJout: keep only those reads that contain junctions that passed #>         filtering into SJ.out.tab.' #>       streamable: no #>       id: '#outFilterType' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterType #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: Normal #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Min score normalized #>       description: '''Minimum score'' normalized to read length (sum of mates'' lengths #>         for paired-end reads).' #>       streamable: no #>       id: '#outFilterScoreMinOverLread' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterScoreMinOverLread #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '0.66' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min score #>       description: Alignment will be output only if its score is higher than this #>         value. #>       streamable: no #>       id: '#outFilterScoreMin' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterScoreMin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Multimapping score range #>       description: The score range below the maximum score for multimapping alignments. #>       streamable: no #>       id: '#outFilterMultimapScoreRange' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterMultimapScoreRange #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '1' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max number of mappings #>       description: Read alignments will be output only if the read maps fewer than #>         this value, otherwise no alignments will be output. #>       streamable: no #>       id: '#outFilterMultimapNmax' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterMultimapNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '10' #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Mismatches to *read* length #>       description: Alignment will be output only if its ratio of mismatches to *read* #>         length is less than this value. #>       streamable: no #>       id: '#outFilterMismatchNoverReadLmax' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterMismatchNoverReadLmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '1' #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Mismatches to *mapped* length #>       description: Alignment will be output only if its ratio of mismatches to *mapped* #>         length is less than this value. #>       streamable: no #>       id: '#outFilterMismatchNoverLmax' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterMismatchNoverLmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '0.3' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max number of mismatches #>       description: Alignment will be output only if it has fewer mismatches than this #>         value. #>       streamable: no #>       id: '#outFilterMismatchNmax' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterMismatchNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '10' #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Min matched bases normalized #>       description: '''Minimum matched bases'' normalized to read length (sum of mates #>         lengths for paired-end reads).' #>       streamable: no #>       id: '#outFilterMatchNminOverLread' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterMatchNminOverLread #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '0.66' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min matched bases #>       description: Alignment will be output only if the number of matched bases is #>         higher than this value. #>       streamable: no #>       id: '#outFilterMatchNmin' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterMatchNmin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - name: outFilterIntronMotifs #>         symbols: #>         - None #>         - RemoveNoncanonical #>         - RemoveNoncanonicalUnannotated #>         type: enum #>       label: Motifs filtering #>       description: 'Filter alignment using their motifs. None: no filtering; RemoveNoncanonical: #>         filter out alignments that contain non-canonical junctions; RemoveNoncanonicalUnannotated: #>         filter out alignments that contain non-canonical unannotated junctions when #>         using annotated splice junctions database. The annotated non-canonical junctions #>         will be kept.' #>       streamable: no #>       id: '#outFilterIntronMotifs' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterIntronMotifs #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: None #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max insert junctions #>       description: Maximum number of junction to be inserted to the genome on the #>         fly at the mapping stage, including those from annotations and those detected #>         in the 1st step of the 2-pass run. #>       streamable: no #>       id: '#limitSjdbInsertNsj' #>       inputBinding: #>         position: 0 #>         prefix: --limitSjdbInsertNsj #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Limits #>       sbg:toolDefaultValue: '1000000' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Junctions max number #>       description: Max number of junctions for one read (including all multi-mappers). #>       streamable: no #>       id: '#limitOutSJoneRead' #>       inputBinding: #>         position: 0 #>         prefix: --limitOutSJoneRead #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Limits #>       sbg:toolDefaultValue: '1000' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Collapsed junctions max number #>       description: Max number of collapsed junctions. #>       streamable: no #>       id: '#limitOutSJcollapsed' #>       inputBinding: #>         position: 0 #>         prefix: --limitOutSJcollapsed #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Limits #>       sbg:toolDefaultValue: '1000000' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Limit BAM sorting memory #>       description: Maximum available RAM for sorting BAM. If set to 0, it will be #>         set to the genome index size. #>       streamable: no #>       id: '#limitBAMsortRAM' #>       inputBinding: #>         position: 0 #>         prefix: --limitBAMsortRAM #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Limits #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Genome dir name #>       description: Name of the directory which contains genome files (when genome.tar #>         is uncompressed). #>       streamable: no #>       id: '#genomeDirName' #>       inputBinding: #>         position: 0 #>         prefix: --genomeDir #>         separate: yes #>         valueFrom: #>           engine: '#cwl-js-engine' #>           script: $job.inputs.genomeDirName || \"genomeDir\" #>           class: Expression #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Basic #>       sbg:toolDefaultValue: genomeDir #>       required: no #>     - type: #>       - File #>       label: Genome files #>       description: Genome files created using STAR Genome Generate. #>       streamable: no #>       id: '#genome' #>       sbg:category: Basic #>       sbg:fileTypes: TAR #>       required: yes #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Clip 5p bases #>       description: Number of bases to clip from 5p of each mate. In case only one #>         value is given, it will be assumed the same for both mates. #>       streamable: no #>       id: '#clip5pNbases' #>       inputBinding: #>         position: 0 #>         prefix: --clip5pNbases #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Read parameters #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Clip 3p bases #>       description: Number of bases to clip from 3p of each mate. In case only one #>         value is given, it will be assumed the same for both mates. #>       streamable: no #>       id: '#clip3pNbases' #>       inputBinding: #>         position: 0 #>         prefix: --clip3pNbases #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Read parameters #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Clip 3p after adapter seq. #>       description: Number of bases to clip from 3p of each mate after the adapter #>         clipping. In case only one value is given, it will be assumed the same for #>         both mates. #>       streamable: no #>       id: '#clip3pAfterAdapterNbases' #>       inputBinding: #>         position: 0 #>         prefix: --clip3pAfterAdapterNbases #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Read parameters #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - items: string #>         type: array #>       label: Clip 3p adapter sequence #>       description: Adapter sequence to clip from 3p of each mate. In case only one #>         value is given, it will be assumed the same for both mates. #>       streamable: no #>       id: '#clip3pAdapterSeq' #>       inputBinding: #>         position: 0 #>         prefix: --clip3pAdapterSeq #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Read parameters #>       sbg:toolDefaultValue: '-' #>       required: no #>     - type: #>       - 'null' #>       - items: float #>         type: array #>       label: Max mismatches proportions #>       description: Max proportion of mismatches for 3p adapter clipping for each mate. #>         In case only one value is given, it will be assumed the same for both mates. #>       streamable: no #>       id: '#clip3pAdapterMMp' #>       inputBinding: #>         position: 0 #>         prefix: --clip3pAdapterMMp #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Read parameters #>       sbg:toolDefaultValue: '0.1' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min segment length #>       description: Minimum length of chimeric segment length, if =0, no chimeric output #>         (int>=0). #>       streamable: no #>       id: '#chimSegmentMin' #>       inputBinding: #>         position: 0 #>         prefix: --chimSegmentMin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Chimeric Alignments #>       sbg:toolDefaultValue: '15' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min separation score #>       description: Minimum difference (separation) between the best chimeric score #>         and the next one (int>=0). #>       streamable: no #>       id: '#chimScoreSeparation' #>       inputBinding: #>         position: 0 #>         prefix: --chimScoreSeparation #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Chimeric Alignments #>       sbg:toolDefaultValue: '10' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min total score #>       description: Minimum total (summed) score of the chimeric segments (int>=0). #>       streamable: no #>       id: '#chimScoreMin' #>       inputBinding: #>         position: 0 #>         prefix: --chimScoreMin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Chimeric Alignments #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Non-GT/AG penalty #>       description: Penalty for a non-GT/AG chimeric junction. #>       streamable: no #>       id: '#chimScoreJunctionNonGTAG' #>       inputBinding: #>         position: 0 #>         prefix: --chimScoreJunctionNonGTAG #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Chimeric Alignments #>       sbg:toolDefaultValue: '-1' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max drop score #>       description: Max drop (difference) of chimeric score (the sum of scores of all #>         chimeric segements) from the read length (int>=0). #>       streamable: no #>       id: '#chimScoreDropMax' #>       inputBinding: #>         position: 0 #>         prefix: --chimScoreDropMax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Chimeric Alignments #>       sbg:toolDefaultValue: '20' #>       required: no #>     - type: #>       - 'null' #>       - name: chimOutType #>         symbols: #>         - SeparateSAMold #>         - Within #>         type: enum #>       label: Chimeric output type #>       description: 'Type of chimeric output. SeparateSAMold: output old SAM into separate #>         Chimeric.out.sam file; Within: output into main aligned SAM/BAM files.' #>       streamable: no #>       id: '#chimOutType' #>       sbg:category: Chimeric Alignments #>       sbg:toolDefaultValue: SeparateSAMold #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min junction overhang #>       description: Minimum overhang for a chimeric junction (int>=0). #>       streamable: no #>       id: '#chimJunctionOverhangMin' #>       inputBinding: #>         position: 0 #>         prefix: --chimJunctionOverhangMin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Chimeric Alignments #>       sbg:toolDefaultValue: '20' #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Max windows per read #>       description: Max number of windows per read (int>0). #>       streamable: no #>       id: '#alignWindowsPerReadNmax' #>       inputBinding: #>         position: 0 #>         prefix: --alignWindowsPerReadNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '10000' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max transcripts per window #>       description: Max number of transcripts per window (int>0). #>       streamable: no #>       id: '#alignTranscriptsPerWindowNmax' #>       inputBinding: #>         position: 0 #>         prefix: --alignTranscriptsPerWindowNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '100' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max transcripts per read #>       description: Max number of different alignments per read to consider (int>0). #>       streamable: no #>       id: '#alignTranscriptsPerReadNmax' #>       inputBinding: #>         position: 0 #>         prefix: --alignTranscriptsPerReadNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '10000' #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Min mapped length normalized #>       description: alignSplicedMateMapLmin normalized to mate length (float>0). #>       streamable: no #>       id: '#alignSplicedMateMapLminOverLmate' #>       inputBinding: #>         position: 0 #>         prefix: --alignSplicedMateMapLminOverLmate #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '0.66' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min mapped length #>       description: Minimum mapped length for a read mate that is spliced (int>0). #>       streamable: no #>       id: '#alignSplicedMateMapLmin' #>       inputBinding: #>         position: 0 #>         prefix: --alignSplicedMateMapLmin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - name: alignSoftClipAtReferenceEnds #>         symbols: #>         - 'Yes' #>         - 'No' #>         type: enum #>       label: Soft clipping #>       description: 'Option which allows soft clipping of alignments at the reference #>         (chromosome) ends. Can be disabled for compatibility with Cufflinks/Cuffmerge. #>         Yes: Enables soft clipping; No: Disables soft clipping.' #>       streamable: no #>       id: '#alignSoftClipAtReferenceEnds' #>       inputBinding: #>         position: 0 #>         prefix: --alignSoftClipAtReferenceEnds #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: 'Yes' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min overhang #>       description: Minimum overhang (i.e. block size) for spliced alignments (int>0). #>       streamable: no #>       id: '#alignSJoverhangMin' #>       inputBinding: #>         position: 0 #>         prefix: --alignSJoverhangMin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '5' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: 'Min overhang: annotated' #>       description: Minimum overhang (i.e. block size) for annotated (sjdb) spliced #>         alignments (int>0). #>       streamable: no #>       id: '#alignSJDBoverhangMin' #>       inputBinding: #>         position: 0 #>         prefix: --alignSJDBoverhangMin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '3' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max mates gap #>       description: Maximum gap between two mates, if 0, max intron gap will be determined #>         by (2^winBinNbits)*winAnchorDistNbins. #>       streamable: no #>       id: '#alignMatesGapMax' #>       inputBinding: #>         position: 0 #>         prefix: --alignMatesGapMax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min intron size #>       description: 'Minimum intron size: genomic gap is considered intron if its length #>         >= alignIntronMin, otherwise it is considered Deletion (int>=0).' #>       streamable: no #>       id: '#alignIntronMin' #>       inputBinding: #>         position: 0 #>         prefix: --alignIntronMin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '21' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max intron size #>       description: Maximum intron size, if 0, max intron size will be determined by #>         (2^winBinNbits)*winAnchorDistNbins. #>       streamable: no #>       id: '#alignIntronMax' #>       inputBinding: #>         position: 0 #>         prefix: --alignIntronMax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - name: alignEndsType #>         symbols: #>         - Local #>         - EndToEnd #>         type: enum #>       label: Alignment type #>       description: 'Type of read ends alignment. Local: standard local alignment with #>         soft-clipping allowed. EndToEnd: force end to end read alignment, do not soft-clip.' #>       streamable: no #>       id: '#alignEndsType' #>       inputBinding: #>         position: 0 #>         prefix: --alignEndsType #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: Local #>       required: no #>     outputs: #>     - type: #>       - 'null' #>       - items: File #>         type: array #>       label: Unmapped reads #>       description: Output of unmapped reads. #>       streamable: no #>       id: '#unmapped_reads' #>       outputBinding: #>         glob: '*Unmapped.out*' #>       sbg:fileTypes: FASTQ #>     - type: #>       - 'null' #>       - File #>       label: Transcriptome alignments #>       description: Alignments translated into transcript coordinates. #>       streamable: no #>       id: '#transcriptome_aligned_reads' #>       outputBinding: #>         glob: '*Transcriptome*' #>       sbg:fileTypes: BAM #>     - type: #>       - 'null' #>       - File #>       label: Splice junctions #>       description: High confidence collapsed splice junctions in tab-delimited format. #>         Only junctions supported by uniquely mapping reads are reported. #>       streamable: no #>       id: '#splice_junctions' #>       outputBinding: #>         glob: '*SJ.out.tab' #>       sbg:fileTypes: TAB #>     - type: #>       - 'null' #>       - File #>       label: Reads per gene #>       description: File with number of reads per gene. A read is counted if it overlaps #>         (1nt or more) one and only one gene. #>       streamable: no #>       id: '#reads_per_gene' #>       outputBinding: #>         glob: '*ReadsPerGene*' #>       sbg:fileTypes: TAB #>     - type: #>       - 'null' #>       - items: File #>         type: array #>       label: Log files #>       description: Log files produced during alignment. #>       streamable: no #>       id: '#log_files' #>       outputBinding: #>         glob: '*Log*.out' #>       sbg:fileTypes: OUT #>     - type: #>       - 'null' #>       - File #>       label: Intermediate genome files #>       description: Archive with genome files produced when annotations are included #>         on the fly (in the mapping step). #>       streamable: no #>       id: '#intermediate_genome' #>       outputBinding: #>         glob: '*_STARgenome.tar' #>       sbg:fileTypes: TAR #>     - type: #>       - 'null' #>       - File #>       label: Chimeric junctions #>       description: If chimSegmentMin in 'Chimeric Alignments' section is set to 0, #>         'Chimeric Junctions' won't be output. #>       streamable: no #>       id: '#chimeric_junctions' #>       outputBinding: #>         glob: '*Chimeric.out.junction' #>       sbg:fileTypes: JUNCTION #>     - type: #>       - 'null' #>       - File #>       label: Chimeric alignments #>       description: Aligned Chimeric sequences SAM - if chimSegmentMin = 0, no Chimeric #>         Alignment SAM and Chimeric Junctions outputs. #>       streamable: no #>       id: '#chimeric_alignments' #>       outputBinding: #>         glob: '*.Chimeric.out.sam' #>       sbg:fileTypes: SAM #>     - type: #>       - 'null' #>       - File #>       label: Aligned SAM/BAM #>       description: Aligned sequence in SAM/BAM format. #>       streamable: no #>       id: '#aligned_reads' #>       outputBinding: #>         glob: #>           engine: '#cwl-js-engine' #>           script: |- #>             { #>               if ($job.inputs.outSortingType == 'SortedByCoordinate') { #>                 sort_name = '.sortedByCoord' #>               } #>               else { #>                 sort_name = '' #>               } #>               if ($job.inputs.outSAMtype == 'BAM') { #>                 sam_name = \"*.Aligned\".concat( sort_name, '.out.bam') #>               } #>               else { #>                 sam_name = \"*.Aligned.out.sam\" #>               } #>               return sam_name #>             } #>           class: Expression #>       sbg:fileTypes: SAM, BAM #>     requirements: #>     - class: ExpressionEngineRequirement #>       id: '#cwl-js-engine' #>       requirements: #>       - class: DockerRequirement #>         dockerPull: rabix/js-engine #>     hints: #>     - class: DockerRequirement #>       dockerPull: images.sbgenomics.com/ana_d/star:2.4.2a #>       dockerImageId: a4b0ad2c3cae #>     - class: sbg:MemRequirement #>       value: 60000 #>     - class: sbg:CPURequirement #>       value: 15 #>     label: STAR #>     description: STAR is an ultrafast universal RNA-seq aligner. It has very high #>       mapping speed, accurate alignment of contiguous and spliced reads, detection #>       of polyA-tails, non-canonical splices and chimeric (fusion) junctions. It works #>       with reads starting from lengths ~15 bases up to ~300 bases. In case of having #>       longer reads, use of STAR Long is recommended. #>     class: CommandLineTool #>     baseCommand: #>     - tar #>     - -xvf #>     - class: Expression #>       script: $job.inputs.genome.path #>       engine: '#cwl-js-engine' #>     - '&&' #>     - /opt/STAR #>     - --runThreadN #>     - class: Expression #>       script: |- #>         { #>           return $job.allocatedResources.cpu #>         } #>       engine: '#cwl-js-engine' #>     arguments: #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: |- #>           { #>             file = [].concat($job.inputs.reads)[0].path #>             extension = /(?:\\.([^.]+))?$/.exec(file)[1] #>             if (extension == \"gz\") { #>               return \"--readFilesCommand zcat\" #>             } else if (extension == \"bz2\") { #>               return \"--readFilesCommand bzcat\" #>             } #>           } #>         class: Expression #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\t\\n  var sjFormat = \\\"False\\\"\\n  var gtfgffFormat = \\\"False\\\"\\n #>           \\ var list = $job.inputs.sjdbGTFfile\\n  var paths_list = []\\n  var joined_paths #>           = \\\"\\\"\\n  \\n  if (list) {\\n    list.forEach(function(f){return paths_list.push(f.path)})\\n #>           \\   joined_paths = paths_list.join(\\\" \\\")\\n\\n\\n    paths_list.forEach(function(f){\\n #>           \\     ext = f.replace(/^.*\\\\./, '')\\n      if (ext == \\\"gff\\\" || ext == #>           \\\"gtf\\\") {\\n        gtfgffFormat = \\\"True\\\"\\n        return gtfgffFormat\\n #>           \\     }\\n      if (ext == \\\"txt\\\") {\\n        sjFormat = \\\"True\\\"\\n        return #>           sjFormat\\n      }\\n    })\\n\\n    if ($job.inputs.sjdbGTFfile && $job.inputs.sjdbInsertSave #>           != \\\"None\\\") {\\n      if (sjFormat == \\\"True\\\") {\\n        return \\\"--sjdbFileChrStartEnd #>           \\\".concat(joined_paths)\\n      }\\n      else if (gtfgffFormat == \\\"True\\\") #>           {\\n        return \\\"--sjdbGTFfile \\\".concat(joined_paths)\\n      }\\n    }\\n #>           \\ }\\n}\" #>         class: Expression #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  a = b = c = d = e = f = g = []\\n  if ($job.inputs.sjdbGTFchrPrefix) #>           {\\n    a = [\\\"--sjdbGTFchrPrefix\\\", $job.inputs.sjdbGTFchrPrefix]\\n  }\\n #>           \\ if ($job.inputs.sjdbGTFfeatureExon) {\\n    b = [\\\"--sjdbGTFfeatureExon\\\", #>           $job.inputs.sjdbGTFfeatureExon]\\n  }\\n  if ($job.inputs.sjdbGTFtagExonParentTranscript) #>           {\\n    c = [\\\"--sjdbGTFtagExonParentTranscript\\\", $job.inputs.sjdbGTFtagExonParentTranscript]\\n #>           \\ }\\n  if ($job.inputs.sjdbGTFtagExonParentGene) {\\n    d = [\\\"--sjdbGTFtagExonParentGene\\\", #>           $job.inputs.sjdbGTFtagExonParentGene]\\n  }\\n  if ($job.inputs.sjdbOverhang) #>           {\\n    e = [\\\"--sjdbOverhang\\\", $job.inputs.sjdbOverhang]\\n  }\\n  if ($job.inputs.sjdbScore) #>           {\\n    f = [\\\"--sjdbScore\\\", $job.inputs.sjdbScore]\\n  }\\n  if ($job.inputs.sjdbInsertSave) #>           {\\n    g = [\\\"--sjdbInsertSave\\\", $job.inputs.sjdbInsertSave]\\n  }\\n  \\n #>           \\ \\n  \\n  if ($job.inputs.sjdbInsertSave != \\\"None\\\" && $job.inputs.sjdbGTFfile) #>           {\\n    new_list = a.concat(b, c, d, e, f, g)\\n    return new_list.join(\\\" #>           \\\")\\n  }\\n}\" #>         class: Expression #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: |- #>           { #>             if ($job.inputs.twopassMode == \"Basic\") { #>               return \"--twopass1readsN \".concat($job.inputs.twopass1readsN) #>             } #>           } #>         class: Expression #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: |- #>           { #>             if ($job.inputs.chimOutType == \"Within\") { #>               return \"--chimOutType \".concat(\"Within\", $job.inputs.outSAMtype) #>             } #>             else { #>               return \"--chimOutType SeparateSAMold\" #>             } #>           } #>         class: Expression #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  var param_list = []\\n  \\n  function add_param(key, value){\\n #>           \\   if (value == \\\"\\\") {\\n      return\\n    }\\n    else {\\n      return #>           param_list.push(key.concat(\\\":\\\", value))\\n    }\\n  }\\n  \\n  add_param('ID', #>           \\\"1\\\")\\n  if ($job.inputs.rg_seq_center) {\\n    add_param('CN', $job.inputs.rg_seq_center)\\n #>           \\ } else if ([].concat($job.inputs.reads)[0].metadata.seq_center) {\\n    add_param('CN', #>           [].concat($job.inputs.reads)[0].metadata.seq_center)\\n  }\\n  if ($job.inputs.rg_library_id) #>           {\\n    add_param('LB', $job.inputs.rg_library_id)\\n  } else if ([].concat($job.inputs.reads)[0].metadata.library_id) #>           {\\n    add_param('LB', [].concat($job.inputs.reads)[0].metadata.library_id)\\n #>           \\ }\\n  if ($job.inputs.rg_mfl) {\\n    add_param('PI', $job.inputs.rg_mfl)\\n #>           \\ } else if ([].concat($job.inputs.reads)[0].metadata.median_fragment_length) #>           {\\n    add_param('PI', [].concat($job.inputs.reads)[0].metadata.median_fragment_length)\\n #>           \\ }\\n  if ($job.inputs.rg_platform) {\\n    add_param('PL', $job.inputs.rg_platform.replace(/ #>           /g,\\\"_\\\"))\\n  } else if ([].concat($job.inputs.reads)[0].metadata.platform) #>           {\\n    add_param('PL', [].concat($job.inputs.reads)[0].metadata.platform.replace(/ #>           /g,\\\"_\\\"))\\n  }\\n  if ($job.inputs.rg_platform_unit_id) {\\n    add_param('PU', #>           $job.inputs.rg_platform_unit_id)\\n  } else if ([].concat($job.inputs.reads)[0].metadata.platform_unit_id) #>           {\\n    add_param('PU', [].concat($job.inputs.reads)[0].metadata.platform_unit_id)\\n #>           \\ }\\n  if ($job.inputs.rg_sample_id) {\\n    add_param('SM', $job.inputs.rg_sample_id)\\n #>           \\ } else if ([].concat($job.inputs.reads)[0].metadata.sample_id) {\\n    add_param('SM', #>           [].concat($job.inputs.reads)[0].metadata.sample_id)\\n  }\\n  return \\\"--outSAMattrRGline #>           \\\".concat(param_list.join(\\\" \\\"))\\n}\" #>         class: Expression #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: |- #>           { #>             if ($job.inputs.sjdbGTFfile && $job.inputs.quantMode) { #>               return \"--quantMode \".concat($job.inputs.quantMode) #>             } #>           } #>         class: Expression #>     - position: 100 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  function sharedStart(array){\\n  var A= array.concat().sort(), #>           \\n      a1= A[0], a2= A[A.length-1], L= a1.length, i= 0;\\n  while(i<L && #>           a1.charAt(i)=== a2.charAt(i)) i++;\\n  return a1.substring(0, i);\\n  }\\n #>           \\ path_list = []\\n  arr = [].concat($job.inputs.reads)\\n  arr.forEach(function(f){return #>           path_list.push(f.path.replace(/\\\\\\\\/g,'/').replace( /.*\\\\//, '' ))})\\n  common_prefix #>           = sharedStart(path_list)\\n  intermediate = common_prefix.replace( /\\\\-$|\\\\_$|\\\\.$/, #>           '' ).concat(\\\"._STARgenome\\\")\\n  source = \\\"./\\\".concat(intermediate)\\n #>           \\ destination = intermediate.concat(\\\".tar\\\")\\n  if ($job.inputs.sjdbGTFfile #>           && $job.inputs.sjdbInsertSave && $job.inputs.sjdbInsertSave != \\\"None\\\") #>           {\\n    return \\\"&& tar -vcf \\\".concat(destination, \\\" \\\", source)\\n  }\\n}\" #>         class: Expression #>     - position: 0 #>       prefix: --outFileNamePrefix #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  function sharedStart(array){\\n  var A= array.concat().sort(), #>           \\n      a1= A[0], a2= A[A.length-1], L= a1.length, i= 0;\\n  while(i<L && #>           a1.charAt(i)=== a2.charAt(i)) i++;\\n  return a1.substring(0, i);\\n  }\\n #>           \\ path_list = []\\n  arr = [].concat($job.inputs.reads)\\n  arr.forEach(function(f){return #>           path_list.push(f.path.replace(/\\\\\\\\/g,'/').replace( /.*\\\\//, '' ))})\\n  common_prefix #>           = sharedStart(path_list)\\n  return \\\"./\\\".concat(common_prefix.replace( #>           /\\\\-$|\\\\_$|\\\\.$/, '' ), \\\".\\\")\\n}\" #>         class: Expression #>     - position: 101 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  function sharedStart(array){\\n  var A= array.concat().sort(), #>           \\n      a1= A[0], a2= A[A.length-1], L= a1.length, i= 0;\\n  while(i<L && #>           a1.charAt(i)=== a2.charAt(i)) i++;\\n  return a1.substring(0, i);\\n  }\\n #>           \\ path_list = []\\n  arr = [].concat($job.inputs.reads)\\n  arr.forEach(function(f){return #>           path_list.push(f.path.replace(/\\\\\\\\/g,'/').replace( /.*\\\\//, '' ))})\\n  common_prefix #>           = sharedStart(path_list)\\n  mate1 = common_prefix.replace( /\\\\-$|\\\\_$|\\\\.$/, #>           '' ).concat(\\\".Unmapped.out.mate1\\\")\\n  mate2 = common_prefix.replace( /\\\\-$|\\\\_$|\\\\.$/, #>           '' ).concat(\\\".Unmapped.out.mate2\\\")\\n  mate1fq = mate1.concat(\\\".fastq\\\")\\n #>           \\ mate2fq = mate2.concat(\\\".fastq\\\")\\n  if ($job.inputs.outReadsUnmapped #>           == \\\"Fastx\\\" && arr.length > 1) {\\n    return \\\"&& mv \\\".concat(mate1, \\\" #>           \\\", mate1fq, \\\" && mv \\\", mate2, \\\" \\\", mate2fq)\\n  }\\n  else if ($job.inputs.outReadsUnmapped #>           == \\\"Fastx\\\" && arr.length == 1) {\\n    return \\\"&& mv \\\".concat(mate1, #>           \\\" \\\", mate1fq)\\n  }\\n}\" #>         class: Expression #>     stdin: '' #>     stdout: '' #>     successCodes: [] #>     temporaryFailCodes: [] #>     x: 624.0 #>     'y': 323 #>   sbg:x: 700.0 #>   sbg:y: 200.0 #> sbg:canvas_zoom: 0.6 #> sbg:canvas_y: -16 #> sbg:canvas_x: -41 #>  f1$set_flow_output(c(\"#log_files\", \"intermediate_genome\")) #> sbg:validationErrors: [] #> sbg:sbgMaintained: no #> sbg:latestRevision: 2 #> sbg:toolAuthor: Seven Bridges Genomics #> sbg:createdOn: 1463601910 #> sbg:categories: #> - Alignment #> - RNA #> sbg:contributors: #> - tengfei #> sbg:project: tengfei/quickstart #> sbg:createdBy: tengfei #> sbg:toolkitVersion: 2.4.2a #> sbg:id: tengfei/quickstart/rna-seq-alignment-star-demo/2 #> sbg:license: Apache License 2.0 #> sbg:revision: 2 #> sbg:modifiedOn: 1463601974 #> sbg:modifiedBy: tengfei #> sbg:revisionsInfo: #> - sbg:modifiedBy: tengfei #>   sbg:modifiedOn: 1463601910 #>   sbg:revision: 0 #> - sbg:modifiedBy: tengfei #>   sbg:modifiedOn: 1463601952 #>   sbg:revision: 1 #> - sbg:modifiedBy: tengfei #>   sbg:modifiedOn: 1463601974 #>   sbg:revision: 2 #> sbg:toolkit: STAR #> id: '#tengfei/quickstart/rna-seq-alignment-star-demo/2' #> inputs: #> - type: #>   - 'null' #>   - items: File #>     type: array #>   label: sjdbGTFfile #>   streamable: no #>   id: '#sjdbGTFfile' #>   sbg:x: 160.4999759 #>   sbg:y: 195.0833106 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - items: File #>     type: array #>   label: fastq #>   streamable: no #>   id: '#fastq' #>   sbg:x: 164.2499914 #>   sbg:y: 323.7499502 #>   sbg:includeInPorts: yes #>   required: yes #> - type: #>   - File #>   label: genomeFastaFiles #>   streamable: no #>   id: '#genomeFastaFiles' #>   sbg:x: 167.7499601 #>   sbg:y: 469.9999106 #>   sbg:includeInPorts: yes #>   required: yes #> - type: #>   - 'null' #>   - string #>   label: Exons' parents name #>   description: Tag name to be used as exons' transcript-parents. #>   streamable: no #>   id: '#sjdbGTFtagExonParentTranscript' #>   sbg:category: Splice junctions db parameters #>   sbg:x: 200.0 #>   sbg:y: 350.0 #>   sbg:includeInPorts: yes #>   sbg:toolDefaultValue: transcript_id #>   required: no #> - type: #>   - 'null' #>   - string #>   label: Gene name #>   description: Tag name to be used as exons' gene-parents. #>   streamable: no #>   id: '#sjdbGTFtagExonParentGene' #>   sbg:category: Splice junctions db parameters #>   sbg:x: 200.0 #>   sbg:y: 400.0 #>   sbg:includeInPorts: yes #>   sbg:toolDefaultValue: gene_id #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max loci anchors #>   description: Max number of loci anchors are allowed to map to (int>0). #>   streamable: no #>   id: '#winAnchorMultimapNmax' #>   sbg:category: Windows, Anchors, Binning #>   sbg:x: 200.0 #>   sbg:y: 450.0 #>   sbg:includeInPorts: yes #>   sbg:toolDefaultValue: '50' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max bins between anchors #>   description: Max number of bins between two anchors that allows aggregation of anchors #>     into one window (int>0). #>   streamable: no #>   id: '#winAnchorDistNbins' #>   sbg:category: Windows, Anchors, Binning #>   sbg:x: 200.0 #>   sbg:y: 500.0 #>   sbg:includeInPorts: yes #>   sbg:toolDefaultValue: '9' #>   required: no #> outputs: #> - type: #>   - 'null' #>   - items: File #>     type: array #>   label: Unmapped reads #>   description: Output of unmapped reads. #>   streamable: no #>   id: '#unmapped_reads' #>   source: '#unmapped_reads' #>   sbg:x: 800.0 #>   sbg:y: 200.0 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: Transcriptome alignments #>   description: Alignments translated into transcript coordinates. #>   streamable: no #>   id: '#transcriptome_aligned_reads' #>   source: '#transcriptome_aligned_reads' #>   sbg:x: 800.0 #>   sbg:y: 233.3333333 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: Splice junctions #>   description: High confidence collapsed splice junctions in tab-delimited format. #>     Only junctions supported by uniquely mapping reads are reported. #>   streamable: no #>   id: '#splice_junctions' #>   source: '#splice_junctions' #>   sbg:x: 800.0 #>   sbg:y: 266.6666667 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: Reads per gene #>   description: File with number of reads per gene. A read is counted if it overlaps #>     (1nt or more) one and only one gene. #>   streamable: no #>   id: '#reads_per_gene' #>   source: '#reads_per_gene' #>   sbg:x: 800.0 #>   sbg:y: 300.0 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - items: File #>     type: array #>   label: Log files #>   description: Log files produced during alignment. #>   streamable: no #>   id: '#log_files' #>   source: '#log_files' #>   sbg:x: 800.0 #>   sbg:y: 333.3333333 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: Chimeric junctions #>   description: If chimSegmentMin in 'Chimeric Alignments' section is set to 0, 'Chimeric #>     Junctions' won't be output. #>   streamable: no #>   id: '#chimeric_junctions' #>   source: '#chimeric_junctions' #>   sbg:x: 800.0 #>   sbg:y: 366.6666667 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: Intermediate genome files #>   description: Archive with genome files produced when annotations are included on #>     the fly (in the mapping step). #>   streamable: no #>   id: '#intermediate_genome' #>   source: #>   - '#intermediate_genome' #>   - intermediate_genome #>   sbg:x: 800.0 #>   sbg:y: 400.0 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: Chimeric alignments #>   description: Aligned Chimeric sequences SAM - if chimSegmentMin = 0, no Chimeric #>     Alignment SAM and Chimeric Junctions outputs. #>   streamable: no #>   id: '#chimeric_alignments' #>   source: '#chimeric_alignments' #>   sbg:x: 800.0 #>   sbg:y: 433.3333333 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: Sorted BAM/SAM #>   description: Sorted BAM or SAM file. #>   streamable: no #>   id: '#sorted_bam' #>   source: '#sorted_bam' #>   sbg:x: 800.0 #>   sbg:y: 466.6666667 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: Result #>   description: Source FASTQ file with updated metadata. #>   streamable: no #>   id: '#result' #>   source: '#result' #>   sbg:x: 800.0 #>   sbg:y: 500.0 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: Intermediate genome files #>   description: Archive with genome files produced when annotations are included on #>     the fly (in the mapping step). #>   streamable: no #>   id: '#intermediate_genome' #>   source: #>   - '#intermediate_genome' #>   - intermediate_genome #>   sbg:x: 800.0 #>   sbg:y: 533.3333333 #>   sbg:includeInPorts: yes #>   required: no #> requirements: #> - class: CreateFileRequirement #>   fileDef: [] #> hints: #> - class: sbg:AWSInstanceType #>   value: c3.8xlarge #> label: RNA-seq Alignment - STAR #> description: \"Alignment to a reference genome and transcriptome presents the first #>   step of RNA-Seq analysis. This pipeline uses STAR, an ultrafast RNA-seq aligner #>   capable of mapping full length RNA sequences and detecting de novo canonical junctions, #>   non-canonical splices, and chimeric (fusion) transcripts. It is optimized for mammalian #>   sequence reads, but fine tuning of its parameters enables customization to satisfy #>   unique needs.\\n\\nSTAR accepts one file per sample (or two files for paired-end data). #>   \\ \\nSplice junction annotations can optionally be collected from splice junction #>   databases. Set the \\\"Overhang length\\\" parameter to a value larger than zero in #>   order to use splice junction databases. For constant read length, this value should #>   (ideally) be equal to mate length decreased by 1; for long reads with non-constant #>   length, this value should be 100 (pipeline default). \\nFastQC Analysis on FASTQ #>   files reveals read length distribution. STAR can detect chimeric transcripts, but #>   parameter \\\"Min segment length\\\" in \\\"Chimeric Alignments\\\" category must be adjusted #>   to a desired minimum chimeric segment length. Aligned reads are reported in BAM #>   format and can be viewed in a genome browser (such as IGV). A file containing detected #>   splice junctions is also produced.\\n\\nUnmapped reads are reported in FASTQ format #>   and can be included in an output BAM file. The \\\"Output unmapped reads\\\" and \\\"Write #>   unmapped in SAM\\\" parameters enable unmapped output type selection.\" #> class: Workflow #> steps: #> - id: '#STAR_Genome_Generate' #>   inputs: #>   - id: '#STAR_Genome_Generate.sjdbScore' #>   - id: '#STAR_Genome_Generate.sjdbOverhang' #>   - id: '#STAR_Genome_Generate.sjdbGTFtagExonParentTranscript' #>     source: '#sjdbGTFtagExonParentTranscript' #>   - id: '#STAR_Genome_Generate.sjdbGTFtagExonParentGene' #>     source: '#sjdbGTFtagExonParentGene' #>   - id: '#STAR_Genome_Generate.sjdbGTFfile' #>     source: '#sjdbGTFfile' #>   - id: '#STAR_Genome_Generate.sjdbGTFfeatureExon' #>   - id: '#STAR_Genome_Generate.sjdbGTFchrPrefix' #>   - id: '#STAR_Genome_Generate.genomeSAsparseD' #>   - id: '#STAR_Genome_Generate.genomeSAindexNbases' #>   - id: '#STAR_Genome_Generate.genomeFastaFiles' #>     source: '#genomeFastaFiles' #>   - id: '#STAR_Genome_Generate.genomeChrBinNbits' #>   outputs: #>   - id: '#STAR_Genome_Generate.genome' #>   hints: [] #>   run: #>     sbg:validationErrors: [] #>     sbg:sbgMaintained: no #>     sbg:latestRevision: 1 #>     sbg:job: #>       allocatedResources: #>         mem: 60000 #>         cpu: 15 #>       inputs: #>         sjdbScore: 0 #>         sjdbGTFfeatureExon: sjdbGTFfeatureExon #>         sjdbOverhang: 0 #>         sjdbGTFtagExonParentTranscript: sjdbGTFtagExonParentTranscript #>         genomeChrBinNbits: genomeChrBinNbits #>         genomeSAsparseD: 0 #>         sjdbGTFfile: #>         - size: 0 #>           secondaryFiles: [] #>           class: File #>           path: /demo/test-files/chr20.gtf #>         sjdbGTFtagExonParentGene: sjdbGTFtagExonParentGene #>         genomeFastaFiles: #>           size: 0 #>           secondaryFiles: [] #>           class: File #>           path: /sbgenomics/test-data/chr20.fa #>         sjdbGTFchrPrefix: sjdbGTFchrPrefix #>         genomeSAindexNbases: 0 #>     sbg:toolAuthor: Alexander Dobin/CSHL #>     sbg:createdOn: 1450911469 #>     sbg:categories: #>     - Alignment #>     sbg:contributors: #>     - bix-demo #>     sbg:links: #>     - id: https://github.com/alexdobin/STAR #>       label: Homepage #>     - id: https://github.com/alexdobin/STAR/releases #>       label: Releases #>     - id: https://github.com/alexdobin/STAR/blob/master/doc/STARmanual.pdf #>       label: Manual #>     - id: https://groups.google.com/forum/#!forum/rna-star #>       label: Support #>     - id: http://www.ncbi.nlm.nih.gov/pubmed/23104886 #>       label: Publication #>     sbg:project: bix-demo/star-2-4-2a-demo #>     sbg:createdBy: bix-demo #>     sbg:toolkitVersion: 2.4.2a #>     sbg:id: sevenbridges/public-apps/star-genome-generate/1 #>     sbg:license: GNU General Public License v3.0 only #>     sbg:revision: 1 #>     sbg:cmdPreview: mkdir genomeDir && /opt/STAR --runMode genomeGenerate --genomeDir #>       ./genomeDir --runThreadN 15 --genomeFastaFiles /sbgenomics/test-data/chr20.fa #>       --genomeChrBinNbits genomeChrBinNbits --genomeSAindexNbases 0 --genomeSAsparseD #>       0 --sjdbGTFfeatureExon sjdbGTFfeatureExon --sjdbGTFtagExonParentTranscript sjdbGTFtagExonParentTranscript #>       --sjdbGTFtagExonParentGene sjdbGTFtagExonParentGene --sjdbOverhang 0 --sjdbScore #>       0 --sjdbGTFchrPrefix sjdbGTFchrPrefix  --sjdbGTFfile /demo/test-files/chr20.gtf  && #>       tar -vcf genome.tar ./genomeDir /sbgenomics/test-data/chr20.fa #>     sbg:modifiedOn: 1450911470 #>     sbg:modifiedBy: bix-demo #>     sbg:revisionsInfo: #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911469 #>       sbg:revision: 0 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911470 #>       sbg:revision: 1 #>     sbg:toolkit: STAR #>     id: sevenbridges/public-apps/star-genome-generate/1 #>     inputs: #>     - type: #>       - 'null' #>       - int #>       label: Extra alignment score #>       description: Extra alignment score for alignments that cross database junctions. #>       streamable: no #>       id: '#sjdbScore' #>       inputBinding: #>         position: 0 #>         prefix: --sjdbScore #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Splice junctions db parameters #>       sbg:includeInPorts: yes #>       sbg:toolDefaultValue: '2' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: '\"Overhang\" length' #>       description: Length of the donor/acceptor sequence on each side of the junctions, #>         ideally = (mate_length - 1) (int >= 0), if int = 0, splice junction database #>         is not used. #>       streamable: no #>       id: '#sjdbOverhang' #>       inputBinding: #>         position: 0 #>         prefix: --sjdbOverhang #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Splice junctions db parameters #>       sbg:includeInPorts: yes #>       sbg:toolDefaultValue: '100' #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Exons' parents name #>       description: Tag name to be used as exons' transcript-parents. #>       streamable: no #>       id: '#sjdbGTFtagExonParentTranscript' #>       inputBinding: #>         position: 0 #>         prefix: --sjdbGTFtagExonParentTranscript #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Splice junctions db parameters #>       sbg:toolDefaultValue: transcript_id #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Gene name #>       description: Tag name to be used as exons' gene-parents. #>       streamable: no #>       id: '#sjdbGTFtagExonParentGene' #>       inputBinding: #>         position: 0 #>         prefix: --sjdbGTFtagExonParentGene #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Splice junctions db parameters #>       sbg:toolDefaultValue: gene_id #>       required: no #>     - type: #>       - 'null' #>       - items: File #>         type: array #>       label: Splice junction file #>       description: Gene model annotations and/or known transcripts. #>       streamable: no #>       id: '#sjdbGTFfile' #>       sbg:category: Basic #>       sbg:fileTypes: GTF, GFF, TXT #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Set exons feature #>       description: Feature type in GTF file to be used as exons for building transcripts. #>       streamable: no #>       id: '#sjdbGTFfeatureExon' #>       inputBinding: #>         position: 0 #>         prefix: --sjdbGTFfeatureExon #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Splice junctions db parameters #>       sbg:toolDefaultValue: exon #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Chromosome names #>       description: Prefix for chromosome names in a GTF file (e.g. 'chr' for using #>         ENSMEBL annotations with UCSC geneomes). #>       streamable: no #>       id: '#sjdbGTFchrPrefix' #>       inputBinding: #>         position: 0 #>         prefix: --sjdbGTFchrPrefix #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Splice junctions db parameters #>       sbg:toolDefaultValue: '-' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Suffux array sparsity #>       description: 'Distance between indices: use bigger numbers to decrease needed #>         RAM at the cost of mapping speed reduction (int>0).' #>       streamable: no #>       id: '#genomeSAsparseD' #>       inputBinding: #>         position: 0 #>         prefix: --genomeSAsparseD #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Genome generation parameters #>       sbg:toolDefaultValue: '1' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Pre-indexing string length #>       description: Length (bases) of the SA pre-indexing string. Typically between #>         10 and 15. Longer strings will use much more memory, but allow faster searches. #>         For small genomes, this number needs to be scaled down, with a typical value #>         of min(14, log2(GenomeLength)/2 - 1). For example, for 1 megaBase genome, #>         this is equal to 9, for 100 kiloBase genome, this is equal to 7. #>       streamable: no #>       id: '#genomeSAindexNbases' #>       inputBinding: #>         position: 0 #>         prefix: --genomeSAindexNbases #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Genome generation parameters #>       sbg:toolDefaultValue: '14' #>       required: no #>     - type: #>       - File #>       label: Genome fasta files #>       description: Reference sequence to which to align the reads. #>       streamable: no #>       id: '#genomeFastaFiles' #>       inputBinding: #>         position: 0 #>         prefix: --genomeFastaFiles #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Basic #>       sbg:fileTypes: FASTA, FA #>       required: yes #>     - type: #>       - 'null' #>       - string #>       label: Bins size #>       description: 'Set log2(chrBin), where chrBin is the size (bits) of the bins #>         for genome storage: each chromosome will occupy an integer number of bins. #>         If you are using a genome with a large (>5,000) number of chrosomes/scaffolds, #>         you may need to reduce this number to reduce RAM consumption. The following #>         scaling is recomended: genomeChrBinNbits = min(18, log2(GenomeLength/NumberOfReferences)). #>         For example, for 3 gigaBase genome with 100,000 chromosomes/scaffolds, this #>         is equal to 15.' #>       streamable: no #>       id: '#genomeChrBinNbits' #>       inputBinding: #>         position: 0 #>         prefix: --genomeChrBinNbits #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Genome generation parameters #>       sbg:toolDefaultValue: '18' #>       required: no #>     outputs: #>     - type: #>       - 'null' #>       - File #>       label: Genome Files #>       description: Genome files comprise binary genome sequence, suffix arrays, text #>         chromosome names/lengths, splice junctions coordinates, and transcripts/genes #>         information. #>       streamable: no #>       id: '#genome' #>       outputBinding: #>         glob: '*.tar' #>       sbg:fileTypes: TAR #>     requirements: #>     - class: ExpressionEngineRequirement #>       id: '#cwl-js-engine' #>       requirements: #>       - class: DockerRequirement #>         dockerPull: rabix/js-engine #>     hints: #>     - class: DockerRequirement #>       dockerPull: images.sbgenomics.com/ana_d/star:2.4.2a #>       dockerImageId: a4b0ad2c3cae #>     - class: sbg:CPURequirement #>       value: 15 #>     - class: sbg:MemRequirement #>       value: 60000 #>     label: STAR Genome Generate #>     description: STAR Genome Generate is a tool that generates genome index files. #>       One set of files should be generated per each genome/annotation combination. #>       Once produced, these files could be used as long as genome/annotation combination #>       stays the same. Also, STAR Genome Generate which produced these files and STAR #>       aligner using them must be the same toolkit version. #>     class: CommandLineTool #>     baseCommand: #>     - mkdir #>     - genomeDir #>     - '&&' #>     - /opt/STAR #>     - --runMode #>     - genomeGenerate #>     - --genomeDir #>     - ./genomeDir #>     - --runThreadN #>     - class: Expression #>       script: |- #>         { #>           return $job.allocatedResources.cpu #>         } #>       engine: '#cwl-js-engine' #>     arguments: #>     - position: 99 #>       separate: yes #>       valueFrom: '&& tar -vcf genome.tar ./genomeDir' #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\t\\n  var sjFormat = \\\"False\\\"\\n  var gtfgffFormat = \\\"False\\\"\\n #>           \\ var list = $job.inputs.sjdbGTFfile\\n  var paths_list = []\\n  var joined_paths #>           = \\\"\\\"\\n  \\n  if (list) {\\n    list.forEach(function(f){return paths_list.push(f.path)})\\n #>           \\   joined_paths = paths_list.join(\\\" \\\")\\n\\n\\n    paths_list.forEach(function(f){\\n #>           \\     ext = f.replace(/^.*\\\\./, '')\\n      if (ext == \\\"gff\\\" || ext == #>           \\\"gtf\\\") {\\n        gtfgffFormat = \\\"True\\\"\\n        return gtfgffFormat\\n #>           \\     }\\n      if (ext == \\\"txt\\\") {\\n        sjFormat = \\\"True\\\"\\n        return #>           sjFormat\\n      }\\n    })\\n\\n    if ($job.inputs.sjdbGTFfile && $job.inputs.sjdbInsertSave #>           != \\\"None\\\") {\\n      if (sjFormat == \\\"True\\\") {\\n        return \\\"--sjdbFileChrStartEnd #>           \\\".concat(joined_paths)\\n      }\\n      else if (gtfgffFormat == \\\"True\\\") #>           {\\n        return \\\"--sjdbGTFfile \\\".concat(joined_paths)\\n      }\\n    }\\n #>           \\ }\\n}\" #>         class: Expression #>     stdin: '' #>     stdout: '' #>     successCodes: [] #>     temporaryFailCodes: [] #>     x: 384.0832266 #>     'y': 446.4998957 #>   sbg:x: 100.0 #>   sbg:y: 200.0 #> - id: '#SBG_FASTQ_Quality_Detector' #>   inputs: #>   - id: '#SBG_FASTQ_Quality_Detector.fastq' #>     source: '#fastq' #>   outputs: #>   - id: '#SBG_FASTQ_Quality_Detector.result' #>   hints: [] #>   run: #>     sbg:validationErrors: [] #>     sbg:sbgMaintained: no #>     sbg:latestRevision: 3 #>     sbg:job: #>       allocatedResources: #>         mem: 1000 #>         cpu: 1 #>       inputs: #>         fastq: #>           size: 0 #>           secondaryFiles: [] #>           class: File #>           path: /path/to/fastq.ext #>     sbg:toolAuthor: Seven Bridges Genomics #>     sbg:createdOn: 1450911312 #>     sbg:categories: #>     - FASTQ-Processing #>     sbg:contributors: #>     - bix-demo #>     sbg:project: bix-demo/sbgtools-demo #>     sbg:createdBy: bix-demo #>     sbg:id: sevenbridges/public-apps/sbg-fastq-quality-detector/3 #>     sbg:license: Apache License 2.0 #>     sbg:revision: 3 #>     sbg:cmdPreview: python /opt/sbg_fastq_quality_scale_detector.py --fastq /path/to/fastq.ext #>       /path/to/fastq.ext #>     sbg:modifiedOn: 1450911314 #>     sbg:modifiedBy: bix-demo #>     sbg:revisionsInfo: #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911312 #>       sbg:revision: 0 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911314 #>       sbg:revision: 3 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911313 #>       sbg:revision: 1 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911313 #>       sbg:revision: 2 #>     sbg:toolkit: SBGTools #>     id: sevenbridges/public-apps/sbg-fastq-quality-detector/3 #>     inputs: #>     - type: #>       - File #>       label: Fastq #>       description: FASTQ file. #>       streamable: no #>       id: '#fastq' #>       inputBinding: #>         position: 0 #>         prefix: --fastq #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       required: yes #>     outputs: #>     - type: #>       - 'null' #>       - File #>       label: Result #>       description: Source FASTQ file with updated metadata. #>       streamable: no #>       id: '#result' #>       outputBinding: #>         glob: '*.fastq' #>       sbg:fileTypes: FASTQ #>     requirements: #>     - class: CreateFileRequirement #>       fileDef: [] #>     hints: #>     - class: DockerRequirement #>       dockerPull: images.sbgenomics.com/tziotas/sbg_fastq_quality_scale_detector:1.0 #>       dockerImageId: '' #>     - class: sbg:CPURequirement #>       value: 1 #>     - class: sbg:MemRequirement #>       value: 1000 #>     label: SBG FASTQ Quality Detector #>     description: FASTQ Quality Scale Detector detects which quality encoding scheme #>       was used in your reads and automatically enters the proper value in the \"Quality #>       Scale\" metadata field. #>     class: CommandLineTool #>     baseCommand: #>     - python #>     - /opt/sbg_fastq_quality_scale_detector.py #>     arguments: [] #>     stdin: '' #>     stdout: '' #>     successCodes: [] #>     temporaryFailCodes: [] #>     x: 375.3333179 #>     'y': 323.5833156 #>   sbg:x: 300.0 #>   sbg:y: 200.0 #> - id: '#Picard_SortSam' #>   inputs: #>   - id: '#Picard_SortSam.validation_stringency' #>     default: SILENT #>   - id: '#Picard_SortSam.sort_order' #>     default: Coordinate #>   - id: '#Picard_SortSam.quiet' #>   - id: '#Picard_SortSam.output_type' #>   - id: '#Picard_SortSam.memory_per_job' #>   - id: '#Picard_SortSam.max_records_in_ram' #>   - id: '#Picard_SortSam.input_bam' #>     source: '#STAR.aligned_reads' #>   - id: '#Picard_SortSam.create_index' #>     default: 'True' #>   - id: '#Picard_SortSam.compression_level' #>   outputs: #>   - id: '#Picard_SortSam.sorted_bam' #>   hints: [] #>   run: #>     sbg:validationErrors: [] #>     sbg:sbgMaintained: no #>     sbg:latestRevision: 2 #>     sbg:job: #>       allocatedResources: #>         mem: 2048 #>         cpu: 1 #>       inputs: #>         sort_order: Coordinate #>         input_bam: #>           path: /root/dir/example.tested.bam #>         memory_per_job: 2048 #>         output_type: ~ #>         create_index: ~ #>     sbg:toolAuthor: Broad Institute #>     sbg:createdOn: 1450911168 #>     sbg:categories: #>     - SAM/BAM-Processing #>     sbg:contributors: #>     - bix-demo #>     sbg:links: #>     - id: http://broadinstitute.github.io/picard/index.html #>       label: Homepage #>     - id: https://github.com/broadinstitute/picard/releases/tag/1.138 #>       label: Source Code #>     - id: http://broadinstitute.github.io/picard/ #>       label: Wiki #>     - id: https://github.com/broadinstitute/picard/zipball/master #>       label: Download #>     - id: http://broadinstitute.github.io/picard/ #>       label: Publication #>     sbg:project: bix-demo/picard-1-140-demo #>     sbg:createdBy: bix-demo #>     sbg:toolkitVersion: '1.140' #>     sbg:id: sevenbridges/public-apps/picard-sortsam-1-140/2 #>     sbg:license: MIT License, Apache 2.0 Licence #>     sbg:revision: 2 #>     sbg:cmdPreview: java -Xmx2048M -jar /opt/picard-tools-1.140/picard.jar SortSam #>       OUTPUT=example.tested.sorted.bam INPUT=/root/dir/example.tested.bam SORT_ORDER=coordinate   INPUT=/root/dir/example.tested.bam #>       SORT_ORDER=coordinate  /root/dir/example.tested.bam #>     sbg:modifiedOn: 1450911170 #>     sbg:modifiedBy: bix-demo #>     sbg:revisionsInfo: #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911168 #>       sbg:revision: 0 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911169 #>       sbg:revision: 1 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911170 #>       sbg:revision: 2 #>     sbg:toolkit: Picard #>     id: sevenbridges/public-apps/picard-sortsam-1-140/2 #>     inputs: #>     - type: #>       - 'null' #>       - name: validation_stringency #>         symbols: #>         - STRICT #>         - LENIENT #>         - SILENT #>         type: enum #>       label: Validation stringency #>       description: 'Validation stringency for all SAM files read by this program. #>         Setting stringency to SILENT can improve performance when processing a BAM #>         file in which variable-length data (read, qualities, tags) do not otherwise #>         need to be decoded. This option can be set to ''null'' to clear the default #>         value. Possible values: {STRICT, LENIENT, SILENT}.' #>       streamable: no #>       id: '#validation_stringency' #>       inputBinding: #>         position: 0 #>         prefix: VALIDATION_STRINGENCY= #>         separate: no #>         valueFrom: #>           engine: '#cwl-js-engine' #>           script: |- #>             { #>               if ($job.inputs.validation_stringency) #>               { #>                 return $job.inputs.validation_stringency #>               } #>               else #>               { #>                 return \"SILENT\" #>               } #>             } #>           class: Expression #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Other input types #>       sbg:toolDefaultValue: SILENT #>       required: no #>     - type: #>       - name: sort_order #>         symbols: #>         - Unsorted #>         - Queryname #>         - Coordinate #>         type: enum #>       label: Sort order #>       description: 'Sort order of the output file. Possible values: {unsorted, queryname, #>         coordinate}.' #>       streamable: no #>       id: '#sort_order' #>       inputBinding: #>         position: 3 #>         prefix: SORT_ORDER= #>         separate: no #>         valueFrom: #>           engine: '#cwl-js-engine' #>           script: |- #>             { #>               p = $job.inputs.sort_order.toLowerCase() #>               return p #>             } #>           class: Expression #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Other input types #>       sbg:toolDefaultValue: Coordinate #>       sbg:altPrefix: SO #>       required: yes #>     - type: #>       - 'null' #>       - name: quiet #>         symbols: #>         - 'True' #>         - 'False' #>         type: enum #>       label: Quiet #>       description: 'This parameter indicates whether to suppress job-summary info #>         on System.err. This option can be set to ''null'' to clear the default value. #>         Possible values: {true, false}.' #>       streamable: no #>       id: '#quiet' #>       inputBinding: #>         position: 0 #>         prefix: QUIET= #>         separate: no #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Other input types #>       sbg:toolDefaultValue: 'False' #>       required: no #>     - type: #>       - 'null' #>       - name: output_type #>         symbols: #>         - BAM #>         - SAM #>         - SAME AS INPUT #>         type: enum #>       label: Output format #>       description: Since Picard tools can output both SAM and BAM files, user can #>         choose the format of the output file. #>       streamable: no #>       id: '#output_type' #>       sbg:category: Other input types #>       sbg:toolDefaultValue: SAME AS INPUT #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Memory per job #>       description: Amount of RAM memory to be used per job. Defaults to 2048 MB for #>         single threaded jobs. #>       streamable: no #>       id: '#memory_per_job' #>       sbg:toolDefaultValue: '2048' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max records in RAM #>       description: When writing SAM files that need to be sorted, this parameter will #>         specify the number of records stored in RAM before spilling to disk. Increasing #>         this number reduces the number of file handles needed to sort a SAM file, #>         and increases the amount of RAM needed. This option can be set to 'null' to #>         clear the default value. #>       streamable: no #>       id: '#max_records_in_ram' #>       inputBinding: #>         position: 0 #>         prefix: MAX_RECORDS_IN_RAM= #>         separate: no #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Other input types #>       sbg:toolDefaultValue: '500000' #>       required: no #>     - type: #>       - File #>       label: Input BAM #>       description: The BAM or SAM file to sort. #>       streamable: no #>       id: '#input_bam' #>       inputBinding: #>         position: 1 #>         prefix: INPUT= #>         separate: no #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: File inputs #>       sbg:fileTypes: BAM, SAM #>       sbg:altPrefix: I #>       required: yes #>     - type: #>       - 'null' #>       - name: create_index #>         symbols: #>         - 'True' #>         - 'False' #>         type: enum #>       label: Create index #>       description: 'This parameter indicates whether to create a BAM index when writing #>         a coordinate-sorted BAM file. This option can be set to ''null'' to clear #>         the default value. Possible values: {true, false}.' #>       streamable: no #>       id: '#create_index' #>       inputBinding: #>         position: 5 #>         prefix: CREATE_INDEX= #>         separate: no #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Other input types #>       sbg:toolDefaultValue: 'False' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Compression level #>       description: Compression level for all compressed files created (e.g. BAM and #>         GELI). This option can be set to 'null' to clear the default value. #>       streamable: no #>       id: '#compression_level' #>       inputBinding: #>         position: 0 #>         prefix: COMPRESSION_LEVEL= #>         separate: no #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Other input types #>       sbg:toolDefaultValue: '5' #>       required: no #>     outputs: #>     - type: #>       - 'null' #>       - File #>       label: Sorted BAM/SAM #>       description: Sorted BAM or SAM file. #>       streamable: no #>       id: '#sorted_bam' #>       outputBinding: #>         glob: '*.sorted.?am' #>       sbg:fileTypes: BAM, SAM #>     requirements: #>     - class: ExpressionEngineRequirement #>       id: '#cwl-js-engine' #>       requirements: #>       - class: DockerRequirement #>         dockerPull: rabix/js-engine #>       engineCommand: cwl-engine.js #>     hints: #>     - class: DockerRequirement #>       dockerPull: images.sbgenomics.com/mladenlsbg/picard:1.140 #>       dockerImageId: eab0e70b6629 #>     - class: sbg:CPURequirement #>       value: 1 #>     - class: sbg:MemRequirement #>       value: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  if($job.inputs.memory_per_job){\\n  \\treturn $job.inputs.memory_per_job\\n #>           \\ }\\n  \\treturn 2048\\n}\" #>         class: Expression #>     label: Picard SortSam #>     description: Picard SortSam sorts the input SAM or BAM. Input and output formats #>       are determined by the file extension. #>     class: CommandLineTool #>     baseCommand: #>     - java #>     - class: Expression #>       script: \"{   \\n  if($job.inputs.memory_per_job){\\n    return '-Xmx'.concat($job.inputs.memory_per_job, #>         'M')\\n  }   \\n  \\treturn '-Xmx2048M'\\n}\" #>       engine: '#cwl-js-engine' #>     - -jar #>     - /opt/picard-tools-1.140/picard.jar #>     - SortSam #>     arguments: #>     - position: 0 #>       prefix: OUTPUT= #>       separate: no #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  filename = $job.inputs.input_bam.path\\n  ext = $job.inputs.output_type\\n\\nif #>           (ext === \\\"BAM\\\")\\n{\\n    return filename.split('.').slice(0, -1).concat(\\\"sorted.bam\\\").join(\\\".\\\").replace(/^.*[\\\\\\\\\\\\/]/, #>           '')\\n    }\\n\\nelse if (ext === \\\"SAM\\\")\\n{\\n    return filename.split('.').slice(0, #>           -1).concat(\\\"sorted.sam\\\").join('.').replace(/^.*[\\\\\\\\\\\\/]/, '')\\n}\\n\\nelse #>           \\n{\\n\\treturn filename.split('.').slice(0, -1).concat(\\\"sorted.\\\"+filename.split('.').slice(-1)[0]).join(\\\".\\\").replace(/^.*[\\\\\\\\\\\\/]/, #>           '')\\n}\\n}\" #>         class: Expression #>     - position: 1000 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  filename = $job.inputs.input_bam.path\\n  \\n  /* figuring out #>           output file type */\\n  ext = $job.inputs.output_type\\n  if (ext === \\\"BAM\\\")\\n #>           \\ {\\n    out_extension = \\\"BAM\\\"\\n  }\\n  else if (ext === \\\"SAM\\\")\\n  {\\n #>           \\   out_extension = \\\"SAM\\\"\\n  }\\n  else \\n  {\\n\\tout_extension = filename.split('.').slice(-1)[0].toUpperCase()\\n #>           \\ }  \\n  \\n  /* if exist moving .bai in bam.bai */\\n  if ($job.inputs.create_index #>           === 'True' && $job.inputs.sort_order === 'Coordinate' && out_extension == #>           \\\"BAM\\\")\\n  {\\n    \\n    old_name = filename.split('.').slice(0, -1).concat('sorted.bai').join('.').replace(/^.*[\\\\\\\\\\\\/]/, #>           '')\\n    new_name = filename.split('.').slice(0, -1).concat('sorted.bam.bai').join('.').replace(/^.*[\\\\\\\\\\\\/]/, #>           '')\\n    return \\\"; mv \\\" + \\\" \\\" + old_name + \\\" \\\" + new_name\\n  }\\n\\n}\" #>         class: Expression #>     stdin: '' #>     stdout: '' #>     successCodes: [] #>     temporaryFailCodes: [] #>     x: 773.0831807 #>     'y': 470.9165939 #>   sbg:x: 500.0 #>   sbg:y: 200.0 #> - id: '#STAR' #>   inputs: #>   - id: '#STAR.winFlankNbins' #>   - id: '#STAR.winBinNbits' #>   - id: '#STAR.winAnchorMultimapNmax' #>     source: '#winAnchorMultimapNmax' #>   - id: '#STAR.winAnchorDistNbins' #>     source: '#winAnchorDistNbins' #>   - id: '#STAR.twopassMode' #>   - id: '#STAR.twopass1readsN' #>   - id: '#STAR.sjdbScore' #>   - id: '#STAR.sjdbOverhang' #>     default: 100 #>   - id: '#STAR.sjdbInsertSave' #>   - id: '#STAR.sjdbGTFtagExonParentTranscript' #>   - id: '#STAR.sjdbGTFtagExonParentGene' #>   - id: '#STAR.sjdbGTFfile' #>     source: '#sjdbGTFfile' #>   - id: '#STAR.sjdbGTFfeatureExon' #>   - id: '#STAR.sjdbGTFchrPrefix' #>   - id: '#STAR.seedSearchStartLmaxOverLread' #>   - id: '#STAR.seedSearchStartLmax' #>   - id: '#STAR.seedSearchLmax' #>   - id: '#STAR.seedPerWindowNmax' #>   - id: '#STAR.seedPerReadNmax' #>   - id: '#STAR.seedNoneLociPerWindow' #>   - id: '#STAR.seedMultimapNmax' #>   - id: '#STAR.scoreStitchSJshift' #>   - id: '#STAR.scoreInsOpen' #>   - id: '#STAR.scoreInsBase' #>   - id: '#STAR.scoreGenomicLengthLog2scale' #>   - id: '#STAR.scoreGapNoncan' #>   - id: '#STAR.scoreGapGCAG' #>   - id: '#STAR.scoreGapATAC' #>   - id: '#STAR.scoreGap' #>   - id: '#STAR.scoreDelOpen' #>   - id: '#STAR.scoreDelBase' #>   - id: '#STAR.rg_seq_center' #>   - id: '#STAR.rg_sample_id' #>   - id: '#STAR.rg_platform_unit_id' #>   - id: '#STAR.rg_platform' #>   - id: '#STAR.rg_mfl' #>   - id: '#STAR.rg_library_id' #>   - id: '#STAR.reads' #>     source: '#SBG_FASTQ_Quality_Detector.result' #>   - id: '#STAR.readMatesLengthsIn' #>   - id: '#STAR.readMapNumber' #>   - id: '#STAR.quantTranscriptomeBan' #>   - id: '#STAR.quantMode' #>     default: TranscriptomeSAM #>   - id: '#STAR.outSortingType' #>     default: SortedByCoordinate #>   - id: '#STAR.outSJfilterReads' #>   - id: '#STAR.outSJfilterOverhangMin' #>   - id: '#STAR.outSJfilterIntronMaxVsReadN' #>   - id: '#STAR.outSJfilterDistToOtherSJmin' #>   - id: '#STAR.outSJfilterCountUniqueMin' #>   - id: '#STAR.outSJfilterCountTotalMin' #>   - id: '#STAR.outSAMunmapped' #>   - id: '#STAR.outSAMtype' #>     default: BAM #>   - id: '#STAR.outSAMstrandField' #>   - id: '#STAR.outSAMreadID' #>   - id: '#STAR.outSAMprimaryFlag' #>   - id: '#STAR.outSAMorder' #>   - id: '#STAR.outSAMmode' #>   - id: '#STAR.outSAMmapqUnique' #>   - id: '#STAR.outSAMheaderPG' #>   - id: '#STAR.outSAMheaderHD' #>   - id: '#STAR.outSAMflagOR' #>   - id: '#STAR.outSAMflagAND' #>   - id: '#STAR.outSAMattributes' #>   - id: '#STAR.outReadsUnmapped' #>     default: Fastx #>   - id: '#STAR.outQSconversionAdd' #>   - id: '#STAR.outFilterType' #>   - id: '#STAR.outFilterScoreMinOverLread' #>   - id: '#STAR.outFilterScoreMin' #>   - id: '#STAR.outFilterMultimapScoreRange' #>   - id: '#STAR.outFilterMultimapNmax' #>   - id: '#STAR.outFilterMismatchNoverReadLmax' #>   - id: '#STAR.outFilterMismatchNoverLmax' #>   - id: '#STAR.outFilterMismatchNmax' #>   - id: '#STAR.outFilterMatchNminOverLread' #>   - id: '#STAR.outFilterMatchNmin' #>   - id: '#STAR.outFilterIntronMotifs' #>   - id: '#STAR.limitSjdbInsertNsj' #>   - id: '#STAR.limitOutSJoneRead' #>   - id: '#STAR.limitOutSJcollapsed' #>   - id: '#STAR.limitBAMsortRAM' #>   - id: '#STAR.genomeDirName' #>   - id: '#STAR.genome' #>     source: '#STAR_Genome_Generate.genome' #>   - id: '#STAR.clip5pNbases' #>   - id: '#STAR.clip3pNbases' #>   - id: '#STAR.clip3pAfterAdapterNbases' #>   - id: '#STAR.clip3pAdapterSeq' #>   - id: '#STAR.clip3pAdapterMMp' #>   - id: '#STAR.chimSegmentMin' #>   - id: '#STAR.chimScoreSeparation' #>   - id: '#STAR.chimScoreMin' #>   - id: '#STAR.chimScoreJunctionNonGTAG' #>   - id: '#STAR.chimScoreDropMax' #>   - id: '#STAR.chimOutType' #>   - id: '#STAR.chimJunctionOverhangMin' #>   - id: '#STAR.alignWindowsPerReadNmax' #>   - id: '#STAR.alignTranscriptsPerWindowNmax' #>   - id: '#STAR.alignTranscriptsPerReadNmax' #>   - id: '#STAR.alignSplicedMateMapLminOverLmate' #>   - id: '#STAR.alignSplicedMateMapLmin' #>   - id: '#STAR.alignSoftClipAtReferenceEnds' #>   - id: '#STAR.alignSJoverhangMin' #>   - id: '#STAR.alignSJDBoverhangMin' #>   - id: '#STAR.alignMatesGapMax' #>   - id: '#STAR.alignIntronMin' #>   - id: '#STAR.alignIntronMax' #>   - id: '#STAR.alignEndsType' #>   outputs: #>   - id: '#STAR.unmapped_reads' #>   - id: '#STAR.transcriptome_aligned_reads' #>   - id: '#STAR.splice_junctions' #>   - id: '#STAR.reads_per_gene' #>   - id: '#STAR.log_files' #>   - id: '#STAR.intermediate_genome' #>   - id: '#STAR.chimeric_junctions' #>   - id: '#STAR.chimeric_alignments' #>   - id: '#STAR.aligned_reads' #>   hints: [] #>   run: #>     sbg:validationErrors: [] #>     sbg:sbgMaintained: no #>     sbg:latestRevision: 4 #>     sbg:job: #>       allocatedResources: #>         mem: 60000 #>         cpu: 15 #>       inputs: #>         alignWindowsPerReadNmax: 0 #>         outSAMheaderPG: outSAMheaderPG #>         GENOME_DIR_NAME: '' #>         outFilterMatchNminOverLread: 0 #>         rg_platform_unit_id: rg_platform_unit #>         alignTranscriptsPerReadNmax: 0 #>         readMapNumber: 0 #>         alignSplicedMateMapLminOverLmate: 0 #>         alignMatesGapMax: 0 #>         outFilterMultimapNmax: 0 #>         clip5pNbases: #>         - 0 #>         outSAMstrandField: None #>         readMatesLengthsIn: NotEqual #>         outSAMattributes: Standard #>         seedMultimapNmax: 0 #>         rg_mfl: rg_mfl #>         chimSegmentMin: 0 #>         winAnchorDistNbins: 0 #>         outSortingType: SortedByCoordinate #>         outFilterMultimapScoreRange: 0 #>         sjdbInsertSave: Basic #>         clip3pAfterAdapterNbases: #>         - 0 #>         scoreDelBase: 0 #>         outFilterMatchNmin: 0 #>         twopass1readsN: 0 #>         outSAMunmapped: None #>         genome: #>           size: 0 #>           secondaryFiles: [] #>           class: File #>           path: genome.ext #>         sjdbGTFtagExonParentTranscript: '' #>         limitBAMsortRAM: 0 #>         alignEndsType: Local #>         seedNoneLociPerWindow: 0 #>         rg_sample_id: rg_sample #>         sjdbGTFtagExonParentGene: '' #>         chimScoreMin: 0 #>         outSJfilterIntronMaxVsReadN: #>         - 0 #>         twopassMode: Basic #>         alignSplicedMateMapLmin: 0 #>         outSJfilterReads: All #>         outSAMprimaryFlag: OneBestScore #>         outSJfilterCountTotalMin: #>         - 3 #>         - 1 #>         - 1 #>         - 1 #>         outSAMorder: Paired #>         outSAMflagAND: 0 #>         chimScoreSeparation: 0 #>         alignSJoverhangMin: 0 #>         outFilterScoreMin: 0 #>         seedSearchStartLmax: 0 #>         scoreGapGCAG: 0 #>         scoreGenomicLengthLog2scale: 0 #>         outFilterIntronMotifs: None #>         outFilterMismatchNmax: 0 #>         reads: #>         - size: 0 #>           secondaryFiles: [] #>           class: File #>           metadata: #>             format: fastq #>             paired_end: '1' #>             seq_center: illumina #>           path: /test-data/mate_1.fastq.bz2 #>         scoreGap: 0 #>         outSJfilterOverhangMin: #>         - 30 #>         - 12 #>         - 12 #>         - 12 #>         outSAMflagOR: 0 #>         outSAMmode: Full #>         rg_library_id: '' #>         chimScoreJunctionNonGTAG: 0 #>         scoreInsOpen: 0 #>         clip3pAdapterSeq: #>         - clip3pAdapterSeq #>         chimScoreDropMax: 0 #>         outFilterType: Normal #>         scoreGapATAC: 0 #>         rg_platform: Ion Torrent PGM #>         clip3pAdapterMMp: #>         - 0 #>         sjdbGTFfeatureExon: '' #>         outQSconversionAdd: 0 #>         quantMode: TranscriptomeSAM #>         alignIntronMin: 0 #>         scoreInsBase: 0 #>         scoreGapNoncan: 0 #>         seedSearchLmax: 0 #>         outSJfilterDistToOtherSJmin: #>         - 0 #>         outFilterScoreMinOverLread: 0 #>         alignSJDBoverhangMin: 0 #>         limitOutSJcollapsed: 0 #>         winAnchorMultimapNmax: 0 #>         outFilterMismatchNoverLmax: 0 #>         rg_seq_center: '' #>         outSAMheaderHD: outSAMheaderHD #>         chimOutType: Within #>         quantTranscriptomeBan: IndelSoftclipSingleend #>         limitOutSJoneRead: 0 #>         alignTranscriptsPerWindowNmax: 0 #>         sjdbOverhang: ~ #>         outReadsUnmapped: Fastx #>         scoreStitchSJshift: 0 #>         seedPerWindowNmax: 0 #>         outSJfilterCountUniqueMin: #>         - 3 #>         - 1 #>         - 1 #>         - 1 #>         scoreDelOpen: 0 #>         sjdbGTFfile: #>         - path: /demo/test-data/chr20.gtf #>         clip3pNbases: #>         - 0 #>         - 3 #>         winBinNbits: 0 #>         sjdbScore: ~ #>         seedSearchStartLmaxOverLread: 0 #>         alignIntronMax: 0 #>         seedPerReadNmax: 0 #>         outFilterMismatchNoverReadLmax: 0 #>         winFlankNbins: 0 #>         sjdbGTFchrPrefix: chrPrefix #>         alignSoftClipAtReferenceEnds: 'Yes' #>         outSAMreadID: Standard #>         outSAMtype: BAM #>         chimJunctionOverhangMin: 0 #>         limitSjdbInsertNsj: 0 #>         outSAMmapqUnique: 0 #>     sbg:toolAuthor: Alexander Dobin/CSHL #>     sbg:createdOn: 1450911471 #>     sbg:categories: #>     - Alignment #>     sbg:contributors: #>     - ana_d #>     - bix-demo #>     - uros_sipetic #>     sbg:links: #>     - id: https://github.com/alexdobin/STAR #>       label: Homepage #>     - id: https://github.com/alexdobin/STAR/releases #>       label: Releases #>     - id: https://github.com/alexdobin/STAR/blob/master/doc/STARmanual.pdf #>       label: Manual #>     - id: https://groups.google.com/forum/#!forum/rna-star #>       label: Support #>     - id: http://www.ncbi.nlm.nih.gov/pubmed/23104886 #>       label: Publication #>     sbg:project: bix-demo/star-2-4-2a-demo #>     sbg:createdBy: bix-demo #>     sbg:toolkitVersion: 2.4.2a #>     sbg:id: sevenbridges/public-apps/star/4 #>     sbg:license: GNU General Public License v3.0 only #>     sbg:revision: 4 #>     sbg:cmdPreview: tar -xvf genome.ext && /opt/STAR --runThreadN 15  --readFilesCommand #>       bzcat  --sjdbGTFfile /demo/test-data/chr20.gtf  --sjdbGTFchrPrefix chrPrefix #>       --sjdbInsertSave Basic  --twopass1readsN 0  --chimOutType WithinBAM  --outSAMattrRGline #>       ID:1 CN:illumina PI:rg_mfl PL:Ion_Torrent_PGM PU:rg_platform_unit SM:rg_sample  --quantMode #>       TranscriptomeSAM --outFileNamePrefix ./mate_1.fastq.bz2.  --readFilesIn /test-data/mate_1.fastq.bz2  && #>       tar -vcf mate_1.fastq.bz2._STARgenome.tar ./mate_1.fastq.bz2._STARgenome  && #>       mv mate_1.fastq.bz2.Unmapped.out.mate1 mate_1.fastq.bz2.Unmapped.out.mate1.fastq #>     sbg:modifiedOn: 1462889222 #>     sbg:modifiedBy: ana_d #>     sbg:revisionsInfo: #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911471 #>       sbg:revision: 0 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911473 #>       sbg:revision: 1 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911475 #>       sbg:revision: 2 #>     - sbg:modifiedBy: uros_sipetic #>       sbg:modifiedOn: 1462878528 #>       sbg:revision: 3 #>     - sbg:modifiedBy: ana_d #>       sbg:modifiedOn: 1462889222 #>       sbg:revision: 4 #>     sbg:toolkit: STAR #>     id: sevenbridges/public-apps/star/4 #>     inputs: #>     - type: #>       - 'null' #>       - int #>       label: Flanking regions size #>       description: =log2(winFlank), where win Flank is the size of the left and right #>         flanking regions for each window (int>0). #>       streamable: no #>       id: '#winFlankNbins' #>       inputBinding: #>         position: 0 #>         prefix: --winFlankNbins #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Windows, Anchors, Binning #>       sbg:includeInPorts: yes #>       sbg:toolDefaultValue: '4' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Bin size #>       description: =log2(winBin), where winBin is the size of the bin for the windows/clustering, #>         each window will occupy an integer number of bins (int>0). #>       streamable: no #>       id: '#winBinNbits' #>       inputBinding: #>         position: 0 #>         prefix: --winBinNbits #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Windows, Anchors, Binning #>       sbg:includeInPorts: yes #>       sbg:toolDefaultValue: '16' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max loci anchors #>       description: Max number of loci anchors are allowed to map to (int>0). #>       streamable: no #>       id: '#winAnchorMultimapNmax' #>       inputBinding: #>         position: 0 #>         prefix: --winAnchorMultimapNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Windows, Anchors, Binning #>       sbg:toolDefaultValue: '50' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max bins between anchors #>       description: Max number of bins between two anchors that allows aggregation #>         of anchors into one window (int>0). #>       streamable: no #>       id: '#winAnchorDistNbins' #>       inputBinding: #>         position: 0 #>         prefix: --winAnchorDistNbins #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Windows, Anchors, Binning #>       sbg:toolDefaultValue: '9' #>       required: no #>     - type: #>       - 'null' #>       - name: twopassMode #>         symbols: #>         - None #>         - Basic #>         type: enum #>       label: Two-pass mode #>       description: '2-pass mapping mode. None: 1-pass mapping; Basic: basic 2-pass #>         mapping, with all 1st pass junctions inserted into the genome indices on the #>         fly.' #>       streamable: no #>       id: '#twopassMode' #>       inputBinding: #>         position: 0 #>         prefix: --twopassMode #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: 2-pass mapping #>       sbg:toolDefaultValue: None #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Reads to process in 1st step #>       description: 'Number of reads to process for the 1st step. 0: 1-step only, no #>         2nd pass; use very large number to map all reads in the first step (int>0).' #>       streamable: no #>       id: '#twopass1readsN' #>       sbg:category: 2-pass mapping #>       sbg:toolDefaultValue: '-1' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Extra alignment score #>       description: Extra alignment score for alignments that cross database junctions. #>       streamable: no #>       id: '#sjdbScore' #>       sbg:category: Splice junctions database #>       sbg:toolDefaultValue: '2' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: '\"Overhang\" length' #>       description: Length of the donor/acceptor sequence on each side of the junctions, #>         ideally = (mate_length - 1) (int >= 0), if int = 0, splice junction database #>         is not used. #>       streamable: no #>       id: '#sjdbOverhang' #>       sbg:category: Splice junctions database #>       sbg:toolDefaultValue: '100' #>       required: no #>     - type: #>       - 'null' #>       - name: sjdbInsertSave #>         symbols: #>         - Basic #>         - All #>         - None #>         type: enum #>       label: Save junction files #>       description: 'Which files to save when sjdb junctions are inserted on the fly #>         at the mapping step. None: not saving files at all; Basic: only small junction/transcript #>         files; All: all files including big Genome, SA and SAindex. These files are #>         output as archive.' #>       streamable: no #>       id: '#sjdbInsertSave' #>       sbg:category: Splice junctions database #>       sbg:toolDefaultValue: None #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Exons' parents name #>       description: Tag name to be used as exons' transcript-parents. #>       streamable: no #>       id: '#sjdbGTFtagExonParentTranscript' #>       sbg:category: Splice junctions database #>       sbg:toolDefaultValue: transcript_id #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Gene name #>       description: Tag name to be used as exons' gene-parents. #>       streamable: no #>       id: '#sjdbGTFtagExonParentGene' #>       sbg:category: Splice junctions database #>       sbg:toolDefaultValue: gene_id #>       required: no #>     - type: #>       - 'null' #>       - items: File #>         type: array #>       label: Splice junction file #>       description: Gene model annotations and/or known transcripts. No need to include #>         this input, except in case of using \"on the fly\" annotations. #>       streamable: no #>       id: '#sjdbGTFfile' #>       sbg:category: Basic #>       sbg:fileTypes: GTF, GFF, TXT #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Set exons feature #>       description: Feature type in GTF file to be used as exons for building transcripts. #>       streamable: no #>       id: '#sjdbGTFfeatureExon' #>       sbg:category: Splice junctions database #>       sbg:toolDefaultValue: exon #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Chromosome names #>       description: Prefix for chromosome names in a GTF file (e.g. 'chr' for using #>         ENSMEBL annotations with UCSC geneomes). #>       streamable: no #>       id: '#sjdbGTFchrPrefix' #>       sbg:category: Splice junctions database #>       sbg:toolDefaultValue: '-' #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Search start point normalized #>       description: seedSearchStartLmax normalized to read length (sum of mates' lengths #>         for paired-end reads). #>       streamable: no #>       id: '#seedSearchStartLmaxOverLread' #>       inputBinding: #>         position: 0 #>         prefix: --seedSearchStartLmaxOverLread #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '1.0' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Search start point #>       description: Defines the search start point through the read - the read is split #>         into pieces no longer than this value (int>0). #>       streamable: no #>       id: '#seedSearchStartLmax' #>       inputBinding: #>         position: 0 #>         prefix: --seedSearchStartLmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '50' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max seed length #>       description: Defines the maximum length of the seeds, if =0 max seed length #>         is infinite (int>=0). #>       streamable: no #>       id: '#seedSearchLmax' #>       inputBinding: #>         position: 0 #>         prefix: --seedSearchLmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max seeds per window #>       description: Max number of seeds per window (int>=0). #>       streamable: no #>       id: '#seedPerWindowNmax' #>       inputBinding: #>         position: 0 #>         prefix: --seedPerWindowNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '50' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max seeds per read #>       description: Max number of seeds per read (int>=0). #>       streamable: no #>       id: '#seedPerReadNmax' #>       inputBinding: #>         position: 0 #>         prefix: --seedPerReadNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '1000' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max one-seed loci per window #>       description: Max number of one seed loci per window (int>=0). #>       streamable: no #>       id: '#seedNoneLociPerWindow' #>       inputBinding: #>         position: 0 #>         prefix: --seedNoneLociPerWindow #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '10' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Filter pieces for stitching #>       description: Only pieces that map fewer than this value are utilized in the #>         stitching procedure (int>=0). #>       streamable: no #>       id: '#seedMultimapNmax' #>       inputBinding: #>         position: 0 #>         prefix: --seedMultimapNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '10000' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max score reduction #>       description: Maximum score reduction while searching for SJ boundaries in the #>         stitching step. #>       streamable: no #>       id: '#scoreStitchSJshift' #>       inputBinding: #>         position: 0 #>         prefix: --scoreStitchSJshift #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '1' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Insertion Open Penalty #>       description: Insertion open penalty. #>       streamable: no #>       id: '#scoreInsOpen' #>       inputBinding: #>         position: 0 #>         prefix: --scoreInsOpen #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-2' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Insertion extension penalty #>       description: Insertion extension penalty per base (in addition to --scoreInsOpen). #>       streamable: no #>       id: '#scoreInsBase' #>       inputBinding: #>         position: 0 #>         prefix: --scoreInsBase #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-2' #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Log scaled score #>       description: 'Extra score logarithmically scaled with genomic length of the #>         alignment: <int>*log2(genomicLength).' #>       streamable: no #>       id: '#scoreGenomicLengthLog2scale' #>       inputBinding: #>         position: 0 #>         prefix: --scoreGenomicLengthLog2scale #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-0.25' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Non-canonical gap open #>       description: Non-canonical gap open penalty (in addition to --scoreGap). #>       streamable: no #>       id: '#scoreGapNoncan' #>       inputBinding: #>         position: 0 #>         prefix: --scoreGapNoncan #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-8' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: GC/AG and CT/GC gap open #>       description: GC/AG and CT/GC gap open penalty (in addition to --scoreGap). #>       streamable: no #>       id: '#scoreGapGCAG' #>       inputBinding: #>         position: 0 #>         prefix: --scoreGapGCAG #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-4' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: AT/AC and GT/AT gap open #>       description: AT/AC and GT/AT gap open penalty (in addition to --scoreGap). #>       streamable: no #>       id: '#scoreGapATAC' #>       inputBinding: #>         position: 0 #>         prefix: --scoreGapATAC #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-8' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Gap open penalty #>       description: Gap open penalty. #>       streamable: no #>       id: '#scoreGap' #>       inputBinding: #>         position: 0 #>         prefix: --scoreGap #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Deletion open penalty #>       description: Deletion open penalty. #>       streamable: no #>       id: '#scoreDelOpen' #>       inputBinding: #>         position: 0 #>         prefix: --scoreDelOpen #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-2' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Deletion extension penalty #>       description: Deletion extension penalty per base (in addition to --scoreDelOpen). #>       streamable: no #>       id: '#scoreDelBase' #>       inputBinding: #>         position: 0 #>         prefix: --scoreDelBase #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-2' #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Sequencing center #>       description: Specify the sequencing center for RG line. #>       streamable: no #>       id: '#rg_seq_center' #>       sbg:category: Read group #>       sbg:toolDefaultValue: Inferred from metadata #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Sample ID #>       description: Specify the sample ID for RG line. #>       streamable: no #>       id: '#rg_sample_id' #>       sbg:category: Read group #>       sbg:toolDefaultValue: Inferred from metadata #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Platform unit ID #>       description: Specify the platform unit ID for RG line. #>       streamable: no #>       id: '#rg_platform_unit_id' #>       sbg:category: Read group #>       sbg:toolDefaultValue: Inferred from metadata #>       required: no #>     - type: #>       - 'null' #>       - name: rg_platform #>         symbols: #>         - LS 454 #>         - Helicos #>         - Illumina #>         - ABI SOLiD #>         - Ion Torrent PGM #>         - PacBio #>         type: enum #>       label: Platform #>       description: Specify the version of the technology that was used for sequencing #>         or assaying. #>       streamable: no #>       id: '#rg_platform' #>       sbg:category: Read group #>       sbg:toolDefaultValue: Inferred from metadata #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Median fragment length #>       description: Specify the median fragment length for RG line. #>       streamable: no #>       id: '#rg_mfl' #>       sbg:category: Read group #>       sbg:toolDefaultValue: Inferred from metadata #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Library ID #>       description: Specify the library ID for RG line. #>       streamable: no #>       id: '#rg_library_id' #>       sbg:category: Read group #>       sbg:toolDefaultValue: Inferred from metadata #>       required: no #>     - type: #>       - items: File #>         type: array #>       label: Read sequence #>       description: Read sequence. #>       streamable: no #>       id: '#reads' #>       inputBinding: #>         position: 10 #>         separate: yes #>         itemSeparator: ' ' #>         valueFrom: #>           engine: '#cwl-js-engine' #>           script: \"{\\t\\n  var list = [].concat($job.inputs.reads)\\n  \\n  var resp #>             = []\\n  \\n  if (list.length == 1){\\n    resp.push(list[0].path)\\n    \\n #>             \\ }else if (list.length == 2){    \\n    \\n    left = \\\"\\\"\\n    right = #>             \\\"\\\"\\n      \\n    for (index = 0; index < list.length; ++index) {\\n      \\n #>             \\     if (list[index].metadata != null){\\n        if (list[index].metadata.paired_end #>             == 1){\\n          left = list[index].path\\n        }else if (list[index].metadata.paired_end #>             == 2){\\n          right = list[index].path\\n        }\\n      }\\n    }\\n #>             \\   \\n    if (left != \\\"\\\" && right != \\\"\\\"){      \\n      resp.push(left)\\n #>             \\     resp.push(right)\\n    }\\n  }\\n  else if (list.length > 2){\\n    left #>             = []\\n    right = []\\n      \\n    for (index = 0; index < list.length; #>             ++index) {\\n      \\n      if (list[index].metadata != null){\\n        if #>             (list[index].metadata.paired_end == 1){\\n          left.push(list[index].path)\\n #>             \\       }else if (list[index].metadata.paired_end == 2){\\n          right.push(list[index].path)\\n #>             \\       }\\n      }\\n    }\\n    left_join = left.join()\\n    right_join #>             = right.join()\\n    if (left != [] && right != []){      \\n      resp.push(left_join)\\n #>             \\     resp.push(right_join)\\n    }\\t\\n  }\\n  \\n  if(resp.length > 0){ #>             \\   \\n    return \\\"--readFilesIn \\\".concat(resp.join(\\\" \\\"))\\n  }\\n}\" #>           class: Expression #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Basic #>       sbg:fileTypes: FASTA, FASTQ, FA, FQ, FASTQ.GZ, FQ.GZ, FASTQ.BZ2, FQ.BZ2 #>       required: yes #>     - type: #>       - 'null' #>       - name: readMatesLengthsIn #>         symbols: #>         - NotEqual #>         - Equal #>         type: enum #>       label: Reads lengths #>       description: Equal/Not equal - lengths of names, sequences, qualities for both #>         mates are the same/not the same. \"Not equal\" is safe in all situations. #>       streamable: no #>       id: '#readMatesLengthsIn' #>       inputBinding: #>         position: 0 #>         prefix: --readMatesLengthsIn #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Read parameters #>       sbg:toolDefaultValue: NotEqual #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Reads to map #>       description: Number of reads to map from the beginning of the file. #>       streamable: no #>       id: '#readMapNumber' #>       inputBinding: #>         position: 0 #>         prefix: --readMapNumber #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Read parameters #>       sbg:toolDefaultValue: '-1' #>       required: no #>     - type: #>       - 'null' #>       - name: quantTranscriptomeBan #>         symbols: #>         - IndelSoftclipSingleend #>         - Singleend #>         type: enum #>       label: Prohibit alignment type #>       description: 'Prohibit various alignment type. IndelSoftclipSingleend: prohibit #>         indels, soft clipping and single-end alignments - compatible with RSEM; Singleend: #>         prohibit single-end alignments.' #>       streamable: no #>       id: '#quantTranscriptomeBan' #>       inputBinding: #>         position: 0 #>         prefix: --quantTranscriptomeBan #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Quantification of Annotations #>       sbg:toolDefaultValue: IndelSoftclipSingleend #>       required: no #>     - type: #>       - 'null' #>       - name: quantMode #>         symbols: #>         - TranscriptomeSAM #>         - GeneCounts #>         type: enum #>       label: Quantification mode #>       description: Types of quantification requested. 'TranscriptomeSAM' option outputs #>         SAM/BAM alignments to transcriptome into a separate file. With 'GeneCounts' #>         option, STAR will count number of reads per gene while mapping. #>       streamable: no #>       id: '#quantMode' #>       sbg:category: Quantification of Annotations #>       sbg:toolDefaultValue: '-' #>       required: no #>     - type: #>       - 'null' #>       - name: outSortingType #>         symbols: #>         - Unsorted #>         - SortedByCoordinate #>         - Unsorted SortedByCoordinate #>         type: enum #>       label: Output sorting type #>       description: Type of output sorting. #>       streamable: no #>       id: '#outSortingType' #>       sbg:category: Output #>       sbg:toolDefaultValue: SortedByCoordinate #>       required: no #>     - type: #>       - 'null' #>       - name: outSJfilterReads #>         symbols: #>         - All #>         - Unique #>         type: enum #>       label: Collapsed junctions reads #>       description: 'Which reads to consider for collapsed splice junctions output. #>         All: all reads, unique- and multi-mappers; Unique: uniquely mapping reads #>         only.' #>       streamable: no #>       id: '#outSJfilterReads' #>       inputBinding: #>         position: 0 #>         prefix: --outSJfilterReads #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: 'Output filtering: splice junctions' #>       sbg:toolDefaultValue: All #>       required: no #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Min overhang SJ #>       description: Minimum overhang length for splice junctions on both sides for #>         each of the motifs. To set no output for desired motif, assign -1 to the corresponding #>         field. Does not apply to annotated junctions. #>       streamable: no #>       id: '#outSJfilterOverhangMin' #>       inputBinding: #>         position: 0 #>         prefix: --outSJfilterOverhangMin #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: 'Output filtering: splice junctions' #>       sbg:toolDefaultValue: 30 12 12 12 #>       required: no #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Max gap allowed #>       description: 'Maximum gap allowed for junctions supported by 1,2,3...N reads #>         (int >= 0) i.e. by default junctions supported by 1 read can have gaps <=50000b, #>         by 2 reads: <=100000b, by 3 reads: <=200000. By 4 or more reads: any gap <=alignIntronMax. #>         Does not apply to annotated junctions.' #>       streamable: no #>       id: '#outSJfilterIntronMaxVsReadN' #>       inputBinding: #>         position: 0 #>         prefix: --outSJfilterIntronMaxVsReadN #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: 'Output filtering: splice junctions' #>       sbg:toolDefaultValue: 50000 100000 200000 #>       required: no #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Min distance to other donor/acceptor #>       description: Minimum allowed distance to other junctions' donor/acceptor for #>         each of the motifs (int >= 0). Does not apply to annotated junctions. #>       streamable: no #>       id: '#outSJfilterDistToOtherSJmin' #>       inputBinding: #>         position: 0 #>         prefix: --outSJfilterDistToOtherSJmin #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: 'Output filtering: splice junctions' #>       sbg:toolDefaultValue: 10 0 5 10 #>       required: no #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Min unique count #>       description: Minimum uniquely mapping read count per junction for each of the #>         motifs. To set no output for desired motif, assign -1 to the corresponding #>         field. Junctions are output if one of --outSJfilterCountUniqueMin OR --outSJfilterCountTotalMin #>         conditions are satisfied. Does not apply to annotated junctions. #>       streamable: no #>       id: '#outSJfilterCountUniqueMin' #>       inputBinding: #>         position: 0 #>         prefix: --outSJfilterCountUniqueMin #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: 'Output filtering: splice junctions' #>       sbg:toolDefaultValue: 3 1 1 1 #>       required: no #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Min total count #>       description: Minimum total (multi-mapping+unique) read count per junction for #>         each of the motifs. To set no output for desired motif, assign -1 to the corresponding #>         field. Junctions are output if one of --outSJfilterCountUniqueMin OR --outSJfilterCountTotalMin #>         conditions are satisfied. Does not apply to annotated junctions. #>       streamable: no #>       id: '#outSJfilterCountTotalMin' #>       inputBinding: #>         position: 0 #>         prefix: --outSJfilterCountTotalMin #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: 'Output filtering: splice junctions' #>       sbg:toolDefaultValue: 3 1 1 1 #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMunmapped #>         symbols: #>         - None #>         - Within #>         type: enum #>       label: Write unmapped in SAM #>       description: 'Output of unmapped reads in the SAM format. None: no output Within: #>         output unmapped reads within the main SAM file (i.e. Aligned.out.sam).' #>       streamable: no #>       id: '#outSAMunmapped' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMunmapped #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: None #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMtype #>         symbols: #>         - SAM #>         - BAM #>         type: enum #>       label: Output format #>       description: Format of output alignments. #>       streamable: no #>       id: '#outSAMtype' #>       inputBinding: #>         position: 0 #>         separate: yes #>         valueFrom: #>           engine: '#cwl-js-engine' #>           script: |- #>             { #>               SAM_type = $job.inputs.outSAMtype #>               SORT_type = $job.inputs.outSortingType #>               if (SAM_type && SORT_type) { #>                 return \"--outSAMtype \".concat(SAM_type, \" \", SORT_type) #>               } #>             } #>           class: Expression #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: SAM #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMstrandField #>         symbols: #>         - None #>         - intronMotif #>         type: enum #>       label: Strand field flag #>       description: 'Cufflinks-like strand field flag. None: not used; intronMotif: #>         strand derived from the intron motif. Reads with inconsistent and/or non-canonical #>         introns are filtered out.' #>       streamable: no #>       id: '#outSAMstrandField' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMstrandField #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: None #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMreadID #>         symbols: #>         - Standard #>         - Number #>         type: enum #>       label: Read ID #>       description: 'Read ID record type. Standard: first word (until space) from the #>         FASTx read ID line, removing /1,/2 from the end; Number: read number (index) #>         in the FASTx file.' #>       streamable: no #>       id: '#outSAMreadID' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMreadID #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: Standard #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMprimaryFlag #>         symbols: #>         - OneBestScore #>         - AllBestScore #>         type: enum #>       label: Primary alignments #>       description: 'Which alignments are considered primary - all others will be marked #>         with 0x100 bit in the FLAG. OneBestScore: only one alignment with the best #>         score is primary; AllBestScore: all alignments with the best score are primary.' #>       streamable: no #>       id: '#outSAMprimaryFlag' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMprimaryFlag #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: OneBestScore #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMorder #>         symbols: #>         - Paired #>         - PairedKeepInputOrder #>         type: enum #>       label: Sorting in SAM #>       description: 'Type of sorting for the SAM output. Paired: one mate after the #>         other for all paired alignments; PairedKeepInputOrder: one mate after the #>         other for all paired alignments, the order is kept the same as in the input #>         FASTQ files.' #>       streamable: no #>       id: '#outSAMorder' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMorder #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: Paired #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMmode #>         symbols: #>         - Full #>         - NoQS #>         type: enum #>       label: SAM mode #>       description: 'Mode of SAM output. Full: full SAM output; NoQS: full SAM but #>         without quality scores.' #>       streamable: no #>       id: '#outSAMmode' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMmode #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: Full #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: MAPQ value #>       description: MAPQ value for unique mappers (0 to 255). #>       streamable: no #>       id: '#outSAMmapqUnique' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMmapqUnique #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: '255' #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: SAM header @PG #>       description: Extra @PG (software) line of the SAM header (in addition to STAR). #>       streamable: no #>       id: '#outSAMheaderPG' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMheaderPG #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: '-' #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: SAM header @HD #>       description: '@HD (header) line of the SAM header.' #>       streamable: no #>       id: '#outSAMheaderHD' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMheaderHD #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: '-' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: OR SAM flag #>       description: Set specific bits of the SAM FLAG. #>       streamable: no #>       id: '#outSAMflagOR' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMflagOR #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: AND SAM flag #>       description: Set specific bits of the SAM FLAG. #>       streamable: no #>       id: '#outSAMflagAND' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMflagAND #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: '65535' #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMattributes #>         symbols: #>         - Standard #>         - NH #>         - All #>         - None #>         type: enum #>       label: SAM attributes #>       description: 'Desired SAM attributes, in the order desired for the output SAM. #>         NH: any combination in any order; Standard: NH HI AS nM; All: NH HI AS nM #>         NM MD jM jI; None: no attributes.' #>       streamable: no #>       id: '#outSAMattributes' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMattributes #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: Standard #>       required: no #>     - type: #>       - 'null' #>       - name: outReadsUnmapped #>         symbols: #>         - None #>         - Fastx #>         type: enum #>       label: Output unmapped reads #>       description: 'Output of unmapped reads (besides SAM). None: no output; Fastx: #>         output in separate fasta/fastq files, Unmapped.out.mate1/2.' #>       streamable: no #>       id: '#outReadsUnmapped' #>       inputBinding: #>         position: 0 #>         prefix: --outReadsUnmapped #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: None #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Quality conversion #>       description: Add this number to the quality score (e.g. to convert from Illumina #>         to Sanger, use -31). #>       streamable: no #>       id: '#outQSconversionAdd' #>       inputBinding: #>         position: 0 #>         prefix: --outQSconversionAdd #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - name: outFilterType #>         symbols: #>         - Normal #>         - BySJout #>         type: enum #>       label: Filtering type #>       description: 'Type of filtering. Normal: standard filtering using only current #>         alignment; BySJout: keep only those reads that contain junctions that passed #>         filtering into SJ.out.tab.' #>       streamable: no #>       id: '#outFilterType' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterType #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: Normal #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Min score normalized #>       description: '''Minimum score'' normalized to read length (sum of mates'' lengths #>         for paired-end reads).' #>       streamable: no #>       id: '#outFilterScoreMinOverLread' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterScoreMinOverLread #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '0.66' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min score #>       description: Alignment will be output only if its score is higher than this #>         value. #>       streamable: no #>       id: '#outFilterScoreMin' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterScoreMin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Multimapping score range #>       description: The score range below the maximum score for multimapping alignments. #>       streamable: no #>       id: '#outFilterMultimapScoreRange' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterMultimapScoreRange #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '1' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max number of mappings #>       description: Read alignments will be output only if the read maps fewer than #>         this value, otherwise no alignments will be output. #>       streamable: no #>       id: '#outFilterMultimapNmax' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterMultimapNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '10' #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Mismatches to *read* length #>       description: Alignment will be output only if its ratio of mismatches to *read* #>         length is less than this value. #>       streamable: no #>       id: '#outFilterMismatchNoverReadLmax' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterMismatchNoverReadLmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '1' #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Mismatches to *mapped* length #>       description: Alignment will be output only if its ratio of mismatches to *mapped* #>         length is less than this value. #>       streamable: no #>       id: '#outFilterMismatchNoverLmax' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterMismatchNoverLmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '0.3' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max number of mismatches #>       description: Alignment will be output only if it has fewer mismatches than this #>         value. #>       streamable: no #>       id: '#outFilterMismatchNmax' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterMismatchNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '10' #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Min matched bases normalized #>       description: '''Minimum matched bases'' normalized to read length (sum of mates #>         lengths for paired-end reads).' #>       streamable: no #>       id: '#outFilterMatchNminOverLread' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterMatchNminOverLread #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '0.66' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min matched bases #>       description: Alignment will be output only if the number of matched bases is #>         higher than this value. #>       streamable: no #>       id: '#outFilterMatchNmin' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterMatchNmin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - name: outFilterIntronMotifs #>         symbols: #>         - None #>         - RemoveNoncanonical #>         - RemoveNoncanonicalUnannotated #>         type: enum #>       label: Motifs filtering #>       description: 'Filter alignment using their motifs. None: no filtering; RemoveNoncanonical: #>         filter out alignments that contain non-canonical junctions; RemoveNoncanonicalUnannotated: #>         filter out alignments that contain non-canonical unannotated junctions when #>         using annotated splice junctions database. The annotated non-canonical junctions #>         will be kept.' #>       streamable: no #>       id: '#outFilterIntronMotifs' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterIntronMotifs #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: None #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max insert junctions #>       description: Maximum number of junction to be inserted to the genome on the #>         fly at the mapping stage, including those from annotations and those detected #>         in the 1st step of the 2-pass run. #>       streamable: no #>       id: '#limitSjdbInsertNsj' #>       inputBinding: #>         position: 0 #>         prefix: --limitSjdbInsertNsj #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Limits #>       sbg:toolDefaultValue: '1000000' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Junctions max number #>       description: Max number of junctions for one read (including all multi-mappers). #>       streamable: no #>       id: '#limitOutSJoneRead' #>       inputBinding: #>         position: 0 #>         prefix: --limitOutSJoneRead #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Limits #>       sbg:toolDefaultValue: '1000' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Collapsed junctions max number #>       description: Max number of collapsed junctions. #>       streamable: no #>       id: '#limitOutSJcollapsed' #>       inputBinding: #>         position: 0 #>         prefix: --limitOutSJcollapsed #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Limits #>       sbg:toolDefaultValue: '1000000' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Limit BAM sorting memory #>       description: Maximum available RAM for sorting BAM. If set to 0, it will be #>         set to the genome index size. #>       streamable: no #>       id: '#limitBAMsortRAM' #>       inputBinding: #>         position: 0 #>         prefix: --limitBAMsortRAM #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Limits #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Genome dir name #>       description: Name of the directory which contains genome files (when genome.tar #>         is uncompressed). #>       streamable: no #>       id: '#genomeDirName' #>       inputBinding: #>         position: 0 #>         prefix: --genomeDir #>         separate: yes #>         valueFrom: #>           engine: '#cwl-js-engine' #>           script: $job.inputs.genomeDirName || \"genomeDir\" #>           class: Expression #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Basic #>       sbg:toolDefaultValue: genomeDir #>       required: no #>     - type: #>       - File #>       label: Genome files #>       description: Genome files created using STAR Genome Generate. #>       streamable: no #>       id: '#genome' #>       sbg:category: Basic #>       sbg:fileTypes: TAR #>       required: yes #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Clip 5p bases #>       description: Number of bases to clip from 5p of each mate. In case only one #>         value is given, it will be assumed the same for both mates. #>       streamable: no #>       id: '#clip5pNbases' #>       inputBinding: #>         position: 0 #>         prefix: --clip5pNbases #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Read parameters #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Clip 3p bases #>       description: Number of bases to clip from 3p of each mate. In case only one #>         value is given, it will be assumed the same for both mates. #>       streamable: no #>       id: '#clip3pNbases' #>       inputBinding: #>         position: 0 #>         prefix: --clip3pNbases #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Read parameters #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Clip 3p after adapter seq. #>       description: Number of bases to clip from 3p of each mate after the adapter #>         clipping. In case only one value is given, it will be assumed the same for #>         both mates. #>       streamable: no #>       id: '#clip3pAfterAdapterNbases' #>       inputBinding: #>         position: 0 #>         prefix: --clip3pAfterAdapterNbases #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Read parameters #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - items: string #>         type: array #>       label: Clip 3p adapter sequence #>       description: Adapter sequence to clip from 3p of each mate. In case only one #>         value is given, it will be assumed the same for both mates. #>       streamable: no #>       id: '#clip3pAdapterSeq' #>       inputBinding: #>         position: 0 #>         prefix: --clip3pAdapterSeq #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Read parameters #>       sbg:toolDefaultValue: '-' #>       required: no #>     - type: #>       - 'null' #>       - items: float #>         type: array #>       label: Max mismatches proportions #>       description: Max proportion of mismatches for 3p adapter clipping for each mate. #>         In case only one value is given, it will be assumed the same for both mates. #>       streamable: no #>       id: '#clip3pAdapterMMp' #>       inputBinding: #>         position: 0 #>         prefix: --clip3pAdapterMMp #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Read parameters #>       sbg:toolDefaultValue: '0.1' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min segment length #>       description: Minimum length of chimeric segment length, if =0, no chimeric output #>         (int>=0). #>       streamable: no #>       id: '#chimSegmentMin' #>       inputBinding: #>         position: 0 #>         prefix: --chimSegmentMin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Chimeric Alignments #>       sbg:toolDefaultValue: '15' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min separation score #>       description: Minimum difference (separation) between the best chimeric score #>         and the next one (int>=0). #>       streamable: no #>       id: '#chimScoreSeparation' #>       inputBinding: #>         position: 0 #>         prefix: --chimScoreSeparation #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Chimeric Alignments #>       sbg:toolDefaultValue: '10' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min total score #>       description: Minimum total (summed) score of the chimeric segments (int>=0). #>       streamable: no #>       id: '#chimScoreMin' #>       inputBinding: #>         position: 0 #>         prefix: --chimScoreMin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Chimeric Alignments #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Non-GT/AG penalty #>       description: Penalty for a non-GT/AG chimeric junction. #>       streamable: no #>       id: '#chimScoreJunctionNonGTAG' #>       inputBinding: #>         position: 0 #>         prefix: --chimScoreJunctionNonGTAG #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Chimeric Alignments #>       sbg:toolDefaultValue: '-1' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max drop score #>       description: Max drop (difference) of chimeric score (the sum of scores of all #>         chimeric segements) from the read length (int>=0). #>       streamable: no #>       id: '#chimScoreDropMax' #>       inputBinding: #>         position: 0 #>         prefix: --chimScoreDropMax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Chimeric Alignments #>       sbg:toolDefaultValue: '20' #>       required: no #>     - type: #>       - 'null' #>       - name: chimOutType #>         symbols: #>         - SeparateSAMold #>         - Within #>         type: enum #>       label: Chimeric output type #>       description: 'Type of chimeric output. SeparateSAMold: output old SAM into separate #>         Chimeric.out.sam file; Within: output into main aligned SAM/BAM files.' #>       streamable: no #>       id: '#chimOutType' #>       sbg:category: Chimeric Alignments #>       sbg:toolDefaultValue: SeparateSAMold #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min junction overhang #>       description: Minimum overhang for a chimeric junction (int>=0). #>       streamable: no #>       id: '#chimJunctionOverhangMin' #>       inputBinding: #>         position: 0 #>         prefix: --chimJunctionOverhangMin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Chimeric Alignments #>       sbg:toolDefaultValue: '20' #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Max windows per read #>       description: Max number of windows per read (int>0). #>       streamable: no #>       id: '#alignWindowsPerReadNmax' #>       inputBinding: #>         position: 0 #>         prefix: --alignWindowsPerReadNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '10000' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max transcripts per window #>       description: Max number of transcripts per window (int>0). #>       streamable: no #>       id: '#alignTranscriptsPerWindowNmax' #>       inputBinding: #>         position: 0 #>         prefix: --alignTranscriptsPerWindowNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '100' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max transcripts per read #>       description: Max number of different alignments per read to consider (int>0). #>       streamable: no #>       id: '#alignTranscriptsPerReadNmax' #>       inputBinding: #>         position: 0 #>         prefix: --alignTranscriptsPerReadNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '10000' #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Min mapped length normalized #>       description: alignSplicedMateMapLmin normalized to mate length (float>0). #>       streamable: no #>       id: '#alignSplicedMateMapLminOverLmate' #>       inputBinding: #>         position: 0 #>         prefix: --alignSplicedMateMapLminOverLmate #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '0.66' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min mapped length #>       description: Minimum mapped length for a read mate that is spliced (int>0). #>       streamable: no #>       id: '#alignSplicedMateMapLmin' #>       inputBinding: #>         position: 0 #>         prefix: --alignSplicedMateMapLmin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - name: alignSoftClipAtReferenceEnds #>         symbols: #>         - 'Yes' #>         - 'No' #>         type: enum #>       label: Soft clipping #>       description: 'Option which allows soft clipping of alignments at the reference #>         (chromosome) ends. Can be disabled for compatibility with Cufflinks/Cuffmerge. #>         Yes: Enables soft clipping; No: Disables soft clipping.' #>       streamable: no #>       id: '#alignSoftClipAtReferenceEnds' #>       inputBinding: #>         position: 0 #>         prefix: --alignSoftClipAtReferenceEnds #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: 'Yes' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min overhang #>       description: Minimum overhang (i.e. block size) for spliced alignments (int>0). #>       streamable: no #>       id: '#alignSJoverhangMin' #>       inputBinding: #>         position: 0 #>         prefix: --alignSJoverhangMin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '5' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: 'Min overhang: annotated' #>       description: Minimum overhang (i.e. block size) for annotated (sjdb) spliced #>         alignments (int>0). #>       streamable: no #>       id: '#alignSJDBoverhangMin' #>       inputBinding: #>         position: 0 #>         prefix: --alignSJDBoverhangMin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '3' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max mates gap #>       description: Maximum gap between two mates, if 0, max intron gap will be determined #>         by (2^winBinNbits)*winAnchorDistNbins. #>       streamable: no #>       id: '#alignMatesGapMax' #>       inputBinding: #>         position: 0 #>         prefix: --alignMatesGapMax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min intron size #>       description: 'Minimum intron size: genomic gap is considered intron if its length #>         >= alignIntronMin, otherwise it is considered Deletion (int>=0).' #>       streamable: no #>       id: '#alignIntronMin' #>       inputBinding: #>         position: 0 #>         prefix: --alignIntronMin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '21' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max intron size #>       description: Maximum intron size, if 0, max intron size will be determined by #>         (2^winBinNbits)*winAnchorDistNbins. #>       streamable: no #>       id: '#alignIntronMax' #>       inputBinding: #>         position: 0 #>         prefix: --alignIntronMax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - name: alignEndsType #>         symbols: #>         - Local #>         - EndToEnd #>         type: enum #>       label: Alignment type #>       description: 'Type of read ends alignment. Local: standard local alignment with #>         soft-clipping allowed. EndToEnd: force end to end read alignment, do not soft-clip.' #>       streamable: no #>       id: '#alignEndsType' #>       inputBinding: #>         position: 0 #>         prefix: --alignEndsType #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: Local #>       required: no #>     outputs: #>     - type: #>       - 'null' #>       - items: File #>         type: array #>       label: Unmapped reads #>       description: Output of unmapped reads. #>       streamable: no #>       id: '#unmapped_reads' #>       outputBinding: #>         glob: '*Unmapped.out*' #>       sbg:fileTypes: FASTQ #>     - type: #>       - 'null' #>       - File #>       label: Transcriptome alignments #>       description: Alignments translated into transcript coordinates. #>       streamable: no #>       id: '#transcriptome_aligned_reads' #>       outputBinding: #>         glob: '*Transcriptome*' #>       sbg:fileTypes: BAM #>     - type: #>       - 'null' #>       - File #>       label: Splice junctions #>       description: High confidence collapsed splice junctions in tab-delimited format. #>         Only junctions supported by uniquely mapping reads are reported. #>       streamable: no #>       id: '#splice_junctions' #>       outputBinding: #>         glob: '*SJ.out.tab' #>       sbg:fileTypes: TAB #>     - type: #>       - 'null' #>       - File #>       label: Reads per gene #>       description: File with number of reads per gene. A read is counted if it overlaps #>         (1nt or more) one and only one gene. #>       streamable: no #>       id: '#reads_per_gene' #>       outputBinding: #>         glob: '*ReadsPerGene*' #>       sbg:fileTypes: TAB #>     - type: #>       - 'null' #>       - items: File #>         type: array #>       label: Log files #>       description: Log files produced during alignment. #>       streamable: no #>       id: '#log_files' #>       outputBinding: #>         glob: '*Log*.out' #>       sbg:fileTypes: OUT #>     - type: #>       - 'null' #>       - File #>       label: Intermediate genome files #>       description: Archive with genome files produced when annotations are included #>         on the fly (in the mapping step). #>       streamable: no #>       id: '#intermediate_genome' #>       outputBinding: #>         glob: '*_STARgenome.tar' #>       sbg:fileTypes: TAR #>     - type: #>       - 'null' #>       - File #>       label: Chimeric junctions #>       description: If chimSegmentMin in 'Chimeric Alignments' section is set to 0, #>         'Chimeric Junctions' won't be output. #>       streamable: no #>       id: '#chimeric_junctions' #>       outputBinding: #>         glob: '*Chimeric.out.junction' #>       sbg:fileTypes: JUNCTION #>     - type: #>       - 'null' #>       - File #>       label: Chimeric alignments #>       description: Aligned Chimeric sequences SAM - if chimSegmentMin = 0, no Chimeric #>         Alignment SAM and Chimeric Junctions outputs. #>       streamable: no #>       id: '#chimeric_alignments' #>       outputBinding: #>         glob: '*.Chimeric.out.sam' #>       sbg:fileTypes: SAM #>     - type: #>       - 'null' #>       - File #>       label: Aligned SAM/BAM #>       description: Aligned sequence in SAM/BAM format. #>       streamable: no #>       id: '#aligned_reads' #>       outputBinding: #>         glob: #>           engine: '#cwl-js-engine' #>           script: |- #>             { #>               if ($job.inputs.outSortingType == 'SortedByCoordinate') { #>                 sort_name = '.sortedByCoord' #>               } #>               else { #>                 sort_name = '' #>               } #>               if ($job.inputs.outSAMtype == 'BAM') { #>                 sam_name = \"*.Aligned\".concat( sort_name, '.out.bam') #>               } #>               else { #>                 sam_name = \"*.Aligned.out.sam\" #>               } #>               return sam_name #>             } #>           class: Expression #>       sbg:fileTypes: SAM, BAM #>     requirements: #>     - class: ExpressionEngineRequirement #>       id: '#cwl-js-engine' #>       requirements: #>       - class: DockerRequirement #>         dockerPull: rabix/js-engine #>     hints: #>     - class: DockerRequirement #>       dockerPull: images.sbgenomics.com/ana_d/star:2.4.2a #>       dockerImageId: a4b0ad2c3cae #>     - class: sbg:MemRequirement #>       value: 60000 #>     - class: sbg:CPURequirement #>       value: 15 #>     label: STAR #>     description: STAR is an ultrafast universal RNA-seq aligner. It has very high #>       mapping speed, accurate alignment of contiguous and spliced reads, detection #>       of polyA-tails, non-canonical splices and chimeric (fusion) junctions. It works #>       with reads starting from lengths ~15 bases up to ~300 bases. In case of having #>       longer reads, use of STAR Long is recommended. #>     class: CommandLineTool #>     baseCommand: #>     - tar #>     - -xvf #>     - class: Expression #>       script: $job.inputs.genome.path #>       engine: '#cwl-js-engine' #>     - '&&' #>     - /opt/STAR #>     - --runThreadN #>     - class: Expression #>       script: |- #>         { #>           return $job.allocatedResources.cpu #>         } #>       engine: '#cwl-js-engine' #>     arguments: #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: |- #>           { #>             file = [].concat($job.inputs.reads)[0].path #>             extension = /(?:\\.([^.]+))?$/.exec(file)[1] #>             if (extension == \"gz\") { #>               return \"--readFilesCommand zcat\" #>             } else if (extension == \"bz2\") { #>               return \"--readFilesCommand bzcat\" #>             } #>           } #>         class: Expression #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\t\\n  var sjFormat = \\\"False\\\"\\n  var gtfgffFormat = \\\"False\\\"\\n #>           \\ var list = $job.inputs.sjdbGTFfile\\n  var paths_list = []\\n  var joined_paths #>           = \\\"\\\"\\n  \\n  if (list) {\\n    list.forEach(function(f){return paths_list.push(f.path)})\\n #>           \\   joined_paths = paths_list.join(\\\" \\\")\\n\\n\\n    paths_list.forEach(function(f){\\n #>           \\     ext = f.replace(/^.*\\\\./, '')\\n      if (ext == \\\"gff\\\" || ext == #>           \\\"gtf\\\") {\\n        gtfgffFormat = \\\"True\\\"\\n        return gtfgffFormat\\n #>           \\     }\\n      if (ext == \\\"txt\\\") {\\n        sjFormat = \\\"True\\\"\\n        return #>           sjFormat\\n      }\\n    })\\n\\n    if ($job.inputs.sjdbGTFfile && $job.inputs.sjdbInsertSave #>           != \\\"None\\\") {\\n      if (sjFormat == \\\"True\\\") {\\n        return \\\"--sjdbFileChrStartEnd #>           \\\".concat(joined_paths)\\n      }\\n      else if (gtfgffFormat == \\\"True\\\") #>           {\\n        return \\\"--sjdbGTFfile \\\".concat(joined_paths)\\n      }\\n    }\\n #>           \\ }\\n}\" #>         class: Expression #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  a = b = c = d = e = f = g = []\\n  if ($job.inputs.sjdbGTFchrPrefix) #>           {\\n    a = [\\\"--sjdbGTFchrPrefix\\\", $job.inputs.sjdbGTFchrPrefix]\\n  }\\n #>           \\ if ($job.inputs.sjdbGTFfeatureExon) {\\n    b = [\\\"--sjdbGTFfeatureExon\\\", #>           $job.inputs.sjdbGTFfeatureExon]\\n  }\\n  if ($job.inputs.sjdbGTFtagExonParentTranscript) #>           {\\n    c = [\\\"--sjdbGTFtagExonParentTranscript\\\", $job.inputs.sjdbGTFtagExonParentTranscript]\\n #>           \\ }\\n  if ($job.inputs.sjdbGTFtagExonParentGene) {\\n    d = [\\\"--sjdbGTFtagExonParentGene\\\", #>           $job.inputs.sjdbGTFtagExonParentGene]\\n  }\\n  if ($job.inputs.sjdbOverhang) #>           {\\n    e = [\\\"--sjdbOverhang\\\", $job.inputs.sjdbOverhang]\\n  }\\n  if ($job.inputs.sjdbScore) #>           {\\n    f = [\\\"--sjdbScore\\\", $job.inputs.sjdbScore]\\n  }\\n  if ($job.inputs.sjdbInsertSave) #>           {\\n    g = [\\\"--sjdbInsertSave\\\", $job.inputs.sjdbInsertSave]\\n  }\\n  \\n #>           \\ \\n  \\n  if ($job.inputs.sjdbInsertSave != \\\"None\\\" && $job.inputs.sjdbGTFfile) #>           {\\n    new_list = a.concat(b, c, d, e, f, g)\\n    return new_list.join(\\\" #>           \\\")\\n  }\\n}\" #>         class: Expression #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: |- #>           { #>             if ($job.inputs.twopassMode == \"Basic\") { #>               return \"--twopass1readsN \".concat($job.inputs.twopass1readsN) #>             } #>           } #>         class: Expression #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: |- #>           { #>             if ($job.inputs.chimOutType == \"Within\") { #>               return \"--chimOutType \".concat(\"Within\", $job.inputs.outSAMtype) #>             } #>             else { #>               return \"--chimOutType SeparateSAMold\" #>             } #>           } #>         class: Expression #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  var param_list = []\\n  \\n  function add_param(key, value){\\n #>           \\   if (value == \\\"\\\") {\\n      return\\n    }\\n    else {\\n      return #>           param_list.push(key.concat(\\\":\\\", value))\\n    }\\n  }\\n  \\n  add_param('ID', #>           \\\"1\\\")\\n  if ($job.inputs.rg_seq_center) {\\n    add_param('CN', $job.inputs.rg_seq_center)\\n #>           \\ } else if ([].concat($job.inputs.reads)[0].metadata.seq_center) {\\n    add_param('CN', #>           [].concat($job.inputs.reads)[0].metadata.seq_center)\\n  }\\n  if ($job.inputs.rg_library_id) #>           {\\n    add_param('LB', $job.inputs.rg_library_id)\\n  } else if ([].concat($job.inputs.reads)[0].metadata.library_id) #>           {\\n    add_param('LB', [].concat($job.inputs.reads)[0].metadata.library_id)\\n #>           \\ }\\n  if ($job.inputs.rg_mfl) {\\n    add_param('PI', $job.inputs.rg_mfl)\\n #>           \\ } else if ([].concat($job.inputs.reads)[0].metadata.median_fragment_length) #>           {\\n    add_param('PI', [].concat($job.inputs.reads)[0].metadata.median_fragment_length)\\n #>           \\ }\\n  if ($job.inputs.rg_platform) {\\n    add_param('PL', $job.inputs.rg_platform.replace(/ #>           /g,\\\"_\\\"))\\n  } else if ([].concat($job.inputs.reads)[0].metadata.platform) #>           {\\n    add_param('PL', [].concat($job.inputs.reads)[0].metadata.platform.replace(/ #>           /g,\\\"_\\\"))\\n  }\\n  if ($job.inputs.rg_platform_unit_id) {\\n    add_param('PU', #>           $job.inputs.rg_platform_unit_id)\\n  } else if ([].concat($job.inputs.reads)[0].metadata.platform_unit_id) #>           {\\n    add_param('PU', [].concat($job.inputs.reads)[0].metadata.platform_unit_id)\\n #>           \\ }\\n  if ($job.inputs.rg_sample_id) {\\n    add_param('SM', $job.inputs.rg_sample_id)\\n #>           \\ } else if ([].concat($job.inputs.reads)[0].metadata.sample_id) {\\n    add_param('SM', #>           [].concat($job.inputs.reads)[0].metadata.sample_id)\\n  }\\n  return \\\"--outSAMattrRGline #>           \\\".concat(param_list.join(\\\" \\\"))\\n}\" #>         class: Expression #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: |- #>           { #>             if ($job.inputs.sjdbGTFfile && $job.inputs.quantMode) { #>               return \"--quantMode \".concat($job.inputs.quantMode) #>             } #>           } #>         class: Expression #>     - position: 100 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  function sharedStart(array){\\n  var A= array.concat().sort(), #>           \\n      a1= A[0], a2= A[A.length-1], L= a1.length, i= 0;\\n  while(i<L && #>           a1.charAt(i)=== a2.charAt(i)) i++;\\n  return a1.substring(0, i);\\n  }\\n #>           \\ path_list = []\\n  arr = [].concat($job.inputs.reads)\\n  arr.forEach(function(f){return #>           path_list.push(f.path.replace(/\\\\\\\\/g,'/').replace( /.*\\\\//, '' ))})\\n  common_prefix #>           = sharedStart(path_list)\\n  intermediate = common_prefix.replace( /\\\\-$|\\\\_$|\\\\.$/, #>           '' ).concat(\\\"._STARgenome\\\")\\n  source = \\\"./\\\".concat(intermediate)\\n #>           \\ destination = intermediate.concat(\\\".tar\\\")\\n  if ($job.inputs.sjdbGTFfile #>           && $job.inputs.sjdbInsertSave && $job.inputs.sjdbInsertSave != \\\"None\\\") #>           {\\n    return \\\"&& tar -vcf \\\".concat(destination, \\\" \\\", source)\\n  }\\n}\" #>         class: Expression #>     - position: 0 #>       prefix: --outFileNamePrefix #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  function sharedStart(array){\\n  var A= array.concat().sort(), #>           \\n      a1= A[0], a2= A[A.length-1], L= a1.length, i= 0;\\n  while(i<L && #>           a1.charAt(i)=== a2.charAt(i)) i++;\\n  return a1.substring(0, i);\\n  }\\n #>           \\ path_list = []\\n  arr = [].concat($job.inputs.reads)\\n  arr.forEach(function(f){return #>           path_list.push(f.path.replace(/\\\\\\\\/g,'/').replace( /.*\\\\//, '' ))})\\n  common_prefix #>           = sharedStart(path_list)\\n  return \\\"./\\\".concat(common_prefix.replace( #>           /\\\\-$|\\\\_$|\\\\.$/, '' ), \\\".\\\")\\n}\" #>         class: Expression #>     - position: 101 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  function sharedStart(array){\\n  var A= array.concat().sort(), #>           \\n      a1= A[0], a2= A[A.length-1], L= a1.length, i= 0;\\n  while(i<L && #>           a1.charAt(i)=== a2.charAt(i)) i++;\\n  return a1.substring(0, i);\\n  }\\n #>           \\ path_list = []\\n  arr = [].concat($job.inputs.reads)\\n  arr.forEach(function(f){return #>           path_list.push(f.path.replace(/\\\\\\\\/g,'/').replace( /.*\\\\//, '' ))})\\n  common_prefix #>           = sharedStart(path_list)\\n  mate1 = common_prefix.replace( /\\\\-$|\\\\_$|\\\\.$/, #>           '' ).concat(\\\".Unmapped.out.mate1\\\")\\n  mate2 = common_prefix.replace( /\\\\-$|\\\\_$|\\\\.$/, #>           '' ).concat(\\\".Unmapped.out.mate2\\\")\\n  mate1fq = mate1.concat(\\\".fastq\\\")\\n #>           \\ mate2fq = mate2.concat(\\\".fastq\\\")\\n  if ($job.inputs.outReadsUnmapped #>           == \\\"Fastx\\\" && arr.length > 1) {\\n    return \\\"&& mv \\\".concat(mate1, \\\" #>           \\\", mate1fq, \\\" && mv \\\", mate2, \\\" \\\", mate2fq)\\n  }\\n  else if ($job.inputs.outReadsUnmapped #>           == \\\"Fastx\\\" && arr.length == 1) {\\n    return \\\"&& mv \\\".concat(mate1, #>           \\\" \\\", mate1fq)\\n  }\\n}\" #>         class: Expression #>     stdin: '' #>     stdout: '' #>     successCodes: [] #>     temporaryFailCodes: [] #>     x: 624.0 #>     'y': 323 #>   sbg:x: 700.0 #>   sbg:y: 200.0 #> sbg:canvas_zoom: 0.6 #> sbg:canvas_y: -16 #> sbg:canvas_x: -41 #>  # get required node f1$get_required() #>            fastq genomeFastaFiles  #>        \"File...\"           \"File\"  # set required node f1$steps[[1]]$run$set_required(\"genomeChrBinNbits\") #> not implemented yet! f1$get_required() #>            fastq genomeFastaFiles  #>        \"File...\"           \"File\"  f1$steps[[1]]$run$set_required(\"genomeChrBinNbits\", FALSE) #> not implemented yet! f1$get_required() #>            fastq genomeFastaFiles  #>        \"File...\"           \"File\"  # get Tool object from Flow by id and name f1$list_tool() #>                        label #> 1       STAR Genome Generate #> 2 SBG FASTQ Quality Detector #> 3             Picard SortSam #> 4                       STAR #>                                                   sbgid #> 1       sevenbridges/public-apps/star-genome-generate/1 #> 2 sevenbridges/public-apps/sbg-fastq-quality-detector/3 #> 3       sevenbridges/public-apps/picard-sortsam-1-140/2 #> 4                       sevenbridges/public-apps/star/4 #>                            id #> 1       #STAR_Genome_Generate #> 2 #SBG_FASTQ_Quality_Detector #> 3             #Picard_SortSam #> 4                       #STAR # return two f1$get_tool(\"STAR\") #> [[1]] #> sbg:validationErrors: [] #> sbg:sbgMaintained: no #> sbg:latestRevision: 1 #> sbg:job: #>   allocatedResources: #>     mem: 60000 #>     cpu: 15 #>   inputs: #>     sjdbScore: 0 #>     sjdbGTFfeatureExon: sjdbGTFfeatureExon #>     sjdbOverhang: 0 #>     sjdbGTFtagExonParentTranscript: sjdbGTFtagExonParentTranscript #>     genomeChrBinNbits: genomeChrBinNbits #>     genomeSAsparseD: 0 #>     sjdbGTFfile: #>     - size: 0 #>       secondaryFiles: [] #>       class: File #>       path: /demo/test-files/chr20.gtf #>     sjdbGTFtagExonParentGene: sjdbGTFtagExonParentGene #>     genomeFastaFiles: #>       size: 0 #>       secondaryFiles: [] #>       class: File #>       path: /sbgenomics/test-data/chr20.fa #>     sjdbGTFchrPrefix: sjdbGTFchrPrefix #>     genomeSAindexNbases: 0 #> sbg:toolAuthor: Alexander Dobin/CSHL #> sbg:createdOn: 1450911469 #> sbg:categories: #> - Alignment #> sbg:contributors: #> - bix-demo #> sbg:links: #> - id: https://github.com/alexdobin/STAR #>   label: Homepage #> - id: https://github.com/alexdobin/STAR/releases #>   label: Releases #> - id: https://github.com/alexdobin/STAR/blob/master/doc/STARmanual.pdf #>   label: Manual #> - id: https://groups.google.com/forum/#!forum/rna-star #>   label: Support #> - id: http://www.ncbi.nlm.nih.gov/pubmed/23104886 #>   label: Publication #> sbg:project: bix-demo/star-2-4-2a-demo #> sbg:createdBy: bix-demo #> sbg:toolkitVersion: 2.4.2a #> sbg:id: sevenbridges/public-apps/star-genome-generate/1 #> sbg:license: GNU General Public License v3.0 only #> sbg:revision: 1 #> sbg:cmdPreview: mkdir genomeDir && /opt/STAR --runMode genomeGenerate --genomeDir #>   ./genomeDir --runThreadN 15 --genomeFastaFiles /sbgenomics/test-data/chr20.fa --genomeChrBinNbits #>   genomeChrBinNbits --genomeSAindexNbases 0 --genomeSAsparseD 0 --sjdbGTFfeatureExon #>   sjdbGTFfeatureExon --sjdbGTFtagExonParentTranscript sjdbGTFtagExonParentTranscript #>   --sjdbGTFtagExonParentGene sjdbGTFtagExonParentGene --sjdbOverhang 0 --sjdbScore #>   0 --sjdbGTFchrPrefix sjdbGTFchrPrefix  --sjdbGTFfile /demo/test-files/chr20.gtf  && #>   tar -vcf genome.tar ./genomeDir /sbgenomics/test-data/chr20.fa #> sbg:modifiedOn: 1450911470 #> sbg:modifiedBy: bix-demo #> sbg:revisionsInfo: #> - sbg:modifiedBy: bix-demo #>   sbg:modifiedOn: 1450911469 #>   sbg:revision: 0 #> - sbg:modifiedBy: bix-demo #>   sbg:modifiedOn: 1450911470 #>   sbg:revision: 1 #> sbg:toolkit: STAR #> id: sevenbridges/public-apps/star-genome-generate/1 #> inputs: #> - type: #>   - 'null' #>   - int #>   label: Extra alignment score #>   description: Extra alignment score for alignments that cross database junctions. #>   streamable: no #>   id: '#sjdbScore' #>   inputBinding: #>     position: 0 #>     prefix: --sjdbScore #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Splice junctions db parameters #>   sbg:includeInPorts: yes #>   sbg:toolDefaultValue: '2' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: '\"Overhang\" length' #>   description: Length of the donor/acceptor sequence on each side of the junctions, #>     ideally = (mate_length - 1) (int >= 0), if int = 0, splice junction database is #>     not used. #>   streamable: no #>   id: '#sjdbOverhang' #>   inputBinding: #>     position: 0 #>     prefix: --sjdbOverhang #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Splice junctions db parameters #>   sbg:includeInPorts: yes #>   sbg:toolDefaultValue: '100' #>   required: no #> - type: #>   - 'null' #>   - string #>   label: Exons' parents name #>   description: Tag name to be used as exons' transcript-parents. #>   streamable: no #>   id: '#sjdbGTFtagExonParentTranscript' #>   inputBinding: #>     position: 0 #>     prefix: --sjdbGTFtagExonParentTranscript #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Splice junctions db parameters #>   sbg:toolDefaultValue: transcript_id #>   required: no #> - type: #>   - 'null' #>   - string #>   label: Gene name #>   description: Tag name to be used as exons' gene-parents. #>   streamable: no #>   id: '#sjdbGTFtagExonParentGene' #>   inputBinding: #>     position: 0 #>     prefix: --sjdbGTFtagExonParentGene #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Splice junctions db parameters #>   sbg:toolDefaultValue: gene_id #>   required: no #> - type: #>   - 'null' #>   - items: File #>     type: array #>   label: Splice junction file #>   description: Gene model annotations and/or known transcripts. #>   streamable: no #>   id: '#sjdbGTFfile' #>   sbg:category: Basic #>   sbg:fileTypes: GTF, GFF, TXT #>   required: no #> - type: #>   - 'null' #>   - string #>   label: Set exons feature #>   description: Feature type in GTF file to be used as exons for building transcripts. #>   streamable: no #>   id: '#sjdbGTFfeatureExon' #>   inputBinding: #>     position: 0 #>     prefix: --sjdbGTFfeatureExon #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Splice junctions db parameters #>   sbg:toolDefaultValue: exon #>   required: no #> - type: #>   - 'null' #>   - string #>   label: Chromosome names #>   description: Prefix for chromosome names in a GTF file (e.g. 'chr' for using ENSMEBL #>     annotations with UCSC geneomes). #>   streamable: no #>   id: '#sjdbGTFchrPrefix' #>   inputBinding: #>     position: 0 #>     prefix: --sjdbGTFchrPrefix #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Splice junctions db parameters #>   sbg:toolDefaultValue: '-' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Suffux array sparsity #>   description: 'Distance between indices: use bigger numbers to decrease needed RAM #>     at the cost of mapping speed reduction (int>0).' #>   streamable: no #>   id: '#genomeSAsparseD' #>   inputBinding: #>     position: 0 #>     prefix: --genomeSAsparseD #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Genome generation parameters #>   sbg:toolDefaultValue: '1' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Pre-indexing string length #>   description: Length (bases) of the SA pre-indexing string. Typically between 10 #>     and 15. Longer strings will use much more memory, but allow faster searches. For #>     small genomes, this number needs to be scaled down, with a typical value of min(14, #>     log2(GenomeLength)/2 - 1). For example, for 1 megaBase genome, this is equal to #>     9, for 100 kiloBase genome, this is equal to 7. #>   streamable: no #>   id: '#genomeSAindexNbases' #>   inputBinding: #>     position: 0 #>     prefix: --genomeSAindexNbases #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Genome generation parameters #>   sbg:toolDefaultValue: '14' #>   required: no #> - type: #>   - File #>   label: Genome fasta files #>   description: Reference sequence to which to align the reads. #>   streamable: no #>   id: '#genomeFastaFiles' #>   inputBinding: #>     position: 0 #>     prefix: --genomeFastaFiles #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Basic #>   sbg:fileTypes: FASTA, FA #>   required: yes #> - type: #>   - 'null' #>   - string #>   label: Bins size #>   description: 'Set log2(chrBin), where chrBin is the size (bits) of the bins for #>     genome storage: each chromosome will occupy an integer number of bins. If you #>     are using a genome with a large (>5,000) number of chrosomes/scaffolds, you may #>     need to reduce this number to reduce RAM consumption. The following scaling is #>     recomended: genomeChrBinNbits = min(18, log2(GenomeLength/NumberOfReferences)). #>     For example, for 3 gigaBase genome with 100,000 chromosomes/scaffolds, this is #>     equal to 15.' #>   streamable: no #>   id: '#genomeChrBinNbits' #>   inputBinding: #>     position: 0 #>     prefix: --genomeChrBinNbits #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Genome generation parameters #>   sbg:toolDefaultValue: '18' #>   required: no #> outputs: #> - type: #>   - 'null' #>   - File #>   label: Genome Files #>   description: Genome files comprise binary genome sequence, suffix arrays, text chromosome #>     names/lengths, splice junctions coordinates, and transcripts/genes information. #>   streamable: no #>   id: '#genome' #>   outputBinding: #>     glob: '*.tar' #>   sbg:fileTypes: TAR #> requirements: #> - class: ExpressionEngineRequirement #>   id: '#cwl-js-engine' #>   requirements: #>   - class: DockerRequirement #>     dockerPull: rabix/js-engine #> hints: #> - class: DockerRequirement #>   dockerPull: images.sbgenomics.com/ana_d/star:2.4.2a #>   dockerImageId: a4b0ad2c3cae #> - class: sbg:CPURequirement #>   value: 15 #> - class: sbg:MemRequirement #>   value: 60000 #> label: STAR Genome Generate #> description: STAR Genome Generate is a tool that generates genome index files. One #>   set of files should be generated per each genome/annotation combination. Once produced, #>   these files could be used as long as genome/annotation combination stays the same. #>   Also, STAR Genome Generate which produced these files and STAR aligner using them #>   must be the same toolkit version. #> class: CommandLineTool #> baseCommand: #> - mkdir #> - genomeDir #> - '&&' #> - /opt/STAR #> - --runMode #> - genomeGenerate #> - --genomeDir #> - ./genomeDir #> - --runThreadN #> - class: Expression #>   script: |- #>     { #>       return $job.allocatedResources.cpu #>     } #>   engine: '#cwl-js-engine' #> arguments: #> - position: 99 #>   separate: yes #>   valueFrom: '&& tar -vcf genome.tar ./genomeDir' #> - position: 0 #>   separate: yes #>   valueFrom: #>     engine: '#cwl-js-engine' #>     script: \"{\\t\\n  var sjFormat = \\\"False\\\"\\n  var gtfgffFormat = \\\"False\\\"\\n  var #>       list = $job.inputs.sjdbGTFfile\\n  var paths_list = []\\n  var joined_paths = #>       \\\"\\\"\\n  \\n  if (list) {\\n    list.forEach(function(f){return paths_list.push(f.path)})\\n #>       \\   joined_paths = paths_list.join(\\\" \\\")\\n\\n\\n    paths_list.forEach(function(f){\\n #>       \\     ext = f.replace(/^.*\\\\./, '')\\n      if (ext == \\\"gff\\\" || ext == \\\"gtf\\\") #>       {\\n        gtfgffFormat = \\\"True\\\"\\n        return gtfgffFormat\\n      }\\n      if #>       (ext == \\\"txt\\\") {\\n        sjFormat = \\\"True\\\"\\n        return sjFormat\\n      }\\n #>       \\   })\\n\\n    if ($job.inputs.sjdbGTFfile && $job.inputs.sjdbInsertSave != \\\"None\\\") #>       {\\n      if (sjFormat == \\\"True\\\") {\\n        return \\\"--sjdbFileChrStartEnd #>       \\\".concat(joined_paths)\\n      }\\n      else if (gtfgffFormat == \\\"True\\\") {\\n #>       \\       return \\\"--sjdbGTFfile \\\".concat(joined_paths)\\n      }\\n    }\\n  }\\n}\" #>     class: Expression #> stdin: '' #> stdout: '' #> successCodes: [] #> temporaryFailCodes: [] #> x: 384.0832266 #> 'y': 446.4998957 #>  #>  #> [[2]] #> sbg:validationErrors: [] #> sbg:sbgMaintained: no #> sbg:latestRevision: 4 #> sbg:job: #>   allocatedResources: #>     mem: 60000 #>     cpu: 15 #>   inputs: #>     alignWindowsPerReadNmax: 0 #>     outSAMheaderPG: outSAMheaderPG #>     GENOME_DIR_NAME: '' #>     outFilterMatchNminOverLread: 0 #>     rg_platform_unit_id: rg_platform_unit #>     alignTranscriptsPerReadNmax: 0 #>     readMapNumber: 0 #>     alignSplicedMateMapLminOverLmate: 0 #>     alignMatesGapMax: 0 #>     outFilterMultimapNmax: 0 #>     clip5pNbases: #>     - 0 #>     outSAMstrandField: None #>     readMatesLengthsIn: NotEqual #>     outSAMattributes: Standard #>     seedMultimapNmax: 0 #>     rg_mfl: rg_mfl #>     chimSegmentMin: 0 #>     winAnchorDistNbins: 0 #>     outSortingType: SortedByCoordinate #>     outFilterMultimapScoreRange: 0 #>     sjdbInsertSave: Basic #>     clip3pAfterAdapterNbases: #>     - 0 #>     scoreDelBase: 0 #>     outFilterMatchNmin: 0 #>     twopass1readsN: 0 #>     outSAMunmapped: None #>     genome: #>       size: 0 #>       secondaryFiles: [] #>       class: File #>       path: genome.ext #>     sjdbGTFtagExonParentTranscript: '' #>     limitBAMsortRAM: 0 #>     alignEndsType: Local #>     seedNoneLociPerWindow: 0 #>     rg_sample_id: rg_sample #>     sjdbGTFtagExonParentGene: '' #>     chimScoreMin: 0 #>     outSJfilterIntronMaxVsReadN: #>     - 0 #>     twopassMode: Basic #>     alignSplicedMateMapLmin: 0 #>     outSJfilterReads: All #>     outSAMprimaryFlag: OneBestScore #>     outSJfilterCountTotalMin: #>     - 3 #>     - 1 #>     - 1 #>     - 1 #>     outSAMorder: Paired #>     outSAMflagAND: 0 #>     chimScoreSeparation: 0 #>     alignSJoverhangMin: 0 #>     outFilterScoreMin: 0 #>     seedSearchStartLmax: 0 #>     scoreGapGCAG: 0 #>     scoreGenomicLengthLog2scale: 0 #>     outFilterIntronMotifs: None #>     outFilterMismatchNmax: 0 #>     reads: #>     - size: 0 #>       secondaryFiles: [] #>       class: File #>       metadata: #>         format: fastq #>         paired_end: '1' #>         seq_center: illumina #>       path: /test-data/mate_1.fastq.bz2 #>     scoreGap: 0 #>     outSJfilterOverhangMin: #>     - 30 #>     - 12 #>     - 12 #>     - 12 #>     outSAMflagOR: 0 #>     outSAMmode: Full #>     rg_library_id: '' #>     chimScoreJunctionNonGTAG: 0 #>     scoreInsOpen: 0 #>     clip3pAdapterSeq: #>     - clip3pAdapterSeq #>     chimScoreDropMax: 0 #>     outFilterType: Normal #>     scoreGapATAC: 0 #>     rg_platform: Ion Torrent PGM #>     clip3pAdapterMMp: #>     - 0 #>     sjdbGTFfeatureExon: '' #>     outQSconversionAdd: 0 #>     quantMode: TranscriptomeSAM #>     alignIntronMin: 0 #>     scoreInsBase: 0 #>     scoreGapNoncan: 0 #>     seedSearchLmax: 0 #>     outSJfilterDistToOtherSJmin: #>     - 0 #>     outFilterScoreMinOverLread: 0 #>     alignSJDBoverhangMin: 0 #>     limitOutSJcollapsed: 0 #>     winAnchorMultimapNmax: 0 #>     outFilterMismatchNoverLmax: 0 #>     rg_seq_center: '' #>     outSAMheaderHD: outSAMheaderHD #>     chimOutType: Within #>     quantTranscriptomeBan: IndelSoftclipSingleend #>     limitOutSJoneRead: 0 #>     alignTranscriptsPerWindowNmax: 0 #>     sjdbOverhang: ~ #>     outReadsUnmapped: Fastx #>     scoreStitchSJshift: 0 #>     seedPerWindowNmax: 0 #>     outSJfilterCountUniqueMin: #>     - 3 #>     - 1 #>     - 1 #>     - 1 #>     scoreDelOpen: 0 #>     sjdbGTFfile: #>     - path: /demo/test-data/chr20.gtf #>     clip3pNbases: #>     - 0 #>     - 3 #>     winBinNbits: 0 #>     sjdbScore: ~ #>     seedSearchStartLmaxOverLread: 0 #>     alignIntronMax: 0 #>     seedPerReadNmax: 0 #>     outFilterMismatchNoverReadLmax: 0 #>     winFlankNbins: 0 #>     sjdbGTFchrPrefix: chrPrefix #>     alignSoftClipAtReferenceEnds: 'Yes' #>     outSAMreadID: Standard #>     outSAMtype: BAM #>     chimJunctionOverhangMin: 0 #>     limitSjdbInsertNsj: 0 #>     outSAMmapqUnique: 0 #> sbg:toolAuthor: Alexander Dobin/CSHL #> sbg:createdOn: 1450911471 #> sbg:categories: #> - Alignment #> sbg:contributors: #> - ana_d #> - bix-demo #> - uros_sipetic #> sbg:links: #> - id: https://github.com/alexdobin/STAR #>   label: Homepage #> - id: https://github.com/alexdobin/STAR/releases #>   label: Releases #> - id: https://github.com/alexdobin/STAR/blob/master/doc/STARmanual.pdf #>   label: Manual #> - id: https://groups.google.com/forum/#!forum/rna-star #>   label: Support #> - id: http://www.ncbi.nlm.nih.gov/pubmed/23104886 #>   label: Publication #> sbg:project: bix-demo/star-2-4-2a-demo #> sbg:createdBy: bix-demo #> sbg:toolkitVersion: 2.4.2a #> sbg:id: sevenbridges/public-apps/star/4 #> sbg:license: GNU General Public License v3.0 only #> sbg:revision: 4 #> sbg:cmdPreview: tar -xvf genome.ext && /opt/STAR --runThreadN 15  --readFilesCommand #>   bzcat  --sjdbGTFfile /demo/test-data/chr20.gtf  --sjdbGTFchrPrefix chrPrefix --sjdbInsertSave #>   Basic  --twopass1readsN 0  --chimOutType WithinBAM  --outSAMattrRGline ID:1 CN:illumina #>   PI:rg_mfl PL:Ion_Torrent_PGM PU:rg_platform_unit SM:rg_sample  --quantMode TranscriptomeSAM #>   --outFileNamePrefix ./mate_1.fastq.bz2.  --readFilesIn /test-data/mate_1.fastq.bz2  && #>   tar -vcf mate_1.fastq.bz2._STARgenome.tar ./mate_1.fastq.bz2._STARgenome  && mv #>   mate_1.fastq.bz2.Unmapped.out.mate1 mate_1.fastq.bz2.Unmapped.out.mate1.fastq #> sbg:modifiedOn: 1462889222 #> sbg:modifiedBy: ana_d #> sbg:revisionsInfo: #> - sbg:modifiedBy: bix-demo #>   sbg:modifiedOn: 1450911471 #>   sbg:revision: 0 #> - sbg:modifiedBy: bix-demo #>   sbg:modifiedOn: 1450911473 #>   sbg:revision: 1 #> - sbg:modifiedBy: bix-demo #>   sbg:modifiedOn: 1450911475 #>   sbg:revision: 2 #> - sbg:modifiedBy: uros_sipetic #>   sbg:modifiedOn: 1462878528 #>   sbg:revision: 3 #> - sbg:modifiedBy: ana_d #>   sbg:modifiedOn: 1462889222 #>   sbg:revision: 4 #> sbg:toolkit: STAR #> id: sevenbridges/public-apps/star/4 #> inputs: #> - type: #>   - 'null' #>   - int #>   label: Flanking regions size #>   description: =log2(winFlank), where win Flank is the size of the left and right #>     flanking regions for each window (int>0). #>   streamable: no #>   id: '#winFlankNbins' #>   inputBinding: #>     position: 0 #>     prefix: --winFlankNbins #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Windows, Anchors, Binning #>   sbg:includeInPorts: yes #>   sbg:toolDefaultValue: '4' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Bin size #>   description: =log2(winBin), where winBin is the size of the bin for the windows/clustering, #>     each window will occupy an integer number of bins (int>0). #>   streamable: no #>   id: '#winBinNbits' #>   inputBinding: #>     position: 0 #>     prefix: --winBinNbits #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Windows, Anchors, Binning #>   sbg:includeInPorts: yes #>   sbg:toolDefaultValue: '16' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max loci anchors #>   description: Max number of loci anchors are allowed to map to (int>0). #>   streamable: no #>   id: '#winAnchorMultimapNmax' #>   inputBinding: #>     position: 0 #>     prefix: --winAnchorMultimapNmax #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Windows, Anchors, Binning #>   sbg:toolDefaultValue: '50' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max bins between anchors #>   description: Max number of bins between two anchors that allows aggregation of anchors #>     into one window (int>0). #>   streamable: no #>   id: '#winAnchorDistNbins' #>   inputBinding: #>     position: 0 #>     prefix: --winAnchorDistNbins #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Windows, Anchors, Binning #>   sbg:toolDefaultValue: '9' #>   required: no #> - type: #>   - 'null' #>   - name: twopassMode #>     symbols: #>     - None #>     - Basic #>     type: enum #>   label: Two-pass mode #>   description: '2-pass mapping mode. None: 1-pass mapping; Basic: basic 2-pass mapping, #>     with all 1st pass junctions inserted into the genome indices on the fly.' #>   streamable: no #>   id: '#twopassMode' #>   inputBinding: #>     position: 0 #>     prefix: --twopassMode #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: 2-pass mapping #>   sbg:toolDefaultValue: None #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Reads to process in 1st step #>   description: 'Number of reads to process for the 1st step. 0: 1-step only, no 2nd #>     pass; use very large number to map all reads in the first step (int>0).' #>   streamable: no #>   id: '#twopass1readsN' #>   sbg:category: 2-pass mapping #>   sbg:toolDefaultValue: '-1' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Extra alignment score #>   description: Extra alignment score for alignments that cross database junctions. #>   streamable: no #>   id: '#sjdbScore' #>   sbg:category: Splice junctions database #>   sbg:toolDefaultValue: '2' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: '\"Overhang\" length' #>   description: Length of the donor/acceptor sequence on each side of the junctions, #>     ideally = (mate_length - 1) (int >= 0), if int = 0, splice junction database is #>     not used. #>   streamable: no #>   id: '#sjdbOverhang' #>   sbg:category: Splice junctions database #>   sbg:toolDefaultValue: '100' #>   required: no #> - type: #>   - 'null' #>   - name: sjdbInsertSave #>     symbols: #>     - Basic #>     - All #>     - None #>     type: enum #>   label: Save junction files #>   description: 'Which files to save when sjdb junctions are inserted on the fly at #>     the mapping step. None: not saving files at all; Basic: only small junction/transcript #>     files; All: all files including big Genome, SA and SAindex. These files are output #>     as archive.' #>   streamable: no #>   id: '#sjdbInsertSave' #>   sbg:category: Splice junctions database #>   sbg:toolDefaultValue: None #>   required: no #> - type: #>   - 'null' #>   - string #>   label: Exons' parents name #>   description: Tag name to be used as exons' transcript-parents. #>   streamable: no #>   id: '#sjdbGTFtagExonParentTranscript' #>   sbg:category: Splice junctions database #>   sbg:toolDefaultValue: transcript_id #>   required: no #> - type: #>   - 'null' #>   - string #>   label: Gene name #>   description: Tag name to be used as exons' gene-parents. #>   streamable: no #>   id: '#sjdbGTFtagExonParentGene' #>   sbg:category: Splice junctions database #>   sbg:toolDefaultValue: gene_id #>   required: no #> - type: #>   - 'null' #>   - items: File #>     type: array #>   label: Splice junction file #>   description: Gene model annotations and/or known transcripts. No need to include #>     this input, except in case of using \"on the fly\" annotations. #>   streamable: no #>   id: '#sjdbGTFfile' #>   sbg:category: Basic #>   sbg:fileTypes: GTF, GFF, TXT #>   required: no #> - type: #>   - 'null' #>   - string #>   label: Set exons feature #>   description: Feature type in GTF file to be used as exons for building transcripts. #>   streamable: no #>   id: '#sjdbGTFfeatureExon' #>   sbg:category: Splice junctions database #>   sbg:toolDefaultValue: exon #>   required: no #> - type: #>   - 'null' #>   - string #>   label: Chromosome names #>   description: Prefix for chromosome names in a GTF file (e.g. 'chr' for using ENSMEBL #>     annotations with UCSC geneomes). #>   streamable: no #>   id: '#sjdbGTFchrPrefix' #>   sbg:category: Splice junctions database #>   sbg:toolDefaultValue: '-' #>   required: no #> - type: #>   - 'null' #>   - float #>   label: Search start point normalized #>   description: seedSearchStartLmax normalized to read length (sum of mates' lengths #>     for paired-end reads). #>   streamable: no #>   id: '#seedSearchStartLmaxOverLread' #>   inputBinding: #>     position: 0 #>     prefix: --seedSearchStartLmaxOverLread #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: '1.0' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Search start point #>   description: Defines the search start point through the read - the read is split #>     into pieces no longer than this value (int>0). #>   streamable: no #>   id: '#seedSearchStartLmax' #>   inputBinding: #>     position: 0 #>     prefix: --seedSearchStartLmax #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: '50' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max seed length #>   description: Defines the maximum length of the seeds, if =0 max seed length is infinite #>     (int>=0). #>   streamable: no #>   id: '#seedSearchLmax' #>   inputBinding: #>     position: 0 #>     prefix: --seedSearchLmax #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: '0' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max seeds per window #>   description: Max number of seeds per window (int>=0). #>   streamable: no #>   id: '#seedPerWindowNmax' #>   inputBinding: #>     position: 0 #>     prefix: --seedPerWindowNmax #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: '50' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max seeds per read #>   description: Max number of seeds per read (int>=0). #>   streamable: no #>   id: '#seedPerReadNmax' #>   inputBinding: #>     position: 0 #>     prefix: --seedPerReadNmax #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: '1000' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max one-seed loci per window #>   description: Max number of one seed loci per window (int>=0). #>   streamable: no #>   id: '#seedNoneLociPerWindow' #>   inputBinding: #>     position: 0 #>     prefix: --seedNoneLociPerWindow #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: '10' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Filter pieces for stitching #>   description: Only pieces that map fewer than this value are utilized in the stitching #>     procedure (int>=0). #>   streamable: no #>   id: '#seedMultimapNmax' #>   inputBinding: #>     position: 0 #>     prefix: --seedMultimapNmax #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: '10000' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max score reduction #>   description: Maximum score reduction while searching for SJ boundaries in the stitching #>     step. #>   streamable: no #>   id: '#scoreStitchSJshift' #>   inputBinding: #>     position: 0 #>     prefix: --scoreStitchSJshift #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Scoring #>   sbg:toolDefaultValue: '1' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Insertion Open Penalty #>   description: Insertion open penalty. #>   streamable: no #>   id: '#scoreInsOpen' #>   inputBinding: #>     position: 0 #>     prefix: --scoreInsOpen #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Scoring #>   sbg:toolDefaultValue: '-2' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Insertion extension penalty #>   description: Insertion extension penalty per base (in addition to --scoreInsOpen). #>   streamable: no #>   id: '#scoreInsBase' #>   inputBinding: #>     position: 0 #>     prefix: --scoreInsBase #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Scoring #>   sbg:toolDefaultValue: '-2' #>   required: no #> - type: #>   - 'null' #>   - float #>   label: Log scaled score #>   description: 'Extra score logarithmically scaled with genomic length of the alignment: #>     <int>*log2(genomicLength).' #>   streamable: no #>   id: '#scoreGenomicLengthLog2scale' #>   inputBinding: #>     position: 0 #>     prefix: --scoreGenomicLengthLog2scale #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Scoring #>   sbg:toolDefaultValue: '-0.25' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Non-canonical gap open #>   description: Non-canonical gap open penalty (in addition to --scoreGap). #>   streamable: no #>   id: '#scoreGapNoncan' #>   inputBinding: #>     position: 0 #>     prefix: --scoreGapNoncan #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Scoring #>   sbg:toolDefaultValue: '-8' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: GC/AG and CT/GC gap open #>   description: GC/AG and CT/GC gap open penalty (in addition to --scoreGap). #>   streamable: no #>   id: '#scoreGapGCAG' #>   inputBinding: #>     position: 0 #>     prefix: --scoreGapGCAG #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Scoring #>   sbg:toolDefaultValue: '-4' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: AT/AC and GT/AT gap open #>   description: AT/AC and GT/AT gap open penalty (in addition to --scoreGap). #>   streamable: no #>   id: '#scoreGapATAC' #>   inputBinding: #>     position: 0 #>     prefix: --scoreGapATAC #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Scoring #>   sbg:toolDefaultValue: '-8' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Gap open penalty #>   description: Gap open penalty. #>   streamable: no #>   id: '#scoreGap' #>   inputBinding: #>     position: 0 #>     prefix: --scoreGap #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Scoring #>   sbg:toolDefaultValue: '0' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Deletion open penalty #>   description: Deletion open penalty. #>   streamable: no #>   id: '#scoreDelOpen' #>   inputBinding: #>     position: 0 #>     prefix: --scoreDelOpen #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Scoring #>   sbg:toolDefaultValue: '-2' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Deletion extension penalty #>   description: Deletion extension penalty per base (in addition to --scoreDelOpen). #>   streamable: no #>   id: '#scoreDelBase' #>   inputBinding: #>     position: 0 #>     prefix: --scoreDelBase #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Scoring #>   sbg:toolDefaultValue: '-2' #>   required: no #> - type: #>   - 'null' #>   - string #>   label: Sequencing center #>   description: Specify the sequencing center for RG line. #>   streamable: no #>   id: '#rg_seq_center' #>   sbg:category: Read group #>   sbg:toolDefaultValue: Inferred from metadata #>   required: no #> - type: #>   - 'null' #>   - string #>   label: Sample ID #>   description: Specify the sample ID for RG line. #>   streamable: no #>   id: '#rg_sample_id' #>   sbg:category: Read group #>   sbg:toolDefaultValue: Inferred from metadata #>   required: no #> - type: #>   - 'null' #>   - string #>   label: Platform unit ID #>   description: Specify the platform unit ID for RG line. #>   streamable: no #>   id: '#rg_platform_unit_id' #>   sbg:category: Read group #>   sbg:toolDefaultValue: Inferred from metadata #>   required: no #> - type: #>   - 'null' #>   - name: rg_platform #>     symbols: #>     - LS 454 #>     - Helicos #>     - Illumina #>     - ABI SOLiD #>     - Ion Torrent PGM #>     - PacBio #>     type: enum #>   label: Platform #>   description: Specify the version of the technology that was used for sequencing #>     or assaying. #>   streamable: no #>   id: '#rg_platform' #>   sbg:category: Read group #>   sbg:toolDefaultValue: Inferred from metadata #>   required: no #> - type: #>   - 'null' #>   - string #>   label: Median fragment length #>   description: Specify the median fragment length for RG line. #>   streamable: no #>   id: '#rg_mfl' #>   sbg:category: Read group #>   sbg:toolDefaultValue: Inferred from metadata #>   required: no #> - type: #>   - 'null' #>   - string #>   label: Library ID #>   description: Specify the library ID for RG line. #>   streamable: no #>   id: '#rg_library_id' #>   sbg:category: Read group #>   sbg:toolDefaultValue: Inferred from metadata #>   required: no #> - type: #>   - items: File #>     type: array #>   label: Read sequence #>   description: Read sequence. #>   streamable: no #>   id: '#reads' #>   inputBinding: #>     position: 10 #>     separate: yes #>     itemSeparator: ' ' #>     valueFrom: #>       engine: '#cwl-js-engine' #>       script: \"{\\t\\n  var list = [].concat($job.inputs.reads)\\n  \\n  var resp = []\\n #>         \\ \\n  if (list.length == 1){\\n    resp.push(list[0].path)\\n    \\n  }else if #>         (list.length == 2){    \\n    \\n    left = \\\"\\\"\\n    right = \\\"\\\"\\n      \\n #>         \\   for (index = 0; index < list.length; ++index) {\\n      \\n      if (list[index].metadata #>         != null){\\n        if (list[index].metadata.paired_end == 1){\\n          left #>         = list[index].path\\n        }else if (list[index].metadata.paired_end == 2){\\n #>         \\         right = list[index].path\\n        }\\n      }\\n    }\\n    \\n    if #>         (left != \\\"\\\" && right != \\\"\\\"){      \\n      resp.push(left)\\n      resp.push(right)\\n #>         \\   }\\n  }\\n  else if (list.length > 2){\\n    left = []\\n    right = []\\n #>         \\     \\n    for (index = 0; index < list.length; ++index) {\\n      \\n      if #>         (list[index].metadata != null){\\n        if (list[index].metadata.paired_end #>         == 1){\\n          left.push(list[index].path)\\n        }else if (list[index].metadata.paired_end #>         == 2){\\n          right.push(list[index].path)\\n        }\\n      }\\n    }\\n #>         \\   left_join = left.join()\\n    right_join = right.join()\\n    if (left != #>         [] && right != []){      \\n      resp.push(left_join)\\n      resp.push(right_join)\\n #>         \\   }\\t\\n  }\\n  \\n  if(resp.length > 0){    \\n    return \\\"--readFilesIn \\\".concat(resp.join(\\\" #>         \\\"))\\n  }\\n}\" #>       class: Expression #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Basic #>   sbg:fileTypes: FASTA, FASTQ, FA, FQ, FASTQ.GZ, FQ.GZ, FASTQ.BZ2, FQ.BZ2 #>   required: yes #> - type: #>   - 'null' #>   - name: readMatesLengthsIn #>     symbols: #>     - NotEqual #>     - Equal #>     type: enum #>   label: Reads lengths #>   description: Equal/Not equal - lengths of names, sequences, qualities for both mates #>     are the same/not the same. \"Not equal\" is safe in all situations. #>   streamable: no #>   id: '#readMatesLengthsIn' #>   inputBinding: #>     position: 0 #>     prefix: --readMatesLengthsIn #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Read parameters #>   sbg:toolDefaultValue: NotEqual #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Reads to map #>   description: Number of reads to map from the beginning of the file. #>   streamable: no #>   id: '#readMapNumber' #>   inputBinding: #>     position: 0 #>     prefix: --readMapNumber #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Read parameters #>   sbg:toolDefaultValue: '-1' #>   required: no #> - type: #>   - 'null' #>   - name: quantTranscriptomeBan #>     symbols: #>     - IndelSoftclipSingleend #>     - Singleend #>     type: enum #>   label: Prohibit alignment type #>   description: 'Prohibit various alignment type. IndelSoftclipSingleend: prohibit #>     indels, soft clipping and single-end alignments - compatible with RSEM; Singleend: #>     prohibit single-end alignments.' #>   streamable: no #>   id: '#quantTranscriptomeBan' #>   inputBinding: #>     position: 0 #>     prefix: --quantTranscriptomeBan #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Quantification of Annotations #>   sbg:toolDefaultValue: IndelSoftclipSingleend #>   required: no #> - type: #>   - 'null' #>   - name: quantMode #>     symbols: #>     - TranscriptomeSAM #>     - GeneCounts #>     type: enum #>   label: Quantification mode #>   description: Types of quantification requested. 'TranscriptomeSAM' option outputs #>     SAM/BAM alignments to transcriptome into a separate file. With 'GeneCounts' option, #>     STAR will count number of reads per gene while mapping. #>   streamable: no #>   id: '#quantMode' #>   sbg:category: Quantification of Annotations #>   sbg:toolDefaultValue: '-' #>   required: no #> - type: #>   - 'null' #>   - name: outSortingType #>     symbols: #>     - Unsorted #>     - SortedByCoordinate #>     - Unsorted SortedByCoordinate #>     type: enum #>   label: Output sorting type #>   description: Type of output sorting. #>   streamable: no #>   id: '#outSortingType' #>   sbg:category: Output #>   sbg:toolDefaultValue: SortedByCoordinate #>   required: no #> - type: #>   - 'null' #>   - name: outSJfilterReads #>     symbols: #>     - All #>     - Unique #>     type: enum #>   label: Collapsed junctions reads #>   description: 'Which reads to consider for collapsed splice junctions output. All: #>     all reads, unique- and multi-mappers; Unique: uniquely mapping reads only.' #>   streamable: no #>   id: '#outSJfilterReads' #>   inputBinding: #>     position: 0 #>     prefix: --outSJfilterReads #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: 'Output filtering: splice junctions' #>   sbg:toolDefaultValue: All #>   required: no #> - type: #>   - 'null' #>   - items: int #>     type: array #>   label: Min overhang SJ #>   description: Minimum overhang length for splice junctions on both sides for each #>     of the motifs. To set no output for desired motif, assign -1 to the corresponding #>     field. Does not apply to annotated junctions. #>   streamable: no #>   id: '#outSJfilterOverhangMin' #>   inputBinding: #>     position: 0 #>     prefix: --outSJfilterOverhangMin #>     separate: yes #>     itemSeparator: ' ' #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: 'Output filtering: splice junctions' #>   sbg:toolDefaultValue: 30 12 12 12 #>   required: no #> - type: #>   - 'null' #>   - items: int #>     type: array #>   label: Max gap allowed #>   description: 'Maximum gap allowed for junctions supported by 1,2,3...N reads (int #>     >= 0) i.e. by default junctions supported by 1 read can have gaps <=50000b, by #>     2 reads: <=100000b, by 3 reads: <=200000. By 4 or more reads: any gap <=alignIntronMax. #>     Does not apply to annotated junctions.' #>   streamable: no #>   id: '#outSJfilterIntronMaxVsReadN' #>   inputBinding: #>     position: 0 #>     prefix: --outSJfilterIntronMaxVsReadN #>     separate: yes #>     itemSeparator: ' ' #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: 'Output filtering: splice junctions' #>   sbg:toolDefaultValue: 50000 100000 200000 #>   required: no #> - type: #>   - 'null' #>   - items: int #>     type: array #>   label: Min distance to other donor/acceptor #>   description: Minimum allowed distance to other junctions' donor/acceptor for each #>     of the motifs (int >= 0). Does not apply to annotated junctions. #>   streamable: no #>   id: '#outSJfilterDistToOtherSJmin' #>   inputBinding: #>     position: 0 #>     prefix: --outSJfilterDistToOtherSJmin #>     separate: yes #>     itemSeparator: ' ' #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: 'Output filtering: splice junctions' #>   sbg:toolDefaultValue: 10 0 5 10 #>   required: no #> - type: #>   - 'null' #>   - items: int #>     type: array #>   label: Min unique count #>   description: Minimum uniquely mapping read count per junction for each of the motifs. #>     To set no output for desired motif, assign -1 to the corresponding field. Junctions #>     are output if one of --outSJfilterCountUniqueMin OR --outSJfilterCountTotalMin #>     conditions are satisfied. Does not apply to annotated junctions. #>   streamable: no #>   id: '#outSJfilterCountUniqueMin' #>   inputBinding: #>     position: 0 #>     prefix: --outSJfilterCountUniqueMin #>     separate: yes #>     itemSeparator: ' ' #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: 'Output filtering: splice junctions' #>   sbg:toolDefaultValue: 3 1 1 1 #>   required: no #> - type: #>   - 'null' #>   - items: int #>     type: array #>   label: Min total count #>   description: Minimum total (multi-mapping+unique) read count per junction for each #>     of the motifs. To set no output for desired motif, assign -1 to the corresponding #>     field. Junctions are output if one of --outSJfilterCountUniqueMin OR --outSJfilterCountTotalMin #>     conditions are satisfied. Does not apply to annotated junctions. #>   streamable: no #>   id: '#outSJfilterCountTotalMin' #>   inputBinding: #>     position: 0 #>     prefix: --outSJfilterCountTotalMin #>     separate: yes #>     itemSeparator: ' ' #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: 'Output filtering: splice junctions' #>   sbg:toolDefaultValue: 3 1 1 1 #>   required: no #> - type: #>   - 'null' #>   - name: outSAMunmapped #>     symbols: #>     - None #>     - Within #>     type: enum #>   label: Write unmapped in SAM #>   description: 'Output of unmapped reads in the SAM format. None: no output Within: #>     output unmapped reads within the main SAM file (i.e. Aligned.out.sam).' #>   streamable: no #>   id: '#outSAMunmapped' #>   inputBinding: #>     position: 0 #>     prefix: --outSAMunmapped #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output #>   sbg:toolDefaultValue: None #>   required: no #> - type: #>   - 'null' #>   - name: outSAMtype #>     symbols: #>     - SAM #>     - BAM #>     type: enum #>   label: Output format #>   description: Format of output alignments. #>   streamable: no #>   id: '#outSAMtype' #>   inputBinding: #>     position: 0 #>     separate: yes #>     valueFrom: #>       engine: '#cwl-js-engine' #>       script: |- #>         { #>           SAM_type = $job.inputs.outSAMtype #>           SORT_type = $job.inputs.outSortingType #>           if (SAM_type && SORT_type) { #>             return \"--outSAMtype \".concat(SAM_type, \" \", SORT_type) #>           } #>         } #>       class: Expression #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output #>   sbg:toolDefaultValue: SAM #>   required: no #> - type: #>   - 'null' #>   - name: outSAMstrandField #>     symbols: #>     - None #>     - intronMotif #>     type: enum #>   label: Strand field flag #>   description: 'Cufflinks-like strand field flag. None: not used; intronMotif: strand #>     derived from the intron motif. Reads with inconsistent and/or non-canonical introns #>     are filtered out.' #>   streamable: no #>   id: '#outSAMstrandField' #>   inputBinding: #>     position: 0 #>     prefix: --outSAMstrandField #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output #>   sbg:toolDefaultValue: None #>   required: no #> - type: #>   - 'null' #>   - name: outSAMreadID #>     symbols: #>     - Standard #>     - Number #>     type: enum #>   label: Read ID #>   description: 'Read ID record type. Standard: first word (until space) from the FASTx #>     read ID line, removing /1,/2 from the end; Number: read number (index) in the #>     FASTx file.' #>   streamable: no #>   id: '#outSAMreadID' #>   inputBinding: #>     position: 0 #>     prefix: --outSAMreadID #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output #>   sbg:toolDefaultValue: Standard #>   required: no #> - type: #>   - 'null' #>   - name: outSAMprimaryFlag #>     symbols: #>     - OneBestScore #>     - AllBestScore #>     type: enum #>   label: Primary alignments #>   description: 'Which alignments are considered primary - all others will be marked #>     with 0x100 bit in the FLAG. OneBestScore: only one alignment with the best score #>     is primary; AllBestScore: all alignments with the best score are primary.' #>   streamable: no #>   id: '#outSAMprimaryFlag' #>   inputBinding: #>     position: 0 #>     prefix: --outSAMprimaryFlag #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output #>   sbg:toolDefaultValue: OneBestScore #>   required: no #> - type: #>   - 'null' #>   - name: outSAMorder #>     symbols: #>     - Paired #>     - PairedKeepInputOrder #>     type: enum #>   label: Sorting in SAM #>   description: 'Type of sorting for the SAM output. Paired: one mate after the other #>     for all paired alignments; PairedKeepInputOrder: one mate after the other for #>     all paired alignments, the order is kept the same as in the input FASTQ files.' #>   streamable: no #>   id: '#outSAMorder' #>   inputBinding: #>     position: 0 #>     prefix: --outSAMorder #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output #>   sbg:toolDefaultValue: Paired #>   required: no #> - type: #>   - 'null' #>   - name: outSAMmode #>     symbols: #>     - Full #>     - NoQS #>     type: enum #>   label: SAM mode #>   description: 'Mode of SAM output. Full: full SAM output; NoQS: full SAM but without #>     quality scores.' #>   streamable: no #>   id: '#outSAMmode' #>   inputBinding: #>     position: 0 #>     prefix: --outSAMmode #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output #>   sbg:toolDefaultValue: Full #>   required: no #> - type: #>   - 'null' #>   - int #>   label: MAPQ value #>   description: MAPQ value for unique mappers (0 to 255). #>   streamable: no #>   id: '#outSAMmapqUnique' #>   inputBinding: #>     position: 0 #>     prefix: --outSAMmapqUnique #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output #>   sbg:toolDefaultValue: '255' #>   required: no #> - type: #>   - 'null' #>   - string #>   label: SAM header @PG #>   description: Extra @PG (software) line of the SAM header (in addition to STAR). #>   streamable: no #>   id: '#outSAMheaderPG' #>   inputBinding: #>     position: 0 #>     prefix: --outSAMheaderPG #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output #>   sbg:toolDefaultValue: '-' #>   required: no #> - type: #>   - 'null' #>   - string #>   label: SAM header @HD #>   description: '@HD (header) line of the SAM header.' #>   streamable: no #>   id: '#outSAMheaderHD' #>   inputBinding: #>     position: 0 #>     prefix: --outSAMheaderHD #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output #>   sbg:toolDefaultValue: '-' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: OR SAM flag #>   description: Set specific bits of the SAM FLAG. #>   streamable: no #>   id: '#outSAMflagOR' #>   inputBinding: #>     position: 0 #>     prefix: --outSAMflagOR #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output #>   sbg:toolDefaultValue: '0' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: AND SAM flag #>   description: Set specific bits of the SAM FLAG. #>   streamable: no #>   id: '#outSAMflagAND' #>   inputBinding: #>     position: 0 #>     prefix: --outSAMflagAND #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output #>   sbg:toolDefaultValue: '65535' #>   required: no #> - type: #>   - 'null' #>   - name: outSAMattributes #>     symbols: #>     - Standard #>     - NH #>     - All #>     - None #>     type: enum #>   label: SAM attributes #>   description: 'Desired SAM attributes, in the order desired for the output SAM. NH: #>     any combination in any order; Standard: NH HI AS nM; All: NH HI AS nM NM MD jM #>     jI; None: no attributes.' #>   streamable: no #>   id: '#outSAMattributes' #>   inputBinding: #>     position: 0 #>     prefix: --outSAMattributes #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output #>   sbg:toolDefaultValue: Standard #>   required: no #> - type: #>   - 'null' #>   - name: outReadsUnmapped #>     symbols: #>     - None #>     - Fastx #>     type: enum #>   label: Output unmapped reads #>   description: 'Output of unmapped reads (besides SAM). None: no output; Fastx: output #>     in separate fasta/fastq files, Unmapped.out.mate1/2.' #>   streamable: no #>   id: '#outReadsUnmapped' #>   inputBinding: #>     position: 0 #>     prefix: --outReadsUnmapped #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output #>   sbg:toolDefaultValue: None #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Quality conversion #>   description: Add this number to the quality score (e.g. to convert from Illumina #>     to Sanger, use -31). #>   streamable: no #>   id: '#outQSconversionAdd' #>   inputBinding: #>     position: 0 #>     prefix: --outQSconversionAdd #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output #>   sbg:toolDefaultValue: '0' #>   required: no #> - type: #>   - 'null' #>   - name: outFilterType #>     symbols: #>     - Normal #>     - BySJout #>     type: enum #>   label: Filtering type #>   description: 'Type of filtering. Normal: standard filtering using only current alignment; #>     BySJout: keep only those reads that contain junctions that passed filtering into #>     SJ.out.tab.' #>   streamable: no #>   id: '#outFilterType' #>   inputBinding: #>     position: 0 #>     prefix: --outFilterType #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output filtering #>   sbg:toolDefaultValue: Normal #>   required: no #> - type: #>   - 'null' #>   - float #>   label: Min score normalized #>   description: '''Minimum score'' normalized to read length (sum of mates'' lengths #>     for paired-end reads).' #>   streamable: no #>   id: '#outFilterScoreMinOverLread' #>   inputBinding: #>     position: 0 #>     prefix: --outFilterScoreMinOverLread #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output filtering #>   sbg:toolDefaultValue: '0.66' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Min score #>   description: Alignment will be output only if its score is higher than this value. #>   streamable: no #>   id: '#outFilterScoreMin' #>   inputBinding: #>     position: 0 #>     prefix: --outFilterScoreMin #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output filtering #>   sbg:toolDefaultValue: '0' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Multimapping score range #>   description: The score range below the maximum score for multimapping alignments. #>   streamable: no #>   id: '#outFilterMultimapScoreRange' #>   inputBinding: #>     position: 0 #>     prefix: --outFilterMultimapScoreRange #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output filtering #>   sbg:toolDefaultValue: '1' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max number of mappings #>   description: Read alignments will be output only if the read maps fewer than this #>     value, otherwise no alignments will be output. #>   streamable: no #>   id: '#outFilterMultimapNmax' #>   inputBinding: #>     position: 0 #>     prefix: --outFilterMultimapNmax #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output filtering #>   sbg:toolDefaultValue: '10' #>   required: no #> - type: #>   - 'null' #>   - float #>   label: Mismatches to *read* length #>   description: Alignment will be output only if its ratio of mismatches to *read* #>     length is less than this value. #>   streamable: no #>   id: '#outFilterMismatchNoverReadLmax' #>   inputBinding: #>     position: 0 #>     prefix: --outFilterMismatchNoverReadLmax #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output filtering #>   sbg:toolDefaultValue: '1' #>   required: no #> - type: #>   - 'null' #>   - float #>   label: Mismatches to *mapped* length #>   description: Alignment will be output only if its ratio of mismatches to *mapped* #>     length is less than this value. #>   streamable: no #>   id: '#outFilterMismatchNoverLmax' #>   inputBinding: #>     position: 0 #>     prefix: --outFilterMismatchNoverLmax #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output filtering #>   sbg:toolDefaultValue: '0.3' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max number of mismatches #>   description: Alignment will be output only if it has fewer mismatches than this #>     value. #>   streamable: no #>   id: '#outFilterMismatchNmax' #>   inputBinding: #>     position: 0 #>     prefix: --outFilterMismatchNmax #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output filtering #>   sbg:toolDefaultValue: '10' #>   required: no #> - type: #>   - 'null' #>   - float #>   label: Min matched bases normalized #>   description: '''Minimum matched bases'' normalized to read length (sum of mates #>     lengths for paired-end reads).' #>   streamable: no #>   id: '#outFilterMatchNminOverLread' #>   inputBinding: #>     position: 0 #>     prefix: --outFilterMatchNminOverLread #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output filtering #>   sbg:toolDefaultValue: '0.66' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Min matched bases #>   description: Alignment will be output only if the number of matched bases is higher #>     than this value. #>   streamable: no #>   id: '#outFilterMatchNmin' #>   inputBinding: #>     position: 0 #>     prefix: --outFilterMatchNmin #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output filtering #>   sbg:toolDefaultValue: '0' #>   required: no #> - type: #>   - 'null' #>   - name: outFilterIntronMotifs #>     symbols: #>     - None #>     - RemoveNoncanonical #>     - RemoveNoncanonicalUnannotated #>     type: enum #>   label: Motifs filtering #>   description: 'Filter alignment using their motifs. None: no filtering; RemoveNoncanonical: #>     filter out alignments that contain non-canonical junctions; RemoveNoncanonicalUnannotated: #>     filter out alignments that contain non-canonical unannotated junctions when using #>     annotated splice junctions database. The annotated non-canonical junctions will #>     be kept.' #>   streamable: no #>   id: '#outFilterIntronMotifs' #>   inputBinding: #>     position: 0 #>     prefix: --outFilterIntronMotifs #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output filtering #>   sbg:toolDefaultValue: None #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max insert junctions #>   description: Maximum number of junction to be inserted to the genome on the fly #>     at the mapping stage, including those from annotations and those detected in the #>     1st step of the 2-pass run. #>   streamable: no #>   id: '#limitSjdbInsertNsj' #>   inputBinding: #>     position: 0 #>     prefix: --limitSjdbInsertNsj #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Limits #>   sbg:toolDefaultValue: '1000000' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Junctions max number #>   description: Max number of junctions for one read (including all multi-mappers). #>   streamable: no #>   id: '#limitOutSJoneRead' #>   inputBinding: #>     position: 0 #>     prefix: --limitOutSJoneRead #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Limits #>   sbg:toolDefaultValue: '1000' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Collapsed junctions max number #>   description: Max number of collapsed junctions. #>   streamable: no #>   id: '#limitOutSJcollapsed' #>   inputBinding: #>     position: 0 #>     prefix: --limitOutSJcollapsed #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Limits #>   sbg:toolDefaultValue: '1000000' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Limit BAM sorting memory #>   description: Maximum available RAM for sorting BAM. If set to 0, it will be set #>     to the genome index size. #>   streamable: no #>   id: '#limitBAMsortRAM' #>   inputBinding: #>     position: 0 #>     prefix: --limitBAMsortRAM #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Limits #>   sbg:toolDefaultValue: '0' #>   required: no #> - type: #>   - 'null' #>   - string #>   label: Genome dir name #>   description: Name of the directory which contains genome files (when genome.tar #>     is uncompressed). #>   streamable: no #>   id: '#genomeDirName' #>   inputBinding: #>     position: 0 #>     prefix: --genomeDir #>     separate: yes #>     valueFrom: #>       engine: '#cwl-js-engine' #>       script: $job.inputs.genomeDirName || \"genomeDir\" #>       class: Expression #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Basic #>   sbg:toolDefaultValue: genomeDir #>   required: no #> - type: #>   - File #>   label: Genome files #>   description: Genome files created using STAR Genome Generate. #>   streamable: no #>   id: '#genome' #>   sbg:category: Basic #>   sbg:fileTypes: TAR #>   required: yes #> - type: #>   - 'null' #>   - items: int #>     type: array #>   label: Clip 5p bases #>   description: Number of bases to clip from 5p of each mate. In case only one value #>     is given, it will be assumed the same for both mates. #>   streamable: no #>   id: '#clip5pNbases' #>   inputBinding: #>     position: 0 #>     prefix: --clip5pNbases #>     separate: yes #>     itemSeparator: ' ' #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Read parameters #>   sbg:toolDefaultValue: '0' #>   required: no #> - type: #>   - 'null' #>   - items: int #>     type: array #>   label: Clip 3p bases #>   description: Number of bases to clip from 3p of each mate. In case only one value #>     is given, it will be assumed the same for both mates. #>   streamable: no #>   id: '#clip3pNbases' #>   inputBinding: #>     position: 0 #>     prefix: --clip3pNbases #>     separate: yes #>     itemSeparator: ' ' #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Read parameters #>   sbg:toolDefaultValue: '0' #>   required: no #> - type: #>   - 'null' #>   - items: int #>     type: array #>   label: Clip 3p after adapter seq. #>   description: Number of bases to clip from 3p of each mate after the adapter clipping. #>     In case only one value is given, it will be assumed the same for both mates. #>   streamable: no #>   id: '#clip3pAfterAdapterNbases' #>   inputBinding: #>     position: 0 #>     prefix: --clip3pAfterAdapterNbases #>     separate: yes #>     itemSeparator: ' ' #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Read parameters #>   sbg:toolDefaultValue: '0' #>   required: no #> - type: #>   - 'null' #>   - items: string #>     type: array #>   label: Clip 3p adapter sequence #>   description: Adapter sequence to clip from 3p of each mate. In case only one value #>     is given, it will be assumed the same for both mates. #>   streamable: no #>   id: '#clip3pAdapterSeq' #>   inputBinding: #>     position: 0 #>     prefix: --clip3pAdapterSeq #>     separate: yes #>     itemSeparator: ' ' #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Read parameters #>   sbg:toolDefaultValue: '-' #>   required: no #> - type: #>   - 'null' #>   - items: float #>     type: array #>   label: Max mismatches proportions #>   description: Max proportion of mismatches for 3p adapter clipping for each mate. #>     In case only one value is given, it will be assumed the same for both mates. #>   streamable: no #>   id: '#clip3pAdapterMMp' #>   inputBinding: #>     position: 0 #>     prefix: --clip3pAdapterMMp #>     separate: yes #>     itemSeparator: ' ' #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Read parameters #>   sbg:toolDefaultValue: '0.1' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Min segment length #>   description: Minimum length of chimeric segment length, if =0, no chimeric output #>     (int>=0). #>   streamable: no #>   id: '#chimSegmentMin' #>   inputBinding: #>     position: 0 #>     prefix: --chimSegmentMin #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Chimeric Alignments #>   sbg:toolDefaultValue: '15' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Min separation score #>   description: Minimum difference (separation) between the best chimeric score and #>     the next one (int>=0). #>   streamable: no #>   id: '#chimScoreSeparation' #>   inputBinding: #>     position: 0 #>     prefix: --chimScoreSeparation #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Chimeric Alignments #>   sbg:toolDefaultValue: '10' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Min total score #>   description: Minimum total (summed) score of the chimeric segments (int>=0). #>   streamable: no #>   id: '#chimScoreMin' #>   inputBinding: #>     position: 0 #>     prefix: --chimScoreMin #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Chimeric Alignments #>   sbg:toolDefaultValue: '0' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Non-GT/AG penalty #>   description: Penalty for a non-GT/AG chimeric junction. #>   streamable: no #>   id: '#chimScoreJunctionNonGTAG' #>   inputBinding: #>     position: 0 #>     prefix: --chimScoreJunctionNonGTAG #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Chimeric Alignments #>   sbg:toolDefaultValue: '-1' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max drop score #>   description: Max drop (difference) of chimeric score (the sum of scores of all chimeric #>     segements) from the read length (int>=0). #>   streamable: no #>   id: '#chimScoreDropMax' #>   inputBinding: #>     position: 0 #>     prefix: --chimScoreDropMax #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Chimeric Alignments #>   sbg:toolDefaultValue: '20' #>   required: no #> - type: #>   - 'null' #>   - name: chimOutType #>     symbols: #>     - SeparateSAMold #>     - Within #>     type: enum #>   label: Chimeric output type #>   description: 'Type of chimeric output. SeparateSAMold: output old SAM into separate #>     Chimeric.out.sam file; Within: output into main aligned SAM/BAM files.' #>   streamable: no #>   id: '#chimOutType' #>   sbg:category: Chimeric Alignments #>   sbg:toolDefaultValue: SeparateSAMold #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Min junction overhang #>   description: Minimum overhang for a chimeric junction (int>=0). #>   streamable: no #>   id: '#chimJunctionOverhangMin' #>   inputBinding: #>     position: 0 #>     prefix: --chimJunctionOverhangMin #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Chimeric Alignments #>   sbg:toolDefaultValue: '20' #>   required: no #> - type: #>   - 'null' #>   - float #>   label: Max windows per read #>   description: Max number of windows per read (int>0). #>   streamable: no #>   id: '#alignWindowsPerReadNmax' #>   inputBinding: #>     position: 0 #>     prefix: --alignWindowsPerReadNmax #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: '10000' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max transcripts per window #>   description: Max number of transcripts per window (int>0). #>   streamable: no #>   id: '#alignTranscriptsPerWindowNmax' #>   inputBinding: #>     position: 0 #>     prefix: --alignTranscriptsPerWindowNmax #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: '100' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max transcripts per read #>   description: Max number of different alignments per read to consider (int>0). #>   streamable: no #>   id: '#alignTranscriptsPerReadNmax' #>   inputBinding: #>     position: 0 #>     prefix: --alignTranscriptsPerReadNmax #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: '10000' #>   required: no #> - type: #>   - 'null' #>   - float #>   label: Min mapped length normalized #>   description: alignSplicedMateMapLmin normalized to mate length (float>0). #>   streamable: no #>   id: '#alignSplicedMateMapLminOverLmate' #>   inputBinding: #>     position: 0 #>     prefix: --alignSplicedMateMapLminOverLmate #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: '0.66' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Min mapped length #>   description: Minimum mapped length for a read mate that is spliced (int>0). #>   streamable: no #>   id: '#alignSplicedMateMapLmin' #>   inputBinding: #>     position: 0 #>     prefix: --alignSplicedMateMapLmin #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: '0' #>   required: no #> - type: #>   - 'null' #>   - name: alignSoftClipAtReferenceEnds #>     symbols: #>     - 'Yes' #>     - 'No' #>     type: enum #>   label: Soft clipping #>   description: 'Option which allows soft clipping of alignments at the reference (chromosome) #>     ends. Can be disabled for compatibility with Cufflinks/Cuffmerge. Yes: Enables #>     soft clipping; No: Disables soft clipping.' #>   streamable: no #>   id: '#alignSoftClipAtReferenceEnds' #>   inputBinding: #>     position: 0 #>     prefix: --alignSoftClipAtReferenceEnds #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: 'Yes' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Min overhang #>   description: Minimum overhang (i.e. block size) for spliced alignments (int>0). #>   streamable: no #>   id: '#alignSJoverhangMin' #>   inputBinding: #>     position: 0 #>     prefix: --alignSJoverhangMin #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: '5' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: 'Min overhang: annotated' #>   description: Minimum overhang (i.e. block size) for annotated (sjdb) spliced alignments #>     (int>0). #>   streamable: no #>   id: '#alignSJDBoverhangMin' #>   inputBinding: #>     position: 0 #>     prefix: --alignSJDBoverhangMin #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: '3' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max mates gap #>   description: Maximum gap between two mates, if 0, max intron gap will be determined #>     by (2^winBinNbits)*winAnchorDistNbins. #>   streamable: no #>   id: '#alignMatesGapMax' #>   inputBinding: #>     position: 0 #>     prefix: --alignMatesGapMax #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: '0' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Min intron size #>   description: 'Minimum intron size: genomic gap is considered intron if its length #>     >= alignIntronMin, otherwise it is considered Deletion (int>=0).' #>   streamable: no #>   id: '#alignIntronMin' #>   inputBinding: #>     position: 0 #>     prefix: --alignIntronMin #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: '21' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max intron size #>   description: Maximum intron size, if 0, max intron size will be determined by (2^winBinNbits)*winAnchorDistNbins. #>   streamable: no #>   id: '#alignIntronMax' #>   inputBinding: #>     position: 0 #>     prefix: --alignIntronMax #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: '0' #>   required: no #> - type: #>   - 'null' #>   - name: alignEndsType #>     symbols: #>     - Local #>     - EndToEnd #>     type: enum #>   label: Alignment type #>   description: 'Type of read ends alignment. Local: standard local alignment with #>     soft-clipping allowed. EndToEnd: force end to end read alignment, do not soft-clip.' #>   streamable: no #>   id: '#alignEndsType' #>   inputBinding: #>     position: 0 #>     prefix: --alignEndsType #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: Local #>   required: no #> outputs: #> - type: #>   - 'null' #>   - items: File #>     type: array #>   label: Unmapped reads #>   description: Output of unmapped reads. #>   streamable: no #>   id: '#unmapped_reads' #>   outputBinding: #>     glob: '*Unmapped.out*' #>   sbg:fileTypes: FASTQ #> - type: #>   - 'null' #>   - File #>   label: Transcriptome alignments #>   description: Alignments translated into transcript coordinates. #>   streamable: no #>   id: '#transcriptome_aligned_reads' #>   outputBinding: #>     glob: '*Transcriptome*' #>   sbg:fileTypes: BAM #> - type: #>   - 'null' #>   - File #>   label: Splice junctions #>   description: High confidence collapsed splice junctions in tab-delimited format. #>     Only junctions supported by uniquely mapping reads are reported. #>   streamable: no #>   id: '#splice_junctions' #>   outputBinding: #>     glob: '*SJ.out.tab' #>   sbg:fileTypes: TAB #> - type: #>   - 'null' #>   - File #>   label: Reads per gene #>   description: File with number of reads per gene. A read is counted if it overlaps #>     (1nt or more) one and only one gene. #>   streamable: no #>   id: '#reads_per_gene' #>   outputBinding: #>     glob: '*ReadsPerGene*' #>   sbg:fileTypes: TAB #> - type: #>   - 'null' #>   - items: File #>     type: array #>   label: Log files #>   description: Log files produced during alignment. #>   streamable: no #>   id: '#log_files' #>   outputBinding: #>     glob: '*Log*.out' #>   sbg:fileTypes: OUT #> - type: #>   - 'null' #>   - File #>   label: Intermediate genome files #>   description: Archive with genome files produced when annotations are included on #>     the fly (in the mapping step). #>   streamable: no #>   id: '#intermediate_genome' #>   outputBinding: #>     glob: '*_STARgenome.tar' #>   sbg:fileTypes: TAR #> - type: #>   - 'null' #>   - File #>   label: Chimeric junctions #>   description: If chimSegmentMin in 'Chimeric Alignments' section is set to 0, 'Chimeric #>     Junctions' won't be output. #>   streamable: no #>   id: '#chimeric_junctions' #>   outputBinding: #>     glob: '*Chimeric.out.junction' #>   sbg:fileTypes: JUNCTION #> - type: #>   - 'null' #>   - File #>   label: Chimeric alignments #>   description: Aligned Chimeric sequences SAM - if chimSegmentMin = 0, no Chimeric #>     Alignment SAM and Chimeric Junctions outputs. #>   streamable: no #>   id: '#chimeric_alignments' #>   outputBinding: #>     glob: '*.Chimeric.out.sam' #>   sbg:fileTypes: SAM #> - type: #>   - 'null' #>   - File #>   label: Aligned SAM/BAM #>   description: Aligned sequence in SAM/BAM format. #>   streamable: no #>   id: '#aligned_reads' #>   outputBinding: #>     glob: #>       engine: '#cwl-js-engine' #>       script: |- #>         { #>           if ($job.inputs.outSortingType == 'SortedByCoordinate') { #>             sort_name = '.sortedByCoord' #>           } #>           else { #>             sort_name = '' #>           } #>           if ($job.inputs.outSAMtype == 'BAM') { #>             sam_name = \"*.Aligned\".concat( sort_name, '.out.bam') #>           } #>           else { #>             sam_name = \"*.Aligned.out.sam\" #>           } #>           return sam_name #>         } #>       class: Expression #>   sbg:fileTypes: SAM, BAM #> requirements: #> - class: ExpressionEngineRequirement #>   id: '#cwl-js-engine' #>   requirements: #>   - class: DockerRequirement #>     dockerPull: rabix/js-engine #> hints: #> - class: DockerRequirement #>   dockerPull: images.sbgenomics.com/ana_d/star:2.4.2a #>   dockerImageId: a4b0ad2c3cae #> - class: sbg:MemRequirement #>   value: 60000 #> - class: sbg:CPURequirement #>   value: 15 #> label: STAR #> description: STAR is an ultrafast universal RNA-seq aligner. It has very high mapping #>   speed, accurate alignment of contiguous and spliced reads, detection of polyA-tails, #>   non-canonical splices and chimeric (fusion) junctions. It works with reads starting #>   from lengths ~15 bases up to ~300 bases. In case of having longer reads, use of #>   STAR Long is recommended. #> class: CommandLineTool #> baseCommand: #> - tar #> - -xvf #> - class: Expression #>   script: $job.inputs.genome.path #>   engine: '#cwl-js-engine' #> - '&&' #> - /opt/STAR #> - --runThreadN #> - class: Expression #>   script: |- #>     { #>       return $job.allocatedResources.cpu #>     } #>   engine: '#cwl-js-engine' #> arguments: #> - position: 0 #>   separate: yes #>   valueFrom: #>     engine: '#cwl-js-engine' #>     script: |- #>       { #>         file = [].concat($job.inputs.reads)[0].path #>         extension = /(?:\\.([^.]+))?$/.exec(file)[1] #>         if (extension == \"gz\") { #>           return \"--readFilesCommand zcat\" #>         } else if (extension == \"bz2\") { #>           return \"--readFilesCommand bzcat\" #>         } #>       } #>     class: Expression #> - position: 0 #>   separate: yes #>   valueFrom: #>     engine: '#cwl-js-engine' #>     script: \"{\\t\\n  var sjFormat = \\\"False\\\"\\n  var gtfgffFormat = \\\"False\\\"\\n  var #>       list = $job.inputs.sjdbGTFfile\\n  var paths_list = []\\n  var joined_paths = #>       \\\"\\\"\\n  \\n  if (list) {\\n    list.forEach(function(f){return paths_list.push(f.path)})\\n #>       \\   joined_paths = paths_list.join(\\\" \\\")\\n\\n\\n    paths_list.forEach(function(f){\\n #>       \\     ext = f.replace(/^.*\\\\./, '')\\n      if (ext == \\\"gff\\\" || ext == \\\"gtf\\\") #>       {\\n        gtfgffFormat = \\\"True\\\"\\n        return gtfgffFormat\\n      }\\n      if #>       (ext == \\\"txt\\\") {\\n        sjFormat = \\\"True\\\"\\n        return sjFormat\\n      }\\n #>       \\   })\\n\\n    if ($job.inputs.sjdbGTFfile && $job.inputs.sjdbInsertSave != \\\"None\\\") #>       {\\n      if (sjFormat == \\\"True\\\") {\\n        return \\\"--sjdbFileChrStartEnd #>       \\\".concat(joined_paths)\\n      }\\n      else if (gtfgffFormat == \\\"True\\\") {\\n #>       \\       return \\\"--sjdbGTFfile \\\".concat(joined_paths)\\n      }\\n    }\\n  }\\n}\" #>     class: Expression #> - position: 0 #>   separate: yes #>   valueFrom: #>     engine: '#cwl-js-engine' #>     script: \"{\\n  a = b = c = d = e = f = g = []\\n  if ($job.inputs.sjdbGTFchrPrefix) #>       {\\n    a = [\\\"--sjdbGTFchrPrefix\\\", $job.inputs.sjdbGTFchrPrefix]\\n  }\\n  if #>       ($job.inputs.sjdbGTFfeatureExon) {\\n    b = [\\\"--sjdbGTFfeatureExon\\\", $job.inputs.sjdbGTFfeatureExon]\\n #>       \\ }\\n  if ($job.inputs.sjdbGTFtagExonParentTranscript) {\\n    c = [\\\"--sjdbGTFtagExonParentTranscript\\\", #>       $job.inputs.sjdbGTFtagExonParentTranscript]\\n  }\\n  if ($job.inputs.sjdbGTFtagExonParentGene) #>       {\\n    d = [\\\"--sjdbGTFtagExonParentGene\\\", $job.inputs.sjdbGTFtagExonParentGene]\\n #>       \\ }\\n  if ($job.inputs.sjdbOverhang) {\\n    e = [\\\"--sjdbOverhang\\\", $job.inputs.sjdbOverhang]\\n #>       \\ }\\n  if ($job.inputs.sjdbScore) {\\n    f = [\\\"--sjdbScore\\\", $job.inputs.sjdbScore]\\n #>       \\ }\\n  if ($job.inputs.sjdbInsertSave) {\\n    g = [\\\"--sjdbInsertSave\\\", $job.inputs.sjdbInsertSave]\\n #>       \\ }\\n  \\n  \\n  \\n  if ($job.inputs.sjdbInsertSave != \\\"None\\\" && $job.inputs.sjdbGTFfile) #>       {\\n    new_list = a.concat(b, c, d, e, f, g)\\n    return new_list.join(\\\" \\\")\\n #>       \\ }\\n}\" #>     class: Expression #> - position: 0 #>   separate: yes #>   valueFrom: #>     engine: '#cwl-js-engine' #>     script: |- #>       { #>         if ($job.inputs.twopassMode == \"Basic\") { #>           return \"--twopass1readsN \".concat($job.inputs.twopass1readsN) #>         } #>       } #>     class: Expression #> - position: 0 #>   separate: yes #>   valueFrom: #>     engine: '#cwl-js-engine' #>     script: |- #>       { #>         if ($job.inputs.chimOutType == \"Within\") { #>           return \"--chimOutType \".concat(\"Within\", $job.inputs.outSAMtype) #>         } #>         else { #>           return \"--chimOutType SeparateSAMold\" #>         } #>       } #>     class: Expression #> - position: 0 #>   separate: yes #>   valueFrom: #>     engine: '#cwl-js-engine' #>     script: \"{\\n  var param_list = []\\n  \\n  function add_param(key, value){\\n    if #>       (value == \\\"\\\") {\\n      return\\n    }\\n    else {\\n      return param_list.push(key.concat(\\\":\\\", #>       value))\\n    }\\n  }\\n  \\n  add_param('ID', \\\"1\\\")\\n  if ($job.inputs.rg_seq_center) #>       {\\n    add_param('CN', $job.inputs.rg_seq_center)\\n  } else if ([].concat($job.inputs.reads)[0].metadata.seq_center) #>       {\\n    add_param('CN', [].concat($job.inputs.reads)[0].metadata.seq_center)\\n #>       \\ }\\n  if ($job.inputs.rg_library_id) {\\n    add_param('LB', $job.inputs.rg_library_id)\\n #>       \\ } else if ([].concat($job.inputs.reads)[0].metadata.library_id) {\\n    add_param('LB', #>       [].concat($job.inputs.reads)[0].metadata.library_id)\\n  }\\n  if ($job.inputs.rg_mfl) #>       {\\n    add_param('PI', $job.inputs.rg_mfl)\\n  } else if ([].concat($job.inputs.reads)[0].metadata.median_fragment_length) #>       {\\n    add_param('PI', [].concat($job.inputs.reads)[0].metadata.median_fragment_length)\\n #>       \\ }\\n  if ($job.inputs.rg_platform) {\\n    add_param('PL', $job.inputs.rg_platform.replace(/ #>       /g,\\\"_\\\"))\\n  } else if ([].concat($job.inputs.reads)[0].metadata.platform) #>       {\\n    add_param('PL', [].concat($job.inputs.reads)[0].metadata.platform.replace(/ #>       /g,\\\"_\\\"))\\n  }\\n  if ($job.inputs.rg_platform_unit_id) {\\n    add_param('PU', #>       $job.inputs.rg_platform_unit_id)\\n  } else if ([].concat($job.inputs.reads)[0].metadata.platform_unit_id) #>       {\\n    add_param('PU', [].concat($job.inputs.reads)[0].metadata.platform_unit_id)\\n #>       \\ }\\n  if ($job.inputs.rg_sample_id) {\\n    add_param('SM', $job.inputs.rg_sample_id)\\n #>       \\ } else if ([].concat($job.inputs.reads)[0].metadata.sample_id) {\\n    add_param('SM', #>       [].concat($job.inputs.reads)[0].metadata.sample_id)\\n  }\\n  return \\\"--outSAMattrRGline #>       \\\".concat(param_list.join(\\\" \\\"))\\n}\" #>     class: Expression #> - position: 0 #>   separate: yes #>   valueFrom: #>     engine: '#cwl-js-engine' #>     script: |- #>       { #>         if ($job.inputs.sjdbGTFfile && $job.inputs.quantMode) { #>           return \"--quantMode \".concat($job.inputs.quantMode) #>         } #>       } #>     class: Expression #> - position: 100 #>   separate: yes #>   valueFrom: #>     engine: '#cwl-js-engine' #>     script: \"{\\n  function sharedStart(array){\\n  var A= array.concat().sort(), \\n #>       \\     a1= A[0], a2= A[A.length-1], L= a1.length, i= 0;\\n  while(i<L && a1.charAt(i)=== #>       a2.charAt(i)) i++;\\n  return a1.substring(0, i);\\n  }\\n  path_list = []\\n  arr #>       = [].concat($job.inputs.reads)\\n  arr.forEach(function(f){return path_list.push(f.path.replace(/\\\\\\\\/g,'/').replace( #>       /.*\\\\//, '' ))})\\n  common_prefix = sharedStart(path_list)\\n  intermediate = #>       common_prefix.replace( /\\\\-$|\\\\_$|\\\\.$/, '' ).concat(\\\"._STARgenome\\\")\\n  source #>       = \\\"./\\\".concat(intermediate)\\n  destination = intermediate.concat(\\\".tar\\\")\\n #>       \\ if ($job.inputs.sjdbGTFfile && $job.inputs.sjdbInsertSave && $job.inputs.sjdbInsertSave #>       != \\\"None\\\") {\\n    return \\\"&& tar -vcf \\\".concat(destination, \\\" \\\", source)\\n #>       \\ }\\n}\" #>     class: Expression #> - position: 0 #>   prefix: --outFileNamePrefix #>   separate: yes #>   valueFrom: #>     engine: '#cwl-js-engine' #>     script: \"{\\n  function sharedStart(array){\\n  var A= array.concat().sort(), \\n #>       \\     a1= A[0], a2= A[A.length-1], L= a1.length, i= 0;\\n  while(i<L && a1.charAt(i)=== #>       a2.charAt(i)) i++;\\n  return a1.substring(0, i);\\n  }\\n  path_list = []\\n  arr #>       = [].concat($job.inputs.reads)\\n  arr.forEach(function(f){return path_list.push(f.path.replace(/\\\\\\\\/g,'/').replace( #>       /.*\\\\//, '' ))})\\n  common_prefix = sharedStart(path_list)\\n  return \\\"./\\\".concat(common_prefix.replace( #>       /\\\\-$|\\\\_$|\\\\.$/, '' ), \\\".\\\")\\n}\" #>     class: Expression #> - position: 101 #>   separate: yes #>   valueFrom: #>     engine: '#cwl-js-engine' #>     script: \"{\\n  function sharedStart(array){\\n  var A= array.concat().sort(), \\n #>       \\     a1= A[0], a2= A[A.length-1], L= a1.length, i= 0;\\n  while(i<L && a1.charAt(i)=== #>       a2.charAt(i)) i++;\\n  return a1.substring(0, i);\\n  }\\n  path_list = []\\n  arr #>       = [].concat($job.inputs.reads)\\n  arr.forEach(function(f){return path_list.push(f.path.replace(/\\\\\\\\/g,'/').replace( #>       /.*\\\\//, '' ))})\\n  common_prefix = sharedStart(path_list)\\n  mate1 = common_prefix.replace( #>       /\\\\-$|\\\\_$|\\\\.$/, '' ).concat(\\\".Unmapped.out.mate1\\\")\\n  mate2 = common_prefix.replace( #>       /\\\\-$|\\\\_$|\\\\.$/, '' ).concat(\\\".Unmapped.out.mate2\\\")\\n  mate1fq = mate1.concat(\\\".fastq\\\")\\n #>       \\ mate2fq = mate2.concat(\\\".fastq\\\")\\n  if ($job.inputs.outReadsUnmapped == #>       \\\"Fastx\\\" && arr.length > 1) {\\n    return \\\"&& mv \\\".concat(mate1, \\\" \\\", mate1fq, #>       \\\" && mv \\\", mate2, \\\" \\\", mate2fq)\\n  }\\n  else if ($job.inputs.outReadsUnmapped #>       == \\\"Fastx\\\" && arr.length == 1) {\\n    return \\\"&& mv \\\".concat(mate1, \\\" \\\", #>       mate1fq)\\n  }\\n}\" #>     class: Expression #> stdin: '' #> stdout: '' #> successCodes: [] #> temporaryFailCodes: [] #> x: 624.0 #> 'y': 323 #>  #>  # return one f1$get_tool(\"^STAR$\") #> sbg:validationErrors: [] #> sbg:sbgMaintained: no #> sbg:latestRevision: 4 #> sbg:job: #>   allocatedResources: #>     mem: 60000 #>     cpu: 15 #>   inputs: #>     alignWindowsPerReadNmax: 0 #>     outSAMheaderPG: outSAMheaderPG #>     GENOME_DIR_NAME: '' #>     outFilterMatchNminOverLread: 0 #>     rg_platform_unit_id: rg_platform_unit #>     alignTranscriptsPerReadNmax: 0 #>     readMapNumber: 0 #>     alignSplicedMateMapLminOverLmate: 0 #>     alignMatesGapMax: 0 #>     outFilterMultimapNmax: 0 #>     clip5pNbases: #>     - 0 #>     outSAMstrandField: None #>     readMatesLengthsIn: NotEqual #>     outSAMattributes: Standard #>     seedMultimapNmax: 0 #>     rg_mfl: rg_mfl #>     chimSegmentMin: 0 #>     winAnchorDistNbins: 0 #>     outSortingType: SortedByCoordinate #>     outFilterMultimapScoreRange: 0 #>     sjdbInsertSave: Basic #>     clip3pAfterAdapterNbases: #>     - 0 #>     scoreDelBase: 0 #>     outFilterMatchNmin: 0 #>     twopass1readsN: 0 #>     outSAMunmapped: None #>     genome: #>       size: 0 #>       secondaryFiles: [] #>       class: File #>       path: genome.ext #>     sjdbGTFtagExonParentTranscript: '' #>     limitBAMsortRAM: 0 #>     alignEndsType: Local #>     seedNoneLociPerWindow: 0 #>     rg_sample_id: rg_sample #>     sjdbGTFtagExonParentGene: '' #>     chimScoreMin: 0 #>     outSJfilterIntronMaxVsReadN: #>     - 0 #>     twopassMode: Basic #>     alignSplicedMateMapLmin: 0 #>     outSJfilterReads: All #>     outSAMprimaryFlag: OneBestScore #>     outSJfilterCountTotalMin: #>     - 3 #>     - 1 #>     - 1 #>     - 1 #>     outSAMorder: Paired #>     outSAMflagAND: 0 #>     chimScoreSeparation: 0 #>     alignSJoverhangMin: 0 #>     outFilterScoreMin: 0 #>     seedSearchStartLmax: 0 #>     scoreGapGCAG: 0 #>     scoreGenomicLengthLog2scale: 0 #>     outFilterIntronMotifs: None #>     outFilterMismatchNmax: 0 #>     reads: #>     - size: 0 #>       secondaryFiles: [] #>       class: File #>       metadata: #>         format: fastq #>         paired_end: '1' #>         seq_center: illumina #>       path: /test-data/mate_1.fastq.bz2 #>     scoreGap: 0 #>     outSJfilterOverhangMin: #>     - 30 #>     - 12 #>     - 12 #>     - 12 #>     outSAMflagOR: 0 #>     outSAMmode: Full #>     rg_library_id: '' #>     chimScoreJunctionNonGTAG: 0 #>     scoreInsOpen: 0 #>     clip3pAdapterSeq: #>     - clip3pAdapterSeq #>     chimScoreDropMax: 0 #>     outFilterType: Normal #>     scoreGapATAC: 0 #>     rg_platform: Ion Torrent PGM #>     clip3pAdapterMMp: #>     - 0 #>     sjdbGTFfeatureExon: '' #>     outQSconversionAdd: 0 #>     quantMode: TranscriptomeSAM #>     alignIntronMin: 0 #>     scoreInsBase: 0 #>     scoreGapNoncan: 0 #>     seedSearchLmax: 0 #>     outSJfilterDistToOtherSJmin: #>     - 0 #>     outFilterScoreMinOverLread: 0 #>     alignSJDBoverhangMin: 0 #>     limitOutSJcollapsed: 0 #>     winAnchorMultimapNmax: 0 #>     outFilterMismatchNoverLmax: 0 #>     rg_seq_center: '' #>     outSAMheaderHD: outSAMheaderHD #>     chimOutType: Within #>     quantTranscriptomeBan: IndelSoftclipSingleend #>     limitOutSJoneRead: 0 #>     alignTranscriptsPerWindowNmax: 0 #>     sjdbOverhang: ~ #>     outReadsUnmapped: Fastx #>     scoreStitchSJshift: 0 #>     seedPerWindowNmax: 0 #>     outSJfilterCountUniqueMin: #>     - 3 #>     - 1 #>     - 1 #>     - 1 #>     scoreDelOpen: 0 #>     sjdbGTFfile: #>     - path: /demo/test-data/chr20.gtf #>     clip3pNbases: #>     - 0 #>     - 3 #>     winBinNbits: 0 #>     sjdbScore: ~ #>     seedSearchStartLmaxOverLread: 0 #>     alignIntronMax: 0 #>     seedPerReadNmax: 0 #>     outFilterMismatchNoverReadLmax: 0 #>     winFlankNbins: 0 #>     sjdbGTFchrPrefix: chrPrefix #>     alignSoftClipAtReferenceEnds: 'Yes' #>     outSAMreadID: Standard #>     outSAMtype: BAM #>     chimJunctionOverhangMin: 0 #>     limitSjdbInsertNsj: 0 #>     outSAMmapqUnique: 0 #> sbg:toolAuthor: Alexander Dobin/CSHL #> sbg:createdOn: 1450911471 #> sbg:categories: #> - Alignment #> sbg:contributors: #> - ana_d #> - bix-demo #> - uros_sipetic #> sbg:links: #> - id: https://github.com/alexdobin/STAR #>   label: Homepage #> - id: https://github.com/alexdobin/STAR/releases #>   label: Releases #> - id: https://github.com/alexdobin/STAR/blob/master/doc/STARmanual.pdf #>   label: Manual #> - id: https://groups.google.com/forum/#!forum/rna-star #>   label: Support #> - id: http://www.ncbi.nlm.nih.gov/pubmed/23104886 #>   label: Publication #> sbg:project: bix-demo/star-2-4-2a-demo #> sbg:createdBy: bix-demo #> sbg:toolkitVersion: 2.4.2a #> sbg:id: sevenbridges/public-apps/star/4 #> sbg:license: GNU General Public License v3.0 only #> sbg:revision: 4 #> sbg:cmdPreview: tar -xvf genome.ext && /opt/STAR --runThreadN 15  --readFilesCommand #>   bzcat  --sjdbGTFfile /demo/test-data/chr20.gtf  --sjdbGTFchrPrefix chrPrefix --sjdbInsertSave #>   Basic  --twopass1readsN 0  --chimOutType WithinBAM  --outSAMattrRGline ID:1 CN:illumina #>   PI:rg_mfl PL:Ion_Torrent_PGM PU:rg_platform_unit SM:rg_sample  --quantMode TranscriptomeSAM #>   --outFileNamePrefix ./mate_1.fastq.bz2.  --readFilesIn /test-data/mate_1.fastq.bz2  && #>   tar -vcf mate_1.fastq.bz2._STARgenome.tar ./mate_1.fastq.bz2._STARgenome  && mv #>   mate_1.fastq.bz2.Unmapped.out.mate1 mate_1.fastq.bz2.Unmapped.out.mate1.fastq #> sbg:modifiedOn: 1462889222 #> sbg:modifiedBy: ana_d #> sbg:revisionsInfo: #> - sbg:modifiedBy: bix-demo #>   sbg:modifiedOn: 1450911471 #>   sbg:revision: 0 #> - sbg:modifiedBy: bix-demo #>   sbg:modifiedOn: 1450911473 #>   sbg:revision: 1 #> - sbg:modifiedBy: bix-demo #>   sbg:modifiedOn: 1450911475 #>   sbg:revision: 2 #> - sbg:modifiedBy: uros_sipetic #>   sbg:modifiedOn: 1462878528 #>   sbg:revision: 3 #> - sbg:modifiedBy: ana_d #>   sbg:modifiedOn: 1462889222 #>   sbg:revision: 4 #> sbg:toolkit: STAR #> id: sevenbridges/public-apps/star/4 #> inputs: #> - type: #>   - 'null' #>   - int #>   label: Flanking regions size #>   description: =log2(winFlank), where win Flank is the size of the left and right #>     flanking regions for each window (int>0). #>   streamable: no #>   id: '#winFlankNbins' #>   inputBinding: #>     position: 0 #>     prefix: --winFlankNbins #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Windows, Anchors, Binning #>   sbg:includeInPorts: yes #>   sbg:toolDefaultValue: '4' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Bin size #>   description: =log2(winBin), where winBin is the size of the bin for the windows/clustering, #>     each window will occupy an integer number of bins (int>0). #>   streamable: no #>   id: '#winBinNbits' #>   inputBinding: #>     position: 0 #>     prefix: --winBinNbits #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Windows, Anchors, Binning #>   sbg:includeInPorts: yes #>   sbg:toolDefaultValue: '16' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max loci anchors #>   description: Max number of loci anchors are allowed to map to (int>0). #>   streamable: no #>   id: '#winAnchorMultimapNmax' #>   inputBinding: #>     position: 0 #>     prefix: --winAnchorMultimapNmax #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Windows, Anchors, Binning #>   sbg:toolDefaultValue: '50' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max bins between anchors #>   description: Max number of bins between two anchors that allows aggregation of anchors #>     into one window (int>0). #>   streamable: no #>   id: '#winAnchorDistNbins' #>   inputBinding: #>     position: 0 #>     prefix: --winAnchorDistNbins #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Windows, Anchors, Binning #>   sbg:toolDefaultValue: '9' #>   required: no #> - type: #>   - 'null' #>   - name: twopassMode #>     symbols: #>     - None #>     - Basic #>     type: enum #>   label: Two-pass mode #>   description: '2-pass mapping mode. None: 1-pass mapping; Basic: basic 2-pass mapping, #>     with all 1st pass junctions inserted into the genome indices on the fly.' #>   streamable: no #>   id: '#twopassMode' #>   inputBinding: #>     position: 0 #>     prefix: --twopassMode #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: 2-pass mapping #>   sbg:toolDefaultValue: None #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Reads to process in 1st step #>   description: 'Number of reads to process for the 1st step. 0: 1-step only, no 2nd #>     pass; use very large number to map all reads in the first step (int>0).' #>   streamable: no #>   id: '#twopass1readsN' #>   sbg:category: 2-pass mapping #>   sbg:toolDefaultValue: '-1' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Extra alignment score #>   description: Extra alignment score for alignments that cross database junctions. #>   streamable: no #>   id: '#sjdbScore' #>   sbg:category: Splice junctions database #>   sbg:toolDefaultValue: '2' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: '\"Overhang\" length' #>   description: Length of the donor/acceptor sequence on each side of the junctions, #>     ideally = (mate_length - 1) (int >= 0), if int = 0, splice junction database is #>     not used. #>   streamable: no #>   id: '#sjdbOverhang' #>   sbg:category: Splice junctions database #>   sbg:toolDefaultValue: '100' #>   required: no #> - type: #>   - 'null' #>   - name: sjdbInsertSave #>     symbols: #>     - Basic #>     - All #>     - None #>     type: enum #>   label: Save junction files #>   description: 'Which files to save when sjdb junctions are inserted on the fly at #>     the mapping step. None: not saving files at all; Basic: only small junction/transcript #>     files; All: all files including big Genome, SA and SAindex. These files are output #>     as archive.' #>   streamable: no #>   id: '#sjdbInsertSave' #>   sbg:category: Splice junctions database #>   sbg:toolDefaultValue: None #>   required: no #> - type: #>   - 'null' #>   - string #>   label: Exons' parents name #>   description: Tag name to be used as exons' transcript-parents. #>   streamable: no #>   id: '#sjdbGTFtagExonParentTranscript' #>   sbg:category: Splice junctions database #>   sbg:toolDefaultValue: transcript_id #>   required: no #> - type: #>   - 'null' #>   - string #>   label: Gene name #>   description: Tag name to be used as exons' gene-parents. #>   streamable: no #>   id: '#sjdbGTFtagExonParentGene' #>   sbg:category: Splice junctions database #>   sbg:toolDefaultValue: gene_id #>   required: no #> - type: #>   - 'null' #>   - items: File #>     type: array #>   label: Splice junction file #>   description: Gene model annotations and/or known transcripts. No need to include #>     this input, except in case of using \"on the fly\" annotations. #>   streamable: no #>   id: '#sjdbGTFfile' #>   sbg:category: Basic #>   sbg:fileTypes: GTF, GFF, TXT #>   required: no #> - type: #>   - 'null' #>   - string #>   label: Set exons feature #>   description: Feature type in GTF file to be used as exons for building transcripts. #>   streamable: no #>   id: '#sjdbGTFfeatureExon' #>   sbg:category: Splice junctions database #>   sbg:toolDefaultValue: exon #>   required: no #> - type: #>   - 'null' #>   - string #>   label: Chromosome names #>   description: Prefix for chromosome names in a GTF file (e.g. 'chr' for using ENSMEBL #>     annotations with UCSC geneomes). #>   streamable: no #>   id: '#sjdbGTFchrPrefix' #>   sbg:category: Splice junctions database #>   sbg:toolDefaultValue: '-' #>   required: no #> - type: #>   - 'null' #>   - float #>   label: Search start point normalized #>   description: seedSearchStartLmax normalized to read length (sum of mates' lengths #>     for paired-end reads). #>   streamable: no #>   id: '#seedSearchStartLmaxOverLread' #>   inputBinding: #>     position: 0 #>     prefix: --seedSearchStartLmaxOverLread #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: '1.0' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Search start point #>   description: Defines the search start point through the read - the read is split #>     into pieces no longer than this value (int>0). #>   streamable: no #>   id: '#seedSearchStartLmax' #>   inputBinding: #>     position: 0 #>     prefix: --seedSearchStartLmax #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: '50' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max seed length #>   description: Defines the maximum length of the seeds, if =0 max seed length is infinite #>     (int>=0). #>   streamable: no #>   id: '#seedSearchLmax' #>   inputBinding: #>     position: 0 #>     prefix: --seedSearchLmax #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: '0' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max seeds per window #>   description: Max number of seeds per window (int>=0). #>   streamable: no #>   id: '#seedPerWindowNmax' #>   inputBinding: #>     position: 0 #>     prefix: --seedPerWindowNmax #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: '50' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max seeds per read #>   description: Max number of seeds per read (int>=0). #>   streamable: no #>   id: '#seedPerReadNmax' #>   inputBinding: #>     position: 0 #>     prefix: --seedPerReadNmax #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: '1000' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max one-seed loci per window #>   description: Max number of one seed loci per window (int>=0). #>   streamable: no #>   id: '#seedNoneLociPerWindow' #>   inputBinding: #>     position: 0 #>     prefix: --seedNoneLociPerWindow #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: '10' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Filter pieces for stitching #>   description: Only pieces that map fewer than this value are utilized in the stitching #>     procedure (int>=0). #>   streamable: no #>   id: '#seedMultimapNmax' #>   inputBinding: #>     position: 0 #>     prefix: --seedMultimapNmax #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: '10000' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max score reduction #>   description: Maximum score reduction while searching for SJ boundaries in the stitching #>     step. #>   streamable: no #>   id: '#scoreStitchSJshift' #>   inputBinding: #>     position: 0 #>     prefix: --scoreStitchSJshift #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Scoring #>   sbg:toolDefaultValue: '1' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Insertion Open Penalty #>   description: Insertion open penalty. #>   streamable: no #>   id: '#scoreInsOpen' #>   inputBinding: #>     position: 0 #>     prefix: --scoreInsOpen #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Scoring #>   sbg:toolDefaultValue: '-2' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Insertion extension penalty #>   description: Insertion extension penalty per base (in addition to --scoreInsOpen). #>   streamable: no #>   id: '#scoreInsBase' #>   inputBinding: #>     position: 0 #>     prefix: --scoreInsBase #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Scoring #>   sbg:toolDefaultValue: '-2' #>   required: no #> - type: #>   - 'null' #>   - float #>   label: Log scaled score #>   description: 'Extra score logarithmically scaled with genomic length of the alignment: #>     <int>*log2(genomicLength).' #>   streamable: no #>   id: '#scoreGenomicLengthLog2scale' #>   inputBinding: #>     position: 0 #>     prefix: --scoreGenomicLengthLog2scale #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Scoring #>   sbg:toolDefaultValue: '-0.25' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Non-canonical gap open #>   description: Non-canonical gap open penalty (in addition to --scoreGap). #>   streamable: no #>   id: '#scoreGapNoncan' #>   inputBinding: #>     position: 0 #>     prefix: --scoreGapNoncan #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Scoring #>   sbg:toolDefaultValue: '-8' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: GC/AG and CT/GC gap open #>   description: GC/AG and CT/GC gap open penalty (in addition to --scoreGap). #>   streamable: no #>   id: '#scoreGapGCAG' #>   inputBinding: #>     position: 0 #>     prefix: --scoreGapGCAG #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Scoring #>   sbg:toolDefaultValue: '-4' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: AT/AC and GT/AT gap open #>   description: AT/AC and GT/AT gap open penalty (in addition to --scoreGap). #>   streamable: no #>   id: '#scoreGapATAC' #>   inputBinding: #>     position: 0 #>     prefix: --scoreGapATAC #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Scoring #>   sbg:toolDefaultValue: '-8' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Gap open penalty #>   description: Gap open penalty. #>   streamable: no #>   id: '#scoreGap' #>   inputBinding: #>     position: 0 #>     prefix: --scoreGap #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Scoring #>   sbg:toolDefaultValue: '0' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Deletion open penalty #>   description: Deletion open penalty. #>   streamable: no #>   id: '#scoreDelOpen' #>   inputBinding: #>     position: 0 #>     prefix: --scoreDelOpen #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Scoring #>   sbg:toolDefaultValue: '-2' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Deletion extension penalty #>   description: Deletion extension penalty per base (in addition to --scoreDelOpen). #>   streamable: no #>   id: '#scoreDelBase' #>   inputBinding: #>     position: 0 #>     prefix: --scoreDelBase #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Scoring #>   sbg:toolDefaultValue: '-2' #>   required: no #> - type: #>   - 'null' #>   - string #>   label: Sequencing center #>   description: Specify the sequencing center for RG line. #>   streamable: no #>   id: '#rg_seq_center' #>   sbg:category: Read group #>   sbg:toolDefaultValue: Inferred from metadata #>   required: no #> - type: #>   - 'null' #>   - string #>   label: Sample ID #>   description: Specify the sample ID for RG line. #>   streamable: no #>   id: '#rg_sample_id' #>   sbg:category: Read group #>   sbg:toolDefaultValue: Inferred from metadata #>   required: no #> - type: #>   - 'null' #>   - string #>   label: Platform unit ID #>   description: Specify the platform unit ID for RG line. #>   streamable: no #>   id: '#rg_platform_unit_id' #>   sbg:category: Read group #>   sbg:toolDefaultValue: Inferred from metadata #>   required: no #> - type: #>   - 'null' #>   - name: rg_platform #>     symbols: #>     - LS 454 #>     - Helicos #>     - Illumina #>     - ABI SOLiD #>     - Ion Torrent PGM #>     - PacBio #>     type: enum #>   label: Platform #>   description: Specify the version of the technology that was used for sequencing #>     or assaying. #>   streamable: no #>   id: '#rg_platform' #>   sbg:category: Read group #>   sbg:toolDefaultValue: Inferred from metadata #>   required: no #> - type: #>   - 'null' #>   - string #>   label: Median fragment length #>   description: Specify the median fragment length for RG line. #>   streamable: no #>   id: '#rg_mfl' #>   sbg:category: Read group #>   sbg:toolDefaultValue: Inferred from metadata #>   required: no #> - type: #>   - 'null' #>   - string #>   label: Library ID #>   description: Specify the library ID for RG line. #>   streamable: no #>   id: '#rg_library_id' #>   sbg:category: Read group #>   sbg:toolDefaultValue: Inferred from metadata #>   required: no #> - type: #>   - items: File #>     type: array #>   label: Read sequence #>   description: Read sequence. #>   streamable: no #>   id: '#reads' #>   inputBinding: #>     position: 10 #>     separate: yes #>     itemSeparator: ' ' #>     valueFrom: #>       engine: '#cwl-js-engine' #>       script: \"{\\t\\n  var list = [].concat($job.inputs.reads)\\n  \\n  var resp = []\\n #>         \\ \\n  if (list.length == 1){\\n    resp.push(list[0].path)\\n    \\n  }else if #>         (list.length == 2){    \\n    \\n    left = \\\"\\\"\\n    right = \\\"\\\"\\n      \\n #>         \\   for (index = 0; index < list.length; ++index) {\\n      \\n      if (list[index].metadata #>         != null){\\n        if (list[index].metadata.paired_end == 1){\\n          left #>         = list[index].path\\n        }else if (list[index].metadata.paired_end == 2){\\n #>         \\         right = list[index].path\\n        }\\n      }\\n    }\\n    \\n    if #>         (left != \\\"\\\" && right != \\\"\\\"){      \\n      resp.push(left)\\n      resp.push(right)\\n #>         \\   }\\n  }\\n  else if (list.length > 2){\\n    left = []\\n    right = []\\n #>         \\     \\n    for (index = 0; index < list.length; ++index) {\\n      \\n      if #>         (list[index].metadata != null){\\n        if (list[index].metadata.paired_end #>         == 1){\\n          left.push(list[index].path)\\n        }else if (list[index].metadata.paired_end #>         == 2){\\n          right.push(list[index].path)\\n        }\\n      }\\n    }\\n #>         \\   left_join = left.join()\\n    right_join = right.join()\\n    if (left != #>         [] && right != []){      \\n      resp.push(left_join)\\n      resp.push(right_join)\\n #>         \\   }\\t\\n  }\\n  \\n  if(resp.length > 0){    \\n    return \\\"--readFilesIn \\\".concat(resp.join(\\\" #>         \\\"))\\n  }\\n}\" #>       class: Expression #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Basic #>   sbg:fileTypes: FASTA, FASTQ, FA, FQ, FASTQ.GZ, FQ.GZ, FASTQ.BZ2, FQ.BZ2 #>   required: yes #> - type: #>   - 'null' #>   - name: readMatesLengthsIn #>     symbols: #>     - NotEqual #>     - Equal #>     type: enum #>   label: Reads lengths #>   description: Equal/Not equal - lengths of names, sequences, qualities for both mates #>     are the same/not the same. \"Not equal\" is safe in all situations. #>   streamable: no #>   id: '#readMatesLengthsIn' #>   inputBinding: #>     position: 0 #>     prefix: --readMatesLengthsIn #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Read parameters #>   sbg:toolDefaultValue: NotEqual #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Reads to map #>   description: Number of reads to map from the beginning of the file. #>   streamable: no #>   id: '#readMapNumber' #>   inputBinding: #>     position: 0 #>     prefix: --readMapNumber #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Read parameters #>   sbg:toolDefaultValue: '-1' #>   required: no #> - type: #>   - 'null' #>   - name: quantTranscriptomeBan #>     symbols: #>     - IndelSoftclipSingleend #>     - Singleend #>     type: enum #>   label: Prohibit alignment type #>   description: 'Prohibit various alignment type. IndelSoftclipSingleend: prohibit #>     indels, soft clipping and single-end alignments - compatible with RSEM; Singleend: #>     prohibit single-end alignments.' #>   streamable: no #>   id: '#quantTranscriptomeBan' #>   inputBinding: #>     position: 0 #>     prefix: --quantTranscriptomeBan #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Quantification of Annotations #>   sbg:toolDefaultValue: IndelSoftclipSingleend #>   required: no #> - type: #>   - 'null' #>   - name: quantMode #>     symbols: #>     - TranscriptomeSAM #>     - GeneCounts #>     type: enum #>   label: Quantification mode #>   description: Types of quantification requested. 'TranscriptomeSAM' option outputs #>     SAM/BAM alignments to transcriptome into a separate file. With 'GeneCounts' option, #>     STAR will count number of reads per gene while mapping. #>   streamable: no #>   id: '#quantMode' #>   sbg:category: Quantification of Annotations #>   sbg:toolDefaultValue: '-' #>   required: no #> - type: #>   - 'null' #>   - name: outSortingType #>     symbols: #>     - Unsorted #>     - SortedByCoordinate #>     - Unsorted SortedByCoordinate #>     type: enum #>   label: Output sorting type #>   description: Type of output sorting. #>   streamable: no #>   id: '#outSortingType' #>   sbg:category: Output #>   sbg:toolDefaultValue: SortedByCoordinate #>   required: no #> - type: #>   - 'null' #>   - name: outSJfilterReads #>     symbols: #>     - All #>     - Unique #>     type: enum #>   label: Collapsed junctions reads #>   description: 'Which reads to consider for collapsed splice junctions output. All: #>     all reads, unique- and multi-mappers; Unique: uniquely mapping reads only.' #>   streamable: no #>   id: '#outSJfilterReads' #>   inputBinding: #>     position: 0 #>     prefix: --outSJfilterReads #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: 'Output filtering: splice junctions' #>   sbg:toolDefaultValue: All #>   required: no #> - type: #>   - 'null' #>   - items: int #>     type: array #>   label: Min overhang SJ #>   description: Minimum overhang length for splice junctions on both sides for each #>     of the motifs. To set no output for desired motif, assign -1 to the corresponding #>     field. Does not apply to annotated junctions. #>   streamable: no #>   id: '#outSJfilterOverhangMin' #>   inputBinding: #>     position: 0 #>     prefix: --outSJfilterOverhangMin #>     separate: yes #>     itemSeparator: ' ' #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: 'Output filtering: splice junctions' #>   sbg:toolDefaultValue: 30 12 12 12 #>   required: no #> - type: #>   - 'null' #>   - items: int #>     type: array #>   label: Max gap allowed #>   description: 'Maximum gap allowed for junctions supported by 1,2,3...N reads (int #>     >= 0) i.e. by default junctions supported by 1 read can have gaps <=50000b, by #>     2 reads: <=100000b, by 3 reads: <=200000. By 4 or more reads: any gap <=alignIntronMax. #>     Does not apply to annotated junctions.' #>   streamable: no #>   id: '#outSJfilterIntronMaxVsReadN' #>   inputBinding: #>     position: 0 #>     prefix: --outSJfilterIntronMaxVsReadN #>     separate: yes #>     itemSeparator: ' ' #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: 'Output filtering: splice junctions' #>   sbg:toolDefaultValue: 50000 100000 200000 #>   required: no #> - type: #>   - 'null' #>   - items: int #>     type: array #>   label: Min distance to other donor/acceptor #>   description: Minimum allowed distance to other junctions' donor/acceptor for each #>     of the motifs (int >= 0). Does not apply to annotated junctions. #>   streamable: no #>   id: '#outSJfilterDistToOtherSJmin' #>   inputBinding: #>     position: 0 #>     prefix: --outSJfilterDistToOtherSJmin #>     separate: yes #>     itemSeparator: ' ' #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: 'Output filtering: splice junctions' #>   sbg:toolDefaultValue: 10 0 5 10 #>   required: no #> - type: #>   - 'null' #>   - items: int #>     type: array #>   label: Min unique count #>   description: Minimum uniquely mapping read count per junction for each of the motifs. #>     To set no output for desired motif, assign -1 to the corresponding field. Junctions #>     are output if one of --outSJfilterCountUniqueMin OR --outSJfilterCountTotalMin #>     conditions are satisfied. Does not apply to annotated junctions. #>   streamable: no #>   id: '#outSJfilterCountUniqueMin' #>   inputBinding: #>     position: 0 #>     prefix: --outSJfilterCountUniqueMin #>     separate: yes #>     itemSeparator: ' ' #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: 'Output filtering: splice junctions' #>   sbg:toolDefaultValue: 3 1 1 1 #>   required: no #> - type: #>   - 'null' #>   - items: int #>     type: array #>   label: Min total count #>   description: Minimum total (multi-mapping+unique) read count per junction for each #>     of the motifs. To set no output for desired motif, assign -1 to the corresponding #>     field. Junctions are output if one of --outSJfilterCountUniqueMin OR --outSJfilterCountTotalMin #>     conditions are satisfied. Does not apply to annotated junctions. #>   streamable: no #>   id: '#outSJfilterCountTotalMin' #>   inputBinding: #>     position: 0 #>     prefix: --outSJfilterCountTotalMin #>     separate: yes #>     itemSeparator: ' ' #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: 'Output filtering: splice junctions' #>   sbg:toolDefaultValue: 3 1 1 1 #>   required: no #> - type: #>   - 'null' #>   - name: outSAMunmapped #>     symbols: #>     - None #>     - Within #>     type: enum #>   label: Write unmapped in SAM #>   description: 'Output of unmapped reads in the SAM format. None: no output Within: #>     output unmapped reads within the main SAM file (i.e. Aligned.out.sam).' #>   streamable: no #>   id: '#outSAMunmapped' #>   inputBinding: #>     position: 0 #>     prefix: --outSAMunmapped #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output #>   sbg:toolDefaultValue: None #>   required: no #> - type: #>   - 'null' #>   - name: outSAMtype #>     symbols: #>     - SAM #>     - BAM #>     type: enum #>   label: Output format #>   description: Format of output alignments. #>   streamable: no #>   id: '#outSAMtype' #>   inputBinding: #>     position: 0 #>     separate: yes #>     valueFrom: #>       engine: '#cwl-js-engine' #>       script: |- #>         { #>           SAM_type = $job.inputs.outSAMtype #>           SORT_type = $job.inputs.outSortingType #>           if (SAM_type && SORT_type) { #>             return \"--outSAMtype \".concat(SAM_type, \" \", SORT_type) #>           } #>         } #>       class: Expression #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output #>   sbg:toolDefaultValue: SAM #>   required: no #> - type: #>   - 'null' #>   - name: outSAMstrandField #>     symbols: #>     - None #>     - intronMotif #>     type: enum #>   label: Strand field flag #>   description: 'Cufflinks-like strand field flag. None: not used; intronMotif: strand #>     derived from the intron motif. Reads with inconsistent and/or non-canonical introns #>     are filtered out.' #>   streamable: no #>   id: '#outSAMstrandField' #>   inputBinding: #>     position: 0 #>     prefix: --outSAMstrandField #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output #>   sbg:toolDefaultValue: None #>   required: no #> - type: #>   - 'null' #>   - name: outSAMreadID #>     symbols: #>     - Standard #>     - Number #>     type: enum #>   label: Read ID #>   description: 'Read ID record type. Standard: first word (until space) from the FASTx #>     read ID line, removing /1,/2 from the end; Number: read number (index) in the #>     FASTx file.' #>   streamable: no #>   id: '#outSAMreadID' #>   inputBinding: #>     position: 0 #>     prefix: --outSAMreadID #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output #>   sbg:toolDefaultValue: Standard #>   required: no #> - type: #>   - 'null' #>   - name: outSAMprimaryFlag #>     symbols: #>     - OneBestScore #>     - AllBestScore #>     type: enum #>   label: Primary alignments #>   description: 'Which alignments are considered primary - all others will be marked #>     with 0x100 bit in the FLAG. OneBestScore: only one alignment with the best score #>     is primary; AllBestScore: all alignments with the best score are primary.' #>   streamable: no #>   id: '#outSAMprimaryFlag' #>   inputBinding: #>     position: 0 #>     prefix: --outSAMprimaryFlag #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output #>   sbg:toolDefaultValue: OneBestScore #>   required: no #> - type: #>   - 'null' #>   - name: outSAMorder #>     symbols: #>     - Paired #>     - PairedKeepInputOrder #>     type: enum #>   label: Sorting in SAM #>   description: 'Type of sorting for the SAM output. Paired: one mate after the other #>     for all paired alignments; PairedKeepInputOrder: one mate after the other for #>     all paired alignments, the order is kept the same as in the input FASTQ files.' #>   streamable: no #>   id: '#outSAMorder' #>   inputBinding: #>     position: 0 #>     prefix: --outSAMorder #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output #>   sbg:toolDefaultValue: Paired #>   required: no #> - type: #>   - 'null' #>   - name: outSAMmode #>     symbols: #>     - Full #>     - NoQS #>     type: enum #>   label: SAM mode #>   description: 'Mode of SAM output. Full: full SAM output; NoQS: full SAM but without #>     quality scores.' #>   streamable: no #>   id: '#outSAMmode' #>   inputBinding: #>     position: 0 #>     prefix: --outSAMmode #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output #>   sbg:toolDefaultValue: Full #>   required: no #> - type: #>   - 'null' #>   - int #>   label: MAPQ value #>   description: MAPQ value for unique mappers (0 to 255). #>   streamable: no #>   id: '#outSAMmapqUnique' #>   inputBinding: #>     position: 0 #>     prefix: --outSAMmapqUnique #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output #>   sbg:toolDefaultValue: '255' #>   required: no #> - type: #>   - 'null' #>   - string #>   label: SAM header @PG #>   description: Extra @PG (software) line of the SAM header (in addition to STAR). #>   streamable: no #>   id: '#outSAMheaderPG' #>   inputBinding: #>     position: 0 #>     prefix: --outSAMheaderPG #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output #>   sbg:toolDefaultValue: '-' #>   required: no #> - type: #>   - 'null' #>   - string #>   label: SAM header @HD #>   description: '@HD (header) line of the SAM header.' #>   streamable: no #>   id: '#outSAMheaderHD' #>   inputBinding: #>     position: 0 #>     prefix: --outSAMheaderHD #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output #>   sbg:toolDefaultValue: '-' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: OR SAM flag #>   description: Set specific bits of the SAM FLAG. #>   streamable: no #>   id: '#outSAMflagOR' #>   inputBinding: #>     position: 0 #>     prefix: --outSAMflagOR #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output #>   sbg:toolDefaultValue: '0' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: AND SAM flag #>   description: Set specific bits of the SAM FLAG. #>   streamable: no #>   id: '#outSAMflagAND' #>   inputBinding: #>     position: 0 #>     prefix: --outSAMflagAND #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output #>   sbg:toolDefaultValue: '65535' #>   required: no #> - type: #>   - 'null' #>   - name: outSAMattributes #>     symbols: #>     - Standard #>     - NH #>     - All #>     - None #>     type: enum #>   label: SAM attributes #>   description: 'Desired SAM attributes, in the order desired for the output SAM. NH: #>     any combination in any order; Standard: NH HI AS nM; All: NH HI AS nM NM MD jM #>     jI; None: no attributes.' #>   streamable: no #>   id: '#outSAMattributes' #>   inputBinding: #>     position: 0 #>     prefix: --outSAMattributes #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output #>   sbg:toolDefaultValue: Standard #>   required: no #> - type: #>   - 'null' #>   - name: outReadsUnmapped #>     symbols: #>     - None #>     - Fastx #>     type: enum #>   label: Output unmapped reads #>   description: 'Output of unmapped reads (besides SAM). None: no output; Fastx: output #>     in separate fasta/fastq files, Unmapped.out.mate1/2.' #>   streamable: no #>   id: '#outReadsUnmapped' #>   inputBinding: #>     position: 0 #>     prefix: --outReadsUnmapped #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output #>   sbg:toolDefaultValue: None #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Quality conversion #>   description: Add this number to the quality score (e.g. to convert from Illumina #>     to Sanger, use -31). #>   streamable: no #>   id: '#outQSconversionAdd' #>   inputBinding: #>     position: 0 #>     prefix: --outQSconversionAdd #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output #>   sbg:toolDefaultValue: '0' #>   required: no #> - type: #>   - 'null' #>   - name: outFilterType #>     symbols: #>     - Normal #>     - BySJout #>     type: enum #>   label: Filtering type #>   description: 'Type of filtering. Normal: standard filtering using only current alignment; #>     BySJout: keep only those reads that contain junctions that passed filtering into #>     SJ.out.tab.' #>   streamable: no #>   id: '#outFilterType' #>   inputBinding: #>     position: 0 #>     prefix: --outFilterType #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output filtering #>   sbg:toolDefaultValue: Normal #>   required: no #> - type: #>   - 'null' #>   - float #>   label: Min score normalized #>   description: '''Minimum score'' normalized to read length (sum of mates'' lengths #>     for paired-end reads).' #>   streamable: no #>   id: '#outFilterScoreMinOverLread' #>   inputBinding: #>     position: 0 #>     prefix: --outFilterScoreMinOverLread #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output filtering #>   sbg:toolDefaultValue: '0.66' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Min score #>   description: Alignment will be output only if its score is higher than this value. #>   streamable: no #>   id: '#outFilterScoreMin' #>   inputBinding: #>     position: 0 #>     prefix: --outFilterScoreMin #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output filtering #>   sbg:toolDefaultValue: '0' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Multimapping score range #>   description: The score range below the maximum score for multimapping alignments. #>   streamable: no #>   id: '#outFilterMultimapScoreRange' #>   inputBinding: #>     position: 0 #>     prefix: --outFilterMultimapScoreRange #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output filtering #>   sbg:toolDefaultValue: '1' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max number of mappings #>   description: Read alignments will be output only if the read maps fewer than this #>     value, otherwise no alignments will be output. #>   streamable: no #>   id: '#outFilterMultimapNmax' #>   inputBinding: #>     position: 0 #>     prefix: --outFilterMultimapNmax #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output filtering #>   sbg:toolDefaultValue: '10' #>   required: no #> - type: #>   - 'null' #>   - float #>   label: Mismatches to *read* length #>   description: Alignment will be output only if its ratio of mismatches to *read* #>     length is less than this value. #>   streamable: no #>   id: '#outFilterMismatchNoverReadLmax' #>   inputBinding: #>     position: 0 #>     prefix: --outFilterMismatchNoverReadLmax #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output filtering #>   sbg:toolDefaultValue: '1' #>   required: no #> - type: #>   - 'null' #>   - float #>   label: Mismatches to *mapped* length #>   description: Alignment will be output only if its ratio of mismatches to *mapped* #>     length is less than this value. #>   streamable: no #>   id: '#outFilterMismatchNoverLmax' #>   inputBinding: #>     position: 0 #>     prefix: --outFilterMismatchNoverLmax #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output filtering #>   sbg:toolDefaultValue: '0.3' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max number of mismatches #>   description: Alignment will be output only if it has fewer mismatches than this #>     value. #>   streamable: no #>   id: '#outFilterMismatchNmax' #>   inputBinding: #>     position: 0 #>     prefix: --outFilterMismatchNmax #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output filtering #>   sbg:toolDefaultValue: '10' #>   required: no #> - type: #>   - 'null' #>   - float #>   label: Min matched bases normalized #>   description: '''Minimum matched bases'' normalized to read length (sum of mates #>     lengths for paired-end reads).' #>   streamable: no #>   id: '#outFilterMatchNminOverLread' #>   inputBinding: #>     position: 0 #>     prefix: --outFilterMatchNminOverLread #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output filtering #>   sbg:toolDefaultValue: '0.66' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Min matched bases #>   description: Alignment will be output only if the number of matched bases is higher #>     than this value. #>   streamable: no #>   id: '#outFilterMatchNmin' #>   inputBinding: #>     position: 0 #>     prefix: --outFilterMatchNmin #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output filtering #>   sbg:toolDefaultValue: '0' #>   required: no #> - type: #>   - 'null' #>   - name: outFilterIntronMotifs #>     symbols: #>     - None #>     - RemoveNoncanonical #>     - RemoveNoncanonicalUnannotated #>     type: enum #>   label: Motifs filtering #>   description: 'Filter alignment using their motifs. None: no filtering; RemoveNoncanonical: #>     filter out alignments that contain non-canonical junctions; RemoveNoncanonicalUnannotated: #>     filter out alignments that contain non-canonical unannotated junctions when using #>     annotated splice junctions database. The annotated non-canonical junctions will #>     be kept.' #>   streamable: no #>   id: '#outFilterIntronMotifs' #>   inputBinding: #>     position: 0 #>     prefix: --outFilterIntronMotifs #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output filtering #>   sbg:toolDefaultValue: None #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max insert junctions #>   description: Maximum number of junction to be inserted to the genome on the fly #>     at the mapping stage, including those from annotations and those detected in the #>     1st step of the 2-pass run. #>   streamable: no #>   id: '#limitSjdbInsertNsj' #>   inputBinding: #>     position: 0 #>     prefix: --limitSjdbInsertNsj #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Limits #>   sbg:toolDefaultValue: '1000000' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Junctions max number #>   description: Max number of junctions for one read (including all multi-mappers). #>   streamable: no #>   id: '#limitOutSJoneRead' #>   inputBinding: #>     position: 0 #>     prefix: --limitOutSJoneRead #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Limits #>   sbg:toolDefaultValue: '1000' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Collapsed junctions max number #>   description: Max number of collapsed junctions. #>   streamable: no #>   id: '#limitOutSJcollapsed' #>   inputBinding: #>     position: 0 #>     prefix: --limitOutSJcollapsed #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Limits #>   sbg:toolDefaultValue: '1000000' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Limit BAM sorting memory #>   description: Maximum available RAM for sorting BAM. If set to 0, it will be set #>     to the genome index size. #>   streamable: no #>   id: '#limitBAMsortRAM' #>   inputBinding: #>     position: 0 #>     prefix: --limitBAMsortRAM #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Limits #>   sbg:toolDefaultValue: '0' #>   required: no #> - type: #>   - 'null' #>   - string #>   label: Genome dir name #>   description: Name of the directory which contains genome files (when genome.tar #>     is uncompressed). #>   streamable: no #>   id: '#genomeDirName' #>   inputBinding: #>     position: 0 #>     prefix: --genomeDir #>     separate: yes #>     valueFrom: #>       engine: '#cwl-js-engine' #>       script: $job.inputs.genomeDirName || \"genomeDir\" #>       class: Expression #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Basic #>   sbg:toolDefaultValue: genomeDir #>   required: no #> - type: #>   - File #>   label: Genome files #>   description: Genome files created using STAR Genome Generate. #>   streamable: no #>   id: '#genome' #>   sbg:category: Basic #>   sbg:fileTypes: TAR #>   required: yes #> - type: #>   - 'null' #>   - items: int #>     type: array #>   label: Clip 5p bases #>   description: Number of bases to clip from 5p of each mate. In case only one value #>     is given, it will be assumed the same for both mates. #>   streamable: no #>   id: '#clip5pNbases' #>   inputBinding: #>     position: 0 #>     prefix: --clip5pNbases #>     separate: yes #>     itemSeparator: ' ' #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Read parameters #>   sbg:toolDefaultValue: '0' #>   required: no #> - type: #>   - 'null' #>   - items: int #>     type: array #>   label: Clip 3p bases #>   description: Number of bases to clip from 3p of each mate. In case only one value #>     is given, it will be assumed the same for both mates. #>   streamable: no #>   id: '#clip3pNbases' #>   inputBinding: #>     position: 0 #>     prefix: --clip3pNbases #>     separate: yes #>     itemSeparator: ' ' #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Read parameters #>   sbg:toolDefaultValue: '0' #>   required: no #> - type: #>   - 'null' #>   - items: int #>     type: array #>   label: Clip 3p after adapter seq. #>   description: Number of bases to clip from 3p of each mate after the adapter clipping. #>     In case only one value is given, it will be assumed the same for both mates. #>   streamable: no #>   id: '#clip3pAfterAdapterNbases' #>   inputBinding: #>     position: 0 #>     prefix: --clip3pAfterAdapterNbases #>     separate: yes #>     itemSeparator: ' ' #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Read parameters #>   sbg:toolDefaultValue: '0' #>   required: no #> - type: #>   - 'null' #>   - items: string #>     type: array #>   label: Clip 3p adapter sequence #>   description: Adapter sequence to clip from 3p of each mate. In case only one value #>     is given, it will be assumed the same for both mates. #>   streamable: no #>   id: '#clip3pAdapterSeq' #>   inputBinding: #>     position: 0 #>     prefix: --clip3pAdapterSeq #>     separate: yes #>     itemSeparator: ' ' #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Read parameters #>   sbg:toolDefaultValue: '-' #>   required: no #> - type: #>   - 'null' #>   - items: float #>     type: array #>   label: Max mismatches proportions #>   description: Max proportion of mismatches for 3p adapter clipping for each mate. #>     In case only one value is given, it will be assumed the same for both mates. #>   streamable: no #>   id: '#clip3pAdapterMMp' #>   inputBinding: #>     position: 0 #>     prefix: --clip3pAdapterMMp #>     separate: yes #>     itemSeparator: ' ' #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Read parameters #>   sbg:toolDefaultValue: '0.1' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Min segment length #>   description: Minimum length of chimeric segment length, if =0, no chimeric output #>     (int>=0). #>   streamable: no #>   id: '#chimSegmentMin' #>   inputBinding: #>     position: 0 #>     prefix: --chimSegmentMin #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Chimeric Alignments #>   sbg:toolDefaultValue: '15' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Min separation score #>   description: Minimum difference (separation) between the best chimeric score and #>     the next one (int>=0). #>   streamable: no #>   id: '#chimScoreSeparation' #>   inputBinding: #>     position: 0 #>     prefix: --chimScoreSeparation #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Chimeric Alignments #>   sbg:toolDefaultValue: '10' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Min total score #>   description: Minimum total (summed) score of the chimeric segments (int>=0). #>   streamable: no #>   id: '#chimScoreMin' #>   inputBinding: #>     position: 0 #>     prefix: --chimScoreMin #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Chimeric Alignments #>   sbg:toolDefaultValue: '0' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Non-GT/AG penalty #>   description: Penalty for a non-GT/AG chimeric junction. #>   streamable: no #>   id: '#chimScoreJunctionNonGTAG' #>   inputBinding: #>     position: 0 #>     prefix: --chimScoreJunctionNonGTAG #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Chimeric Alignments #>   sbg:toolDefaultValue: '-1' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max drop score #>   description: Max drop (difference) of chimeric score (the sum of scores of all chimeric #>     segements) from the read length (int>=0). #>   streamable: no #>   id: '#chimScoreDropMax' #>   inputBinding: #>     position: 0 #>     prefix: --chimScoreDropMax #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Chimeric Alignments #>   sbg:toolDefaultValue: '20' #>   required: no #> - type: #>   - 'null' #>   - name: chimOutType #>     symbols: #>     - SeparateSAMold #>     - Within #>     type: enum #>   label: Chimeric output type #>   description: 'Type of chimeric output. SeparateSAMold: output old SAM into separate #>     Chimeric.out.sam file; Within: output into main aligned SAM/BAM files.' #>   streamable: no #>   id: '#chimOutType' #>   sbg:category: Chimeric Alignments #>   sbg:toolDefaultValue: SeparateSAMold #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Min junction overhang #>   description: Minimum overhang for a chimeric junction (int>=0). #>   streamable: no #>   id: '#chimJunctionOverhangMin' #>   inputBinding: #>     position: 0 #>     prefix: --chimJunctionOverhangMin #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Chimeric Alignments #>   sbg:toolDefaultValue: '20' #>   required: no #> - type: #>   - 'null' #>   - float #>   label: Max windows per read #>   description: Max number of windows per read (int>0). #>   streamable: no #>   id: '#alignWindowsPerReadNmax' #>   inputBinding: #>     position: 0 #>     prefix: --alignWindowsPerReadNmax #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: '10000' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max transcripts per window #>   description: Max number of transcripts per window (int>0). #>   streamable: no #>   id: '#alignTranscriptsPerWindowNmax' #>   inputBinding: #>     position: 0 #>     prefix: --alignTranscriptsPerWindowNmax #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: '100' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max transcripts per read #>   description: Max number of different alignments per read to consider (int>0). #>   streamable: no #>   id: '#alignTranscriptsPerReadNmax' #>   inputBinding: #>     position: 0 #>     prefix: --alignTranscriptsPerReadNmax #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: '10000' #>   required: no #> - type: #>   - 'null' #>   - float #>   label: Min mapped length normalized #>   description: alignSplicedMateMapLmin normalized to mate length (float>0). #>   streamable: no #>   id: '#alignSplicedMateMapLminOverLmate' #>   inputBinding: #>     position: 0 #>     prefix: --alignSplicedMateMapLminOverLmate #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: '0.66' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Min mapped length #>   description: Minimum mapped length for a read mate that is spliced (int>0). #>   streamable: no #>   id: '#alignSplicedMateMapLmin' #>   inputBinding: #>     position: 0 #>     prefix: --alignSplicedMateMapLmin #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: '0' #>   required: no #> - type: #>   - 'null' #>   - name: alignSoftClipAtReferenceEnds #>     symbols: #>     - 'Yes' #>     - 'No' #>     type: enum #>   label: Soft clipping #>   description: 'Option which allows soft clipping of alignments at the reference (chromosome) #>     ends. Can be disabled for compatibility with Cufflinks/Cuffmerge. Yes: Enables #>     soft clipping; No: Disables soft clipping.' #>   streamable: no #>   id: '#alignSoftClipAtReferenceEnds' #>   inputBinding: #>     position: 0 #>     prefix: --alignSoftClipAtReferenceEnds #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: 'Yes' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Min overhang #>   description: Minimum overhang (i.e. block size) for spliced alignments (int>0). #>   streamable: no #>   id: '#alignSJoverhangMin' #>   inputBinding: #>     position: 0 #>     prefix: --alignSJoverhangMin #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: '5' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: 'Min overhang: annotated' #>   description: Minimum overhang (i.e. block size) for annotated (sjdb) spliced alignments #>     (int>0). #>   streamable: no #>   id: '#alignSJDBoverhangMin' #>   inputBinding: #>     position: 0 #>     prefix: --alignSJDBoverhangMin #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: '3' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max mates gap #>   description: Maximum gap between two mates, if 0, max intron gap will be determined #>     by (2^winBinNbits)*winAnchorDistNbins. #>   streamable: no #>   id: '#alignMatesGapMax' #>   inputBinding: #>     position: 0 #>     prefix: --alignMatesGapMax #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: '0' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Min intron size #>   description: 'Minimum intron size: genomic gap is considered intron if its length #>     >= alignIntronMin, otherwise it is considered Deletion (int>=0).' #>   streamable: no #>   id: '#alignIntronMin' #>   inputBinding: #>     position: 0 #>     prefix: --alignIntronMin #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: '21' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max intron size #>   description: Maximum intron size, if 0, max intron size will be determined by (2^winBinNbits)*winAnchorDistNbins. #>   streamable: no #>   id: '#alignIntronMax' #>   inputBinding: #>     position: 0 #>     prefix: --alignIntronMax #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: '0' #>   required: no #> - type: #>   - 'null' #>   - name: alignEndsType #>     symbols: #>     - Local #>     - EndToEnd #>     type: enum #>   label: Alignment type #>   description: 'Type of read ends alignment. Local: standard local alignment with #>     soft-clipping allowed. EndToEnd: force end to end read alignment, do not soft-clip.' #>   streamable: no #>   id: '#alignEndsType' #>   inputBinding: #>     position: 0 #>     prefix: --alignEndsType #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: Local #>   required: no #> outputs: #> - type: #>   - 'null' #>   - items: File #>     type: array #>   label: Unmapped reads #>   description: Output of unmapped reads. #>   streamable: no #>   id: '#unmapped_reads' #>   outputBinding: #>     glob: '*Unmapped.out*' #>   sbg:fileTypes: FASTQ #> - type: #>   - 'null' #>   - File #>   label: Transcriptome alignments #>   description: Alignments translated into transcript coordinates. #>   streamable: no #>   id: '#transcriptome_aligned_reads' #>   outputBinding: #>     glob: '*Transcriptome*' #>   sbg:fileTypes: BAM #> - type: #>   - 'null' #>   - File #>   label: Splice junctions #>   description: High confidence collapsed splice junctions in tab-delimited format. #>     Only junctions supported by uniquely mapping reads are reported. #>   streamable: no #>   id: '#splice_junctions' #>   outputBinding: #>     glob: '*SJ.out.tab' #>   sbg:fileTypes: TAB #> - type: #>   - 'null' #>   - File #>   label: Reads per gene #>   description: File with number of reads per gene. A read is counted if it overlaps #>     (1nt or more) one and only one gene. #>   streamable: no #>   id: '#reads_per_gene' #>   outputBinding: #>     glob: '*ReadsPerGene*' #>   sbg:fileTypes: TAB #> - type: #>   - 'null' #>   - items: File #>     type: array #>   label: Log files #>   description: Log files produced during alignment. #>   streamable: no #>   id: '#log_files' #>   outputBinding: #>     glob: '*Log*.out' #>   sbg:fileTypes: OUT #> - type: #>   - 'null' #>   - File #>   label: Intermediate genome files #>   description: Archive with genome files produced when annotations are included on #>     the fly (in the mapping step). #>   streamable: no #>   id: '#intermediate_genome' #>   outputBinding: #>     glob: '*_STARgenome.tar' #>   sbg:fileTypes: TAR #> - type: #>   - 'null' #>   - File #>   label: Chimeric junctions #>   description: If chimSegmentMin in 'Chimeric Alignments' section is set to 0, 'Chimeric #>     Junctions' won't be output. #>   streamable: no #>   id: '#chimeric_junctions' #>   outputBinding: #>     glob: '*Chimeric.out.junction' #>   sbg:fileTypes: JUNCTION #> - type: #>   - 'null' #>   - File #>   label: Chimeric alignments #>   description: Aligned Chimeric sequences SAM - if chimSegmentMin = 0, no Chimeric #>     Alignment SAM and Chimeric Junctions outputs. #>   streamable: no #>   id: '#chimeric_alignments' #>   outputBinding: #>     glob: '*.Chimeric.out.sam' #>   sbg:fileTypes: SAM #> - type: #>   - 'null' #>   - File #>   label: Aligned SAM/BAM #>   description: Aligned sequence in SAM/BAM format. #>   streamable: no #>   id: '#aligned_reads' #>   outputBinding: #>     glob: #>       engine: '#cwl-js-engine' #>       script: |- #>         { #>           if ($job.inputs.outSortingType == 'SortedByCoordinate') { #>             sort_name = '.sortedByCoord' #>           } #>           else { #>             sort_name = '' #>           } #>           if ($job.inputs.outSAMtype == 'BAM') { #>             sam_name = \"*.Aligned\".concat( sort_name, '.out.bam') #>           } #>           else { #>             sam_name = \"*.Aligned.out.sam\" #>           } #>           return sam_name #>         } #>       class: Expression #>   sbg:fileTypes: SAM, BAM #> requirements: #> - class: ExpressionEngineRequirement #>   id: '#cwl-js-engine' #>   requirements: #>   - class: DockerRequirement #>     dockerPull: rabix/js-engine #> hints: #> - class: DockerRequirement #>   dockerPull: images.sbgenomics.com/ana_d/star:2.4.2a #>   dockerImageId: a4b0ad2c3cae #> - class: sbg:MemRequirement #>   value: 60000 #> - class: sbg:CPURequirement #>   value: 15 #> label: STAR #> description: STAR is an ultrafast universal RNA-seq aligner. It has very high mapping #>   speed, accurate alignment of contiguous and spliced reads, detection of polyA-tails, #>   non-canonical splices and chimeric (fusion) junctions. It works with reads starting #>   from lengths ~15 bases up to ~300 bases. In case of having longer reads, use of #>   STAR Long is recommended. #> class: CommandLineTool #> baseCommand: #> - tar #> - -xvf #> - class: Expression #>   script: $job.inputs.genome.path #>   engine: '#cwl-js-engine' #> - '&&' #> - /opt/STAR #> - --runThreadN #> - class: Expression #>   script: |- #>     { #>       return $job.allocatedResources.cpu #>     } #>   engine: '#cwl-js-engine' #> arguments: #> - position: 0 #>   separate: yes #>   valueFrom: #>     engine: '#cwl-js-engine' #>     script: |- #>       { #>         file = [].concat($job.inputs.reads)[0].path #>         extension = /(?:\\.([^.]+))?$/.exec(file)[1] #>         if (extension == \"gz\") { #>           return \"--readFilesCommand zcat\" #>         } else if (extension == \"bz2\") { #>           return \"--readFilesCommand bzcat\" #>         } #>       } #>     class: Expression #> - position: 0 #>   separate: yes #>   valueFrom: #>     engine: '#cwl-js-engine' #>     script: \"{\\t\\n  var sjFormat = \\\"False\\\"\\n  var gtfgffFormat = \\\"False\\\"\\n  var #>       list = $job.inputs.sjdbGTFfile\\n  var paths_list = []\\n  var joined_paths = #>       \\\"\\\"\\n  \\n  if (list) {\\n    list.forEach(function(f){return paths_list.push(f.path)})\\n #>       \\   joined_paths = paths_list.join(\\\" \\\")\\n\\n\\n    paths_list.forEach(function(f){\\n #>       \\     ext = f.replace(/^.*\\\\./, '')\\n      if (ext == \\\"gff\\\" || ext == \\\"gtf\\\") #>       {\\n        gtfgffFormat = \\\"True\\\"\\n        return gtfgffFormat\\n      }\\n      if #>       (ext == \\\"txt\\\") {\\n        sjFormat = \\\"True\\\"\\n        return sjFormat\\n      }\\n #>       \\   })\\n\\n    if ($job.inputs.sjdbGTFfile && $job.inputs.sjdbInsertSave != \\\"None\\\") #>       {\\n      if (sjFormat == \\\"True\\\") {\\n        return \\\"--sjdbFileChrStartEnd #>       \\\".concat(joined_paths)\\n      }\\n      else if (gtfgffFormat == \\\"True\\\") {\\n #>       \\       return \\\"--sjdbGTFfile \\\".concat(joined_paths)\\n      }\\n    }\\n  }\\n}\" #>     class: Expression #> - position: 0 #>   separate: yes #>   valueFrom: #>     engine: '#cwl-js-engine' #>     script: \"{\\n  a = b = c = d = e = f = g = []\\n  if ($job.inputs.sjdbGTFchrPrefix) #>       {\\n    a = [\\\"--sjdbGTFchrPrefix\\\", $job.inputs.sjdbGTFchrPrefix]\\n  }\\n  if #>       ($job.inputs.sjdbGTFfeatureExon) {\\n    b = [\\\"--sjdbGTFfeatureExon\\\", $job.inputs.sjdbGTFfeatureExon]\\n #>       \\ }\\n  if ($job.inputs.sjdbGTFtagExonParentTranscript) {\\n    c = [\\\"--sjdbGTFtagExonParentTranscript\\\", #>       $job.inputs.sjdbGTFtagExonParentTranscript]\\n  }\\n  if ($job.inputs.sjdbGTFtagExonParentGene) #>       {\\n    d = [\\\"--sjdbGTFtagExonParentGene\\\", $job.inputs.sjdbGTFtagExonParentGene]\\n #>       \\ }\\n  if ($job.inputs.sjdbOverhang) {\\n    e = [\\\"--sjdbOverhang\\\", $job.inputs.sjdbOverhang]\\n #>       \\ }\\n  if ($job.inputs.sjdbScore) {\\n    f = [\\\"--sjdbScore\\\", $job.inputs.sjdbScore]\\n #>       \\ }\\n  if ($job.inputs.sjdbInsertSave) {\\n    g = [\\\"--sjdbInsertSave\\\", $job.inputs.sjdbInsertSave]\\n #>       \\ }\\n  \\n  \\n  \\n  if ($job.inputs.sjdbInsertSave != \\\"None\\\" && $job.inputs.sjdbGTFfile) #>       {\\n    new_list = a.concat(b, c, d, e, f, g)\\n    return new_list.join(\\\" \\\")\\n #>       \\ }\\n}\" #>     class: Expression #> - position: 0 #>   separate: yes #>   valueFrom: #>     engine: '#cwl-js-engine' #>     script: |- #>       { #>         if ($job.inputs.twopassMode == \"Basic\") { #>           return \"--twopass1readsN \".concat($job.inputs.twopass1readsN) #>         } #>       } #>     class: Expression #> - position: 0 #>   separate: yes #>   valueFrom: #>     engine: '#cwl-js-engine' #>     script: |- #>       { #>         if ($job.inputs.chimOutType == \"Within\") { #>           return \"--chimOutType \".concat(\"Within\", $job.inputs.outSAMtype) #>         } #>         else { #>           return \"--chimOutType SeparateSAMold\" #>         } #>       } #>     class: Expression #> - position: 0 #>   separate: yes #>   valueFrom: #>     engine: '#cwl-js-engine' #>     script: \"{\\n  var param_list = []\\n  \\n  function add_param(key, value){\\n    if #>       (value == \\\"\\\") {\\n      return\\n    }\\n    else {\\n      return param_list.push(key.concat(\\\":\\\", #>       value))\\n    }\\n  }\\n  \\n  add_param('ID', \\\"1\\\")\\n  if ($job.inputs.rg_seq_center) #>       {\\n    add_param('CN', $job.inputs.rg_seq_center)\\n  } else if ([].concat($job.inputs.reads)[0].metadata.seq_center) #>       {\\n    add_param('CN', [].concat($job.inputs.reads)[0].metadata.seq_center)\\n #>       \\ }\\n  if ($job.inputs.rg_library_id) {\\n    add_param('LB', $job.inputs.rg_library_id)\\n #>       \\ } else if ([].concat($job.inputs.reads)[0].metadata.library_id) {\\n    add_param('LB', #>       [].concat($job.inputs.reads)[0].metadata.library_id)\\n  }\\n  if ($job.inputs.rg_mfl) #>       {\\n    add_param('PI', $job.inputs.rg_mfl)\\n  } else if ([].concat($job.inputs.reads)[0].metadata.median_fragment_length) #>       {\\n    add_param('PI', [].concat($job.inputs.reads)[0].metadata.median_fragment_length)\\n #>       \\ }\\n  if ($job.inputs.rg_platform) {\\n    add_param('PL', $job.inputs.rg_platform.replace(/ #>       /g,\\\"_\\\"))\\n  } else if ([].concat($job.inputs.reads)[0].metadata.platform) #>       {\\n    add_param('PL', [].concat($job.inputs.reads)[0].metadata.platform.replace(/ #>       /g,\\\"_\\\"))\\n  }\\n  if ($job.inputs.rg_platform_unit_id) {\\n    add_param('PU', #>       $job.inputs.rg_platform_unit_id)\\n  } else if ([].concat($job.inputs.reads)[0].metadata.platform_unit_id) #>       {\\n    add_param('PU', [].concat($job.inputs.reads)[0].metadata.platform_unit_id)\\n #>       \\ }\\n  if ($job.inputs.rg_sample_id) {\\n    add_param('SM', $job.inputs.rg_sample_id)\\n #>       \\ } else if ([].concat($job.inputs.reads)[0].metadata.sample_id) {\\n    add_param('SM', #>       [].concat($job.inputs.reads)[0].metadata.sample_id)\\n  }\\n  return \\\"--outSAMattrRGline #>       \\\".concat(param_list.join(\\\" \\\"))\\n}\" #>     class: Expression #> - position: 0 #>   separate: yes #>   valueFrom: #>     engine: '#cwl-js-engine' #>     script: |- #>       { #>         if ($job.inputs.sjdbGTFfile && $job.inputs.quantMode) { #>           return \"--quantMode \".concat($job.inputs.quantMode) #>         } #>       } #>     class: Expression #> - position: 100 #>   separate: yes #>   valueFrom: #>     engine: '#cwl-js-engine' #>     script: \"{\\n  function sharedStart(array){\\n  var A= array.concat().sort(), \\n #>       \\     a1= A[0], a2= A[A.length-1], L= a1.length, i= 0;\\n  while(i<L && a1.charAt(i)=== #>       a2.charAt(i)) i++;\\n  return a1.substring(0, i);\\n  }\\n  path_list = []\\n  arr #>       = [].concat($job.inputs.reads)\\n  arr.forEach(function(f){return path_list.push(f.path.replace(/\\\\\\\\/g,'/').replace( #>       /.*\\\\//, '' ))})\\n  common_prefix = sharedStart(path_list)\\n  intermediate = #>       common_prefix.replace( /\\\\-$|\\\\_$|\\\\.$/, '' ).concat(\\\"._STARgenome\\\")\\n  source #>       = \\\"./\\\".concat(intermediate)\\n  destination = intermediate.concat(\\\".tar\\\")\\n #>       \\ if ($job.inputs.sjdbGTFfile && $job.inputs.sjdbInsertSave && $job.inputs.sjdbInsertSave #>       != \\\"None\\\") {\\n    return \\\"&& tar -vcf \\\".concat(destination, \\\" \\\", source)\\n #>       \\ }\\n}\" #>     class: Expression #> - position: 0 #>   prefix: --outFileNamePrefix #>   separate: yes #>   valueFrom: #>     engine: '#cwl-js-engine' #>     script: \"{\\n  function sharedStart(array){\\n  var A= array.concat().sort(), \\n #>       \\     a1= A[0], a2= A[A.length-1], L= a1.length, i= 0;\\n  while(i<L && a1.charAt(i)=== #>       a2.charAt(i)) i++;\\n  return a1.substring(0, i);\\n  }\\n  path_list = []\\n  arr #>       = [].concat($job.inputs.reads)\\n  arr.forEach(function(f){return path_list.push(f.path.replace(/\\\\\\\\/g,'/').replace( #>       /.*\\\\//, '' ))})\\n  common_prefix = sharedStart(path_list)\\n  return \\\"./\\\".concat(common_prefix.replace( #>       /\\\\-$|\\\\_$|\\\\.$/, '' ), \\\".\\\")\\n}\" #>     class: Expression #> - position: 101 #>   separate: yes #>   valueFrom: #>     engine: '#cwl-js-engine' #>     script: \"{\\n  function sharedStart(array){\\n  var A= array.concat().sort(), \\n #>       \\     a1= A[0], a2= A[A.length-1], L= a1.length, i= 0;\\n  while(i<L && a1.charAt(i)=== #>       a2.charAt(i)) i++;\\n  return a1.substring(0, i);\\n  }\\n  path_list = []\\n  arr #>       = [].concat($job.inputs.reads)\\n  arr.forEach(function(f){return path_list.push(f.path.replace(/\\\\\\\\/g,'/').replace( #>       /.*\\\\//, '' ))})\\n  common_prefix = sharedStart(path_list)\\n  mate1 = common_prefix.replace( #>       /\\\\-$|\\\\_$|\\\\.$/, '' ).concat(\\\".Unmapped.out.mate1\\\")\\n  mate2 = common_prefix.replace( #>       /\\\\-$|\\\\_$|\\\\.$/, '' ).concat(\\\".Unmapped.out.mate2\\\")\\n  mate1fq = mate1.concat(\\\".fastq\\\")\\n #>       \\ mate2fq = mate2.concat(\\\".fastq\\\")\\n  if ($job.inputs.outReadsUnmapped == #>       \\\"Fastx\\\" && arr.length > 1) {\\n    return \\\"&& mv \\\".concat(mate1, \\\" \\\", mate1fq, #>       \\\" && mv \\\", mate2, \\\" \\\", mate2fq)\\n  }\\n  else if ($job.inputs.outReadsUnmapped #>       == \\\"Fastx\\\" && arr.length == 1) {\\n    return \\\"&& mv \\\".concat(mate1, \\\" \\\", #>       mate1fq)\\n  }\\n}\" #>     class: Expression #> stdin: '' #> stdout: '' #> successCodes: [] #> temporaryFailCodes: [] #> x: 624.0 #> 'y': 323 #>  # get included input ports f1$get_input_port() #> #STAR_Genome_Generate #STAR_Genome_Generate                 #STAR  #>          \"#sjdbScore\"       \"#sjdbOverhang\"      \"#winFlankNbins\"  #>                 #STAR  #>        \"#winBinNbits\"  # set included input ports f1$set_input_port(c(\"#STAR.alignSJDBoverhangMin\", \"chimScoreSeparation\")) f1$get_input_port() #>   #STAR_Genome_Generate   #STAR_Genome_Generate                   #STAR  #>            \"#sjdbScore\"         \"#sjdbOverhang\"        \"#winFlankNbins\"  #>                   #STAR                   #STAR                   #STAR  #>          \"#winBinNbits\"  \"#chimScoreSeparation\" \"#alignSJDBoverhangMin\"  f1$set_input_port(c(\"#STAR.alignSJDBoverhangMin\", \"chimScoreSeparation\"), FALSE) f1$get_input_port() #> #STAR_Genome_Generate #STAR_Genome_Generate                 #STAR  #>          \"#sjdbScore\"       \"#sjdbOverhang\"      \"#winFlankNbins\"  #>                 #STAR  #>        \"#winBinNbits\"  f1$get_input_node() #>         sjdbGTFfile               fastq    genomeFastaFiles  #>      \"#sjdbGTFfile\"            \"#fastq\" \"#genomeFastaFiles\"  f1$get_output_node() #>                 unmapped_reads    transcriptome_aligned_reads  #>              \"#unmapped_reads\" \"#transcriptome_aligned_reads\"  #>               splice_junctions                 reads_per_gene  #>            \"#splice_junctions\"              \"#reads_per_gene\"  #>                      log_files             chimeric_junctions  #>                   \"#log_files\"          \"#chimeric_junctions\"  #>            intermediate_genome            chimeric_alignments  #>         \"#intermediate_genome\"         \"#chimeric_alignments\"  #>                     sorted_bam                         result  #>                  \"#sorted_bam\"                      \"#result\"  #>            intermediate_genome  #>         \"#intermediate_genome\"  f1$get_input_exposed() #>    sjdbGTFtagExonParentTranscript          sjdbGTFtagExonParentGene  #> \"#sjdbGTFtagExonParentTranscript\"       \"#sjdbGTFtagExonParentGene\"  #>             winAnchorMultimapNmax                winAnchorDistNbins  #>          \"#winAnchorMultimapNmax\"             \"#winAnchorDistNbins\"  f1$step_input_id(TRUE) #>                                                    int  #>                      \"#STAR_Genome_Generate.sjdbScore\"  #>                                                    int  #>                   \"#STAR_Genome_Generate.sjdbOverhang\"  #>                                                 string  #> \"#STAR_Genome_Generate.sjdbGTFtagExonParentTranscript\"  #>                                                 string  #>       \"#STAR_Genome_Generate.sjdbGTFtagExonParentGene\"  #>                                                File...  #>                    \"#STAR_Genome_Generate.sjdbGTFfile\"  #>                                                 string  #>             \"#STAR_Genome_Generate.sjdbGTFfeatureExon\"  #>                                                 string  #>               \"#STAR_Genome_Generate.sjdbGTFchrPrefix\"  #>                                                    int  #>                \"#STAR_Genome_Generate.genomeSAsparseD\"  #>                                                    int  #>            \"#STAR_Genome_Generate.genomeSAindexNbases\"  #>                                                   File  #>               \"#STAR_Genome_Generate.genomeFastaFiles\"  #>                                                 string  #>              \"#STAR_Genome_Generate.genomeChrBinNbits\"  #>                                                   File  #>                    \"#SBG_FASTQ_Quality_Detector.fastq\"  #>                                                   enum  #>                \"#Picard_SortSam.validation_stringency\"  #>                                                   enum  #>                           \"#Picard_SortSam.sort_order\"  #>                                                   enum  #>                                \"#Picard_SortSam.quiet\"  #>                                                   enum  #>                          \"#Picard_SortSam.output_type\"  #>                                                    int  #>                       \"#Picard_SortSam.memory_per_job\"  #>                                                    int  #>                   \"#Picard_SortSam.max_records_in_ram\"  #>                                                   File  #>                            \"#Picard_SortSam.input_bam\"  #>                                                   enum  #>                         \"#Picard_SortSam.create_index\"  #>                                                    int  #>                    \"#Picard_SortSam.compression_level\"  #>                                                    int  #>                                  \"#STAR.winFlankNbins\"  #>                                                    int  #>                                    \"#STAR.winBinNbits\"  #>                                                    int  #>                          \"#STAR.winAnchorMultimapNmax\"  #>                                                    int  #>                             \"#STAR.winAnchorDistNbins\"  #>                                                   enum  #>                                    \"#STAR.twopassMode\"  #>                                                    int  #>                                 \"#STAR.twopass1readsN\"  #>                                                    int  #>                                      \"#STAR.sjdbScore\"  #>                                                    int  #>                                   \"#STAR.sjdbOverhang\"  #>                                                   enum  #>                                 \"#STAR.sjdbInsertSave\"  #>                                                 string  #>                 \"#STAR.sjdbGTFtagExonParentTranscript\"  #>                                                 string  #>                       \"#STAR.sjdbGTFtagExonParentGene\"  #>                                                File...  #>                                    \"#STAR.sjdbGTFfile\"  #>                                                 string  #>                             \"#STAR.sjdbGTFfeatureExon\"  #>                                                 string  #>                               \"#STAR.sjdbGTFchrPrefix\"  #>                                                  float  #>                   \"#STAR.seedSearchStartLmaxOverLread\"  #>                                                    int  #>                            \"#STAR.seedSearchStartLmax\"  #>                                                    int  #>                                 \"#STAR.seedSearchLmax\"  #>                                                    int  #>                              \"#STAR.seedPerWindowNmax\"  #>                                                    int  #>                                \"#STAR.seedPerReadNmax\"  #>                                                    int  #>                          \"#STAR.seedNoneLociPerWindow\"  #>                                                    int  #>                               \"#STAR.seedMultimapNmax\"  #>                                                    int  #>                             \"#STAR.scoreStitchSJshift\"  #>                                                    int  #>                                   \"#STAR.scoreInsOpen\"  #>                                                    int  #>                                   \"#STAR.scoreInsBase\"  #>                                                  float  #>                    \"#STAR.scoreGenomicLengthLog2scale\"  #>                                                    int  #>                                 \"#STAR.scoreGapNoncan\"  #>                                                    int  #>                                   \"#STAR.scoreGapGCAG\"  #>                                                    int  #>                                   \"#STAR.scoreGapATAC\"  #>                                                    int  #>                                       \"#STAR.scoreGap\"  #>                                                    int  #>                                   \"#STAR.scoreDelOpen\"  #>                                                    int  #>                                   \"#STAR.scoreDelBase\"  #>                                                 string  #>                                  \"#STAR.rg_seq_center\"  #>                                                 string  #>                                   \"#STAR.rg_sample_id\"  #>                                                 string  #>                            \"#STAR.rg_platform_unit_id\"  #>                                                   enum  #>                                    \"#STAR.rg_platform\"  #>                                                 string  #>                                         \"#STAR.rg_mfl\"  #>                                                 string  #>                                  \"#STAR.rg_library_id\"  #>                                                File...  #>                                          \"#STAR.reads\"  #>                                                   enum  #>                             \"#STAR.readMatesLengthsIn\"  #>                                                    int  #>                                  \"#STAR.readMapNumber\"  #>                                                   enum  #>                          \"#STAR.quantTranscriptomeBan\"  #>                                                   enum  #>                                      \"#STAR.quantMode\"  #>                                                   enum  #>                                 \"#STAR.outSortingType\"  #>                                                   enum  #>                               \"#STAR.outSJfilterReads\"  #>                                                 int...  #>                         \"#STAR.outSJfilterOverhangMin\"  #>                                                 int...  #>                    \"#STAR.outSJfilterIntronMaxVsReadN\"  #>                                                 int...  #>                    \"#STAR.outSJfilterDistToOtherSJmin\"  #>                                                 int...  #>                      \"#STAR.outSJfilterCountUniqueMin\"  #>                                                 int...  #>                       \"#STAR.outSJfilterCountTotalMin\"  #>                                                   enum  #>                                 \"#STAR.outSAMunmapped\"  #>                                                   enum  #>                                     \"#STAR.outSAMtype\"  #>                                                   enum  #>                              \"#STAR.outSAMstrandField\"  #>                                                   enum  #>                                   \"#STAR.outSAMreadID\"  #>                                                   enum  #>                              \"#STAR.outSAMprimaryFlag\"  #>                                                   enum  #>                                    \"#STAR.outSAMorder\"  #>                                                   enum  #>                                     \"#STAR.outSAMmode\"  #>                                                    int  #>                               \"#STAR.outSAMmapqUnique\"  #>                                                 string  #>                                 \"#STAR.outSAMheaderPG\"  #>                                                 string  #>                                 \"#STAR.outSAMheaderHD\"  #>                                                    int  #>                                   \"#STAR.outSAMflagOR\"  #>                                                    int  #>                                  \"#STAR.outSAMflagAND\"  #>                                                   enum  #>                               \"#STAR.outSAMattributes\"  #>                                                   enum  #>                               \"#STAR.outReadsUnmapped\"  #>                                                    int  #>                             \"#STAR.outQSconversionAdd\"  #>                                                   enum  #>                                  \"#STAR.outFilterType\"  #>                                                  float  #>                     \"#STAR.outFilterScoreMinOverLread\"  #>                                                    int  #>                              \"#STAR.outFilterScoreMin\"  #>                                                    int  #>                    \"#STAR.outFilterMultimapScoreRange\"  #>                                                    int  #>                          \"#STAR.outFilterMultimapNmax\"  #>                                                  float  #>                 \"#STAR.outFilterMismatchNoverReadLmax\"  #>                                                  float  #>                     \"#STAR.outFilterMismatchNoverLmax\"  #>                                                    int  #>                          \"#STAR.outFilterMismatchNmax\"  #>                                                  float  #>                    \"#STAR.outFilterMatchNminOverLread\"  #>                                                    int  #>                             \"#STAR.outFilterMatchNmin\"  #>                                                   enum  #>                          \"#STAR.outFilterIntronMotifs\"  #>                                                    int  #>                             \"#STAR.limitSjdbInsertNsj\"  #>                                                    int  #>                              \"#STAR.limitOutSJoneRead\"  #>                                                    int  #>                            \"#STAR.limitOutSJcollapsed\"  #>                                                    int  #>                                \"#STAR.limitBAMsortRAM\"  #>                                                 string  #>                                  \"#STAR.genomeDirName\"  #>                                                   File  #>                                         \"#STAR.genome\"  #>                                                 int...  #>                                   \"#STAR.clip5pNbases\"  #>                                                 int...  #>                                   \"#STAR.clip3pNbases\"  #>                                                 int...  #>                       \"#STAR.clip3pAfterAdapterNbases\"  #>                                              string...  #>                               \"#STAR.clip3pAdapterSeq\"  #>                                               float...  #>                               \"#STAR.clip3pAdapterMMp\"  #>                                                    int  #>                                 \"#STAR.chimSegmentMin\"  #>                                                    int  #>                            \"#STAR.chimScoreSeparation\"  #>                                                    int  #>                                   \"#STAR.chimScoreMin\"  #>                                                    int  #>                       \"#STAR.chimScoreJunctionNonGTAG\"  #>                                                    int  #>                               \"#STAR.chimScoreDropMax\"  #>                                                   enum  #>                                    \"#STAR.chimOutType\"  #>                                                    int  #>                        \"#STAR.chimJunctionOverhangMin\"  #>                                                  float  #>                        \"#STAR.alignWindowsPerReadNmax\"  #>                                                    int  #>                  \"#STAR.alignTranscriptsPerWindowNmax\"  #>                                                    int  #>                    \"#STAR.alignTranscriptsPerReadNmax\"  #>                                                  float  #>               \"#STAR.alignSplicedMateMapLminOverLmate\"  #>                                                    int  #>                        \"#STAR.alignSplicedMateMapLmin\"  #>                                                   enum  #>                   \"#STAR.alignSoftClipAtReferenceEnds\"  #>                                                    int  #>                             \"#STAR.alignSJoverhangMin\"  #>                                                    int  #>                           \"#STAR.alignSJDBoverhangMin\"  #>                                                    int  #>                               \"#STAR.alignMatesGapMax\"  #>                                                    int  #>                                 \"#STAR.alignIntronMin\"  #>                                                    int  #>                                 \"#STAR.alignIntronMax\"  #>                                                   enum  #>                                  \"#STAR.alignEndsType\"  f1$input_id() #> [1] \"#sjdbGTFfile\"                    \"#fastq\"                          #> [3] \"#genomeFastaFiles\"               \"#sjdbGTFtagExonParentTranscript\" #> [5] \"#sjdbGTFtagExonParentGene\"       \"#winAnchorMultimapNmax\"          #> [7] \"#winAnchorDistNbins\"             f1$set_flow_input(\"#STAR.reads\") #> sbg:validationErrors: [] #> sbg:sbgMaintained: no #> sbg:latestRevision: 2 #> sbg:toolAuthor: Seven Bridges Genomics #> sbg:createdOn: 1463601910 #> sbg:categories: #> - Alignment #> - RNA #> sbg:contributors: #> - tengfei #> sbg:project: tengfei/quickstart #> sbg:createdBy: tengfei #> sbg:toolkitVersion: 2.4.2a #> sbg:id: tengfei/quickstart/rna-seq-alignment-star-demo/2 #> sbg:license: Apache License 2.0 #> sbg:revision: 2 #> sbg:modifiedOn: 1463601974 #> sbg:modifiedBy: tengfei #> sbg:revisionsInfo: #> - sbg:modifiedBy: tengfei #>   sbg:modifiedOn: 1463601910 #>   sbg:revision: 0 #> - sbg:modifiedBy: tengfei #>   sbg:modifiedOn: 1463601952 #>   sbg:revision: 1 #> - sbg:modifiedBy: tengfei #>   sbg:modifiedOn: 1463601974 #>   sbg:revision: 2 #> sbg:toolkit: STAR #> id: '#tengfei/quickstart/rna-seq-alignment-star-demo/2' #> inputs: #> - type: #>   - items: File #>     type: array #>   label: Read sequence #>   description: Read sequence. #>   streamable: no #>   id: '#reads' #>   inputBinding: #>     position: 10 #>     separate: yes #>     itemSeparator: ' ' #>     valueFrom: #>       engine: '#cwl-js-engine' #>       script: \"{\\t\\n  var list = [].concat($job.inputs.reads)\\n  \\n  var resp = []\\n #>         \\ \\n  if (list.length == 1){\\n    resp.push(list[0].path)\\n    \\n  }else if #>         (list.length == 2){    \\n    \\n    left = \\\"\\\"\\n    right = \\\"\\\"\\n      \\n #>         \\   for (index = 0; index < list.length; ++index) {\\n      \\n      if (list[index].metadata #>         != null){\\n        if (list[index].metadata.paired_end == 1){\\n          left #>         = list[index].path\\n        }else if (list[index].metadata.paired_end == 2){\\n #>         \\         right = list[index].path\\n        }\\n      }\\n    }\\n    \\n    if #>         (left != \\\"\\\" && right != \\\"\\\"){      \\n      resp.push(left)\\n      resp.push(right)\\n #>         \\   }\\n  }\\n  else if (list.length > 2){\\n    left = []\\n    right = []\\n #>         \\     \\n    for (index = 0; index < list.length; ++index) {\\n      \\n      if #>         (list[index].metadata != null){\\n        if (list[index].metadata.paired_end #>         == 1){\\n          left.push(list[index].path)\\n        }else if (list[index].metadata.paired_end #>         == 2){\\n          right.push(list[index].path)\\n        }\\n      }\\n    }\\n #>         \\   left_join = left.join()\\n    right_join = right.join()\\n    if (left != #>         [] && right != []){      \\n      resp.push(left_join)\\n      resp.push(right_join)\\n #>         \\   }\\t\\n  }\\n  \\n  if(resp.length > 0){    \\n    return \\\"--readFilesIn \\\".concat(resp.join(\\\" #>         \\\"))\\n  }\\n}\" #>       class: Expression #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Basic #>   sbg:fileTypes: FASTA, FASTQ, FA, FQ, FASTQ.GZ, FQ.GZ, FASTQ.BZ2, FQ.BZ2 #>   sbg:x: 200.0 #>   sbg:y: 200.0 #>   sbg:includeInPorts: yes #>   required: yes #> - type: #>   - 'null' #>   - items: File #>     type: array #>   label: sjdbGTFfile #>   streamable: no #>   id: '#sjdbGTFfile' #>   sbg:x: 160.4999759 #>   sbg:y: 195.0833106 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - items: File #>     type: array #>   label: fastq #>   streamable: no #>   id: '#fastq' #>   sbg:x: 164.2499914 #>   sbg:y: 323.7499502 #>   sbg:includeInPorts: yes #>   required: yes #> - type: #>   - File #>   label: genomeFastaFiles #>   streamable: no #>   id: '#genomeFastaFiles' #>   sbg:x: 167.7499601 #>   sbg:y: 469.9999106 #>   sbg:includeInPorts: yes #>   required: yes #> - type: #>   - 'null' #>   - string #>   label: Exons' parents name #>   description: Tag name to be used as exons' transcript-parents. #>   streamable: no #>   id: '#sjdbGTFtagExonParentTranscript' #>   sbg:category: Splice junctions db parameters #>   sbg:x: 200.0 #>   sbg:y: 350.0 #>   sbg:includeInPorts: yes #>   sbg:toolDefaultValue: transcript_id #>   required: no #> - type: #>   - 'null' #>   - string #>   label: Gene name #>   description: Tag name to be used as exons' gene-parents. #>   streamable: no #>   id: '#sjdbGTFtagExonParentGene' #>   sbg:category: Splice junctions db parameters #>   sbg:x: 200.0 #>   sbg:y: 400.0 #>   sbg:includeInPorts: yes #>   sbg:toolDefaultValue: gene_id #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max loci anchors #>   description: Max number of loci anchors are allowed to map to (int>0). #>   streamable: no #>   id: '#winAnchorMultimapNmax' #>   sbg:category: Windows, Anchors, Binning #>   sbg:x: 200.0 #>   sbg:y: 450.0 #>   sbg:includeInPorts: yes #>   sbg:toolDefaultValue: '50' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max bins between anchors #>   description: Max number of bins between two anchors that allows aggregation of anchors #>     into one window (int>0). #>   streamable: no #>   id: '#winAnchorDistNbins' #>   sbg:category: Windows, Anchors, Binning #>   sbg:x: 200.0 #>   sbg:y: 500.0 #>   sbg:includeInPorts: yes #>   sbg:toolDefaultValue: '9' #>   required: no #> outputs: #> - type: #>   - 'null' #>   - items: File #>     type: array #>   label: Unmapped reads #>   description: Output of unmapped reads. #>   streamable: no #>   id: '#unmapped_reads' #>   source: '#unmapped_reads' #>   sbg:x: 800.0 #>   sbg:y: 200.0 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: Transcriptome alignments #>   description: Alignments translated into transcript coordinates. #>   streamable: no #>   id: '#transcriptome_aligned_reads' #>   source: '#transcriptome_aligned_reads' #>   sbg:x: 800.0 #>   sbg:y: 233.3333333 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: Splice junctions #>   description: High confidence collapsed splice junctions in tab-delimited format. #>     Only junctions supported by uniquely mapping reads are reported. #>   streamable: no #>   id: '#splice_junctions' #>   source: '#splice_junctions' #>   sbg:x: 800.0 #>   sbg:y: 266.6666667 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: Reads per gene #>   description: File with number of reads per gene. A read is counted if it overlaps #>     (1nt or more) one and only one gene. #>   streamable: no #>   id: '#reads_per_gene' #>   source: '#reads_per_gene' #>   sbg:x: 800.0 #>   sbg:y: 300.0 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - items: File #>     type: array #>   label: Log files #>   description: Log files produced during alignment. #>   streamable: no #>   id: '#log_files' #>   source: '#log_files' #>   sbg:x: 800.0 #>   sbg:y: 333.3333333 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: Chimeric junctions #>   description: If chimSegmentMin in 'Chimeric Alignments' section is set to 0, 'Chimeric #>     Junctions' won't be output. #>   streamable: no #>   id: '#chimeric_junctions' #>   source: '#chimeric_junctions' #>   sbg:x: 800.0 #>   sbg:y: 366.6666667 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: Intermediate genome files #>   description: Archive with genome files produced when annotations are included on #>     the fly (in the mapping step). #>   streamable: no #>   id: '#intermediate_genome' #>   source: #>   - '#intermediate_genome' #>   - intermediate_genome #>   sbg:x: 800.0 #>   sbg:y: 400.0 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: Chimeric alignments #>   description: Aligned Chimeric sequences SAM - if chimSegmentMin = 0, no Chimeric #>     Alignment SAM and Chimeric Junctions outputs. #>   streamable: no #>   id: '#chimeric_alignments' #>   source: '#chimeric_alignments' #>   sbg:x: 800.0 #>   sbg:y: 433.3333333 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: Sorted BAM/SAM #>   description: Sorted BAM or SAM file. #>   streamable: no #>   id: '#sorted_bam' #>   source: '#sorted_bam' #>   sbg:x: 800.0 #>   sbg:y: 466.6666667 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: Result #>   description: Source FASTQ file with updated metadata. #>   streamable: no #>   id: '#result' #>   source: '#result' #>   sbg:x: 800.0 #>   sbg:y: 500.0 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: Intermediate genome files #>   description: Archive with genome files produced when annotations are included on #>     the fly (in the mapping step). #>   streamable: no #>   id: '#intermediate_genome' #>   source: #>   - '#intermediate_genome' #>   - intermediate_genome #>   sbg:x: 800.0 #>   sbg:y: 533.3333333 #>   sbg:includeInPorts: yes #>   required: no #> requirements: #> - class: CreateFileRequirement #>   fileDef: [] #> hints: #> - class: sbg:AWSInstanceType #>   value: c3.8xlarge #> label: RNA-seq Alignment - STAR #> description: \"Alignment to a reference genome and transcriptome presents the first #>   step of RNA-Seq analysis. This pipeline uses STAR, an ultrafast RNA-seq aligner #>   capable of mapping full length RNA sequences and detecting de novo canonical junctions, #>   non-canonical splices, and chimeric (fusion) transcripts. It is optimized for mammalian #>   sequence reads, but fine tuning of its parameters enables customization to satisfy #>   unique needs.\\n\\nSTAR accepts one file per sample (or two files for paired-end data). #>   \\ \\nSplice junction annotations can optionally be collected from splice junction #>   databases. Set the \\\"Overhang length\\\" parameter to a value larger than zero in #>   order to use splice junction databases. For constant read length, this value should #>   (ideally) be equal to mate length decreased by 1; for long reads with non-constant #>   length, this value should be 100 (pipeline default). \\nFastQC Analysis on FASTQ #>   files reveals read length distribution. STAR can detect chimeric transcripts, but #>   parameter \\\"Min segment length\\\" in \\\"Chimeric Alignments\\\" category must be adjusted #>   to a desired minimum chimeric segment length. Aligned reads are reported in BAM #>   format and can be viewed in a genome browser (such as IGV). A file containing detected #>   splice junctions is also produced.\\n\\nUnmapped reads are reported in FASTQ format #>   and can be included in an output BAM file. The \\\"Output unmapped reads\\\" and \\\"Write #>   unmapped in SAM\\\" parameters enable unmapped output type selection.\" #> class: Workflow #> steps: #> - id: '#STAR_Genome_Generate' #>   inputs: #>   - id: '#STAR_Genome_Generate.sjdbScore' #>   - id: '#STAR_Genome_Generate.sjdbOverhang' #>   - id: '#STAR_Genome_Generate.sjdbGTFtagExonParentTranscript' #>     source: '#sjdbGTFtagExonParentTranscript' #>   - id: '#STAR_Genome_Generate.sjdbGTFtagExonParentGene' #>     source: '#sjdbGTFtagExonParentGene' #>   - id: '#STAR_Genome_Generate.sjdbGTFfile' #>     source: '#sjdbGTFfile' #>   - id: '#STAR_Genome_Generate.sjdbGTFfeatureExon' #>   - id: '#STAR_Genome_Generate.sjdbGTFchrPrefix' #>   - id: '#STAR_Genome_Generate.genomeSAsparseD' #>   - id: '#STAR_Genome_Generate.genomeSAindexNbases' #>   - id: '#STAR_Genome_Generate.genomeFastaFiles' #>     source: '#genomeFastaFiles' #>   - id: '#STAR_Genome_Generate.genomeChrBinNbits' #>   outputs: #>   - id: '#STAR_Genome_Generate.genome' #>   hints: [] #>   run: #>     sbg:validationErrors: [] #>     sbg:sbgMaintained: no #>     sbg:latestRevision: 1 #>     sbg:job: #>       allocatedResources: #>         mem: 60000 #>         cpu: 15 #>       inputs: #>         sjdbScore: 0 #>         sjdbGTFfeatureExon: sjdbGTFfeatureExon #>         sjdbOverhang: 0 #>         sjdbGTFtagExonParentTranscript: sjdbGTFtagExonParentTranscript #>         genomeChrBinNbits: genomeChrBinNbits #>         genomeSAsparseD: 0 #>         sjdbGTFfile: #>         - size: 0 #>           secondaryFiles: [] #>           class: File #>           path: /demo/test-files/chr20.gtf #>         sjdbGTFtagExonParentGene: sjdbGTFtagExonParentGene #>         genomeFastaFiles: #>           size: 0 #>           secondaryFiles: [] #>           class: File #>           path: /sbgenomics/test-data/chr20.fa #>         sjdbGTFchrPrefix: sjdbGTFchrPrefix #>         genomeSAindexNbases: 0 #>     sbg:toolAuthor: Alexander Dobin/CSHL #>     sbg:createdOn: 1450911469 #>     sbg:categories: #>     - Alignment #>     sbg:contributors: #>     - bix-demo #>     sbg:links: #>     - id: https://github.com/alexdobin/STAR #>       label: Homepage #>     - id: https://github.com/alexdobin/STAR/releases #>       label: Releases #>     - id: https://github.com/alexdobin/STAR/blob/master/doc/STARmanual.pdf #>       label: Manual #>     - id: https://groups.google.com/forum/#!forum/rna-star #>       label: Support #>     - id: http://www.ncbi.nlm.nih.gov/pubmed/23104886 #>       label: Publication #>     sbg:project: bix-demo/star-2-4-2a-demo #>     sbg:createdBy: bix-demo #>     sbg:toolkitVersion: 2.4.2a #>     sbg:id: sevenbridges/public-apps/star-genome-generate/1 #>     sbg:license: GNU General Public License v3.0 only #>     sbg:revision: 1 #>     sbg:cmdPreview: mkdir genomeDir && /opt/STAR --runMode genomeGenerate --genomeDir #>       ./genomeDir --runThreadN 15 --genomeFastaFiles /sbgenomics/test-data/chr20.fa #>       --genomeChrBinNbits genomeChrBinNbits --genomeSAindexNbases 0 --genomeSAsparseD #>       0 --sjdbGTFfeatureExon sjdbGTFfeatureExon --sjdbGTFtagExonParentTranscript sjdbGTFtagExonParentTranscript #>       --sjdbGTFtagExonParentGene sjdbGTFtagExonParentGene --sjdbOverhang 0 --sjdbScore #>       0 --sjdbGTFchrPrefix sjdbGTFchrPrefix  --sjdbGTFfile /demo/test-files/chr20.gtf  && #>       tar -vcf genome.tar ./genomeDir /sbgenomics/test-data/chr20.fa #>     sbg:modifiedOn: 1450911470 #>     sbg:modifiedBy: bix-demo #>     sbg:revisionsInfo: #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911469 #>       sbg:revision: 0 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911470 #>       sbg:revision: 1 #>     sbg:toolkit: STAR #>     id: sevenbridges/public-apps/star-genome-generate/1 #>     inputs: #>     - type: #>       - 'null' #>       - int #>       label: Extra alignment score #>       description: Extra alignment score for alignments that cross database junctions. #>       streamable: no #>       id: '#sjdbScore' #>       inputBinding: #>         position: 0 #>         prefix: --sjdbScore #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Splice junctions db parameters #>       sbg:includeInPorts: yes #>       sbg:toolDefaultValue: '2' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: '\"Overhang\" length' #>       description: Length of the donor/acceptor sequence on each side of the junctions, #>         ideally = (mate_length - 1) (int >= 0), if int = 0, splice junction database #>         is not used. #>       streamable: no #>       id: '#sjdbOverhang' #>       inputBinding: #>         position: 0 #>         prefix: --sjdbOverhang #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Splice junctions db parameters #>       sbg:includeInPorts: yes #>       sbg:toolDefaultValue: '100' #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Exons' parents name #>       description: Tag name to be used as exons' transcript-parents. #>       streamable: no #>       id: '#sjdbGTFtagExonParentTranscript' #>       inputBinding: #>         position: 0 #>         prefix: --sjdbGTFtagExonParentTranscript #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Splice junctions db parameters #>       sbg:toolDefaultValue: transcript_id #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Gene name #>       description: Tag name to be used as exons' gene-parents. #>       streamable: no #>       id: '#sjdbGTFtagExonParentGene' #>       inputBinding: #>         position: 0 #>         prefix: --sjdbGTFtagExonParentGene #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Splice junctions db parameters #>       sbg:toolDefaultValue: gene_id #>       required: no #>     - type: #>       - 'null' #>       - items: File #>         type: array #>       label: Splice junction file #>       description: Gene model annotations and/or known transcripts. #>       streamable: no #>       id: '#sjdbGTFfile' #>       sbg:category: Basic #>       sbg:fileTypes: GTF, GFF, TXT #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Set exons feature #>       description: Feature type in GTF file to be used as exons for building transcripts. #>       streamable: no #>       id: '#sjdbGTFfeatureExon' #>       inputBinding: #>         position: 0 #>         prefix: --sjdbGTFfeatureExon #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Splice junctions db parameters #>       sbg:toolDefaultValue: exon #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Chromosome names #>       description: Prefix for chromosome names in a GTF file (e.g. 'chr' for using #>         ENSMEBL annotations with UCSC geneomes). #>       streamable: no #>       id: '#sjdbGTFchrPrefix' #>       inputBinding: #>         position: 0 #>         prefix: --sjdbGTFchrPrefix #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Splice junctions db parameters #>       sbg:toolDefaultValue: '-' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Suffux array sparsity #>       description: 'Distance between indices: use bigger numbers to decrease needed #>         RAM at the cost of mapping speed reduction (int>0).' #>       streamable: no #>       id: '#genomeSAsparseD' #>       inputBinding: #>         position: 0 #>         prefix: --genomeSAsparseD #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Genome generation parameters #>       sbg:toolDefaultValue: '1' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Pre-indexing string length #>       description: Length (bases) of the SA pre-indexing string. Typically between #>         10 and 15. Longer strings will use much more memory, but allow faster searches. #>         For small genomes, this number needs to be scaled down, with a typical value #>         of min(14, log2(GenomeLength)/2 - 1). For example, for 1 megaBase genome, #>         this is equal to 9, for 100 kiloBase genome, this is equal to 7. #>       streamable: no #>       id: '#genomeSAindexNbases' #>       inputBinding: #>         position: 0 #>         prefix: --genomeSAindexNbases #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Genome generation parameters #>       sbg:toolDefaultValue: '14' #>       required: no #>     - type: #>       - File #>       label: Genome fasta files #>       description: Reference sequence to which to align the reads. #>       streamable: no #>       id: '#genomeFastaFiles' #>       inputBinding: #>         position: 0 #>         prefix: --genomeFastaFiles #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Basic #>       sbg:fileTypes: FASTA, FA #>       required: yes #>     - type: #>       - 'null' #>       - string #>       label: Bins size #>       description: 'Set log2(chrBin), where chrBin is the size (bits) of the bins #>         for genome storage: each chromosome will occupy an integer number of bins. #>         If you are using a genome with a large (>5,000) number of chrosomes/scaffolds, #>         you may need to reduce this number to reduce RAM consumption. The following #>         scaling is recomended: genomeChrBinNbits = min(18, log2(GenomeLength/NumberOfReferences)). #>         For example, for 3 gigaBase genome with 100,000 chromosomes/scaffolds, this #>         is equal to 15.' #>       streamable: no #>       id: '#genomeChrBinNbits' #>       inputBinding: #>         position: 0 #>         prefix: --genomeChrBinNbits #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Genome generation parameters #>       sbg:toolDefaultValue: '18' #>       required: no #>     outputs: #>     - type: #>       - 'null' #>       - File #>       label: Genome Files #>       description: Genome files comprise binary genome sequence, suffix arrays, text #>         chromosome names/lengths, splice junctions coordinates, and transcripts/genes #>         information. #>       streamable: no #>       id: '#genome' #>       outputBinding: #>         glob: '*.tar' #>       sbg:fileTypes: TAR #>     requirements: #>     - class: ExpressionEngineRequirement #>       id: '#cwl-js-engine' #>       requirements: #>       - class: DockerRequirement #>         dockerPull: rabix/js-engine #>     hints: #>     - class: DockerRequirement #>       dockerPull: images.sbgenomics.com/ana_d/star:2.4.2a #>       dockerImageId: a4b0ad2c3cae #>     - class: sbg:CPURequirement #>       value: 15 #>     - class: sbg:MemRequirement #>       value: 60000 #>     label: STAR Genome Generate #>     description: STAR Genome Generate is a tool that generates genome index files. #>       One set of files should be generated per each genome/annotation combination. #>       Once produced, these files could be used as long as genome/annotation combination #>       stays the same. Also, STAR Genome Generate which produced these files and STAR #>       aligner using them must be the same toolkit version. #>     class: CommandLineTool #>     baseCommand: #>     - mkdir #>     - genomeDir #>     - '&&' #>     - /opt/STAR #>     - --runMode #>     - genomeGenerate #>     - --genomeDir #>     - ./genomeDir #>     - --runThreadN #>     - class: Expression #>       script: |- #>         { #>           return $job.allocatedResources.cpu #>         } #>       engine: '#cwl-js-engine' #>     arguments: #>     - position: 99 #>       separate: yes #>       valueFrom: '&& tar -vcf genome.tar ./genomeDir' #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\t\\n  var sjFormat = \\\"False\\\"\\n  var gtfgffFormat = \\\"False\\\"\\n #>           \\ var list = $job.inputs.sjdbGTFfile\\n  var paths_list = []\\n  var joined_paths #>           = \\\"\\\"\\n  \\n  if (list) {\\n    list.forEach(function(f){return paths_list.push(f.path)})\\n #>           \\   joined_paths = paths_list.join(\\\" \\\")\\n\\n\\n    paths_list.forEach(function(f){\\n #>           \\     ext = f.replace(/^.*\\\\./, '')\\n      if (ext == \\\"gff\\\" || ext == #>           \\\"gtf\\\") {\\n        gtfgffFormat = \\\"True\\\"\\n        return gtfgffFormat\\n #>           \\     }\\n      if (ext == \\\"txt\\\") {\\n        sjFormat = \\\"True\\\"\\n        return #>           sjFormat\\n      }\\n    })\\n\\n    if ($job.inputs.sjdbGTFfile && $job.inputs.sjdbInsertSave #>           != \\\"None\\\") {\\n      if (sjFormat == \\\"True\\\") {\\n        return \\\"--sjdbFileChrStartEnd #>           \\\".concat(joined_paths)\\n      }\\n      else if (gtfgffFormat == \\\"True\\\") #>           {\\n        return \\\"--sjdbGTFfile \\\".concat(joined_paths)\\n      }\\n    }\\n #>           \\ }\\n}\" #>         class: Expression #>     stdin: '' #>     stdout: '' #>     successCodes: [] #>     temporaryFailCodes: [] #>     x: 384.0832266 #>     'y': 446.4998957 #>   sbg:x: 100.0 #>   sbg:y: 200.0 #> - id: '#SBG_FASTQ_Quality_Detector' #>   inputs: #>   - id: '#SBG_FASTQ_Quality_Detector.fastq' #>     source: '#fastq' #>   outputs: #>   - id: '#SBG_FASTQ_Quality_Detector.result' #>   hints: [] #>   run: #>     sbg:validationErrors: [] #>     sbg:sbgMaintained: no #>     sbg:latestRevision: 3 #>     sbg:job: #>       allocatedResources: #>         mem: 1000 #>         cpu: 1 #>       inputs: #>         fastq: #>           size: 0 #>           secondaryFiles: [] #>           class: File #>           path: /path/to/fastq.ext #>     sbg:toolAuthor: Seven Bridges Genomics #>     sbg:createdOn: 1450911312 #>     sbg:categories: #>     - FASTQ-Processing #>     sbg:contributors: #>     - bix-demo #>     sbg:project: bix-demo/sbgtools-demo #>     sbg:createdBy: bix-demo #>     sbg:id: sevenbridges/public-apps/sbg-fastq-quality-detector/3 #>     sbg:license: Apache License 2.0 #>     sbg:revision: 3 #>     sbg:cmdPreview: python /opt/sbg_fastq_quality_scale_detector.py --fastq /path/to/fastq.ext #>       /path/to/fastq.ext #>     sbg:modifiedOn: 1450911314 #>     sbg:modifiedBy: bix-demo #>     sbg:revisionsInfo: #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911312 #>       sbg:revision: 0 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911314 #>       sbg:revision: 3 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911313 #>       sbg:revision: 1 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911313 #>       sbg:revision: 2 #>     sbg:toolkit: SBGTools #>     id: sevenbridges/public-apps/sbg-fastq-quality-detector/3 #>     inputs: #>     - type: #>       - File #>       label: Fastq #>       description: FASTQ file. #>       streamable: no #>       id: '#fastq' #>       inputBinding: #>         position: 0 #>         prefix: --fastq #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       required: yes #>     outputs: #>     - type: #>       - 'null' #>       - File #>       label: Result #>       description: Source FASTQ file with updated metadata. #>       streamable: no #>       id: '#result' #>       outputBinding: #>         glob: '*.fastq' #>       sbg:fileTypes: FASTQ #>     requirements: #>     - class: CreateFileRequirement #>       fileDef: [] #>     hints: #>     - class: DockerRequirement #>       dockerPull: images.sbgenomics.com/tziotas/sbg_fastq_quality_scale_detector:1.0 #>       dockerImageId: '' #>     - class: sbg:CPURequirement #>       value: 1 #>     - class: sbg:MemRequirement #>       value: 1000 #>     label: SBG FASTQ Quality Detector #>     description: FASTQ Quality Scale Detector detects which quality encoding scheme #>       was used in your reads and automatically enters the proper value in the \"Quality #>       Scale\" metadata field. #>     class: CommandLineTool #>     baseCommand: #>     - python #>     - /opt/sbg_fastq_quality_scale_detector.py #>     arguments: [] #>     stdin: '' #>     stdout: '' #>     successCodes: [] #>     temporaryFailCodes: [] #>     x: 375.3333179 #>     'y': 323.5833156 #>   sbg:x: 300.0 #>   sbg:y: 200.0 #> - id: '#Picard_SortSam' #>   inputs: #>   - id: '#Picard_SortSam.validation_stringency' #>     default: SILENT #>   - id: '#Picard_SortSam.sort_order' #>     default: Coordinate #>   - id: '#Picard_SortSam.quiet' #>   - id: '#Picard_SortSam.output_type' #>   - id: '#Picard_SortSam.memory_per_job' #>   - id: '#Picard_SortSam.max_records_in_ram' #>   - id: '#Picard_SortSam.input_bam' #>     source: '#STAR.aligned_reads' #>   - id: '#Picard_SortSam.create_index' #>     default: 'True' #>   - id: '#Picard_SortSam.compression_level' #>   outputs: #>   - id: '#Picard_SortSam.sorted_bam' #>   hints: [] #>   run: #>     sbg:validationErrors: [] #>     sbg:sbgMaintained: no #>     sbg:latestRevision: 2 #>     sbg:job: #>       allocatedResources: #>         mem: 2048 #>         cpu: 1 #>       inputs: #>         sort_order: Coordinate #>         input_bam: #>           path: /root/dir/example.tested.bam #>         memory_per_job: 2048 #>         output_type: ~ #>         create_index: ~ #>     sbg:toolAuthor: Broad Institute #>     sbg:createdOn: 1450911168 #>     sbg:categories: #>     - SAM/BAM-Processing #>     sbg:contributors: #>     - bix-demo #>     sbg:links: #>     - id: http://broadinstitute.github.io/picard/index.html #>       label: Homepage #>     - id: https://github.com/broadinstitute/picard/releases/tag/1.138 #>       label: Source Code #>     - id: http://broadinstitute.github.io/picard/ #>       label: Wiki #>     - id: https://github.com/broadinstitute/picard/zipball/master #>       label: Download #>     - id: http://broadinstitute.github.io/picard/ #>       label: Publication #>     sbg:project: bix-demo/picard-1-140-demo #>     sbg:createdBy: bix-demo #>     sbg:toolkitVersion: '1.140' #>     sbg:id: sevenbridges/public-apps/picard-sortsam-1-140/2 #>     sbg:license: MIT License, Apache 2.0 Licence #>     sbg:revision: 2 #>     sbg:cmdPreview: java -Xmx2048M -jar /opt/picard-tools-1.140/picard.jar SortSam #>       OUTPUT=example.tested.sorted.bam INPUT=/root/dir/example.tested.bam SORT_ORDER=coordinate   INPUT=/root/dir/example.tested.bam #>       SORT_ORDER=coordinate  /root/dir/example.tested.bam #>     sbg:modifiedOn: 1450911170 #>     sbg:modifiedBy: bix-demo #>     sbg:revisionsInfo: #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911168 #>       sbg:revision: 0 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911169 #>       sbg:revision: 1 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911170 #>       sbg:revision: 2 #>     sbg:toolkit: Picard #>     id: sevenbridges/public-apps/picard-sortsam-1-140/2 #>     inputs: #>     - type: #>       - 'null' #>       - name: validation_stringency #>         symbols: #>         - STRICT #>         - LENIENT #>         - SILENT #>         type: enum #>       label: Validation stringency #>       description: 'Validation stringency for all SAM files read by this program. #>         Setting stringency to SILENT can improve performance when processing a BAM #>         file in which variable-length data (read, qualities, tags) do not otherwise #>         need to be decoded. This option can be set to ''null'' to clear the default #>         value. Possible values: {STRICT, LENIENT, SILENT}.' #>       streamable: no #>       id: '#validation_stringency' #>       inputBinding: #>         position: 0 #>         prefix: VALIDATION_STRINGENCY= #>         separate: no #>         valueFrom: #>           engine: '#cwl-js-engine' #>           script: |- #>             { #>               if ($job.inputs.validation_stringency) #>               { #>                 return $job.inputs.validation_stringency #>               } #>               else #>               { #>                 return \"SILENT\" #>               } #>             } #>           class: Expression #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Other input types #>       sbg:toolDefaultValue: SILENT #>       required: no #>     - type: #>       - name: sort_order #>         symbols: #>         - Unsorted #>         - Queryname #>         - Coordinate #>         type: enum #>       label: Sort order #>       description: 'Sort order of the output file. Possible values: {unsorted, queryname, #>         coordinate}.' #>       streamable: no #>       id: '#sort_order' #>       inputBinding: #>         position: 3 #>         prefix: SORT_ORDER= #>         separate: no #>         valueFrom: #>           engine: '#cwl-js-engine' #>           script: |- #>             { #>               p = $job.inputs.sort_order.toLowerCase() #>               return p #>             } #>           class: Expression #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Other input types #>       sbg:toolDefaultValue: Coordinate #>       sbg:altPrefix: SO #>       required: yes #>     - type: #>       - 'null' #>       - name: quiet #>         symbols: #>         - 'True' #>         - 'False' #>         type: enum #>       label: Quiet #>       description: 'This parameter indicates whether to suppress job-summary info #>         on System.err. This option can be set to ''null'' to clear the default value. #>         Possible values: {true, false}.' #>       streamable: no #>       id: '#quiet' #>       inputBinding: #>         position: 0 #>         prefix: QUIET= #>         separate: no #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Other input types #>       sbg:toolDefaultValue: 'False' #>       required: no #>     - type: #>       - 'null' #>       - name: output_type #>         symbols: #>         - BAM #>         - SAM #>         - SAME AS INPUT #>         type: enum #>       label: Output format #>       description: Since Picard tools can output both SAM and BAM files, user can #>         choose the format of the output file. #>       streamable: no #>       id: '#output_type' #>       sbg:category: Other input types #>       sbg:toolDefaultValue: SAME AS INPUT #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Memory per job #>       description: Amount of RAM memory to be used per job. Defaults to 2048 MB for #>         single threaded jobs. #>       streamable: no #>       id: '#memory_per_job' #>       sbg:toolDefaultValue: '2048' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max records in RAM #>       description: When writing SAM files that need to be sorted, this parameter will #>         specify the number of records stored in RAM before spilling to disk. Increasing #>         this number reduces the number of file handles needed to sort a SAM file, #>         and increases the amount of RAM needed. This option can be set to 'null' to #>         clear the default value. #>       streamable: no #>       id: '#max_records_in_ram' #>       inputBinding: #>         position: 0 #>         prefix: MAX_RECORDS_IN_RAM= #>         separate: no #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Other input types #>       sbg:toolDefaultValue: '500000' #>       required: no #>     - type: #>       - File #>       label: Input BAM #>       description: The BAM or SAM file to sort. #>       streamable: no #>       id: '#input_bam' #>       inputBinding: #>         position: 1 #>         prefix: INPUT= #>         separate: no #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: File inputs #>       sbg:fileTypes: BAM, SAM #>       sbg:altPrefix: I #>       required: yes #>     - type: #>       - 'null' #>       - name: create_index #>         symbols: #>         - 'True' #>         - 'False' #>         type: enum #>       label: Create index #>       description: 'This parameter indicates whether to create a BAM index when writing #>         a coordinate-sorted BAM file. This option can be set to ''null'' to clear #>         the default value. Possible values: {true, false}.' #>       streamable: no #>       id: '#create_index' #>       inputBinding: #>         position: 5 #>         prefix: CREATE_INDEX= #>         separate: no #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Other input types #>       sbg:toolDefaultValue: 'False' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Compression level #>       description: Compression level for all compressed files created (e.g. BAM and #>         GELI). This option can be set to 'null' to clear the default value. #>       streamable: no #>       id: '#compression_level' #>       inputBinding: #>         position: 0 #>         prefix: COMPRESSION_LEVEL= #>         separate: no #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Other input types #>       sbg:toolDefaultValue: '5' #>       required: no #>     outputs: #>     - type: #>       - 'null' #>       - File #>       label: Sorted BAM/SAM #>       description: Sorted BAM or SAM file. #>       streamable: no #>       id: '#sorted_bam' #>       outputBinding: #>         glob: '*.sorted.?am' #>       sbg:fileTypes: BAM, SAM #>     requirements: #>     - class: ExpressionEngineRequirement #>       id: '#cwl-js-engine' #>       requirements: #>       - class: DockerRequirement #>         dockerPull: rabix/js-engine #>       engineCommand: cwl-engine.js #>     hints: #>     - class: DockerRequirement #>       dockerPull: images.sbgenomics.com/mladenlsbg/picard:1.140 #>       dockerImageId: eab0e70b6629 #>     - class: sbg:CPURequirement #>       value: 1 #>     - class: sbg:MemRequirement #>       value: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  if($job.inputs.memory_per_job){\\n  \\treturn $job.inputs.memory_per_job\\n #>           \\ }\\n  \\treturn 2048\\n}\" #>         class: Expression #>     label: Picard SortSam #>     description: Picard SortSam sorts the input SAM or BAM. Input and output formats #>       are determined by the file extension. #>     class: CommandLineTool #>     baseCommand: #>     - java #>     - class: Expression #>       script: \"{   \\n  if($job.inputs.memory_per_job){\\n    return '-Xmx'.concat($job.inputs.memory_per_job, #>         'M')\\n  }   \\n  \\treturn '-Xmx2048M'\\n}\" #>       engine: '#cwl-js-engine' #>     - -jar #>     - /opt/picard-tools-1.140/picard.jar #>     - SortSam #>     arguments: #>     - position: 0 #>       prefix: OUTPUT= #>       separate: no #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  filename = $job.inputs.input_bam.path\\n  ext = $job.inputs.output_type\\n\\nif #>           (ext === \\\"BAM\\\")\\n{\\n    return filename.split('.').slice(0, -1).concat(\\\"sorted.bam\\\").join(\\\".\\\").replace(/^.*[\\\\\\\\\\\\/]/, #>           '')\\n    }\\n\\nelse if (ext === \\\"SAM\\\")\\n{\\n    return filename.split('.').slice(0, #>           -1).concat(\\\"sorted.sam\\\").join('.').replace(/^.*[\\\\\\\\\\\\/]/, '')\\n}\\n\\nelse #>           \\n{\\n\\treturn filename.split('.').slice(0, -1).concat(\\\"sorted.\\\"+filename.split('.').slice(-1)[0]).join(\\\".\\\").replace(/^.*[\\\\\\\\\\\\/]/, #>           '')\\n}\\n}\" #>         class: Expression #>     - position: 1000 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  filename = $job.inputs.input_bam.path\\n  \\n  /* figuring out #>           output file type */\\n  ext = $job.inputs.output_type\\n  if (ext === \\\"BAM\\\")\\n #>           \\ {\\n    out_extension = \\\"BAM\\\"\\n  }\\n  else if (ext === \\\"SAM\\\")\\n  {\\n #>           \\   out_extension = \\\"SAM\\\"\\n  }\\n  else \\n  {\\n\\tout_extension = filename.split('.').slice(-1)[0].toUpperCase()\\n #>           \\ }  \\n  \\n  /* if exist moving .bai in bam.bai */\\n  if ($job.inputs.create_index #>           === 'True' && $job.inputs.sort_order === 'Coordinate' && out_extension == #>           \\\"BAM\\\")\\n  {\\n    \\n    old_name = filename.split('.').slice(0, -1).concat('sorted.bai').join('.').replace(/^.*[\\\\\\\\\\\\/]/, #>           '')\\n    new_name = filename.split('.').slice(0, -1).concat('sorted.bam.bai').join('.').replace(/^.*[\\\\\\\\\\\\/]/, #>           '')\\n    return \\\"; mv \\\" + \\\" \\\" + old_name + \\\" \\\" + new_name\\n  }\\n\\n}\" #>         class: Expression #>     stdin: '' #>     stdout: '' #>     successCodes: [] #>     temporaryFailCodes: [] #>     x: 773.0831807 #>     'y': 470.9165939 #>   sbg:x: 500.0 #>   sbg:y: 200.0 #> - id: '#STAR' #>   inputs: #>   - id: '#STAR.winFlankNbins' #>   - id: '#STAR.winBinNbits' #>   - id: '#STAR.winAnchorMultimapNmax' #>     source: '#winAnchorMultimapNmax' #>   - id: '#STAR.winAnchorDistNbins' #>     source: '#winAnchorDistNbins' #>   - id: '#STAR.twopassMode' #>   - id: '#STAR.twopass1readsN' #>   - id: '#STAR.sjdbScore' #>   - id: '#STAR.sjdbOverhang' #>     default: 100 #>   - id: '#STAR.sjdbInsertSave' #>   - id: '#STAR.sjdbGTFtagExonParentTranscript' #>   - id: '#STAR.sjdbGTFtagExonParentGene' #>   - id: '#STAR.sjdbGTFfile' #>     source: '#sjdbGTFfile' #>   - id: '#STAR.sjdbGTFfeatureExon' #>   - id: '#STAR.sjdbGTFchrPrefix' #>   - id: '#STAR.seedSearchStartLmaxOverLread' #>   - id: '#STAR.seedSearchStartLmax' #>   - id: '#STAR.seedSearchLmax' #>   - id: '#STAR.seedPerWindowNmax' #>   - id: '#STAR.seedPerReadNmax' #>   - id: '#STAR.seedNoneLociPerWindow' #>   - id: '#STAR.seedMultimapNmax' #>   - id: '#STAR.scoreStitchSJshift' #>   - id: '#STAR.scoreInsOpen' #>   - id: '#STAR.scoreInsBase' #>   - id: '#STAR.scoreGenomicLengthLog2scale' #>   - id: '#STAR.scoreGapNoncan' #>   - id: '#STAR.scoreGapGCAG' #>   - id: '#STAR.scoreGapATAC' #>   - id: '#STAR.scoreGap' #>   - id: '#STAR.scoreDelOpen' #>   - id: '#STAR.scoreDelBase' #>   - id: '#STAR.rg_seq_center' #>   - id: '#STAR.rg_sample_id' #>   - id: '#STAR.rg_platform_unit_id' #>   - id: '#STAR.rg_platform' #>   - id: '#STAR.rg_mfl' #>   - id: '#STAR.rg_library_id' #>   - id: '#STAR.reads' #>     source: '#reads' #>   - id: '#STAR.readMatesLengthsIn' #>   - id: '#STAR.readMapNumber' #>   - id: '#STAR.quantTranscriptomeBan' #>   - id: '#STAR.quantMode' #>     default: TranscriptomeSAM #>   - id: '#STAR.outSortingType' #>     default: SortedByCoordinate #>   - id: '#STAR.outSJfilterReads' #>   - id: '#STAR.outSJfilterOverhangMin' #>   - id: '#STAR.outSJfilterIntronMaxVsReadN' #>   - id: '#STAR.outSJfilterDistToOtherSJmin' #>   - id: '#STAR.outSJfilterCountUniqueMin' #>   - id: '#STAR.outSJfilterCountTotalMin' #>   - id: '#STAR.outSAMunmapped' #>   - id: '#STAR.outSAMtype' #>     default: BAM #>   - id: '#STAR.outSAMstrandField' #>   - id: '#STAR.outSAMreadID' #>   - id: '#STAR.outSAMprimaryFlag' #>   - id: '#STAR.outSAMorder' #>   - id: '#STAR.outSAMmode' #>   - id: '#STAR.outSAMmapqUnique' #>   - id: '#STAR.outSAMheaderPG' #>   - id: '#STAR.outSAMheaderHD' #>   - id: '#STAR.outSAMflagOR' #>   - id: '#STAR.outSAMflagAND' #>   - id: '#STAR.outSAMattributes' #>   - id: '#STAR.outReadsUnmapped' #>     default: Fastx #>   - id: '#STAR.outQSconversionAdd' #>   - id: '#STAR.outFilterType' #>   - id: '#STAR.outFilterScoreMinOverLread' #>   - id: '#STAR.outFilterScoreMin' #>   - id: '#STAR.outFilterMultimapScoreRange' #>   - id: '#STAR.outFilterMultimapNmax' #>   - id: '#STAR.outFilterMismatchNoverReadLmax' #>   - id: '#STAR.outFilterMismatchNoverLmax' #>   - id: '#STAR.outFilterMismatchNmax' #>   - id: '#STAR.outFilterMatchNminOverLread' #>   - id: '#STAR.outFilterMatchNmin' #>   - id: '#STAR.outFilterIntronMotifs' #>   - id: '#STAR.limitSjdbInsertNsj' #>   - id: '#STAR.limitOutSJoneRead' #>   - id: '#STAR.limitOutSJcollapsed' #>   - id: '#STAR.limitBAMsortRAM' #>   - id: '#STAR.genomeDirName' #>   - id: '#STAR.genome' #>     source: '#STAR_Genome_Generate.genome' #>   - id: '#STAR.clip5pNbases' #>   - id: '#STAR.clip3pNbases' #>   - id: '#STAR.clip3pAfterAdapterNbases' #>   - id: '#STAR.clip3pAdapterSeq' #>   - id: '#STAR.clip3pAdapterMMp' #>   - id: '#STAR.chimSegmentMin' #>   - id: '#STAR.chimScoreSeparation' #>   - id: '#STAR.chimScoreMin' #>   - id: '#STAR.chimScoreJunctionNonGTAG' #>   - id: '#STAR.chimScoreDropMax' #>   - id: '#STAR.chimOutType' #>   - id: '#STAR.chimJunctionOverhangMin' #>   - id: '#STAR.alignWindowsPerReadNmax' #>   - id: '#STAR.alignTranscriptsPerWindowNmax' #>   - id: '#STAR.alignTranscriptsPerReadNmax' #>   - id: '#STAR.alignSplicedMateMapLminOverLmate' #>   - id: '#STAR.alignSplicedMateMapLmin' #>   - id: '#STAR.alignSoftClipAtReferenceEnds' #>   - id: '#STAR.alignSJoverhangMin' #>   - id: '#STAR.alignSJDBoverhangMin' #>   - id: '#STAR.alignMatesGapMax' #>   - id: '#STAR.alignIntronMin' #>   - id: '#STAR.alignIntronMax' #>   - id: '#STAR.alignEndsType' #>   outputs: #>   - id: '#STAR.unmapped_reads' #>   - id: '#STAR.transcriptome_aligned_reads' #>   - id: '#STAR.splice_junctions' #>   - id: '#STAR.reads_per_gene' #>   - id: '#STAR.log_files' #>   - id: '#STAR.intermediate_genome' #>   - id: '#STAR.chimeric_junctions' #>   - id: '#STAR.chimeric_alignments' #>   - id: '#STAR.aligned_reads' #>   hints: [] #>   run: #>     sbg:validationErrors: [] #>     sbg:sbgMaintained: no #>     sbg:latestRevision: 4 #>     sbg:job: #>       allocatedResources: #>         mem: 60000 #>         cpu: 15 #>       inputs: #>         alignWindowsPerReadNmax: 0 #>         outSAMheaderPG: outSAMheaderPG #>         GENOME_DIR_NAME: '' #>         outFilterMatchNminOverLread: 0 #>         rg_platform_unit_id: rg_platform_unit #>         alignTranscriptsPerReadNmax: 0 #>         readMapNumber: 0 #>         alignSplicedMateMapLminOverLmate: 0 #>         alignMatesGapMax: 0 #>         outFilterMultimapNmax: 0 #>         clip5pNbases: #>         - 0 #>         outSAMstrandField: None #>         readMatesLengthsIn: NotEqual #>         outSAMattributes: Standard #>         seedMultimapNmax: 0 #>         rg_mfl: rg_mfl #>         chimSegmentMin: 0 #>         winAnchorDistNbins: 0 #>         outSortingType: SortedByCoordinate #>         outFilterMultimapScoreRange: 0 #>         sjdbInsertSave: Basic #>         clip3pAfterAdapterNbases: #>         - 0 #>         scoreDelBase: 0 #>         outFilterMatchNmin: 0 #>         twopass1readsN: 0 #>         outSAMunmapped: None #>         genome: #>           size: 0 #>           secondaryFiles: [] #>           class: File #>           path: genome.ext #>         sjdbGTFtagExonParentTranscript: '' #>         limitBAMsortRAM: 0 #>         alignEndsType: Local #>         seedNoneLociPerWindow: 0 #>         rg_sample_id: rg_sample #>         sjdbGTFtagExonParentGene: '' #>         chimScoreMin: 0 #>         outSJfilterIntronMaxVsReadN: #>         - 0 #>         twopassMode: Basic #>         alignSplicedMateMapLmin: 0 #>         outSJfilterReads: All #>         outSAMprimaryFlag: OneBestScore #>         outSJfilterCountTotalMin: #>         - 3 #>         - 1 #>         - 1 #>         - 1 #>         outSAMorder: Paired #>         outSAMflagAND: 0 #>         chimScoreSeparation: 0 #>         alignSJoverhangMin: 0 #>         outFilterScoreMin: 0 #>         seedSearchStartLmax: 0 #>         scoreGapGCAG: 0 #>         scoreGenomicLengthLog2scale: 0 #>         outFilterIntronMotifs: None #>         outFilterMismatchNmax: 0 #>         reads: #>         - size: 0 #>           secondaryFiles: [] #>           class: File #>           metadata: #>             format: fastq #>             paired_end: '1' #>             seq_center: illumina #>           path: /test-data/mate_1.fastq.bz2 #>         scoreGap: 0 #>         outSJfilterOverhangMin: #>         - 30 #>         - 12 #>         - 12 #>         - 12 #>         outSAMflagOR: 0 #>         outSAMmode: Full #>         rg_library_id: '' #>         chimScoreJunctionNonGTAG: 0 #>         scoreInsOpen: 0 #>         clip3pAdapterSeq: #>         - clip3pAdapterSeq #>         chimScoreDropMax: 0 #>         outFilterType: Normal #>         scoreGapATAC: 0 #>         rg_platform: Ion Torrent PGM #>         clip3pAdapterMMp: #>         - 0 #>         sjdbGTFfeatureExon: '' #>         outQSconversionAdd: 0 #>         quantMode: TranscriptomeSAM #>         alignIntronMin: 0 #>         scoreInsBase: 0 #>         scoreGapNoncan: 0 #>         seedSearchLmax: 0 #>         outSJfilterDistToOtherSJmin: #>         - 0 #>         outFilterScoreMinOverLread: 0 #>         alignSJDBoverhangMin: 0 #>         limitOutSJcollapsed: 0 #>         winAnchorMultimapNmax: 0 #>         outFilterMismatchNoverLmax: 0 #>         rg_seq_center: '' #>         outSAMheaderHD: outSAMheaderHD #>         chimOutType: Within #>         quantTranscriptomeBan: IndelSoftclipSingleend #>         limitOutSJoneRead: 0 #>         alignTranscriptsPerWindowNmax: 0 #>         sjdbOverhang: ~ #>         outReadsUnmapped: Fastx #>         scoreStitchSJshift: 0 #>         seedPerWindowNmax: 0 #>         outSJfilterCountUniqueMin: #>         - 3 #>         - 1 #>         - 1 #>         - 1 #>         scoreDelOpen: 0 #>         sjdbGTFfile: #>         - path: /demo/test-data/chr20.gtf #>         clip3pNbases: #>         - 0 #>         - 3 #>         winBinNbits: 0 #>         sjdbScore: ~ #>         seedSearchStartLmaxOverLread: 0 #>         alignIntronMax: 0 #>         seedPerReadNmax: 0 #>         outFilterMismatchNoverReadLmax: 0 #>         winFlankNbins: 0 #>         sjdbGTFchrPrefix: chrPrefix #>         alignSoftClipAtReferenceEnds: 'Yes' #>         outSAMreadID: Standard #>         outSAMtype: BAM #>         chimJunctionOverhangMin: 0 #>         limitSjdbInsertNsj: 0 #>         outSAMmapqUnique: 0 #>     sbg:toolAuthor: Alexander Dobin/CSHL #>     sbg:createdOn: 1450911471 #>     sbg:categories: #>     - Alignment #>     sbg:contributors: #>     - ana_d #>     - bix-demo #>     - uros_sipetic #>     sbg:links: #>     - id: https://github.com/alexdobin/STAR #>       label: Homepage #>     - id: https://github.com/alexdobin/STAR/releases #>       label: Releases #>     - id: https://github.com/alexdobin/STAR/blob/master/doc/STARmanual.pdf #>       label: Manual #>     - id: https://groups.google.com/forum/#!forum/rna-star #>       label: Support #>     - id: http://www.ncbi.nlm.nih.gov/pubmed/23104886 #>       label: Publication #>     sbg:project: bix-demo/star-2-4-2a-demo #>     sbg:createdBy: bix-demo #>     sbg:toolkitVersion: 2.4.2a #>     sbg:id: sevenbridges/public-apps/star/4 #>     sbg:license: GNU General Public License v3.0 only #>     sbg:revision: 4 #>     sbg:cmdPreview: tar -xvf genome.ext && /opt/STAR --runThreadN 15  --readFilesCommand #>       bzcat  --sjdbGTFfile /demo/test-data/chr20.gtf  --sjdbGTFchrPrefix chrPrefix #>       --sjdbInsertSave Basic  --twopass1readsN 0  --chimOutType WithinBAM  --outSAMattrRGline #>       ID:1 CN:illumina PI:rg_mfl PL:Ion_Torrent_PGM PU:rg_platform_unit SM:rg_sample  --quantMode #>       TranscriptomeSAM --outFileNamePrefix ./mate_1.fastq.bz2.  --readFilesIn /test-data/mate_1.fastq.bz2  && #>       tar -vcf mate_1.fastq.bz2._STARgenome.tar ./mate_1.fastq.bz2._STARgenome  && #>       mv mate_1.fastq.bz2.Unmapped.out.mate1 mate_1.fastq.bz2.Unmapped.out.mate1.fastq #>     sbg:modifiedOn: 1462889222 #>     sbg:modifiedBy: ana_d #>     sbg:revisionsInfo: #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911471 #>       sbg:revision: 0 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911473 #>       sbg:revision: 1 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911475 #>       sbg:revision: 2 #>     - sbg:modifiedBy: uros_sipetic #>       sbg:modifiedOn: 1462878528 #>       sbg:revision: 3 #>     - sbg:modifiedBy: ana_d #>       sbg:modifiedOn: 1462889222 #>       sbg:revision: 4 #>     sbg:toolkit: STAR #>     id: sevenbridges/public-apps/star/4 #>     inputs: #>     - type: #>       - 'null' #>       - int #>       label: Flanking regions size #>       description: =log2(winFlank), where win Flank is the size of the left and right #>         flanking regions for each window (int>0). #>       streamable: no #>       id: '#winFlankNbins' #>       inputBinding: #>         position: 0 #>         prefix: --winFlankNbins #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Windows, Anchors, Binning #>       sbg:includeInPorts: yes #>       sbg:toolDefaultValue: '4' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Bin size #>       description: =log2(winBin), where winBin is the size of the bin for the windows/clustering, #>         each window will occupy an integer number of bins (int>0). #>       streamable: no #>       id: '#winBinNbits' #>       inputBinding: #>         position: 0 #>         prefix: --winBinNbits #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Windows, Anchors, Binning #>       sbg:includeInPorts: yes #>       sbg:toolDefaultValue: '16' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max loci anchors #>       description: Max number of loci anchors are allowed to map to (int>0). #>       streamable: no #>       id: '#winAnchorMultimapNmax' #>       inputBinding: #>         position: 0 #>         prefix: --winAnchorMultimapNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Windows, Anchors, Binning #>       sbg:toolDefaultValue: '50' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max bins between anchors #>       description: Max number of bins between two anchors that allows aggregation #>         of anchors into one window (int>0). #>       streamable: no #>       id: '#winAnchorDistNbins' #>       inputBinding: #>         position: 0 #>         prefix: --winAnchorDistNbins #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Windows, Anchors, Binning #>       sbg:toolDefaultValue: '9' #>       required: no #>     - type: #>       - 'null' #>       - name: twopassMode #>         symbols: #>         - None #>         - Basic #>         type: enum #>       label: Two-pass mode #>       description: '2-pass mapping mode. None: 1-pass mapping; Basic: basic 2-pass #>         mapping, with all 1st pass junctions inserted into the genome indices on the #>         fly.' #>       streamable: no #>       id: '#twopassMode' #>       inputBinding: #>         position: 0 #>         prefix: --twopassMode #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: 2-pass mapping #>       sbg:toolDefaultValue: None #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Reads to process in 1st step #>       description: 'Number of reads to process for the 1st step. 0: 1-step only, no #>         2nd pass; use very large number to map all reads in the first step (int>0).' #>       streamable: no #>       id: '#twopass1readsN' #>       sbg:category: 2-pass mapping #>       sbg:toolDefaultValue: '-1' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Extra alignment score #>       description: Extra alignment score for alignments that cross database junctions. #>       streamable: no #>       id: '#sjdbScore' #>       sbg:category: Splice junctions database #>       sbg:toolDefaultValue: '2' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: '\"Overhang\" length' #>       description: Length of the donor/acceptor sequence on each side of the junctions, #>         ideally = (mate_length - 1) (int >= 0), if int = 0, splice junction database #>         is not used. #>       streamable: no #>       id: '#sjdbOverhang' #>       sbg:category: Splice junctions database #>       sbg:toolDefaultValue: '100' #>       required: no #>     - type: #>       - 'null' #>       - name: sjdbInsertSave #>         symbols: #>         - Basic #>         - All #>         - None #>         type: enum #>       label: Save junction files #>       description: 'Which files to save when sjdb junctions are inserted on the fly #>         at the mapping step. None: not saving files at all; Basic: only small junction/transcript #>         files; All: all files including big Genome, SA and SAindex. These files are #>         output as archive.' #>       streamable: no #>       id: '#sjdbInsertSave' #>       sbg:category: Splice junctions database #>       sbg:toolDefaultValue: None #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Exons' parents name #>       description: Tag name to be used as exons' transcript-parents. #>       streamable: no #>       id: '#sjdbGTFtagExonParentTranscript' #>       sbg:category: Splice junctions database #>       sbg:toolDefaultValue: transcript_id #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Gene name #>       description: Tag name to be used as exons' gene-parents. #>       streamable: no #>       id: '#sjdbGTFtagExonParentGene' #>       sbg:category: Splice junctions database #>       sbg:toolDefaultValue: gene_id #>       required: no #>     - type: #>       - 'null' #>       - items: File #>         type: array #>       label: Splice junction file #>       description: Gene model annotations and/or known transcripts. No need to include #>         this input, except in case of using \"on the fly\" annotations. #>       streamable: no #>       id: '#sjdbGTFfile' #>       sbg:category: Basic #>       sbg:fileTypes: GTF, GFF, TXT #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Set exons feature #>       description: Feature type in GTF file to be used as exons for building transcripts. #>       streamable: no #>       id: '#sjdbGTFfeatureExon' #>       sbg:category: Splice junctions database #>       sbg:toolDefaultValue: exon #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Chromosome names #>       description: Prefix for chromosome names in a GTF file (e.g. 'chr' for using #>         ENSMEBL annotations with UCSC geneomes). #>       streamable: no #>       id: '#sjdbGTFchrPrefix' #>       sbg:category: Splice junctions database #>       sbg:toolDefaultValue: '-' #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Search start point normalized #>       description: seedSearchStartLmax normalized to read length (sum of mates' lengths #>         for paired-end reads). #>       streamable: no #>       id: '#seedSearchStartLmaxOverLread' #>       inputBinding: #>         position: 0 #>         prefix: --seedSearchStartLmaxOverLread #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '1.0' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Search start point #>       description: Defines the search start point through the read - the read is split #>         into pieces no longer than this value (int>0). #>       streamable: no #>       id: '#seedSearchStartLmax' #>       inputBinding: #>         position: 0 #>         prefix: --seedSearchStartLmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '50' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max seed length #>       description: Defines the maximum length of the seeds, if =0 max seed length #>         is infinite (int>=0). #>       streamable: no #>       id: '#seedSearchLmax' #>       inputBinding: #>         position: 0 #>         prefix: --seedSearchLmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max seeds per window #>       description: Max number of seeds per window (int>=0). #>       streamable: no #>       id: '#seedPerWindowNmax' #>       inputBinding: #>         position: 0 #>         prefix: --seedPerWindowNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '50' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max seeds per read #>       description: Max number of seeds per read (int>=0). #>       streamable: no #>       id: '#seedPerReadNmax' #>       inputBinding: #>         position: 0 #>         prefix: --seedPerReadNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '1000' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max one-seed loci per window #>       description: Max number of one seed loci per window (int>=0). #>       streamable: no #>       id: '#seedNoneLociPerWindow' #>       inputBinding: #>         position: 0 #>         prefix: --seedNoneLociPerWindow #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '10' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Filter pieces for stitching #>       description: Only pieces that map fewer than this value are utilized in the #>         stitching procedure (int>=0). #>       streamable: no #>       id: '#seedMultimapNmax' #>       inputBinding: #>         position: 0 #>         prefix: --seedMultimapNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '10000' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max score reduction #>       description: Maximum score reduction while searching for SJ boundaries in the #>         stitching step. #>       streamable: no #>       id: '#scoreStitchSJshift' #>       inputBinding: #>         position: 0 #>         prefix: --scoreStitchSJshift #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '1' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Insertion Open Penalty #>       description: Insertion open penalty. #>       streamable: no #>       id: '#scoreInsOpen' #>       inputBinding: #>         position: 0 #>         prefix: --scoreInsOpen #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-2' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Insertion extension penalty #>       description: Insertion extension penalty per base (in addition to --scoreInsOpen). #>       streamable: no #>       id: '#scoreInsBase' #>       inputBinding: #>         position: 0 #>         prefix: --scoreInsBase #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-2' #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Log scaled score #>       description: 'Extra score logarithmically scaled with genomic length of the #>         alignment: <int>*log2(genomicLength).' #>       streamable: no #>       id: '#scoreGenomicLengthLog2scale' #>       inputBinding: #>         position: 0 #>         prefix: --scoreGenomicLengthLog2scale #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-0.25' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Non-canonical gap open #>       description: Non-canonical gap open penalty (in addition to --scoreGap). #>       streamable: no #>       id: '#scoreGapNoncan' #>       inputBinding: #>         position: 0 #>         prefix: --scoreGapNoncan #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-8' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: GC/AG and CT/GC gap open #>       description: GC/AG and CT/GC gap open penalty (in addition to --scoreGap). #>       streamable: no #>       id: '#scoreGapGCAG' #>       inputBinding: #>         position: 0 #>         prefix: --scoreGapGCAG #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-4' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: AT/AC and GT/AT gap open #>       description: AT/AC and GT/AT gap open penalty (in addition to --scoreGap). #>       streamable: no #>       id: '#scoreGapATAC' #>       inputBinding: #>         position: 0 #>         prefix: --scoreGapATAC #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-8' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Gap open penalty #>       description: Gap open penalty. #>       streamable: no #>       id: '#scoreGap' #>       inputBinding: #>         position: 0 #>         prefix: --scoreGap #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Deletion open penalty #>       description: Deletion open penalty. #>       streamable: no #>       id: '#scoreDelOpen' #>       inputBinding: #>         position: 0 #>         prefix: --scoreDelOpen #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-2' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Deletion extension penalty #>       description: Deletion extension penalty per base (in addition to --scoreDelOpen). #>       streamable: no #>       id: '#scoreDelBase' #>       inputBinding: #>         position: 0 #>         prefix: --scoreDelBase #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-2' #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Sequencing center #>       description: Specify the sequencing center for RG line. #>       streamable: no #>       id: '#rg_seq_center' #>       sbg:category: Read group #>       sbg:toolDefaultValue: Inferred from metadata #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Sample ID #>       description: Specify the sample ID for RG line. #>       streamable: no #>       id: '#rg_sample_id' #>       sbg:category: Read group #>       sbg:toolDefaultValue: Inferred from metadata #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Platform unit ID #>       description: Specify the platform unit ID for RG line. #>       streamable: no #>       id: '#rg_platform_unit_id' #>       sbg:category: Read group #>       sbg:toolDefaultValue: Inferred from metadata #>       required: no #>     - type: #>       - 'null' #>       - name: rg_platform #>         symbols: #>         - LS 454 #>         - Helicos #>         - Illumina #>         - ABI SOLiD #>         - Ion Torrent PGM #>         - PacBio #>         type: enum #>       label: Platform #>       description: Specify the version of the technology that was used for sequencing #>         or assaying. #>       streamable: no #>       id: '#rg_platform' #>       sbg:category: Read group #>       sbg:toolDefaultValue: Inferred from metadata #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Median fragment length #>       description: Specify the median fragment length for RG line. #>       streamable: no #>       id: '#rg_mfl' #>       sbg:category: Read group #>       sbg:toolDefaultValue: Inferred from metadata #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Library ID #>       description: Specify the library ID for RG line. #>       streamable: no #>       id: '#rg_library_id' #>       sbg:category: Read group #>       sbg:toolDefaultValue: Inferred from metadata #>       required: no #>     - type: #>       - items: File #>         type: array #>       label: Read sequence #>       description: Read sequence. #>       streamable: no #>       id: '#reads' #>       inputBinding: #>         position: 10 #>         separate: yes #>         itemSeparator: ' ' #>         valueFrom: #>           engine: '#cwl-js-engine' #>           script: \"{\\t\\n  var list = [].concat($job.inputs.reads)\\n  \\n  var resp #>             = []\\n  \\n  if (list.length == 1){\\n    resp.push(list[0].path)\\n    \\n #>             \\ }else if (list.length == 2){    \\n    \\n    left = \\\"\\\"\\n    right = #>             \\\"\\\"\\n      \\n    for (index = 0; index < list.length; ++index) {\\n      \\n #>             \\     if (list[index].metadata != null){\\n        if (list[index].metadata.paired_end #>             == 1){\\n          left = list[index].path\\n        }else if (list[index].metadata.paired_end #>             == 2){\\n          right = list[index].path\\n        }\\n      }\\n    }\\n #>             \\   \\n    if (left != \\\"\\\" && right != \\\"\\\"){      \\n      resp.push(left)\\n #>             \\     resp.push(right)\\n    }\\n  }\\n  else if (list.length > 2){\\n    left #>             = []\\n    right = []\\n      \\n    for (index = 0; index < list.length; #>             ++index) {\\n      \\n      if (list[index].metadata != null){\\n        if #>             (list[index].metadata.paired_end == 1){\\n          left.push(list[index].path)\\n #>             \\       }else if (list[index].metadata.paired_end == 2){\\n          right.push(list[index].path)\\n #>             \\       }\\n      }\\n    }\\n    left_join = left.join()\\n    right_join #>             = right.join()\\n    if (left != [] && right != []){      \\n      resp.push(left_join)\\n #>             \\     resp.push(right_join)\\n    }\\t\\n  }\\n  \\n  if(resp.length > 0){ #>             \\   \\n    return \\\"--readFilesIn \\\".concat(resp.join(\\\" \\\"))\\n  }\\n}\" #>           class: Expression #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Basic #>       sbg:fileTypes: FASTA, FASTQ, FA, FQ, FASTQ.GZ, FQ.GZ, FASTQ.BZ2, FQ.BZ2 #>       sbg:x: 200.0 #>       sbg:y: 200.0 #>       sbg:includeInPorts: yes #>       required: yes #>     - type: #>       - 'null' #>       - name: readMatesLengthsIn #>         symbols: #>         - NotEqual #>         - Equal #>         type: enum #>       label: Reads lengths #>       description: Equal/Not equal - lengths of names, sequences, qualities for both #>         mates are the same/not the same. \"Not equal\" is safe in all situations. #>       streamable: no #>       id: '#readMatesLengthsIn' #>       inputBinding: #>         position: 0 #>         prefix: --readMatesLengthsIn #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Read parameters #>       sbg:toolDefaultValue: NotEqual #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Reads to map #>       description: Number of reads to map from the beginning of the file. #>       streamable: no #>       id: '#readMapNumber' #>       inputBinding: #>         position: 0 #>         prefix: --readMapNumber #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Read parameters #>       sbg:toolDefaultValue: '-1' #>       required: no #>     - type: #>       - 'null' #>       - name: quantTranscriptomeBan #>         symbols: #>         - IndelSoftclipSingleend #>         - Singleend #>         type: enum #>       label: Prohibit alignment type #>       description: 'Prohibit various alignment type. IndelSoftclipSingleend: prohibit #>         indels, soft clipping and single-end alignments - compatible with RSEM; Singleend: #>         prohibit single-end alignments.' #>       streamable: no #>       id: '#quantTranscriptomeBan' #>       inputBinding: #>         position: 0 #>         prefix: --quantTranscriptomeBan #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Quantification of Annotations #>       sbg:toolDefaultValue: IndelSoftclipSingleend #>       required: no #>     - type: #>       - 'null' #>       - name: quantMode #>         symbols: #>         - TranscriptomeSAM #>         - GeneCounts #>         type: enum #>       label: Quantification mode #>       description: Types of quantification requested. 'TranscriptomeSAM' option outputs #>         SAM/BAM alignments to transcriptome into a separate file. With 'GeneCounts' #>         option, STAR will count number of reads per gene while mapping. #>       streamable: no #>       id: '#quantMode' #>       sbg:category: Quantification of Annotations #>       sbg:toolDefaultValue: '-' #>       required: no #>     - type: #>       - 'null' #>       - name: outSortingType #>         symbols: #>         - Unsorted #>         - SortedByCoordinate #>         - Unsorted SortedByCoordinate #>         type: enum #>       label: Output sorting type #>       description: Type of output sorting. #>       streamable: no #>       id: '#outSortingType' #>       sbg:category: Output #>       sbg:toolDefaultValue: SortedByCoordinate #>       required: no #>     - type: #>       - 'null' #>       - name: outSJfilterReads #>         symbols: #>         - All #>         - Unique #>         type: enum #>       label: Collapsed junctions reads #>       description: 'Which reads to consider for collapsed splice junctions output. #>         All: all reads, unique- and multi-mappers; Unique: uniquely mapping reads #>         only.' #>       streamable: no #>       id: '#outSJfilterReads' #>       inputBinding: #>         position: 0 #>         prefix: --outSJfilterReads #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: 'Output filtering: splice junctions' #>       sbg:toolDefaultValue: All #>       required: no #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Min overhang SJ #>       description: Minimum overhang length for splice junctions on both sides for #>         each of the motifs. To set no output for desired motif, assign -1 to the corresponding #>         field. Does not apply to annotated junctions. #>       streamable: no #>       id: '#outSJfilterOverhangMin' #>       inputBinding: #>         position: 0 #>         prefix: --outSJfilterOverhangMin #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: 'Output filtering: splice junctions' #>       sbg:toolDefaultValue: 30 12 12 12 #>       required: no #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Max gap allowed #>       description: 'Maximum gap allowed for junctions supported by 1,2,3...N reads #>         (int >= 0) i.e. by default junctions supported by 1 read can have gaps <=50000b, #>         by 2 reads: <=100000b, by 3 reads: <=200000. By 4 or more reads: any gap <=alignIntronMax. #>         Does not apply to annotated junctions.' #>       streamable: no #>       id: '#outSJfilterIntronMaxVsReadN' #>       inputBinding: #>         position: 0 #>         prefix: --outSJfilterIntronMaxVsReadN #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: 'Output filtering: splice junctions' #>       sbg:toolDefaultValue: 50000 100000 200000 #>       required: no #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Min distance to other donor/acceptor #>       description: Minimum allowed distance to other junctions' donor/acceptor for #>         each of the motifs (int >= 0). Does not apply to annotated junctions. #>       streamable: no #>       id: '#outSJfilterDistToOtherSJmin' #>       inputBinding: #>         position: 0 #>         prefix: --outSJfilterDistToOtherSJmin #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: 'Output filtering: splice junctions' #>       sbg:toolDefaultValue: 10 0 5 10 #>       required: no #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Min unique count #>       description: Minimum uniquely mapping read count per junction for each of the #>         motifs. To set no output for desired motif, assign -1 to the corresponding #>         field. Junctions are output if one of --outSJfilterCountUniqueMin OR --outSJfilterCountTotalMin #>         conditions are satisfied. Does not apply to annotated junctions. #>       streamable: no #>       id: '#outSJfilterCountUniqueMin' #>       inputBinding: #>         position: 0 #>         prefix: --outSJfilterCountUniqueMin #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: 'Output filtering: splice junctions' #>       sbg:toolDefaultValue: 3 1 1 1 #>       required: no #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Min total count #>       description: Minimum total (multi-mapping+unique) read count per junction for #>         each of the motifs. To set no output for desired motif, assign -1 to the corresponding #>         field. Junctions are output if one of --outSJfilterCountUniqueMin OR --outSJfilterCountTotalMin #>         conditions are satisfied. Does not apply to annotated junctions. #>       streamable: no #>       id: '#outSJfilterCountTotalMin' #>       inputBinding: #>         position: 0 #>         prefix: --outSJfilterCountTotalMin #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: 'Output filtering: splice junctions' #>       sbg:toolDefaultValue: 3 1 1 1 #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMunmapped #>         symbols: #>         - None #>         - Within #>         type: enum #>       label: Write unmapped in SAM #>       description: 'Output of unmapped reads in the SAM format. None: no output Within: #>         output unmapped reads within the main SAM file (i.e. Aligned.out.sam).' #>       streamable: no #>       id: '#outSAMunmapped' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMunmapped #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: None #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMtype #>         symbols: #>         - SAM #>         - BAM #>         type: enum #>       label: Output format #>       description: Format of output alignments. #>       streamable: no #>       id: '#outSAMtype' #>       inputBinding: #>         position: 0 #>         separate: yes #>         valueFrom: #>           engine: '#cwl-js-engine' #>           script: |- #>             { #>               SAM_type = $job.inputs.outSAMtype #>               SORT_type = $job.inputs.outSortingType #>               if (SAM_type && SORT_type) { #>                 return \"--outSAMtype \".concat(SAM_type, \" \", SORT_type) #>               } #>             } #>           class: Expression #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: SAM #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMstrandField #>         symbols: #>         - None #>         - intronMotif #>         type: enum #>       label: Strand field flag #>       description: 'Cufflinks-like strand field flag. None: not used; intronMotif: #>         strand derived from the intron motif. Reads with inconsistent and/or non-canonical #>         introns are filtered out.' #>       streamable: no #>       id: '#outSAMstrandField' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMstrandField #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: None #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMreadID #>         symbols: #>         - Standard #>         - Number #>         type: enum #>       label: Read ID #>       description: 'Read ID record type. Standard: first word (until space) from the #>         FASTx read ID line, removing /1,/2 from the end; Number: read number (index) #>         in the FASTx file.' #>       streamable: no #>       id: '#outSAMreadID' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMreadID #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: Standard #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMprimaryFlag #>         symbols: #>         - OneBestScore #>         - AllBestScore #>         type: enum #>       label: Primary alignments #>       description: 'Which alignments are considered primary - all others will be marked #>         with 0x100 bit in the FLAG. OneBestScore: only one alignment with the best #>         score is primary; AllBestScore: all alignments with the best score are primary.' #>       streamable: no #>       id: '#outSAMprimaryFlag' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMprimaryFlag #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: OneBestScore #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMorder #>         symbols: #>         - Paired #>         - PairedKeepInputOrder #>         type: enum #>       label: Sorting in SAM #>       description: 'Type of sorting for the SAM output. Paired: one mate after the #>         other for all paired alignments; PairedKeepInputOrder: one mate after the #>         other for all paired alignments, the order is kept the same as in the input #>         FASTQ files.' #>       streamable: no #>       id: '#outSAMorder' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMorder #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: Paired #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMmode #>         symbols: #>         - Full #>         - NoQS #>         type: enum #>       label: SAM mode #>       description: 'Mode of SAM output. Full: full SAM output; NoQS: full SAM but #>         without quality scores.' #>       streamable: no #>       id: '#outSAMmode' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMmode #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: Full #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: MAPQ value #>       description: MAPQ value for unique mappers (0 to 255). #>       streamable: no #>       id: '#outSAMmapqUnique' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMmapqUnique #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: '255' #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: SAM header @PG #>       description: Extra @PG (software) line of the SAM header (in addition to STAR). #>       streamable: no #>       id: '#outSAMheaderPG' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMheaderPG #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: '-' #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: SAM header @HD #>       description: '@HD (header) line of the SAM header.' #>       streamable: no #>       id: '#outSAMheaderHD' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMheaderHD #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: '-' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: OR SAM flag #>       description: Set specific bits of the SAM FLAG. #>       streamable: no #>       id: '#outSAMflagOR' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMflagOR #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: AND SAM flag #>       description: Set specific bits of the SAM FLAG. #>       streamable: no #>       id: '#outSAMflagAND' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMflagAND #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: '65535' #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMattributes #>         symbols: #>         - Standard #>         - NH #>         - All #>         - None #>         type: enum #>       label: SAM attributes #>       description: 'Desired SAM attributes, in the order desired for the output SAM. #>         NH: any combination in any order; Standard: NH HI AS nM; All: NH HI AS nM #>         NM MD jM jI; None: no attributes.' #>       streamable: no #>       id: '#outSAMattributes' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMattributes #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: Standard #>       required: no #>     - type: #>       - 'null' #>       - name: outReadsUnmapped #>         symbols: #>         - None #>         - Fastx #>         type: enum #>       label: Output unmapped reads #>       description: 'Output of unmapped reads (besides SAM). None: no output; Fastx: #>         output in separate fasta/fastq files, Unmapped.out.mate1/2.' #>       streamable: no #>       id: '#outReadsUnmapped' #>       inputBinding: #>         position: 0 #>         prefix: --outReadsUnmapped #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: None #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Quality conversion #>       description: Add this number to the quality score (e.g. to convert from Illumina #>         to Sanger, use -31). #>       streamable: no #>       id: '#outQSconversionAdd' #>       inputBinding: #>         position: 0 #>         prefix: --outQSconversionAdd #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - name: outFilterType #>         symbols: #>         - Normal #>         - BySJout #>         type: enum #>       label: Filtering type #>       description: 'Type of filtering. Normal: standard filtering using only current #>         alignment; BySJout: keep only those reads that contain junctions that passed #>         filtering into SJ.out.tab.' #>       streamable: no #>       id: '#outFilterType' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterType #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: Normal #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Min score normalized #>       description: '''Minimum score'' normalized to read length (sum of mates'' lengths #>         for paired-end reads).' #>       streamable: no #>       id: '#outFilterScoreMinOverLread' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterScoreMinOverLread #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '0.66' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min score #>       description: Alignment will be output only if its score is higher than this #>         value. #>       streamable: no #>       id: '#outFilterScoreMin' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterScoreMin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Multimapping score range #>       description: The score range below the maximum score for multimapping alignments. #>       streamable: no #>       id: '#outFilterMultimapScoreRange' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterMultimapScoreRange #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '1' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max number of mappings #>       description: Read alignments will be output only if the read maps fewer than #>         this value, otherwise no alignments will be output. #>       streamable: no #>       id: '#outFilterMultimapNmax' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterMultimapNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '10' #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Mismatches to *read* length #>       description: Alignment will be output only if its ratio of mismatches to *read* #>         length is less than this value. #>       streamable: no #>       id: '#outFilterMismatchNoverReadLmax' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterMismatchNoverReadLmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '1' #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Mismatches to *mapped* length #>       description: Alignment will be output only if its ratio of mismatches to *mapped* #>         length is less than this value. #>       streamable: no #>       id: '#outFilterMismatchNoverLmax' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterMismatchNoverLmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '0.3' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max number of mismatches #>       description: Alignment will be output only if it has fewer mismatches than this #>         value. #>       streamable: no #>       id: '#outFilterMismatchNmax' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterMismatchNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '10' #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Min matched bases normalized #>       description: '''Minimum matched bases'' normalized to read length (sum of mates #>         lengths for paired-end reads).' #>       streamable: no #>       id: '#outFilterMatchNminOverLread' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterMatchNminOverLread #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '0.66' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min matched bases #>       description: Alignment will be output only if the number of matched bases is #>         higher than this value. #>       streamable: no #>       id: '#outFilterMatchNmin' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterMatchNmin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - name: outFilterIntronMotifs #>         symbols: #>         - None #>         - RemoveNoncanonical #>         - RemoveNoncanonicalUnannotated #>         type: enum #>       label: Motifs filtering #>       description: 'Filter alignment using their motifs. None: no filtering; RemoveNoncanonical: #>         filter out alignments that contain non-canonical junctions; RemoveNoncanonicalUnannotated: #>         filter out alignments that contain non-canonical unannotated junctions when #>         using annotated splice junctions database. The annotated non-canonical junctions #>         will be kept.' #>       streamable: no #>       id: '#outFilterIntronMotifs' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterIntronMotifs #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: None #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max insert junctions #>       description: Maximum number of junction to be inserted to the genome on the #>         fly at the mapping stage, including those from annotations and those detected #>         in the 1st step of the 2-pass run. #>       streamable: no #>       id: '#limitSjdbInsertNsj' #>       inputBinding: #>         position: 0 #>         prefix: --limitSjdbInsertNsj #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Limits #>       sbg:toolDefaultValue: '1000000' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Junctions max number #>       description: Max number of junctions for one read (including all multi-mappers). #>       streamable: no #>       id: '#limitOutSJoneRead' #>       inputBinding: #>         position: 0 #>         prefix: --limitOutSJoneRead #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Limits #>       sbg:toolDefaultValue: '1000' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Collapsed junctions max number #>       description: Max number of collapsed junctions. #>       streamable: no #>       id: '#limitOutSJcollapsed' #>       inputBinding: #>         position: 0 #>         prefix: --limitOutSJcollapsed #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Limits #>       sbg:toolDefaultValue: '1000000' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Limit BAM sorting memory #>       description: Maximum available RAM for sorting BAM. If set to 0, it will be #>         set to the genome index size. #>       streamable: no #>       id: '#limitBAMsortRAM' #>       inputBinding: #>         position: 0 #>         prefix: --limitBAMsortRAM #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Limits #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Genome dir name #>       description: Name of the directory which contains genome files (when genome.tar #>         is uncompressed). #>       streamable: no #>       id: '#genomeDirName' #>       inputBinding: #>         position: 0 #>         prefix: --genomeDir #>         separate: yes #>         valueFrom: #>           engine: '#cwl-js-engine' #>           script: $job.inputs.genomeDirName || \"genomeDir\" #>           class: Expression #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Basic #>       sbg:toolDefaultValue: genomeDir #>       required: no #>     - type: #>       - File #>       label: Genome files #>       description: Genome files created using STAR Genome Generate. #>       streamable: no #>       id: '#genome' #>       sbg:category: Basic #>       sbg:fileTypes: TAR #>       required: yes #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Clip 5p bases #>       description: Number of bases to clip from 5p of each mate. In case only one #>         value is given, it will be assumed the same for both mates. #>       streamable: no #>       id: '#clip5pNbases' #>       inputBinding: #>         position: 0 #>         prefix: --clip5pNbases #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Read parameters #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Clip 3p bases #>       description: Number of bases to clip from 3p of each mate. In case only one #>         value is given, it will be assumed the same for both mates. #>       streamable: no #>       id: '#clip3pNbases' #>       inputBinding: #>         position: 0 #>         prefix: --clip3pNbases #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Read parameters #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Clip 3p after adapter seq. #>       description: Number of bases to clip from 3p of each mate after the adapter #>         clipping. In case only one value is given, it will be assumed the same for #>         both mates. #>       streamable: no #>       id: '#clip3pAfterAdapterNbases' #>       inputBinding: #>         position: 0 #>         prefix: --clip3pAfterAdapterNbases #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Read parameters #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - items: string #>         type: array #>       label: Clip 3p adapter sequence #>       description: Adapter sequence to clip from 3p of each mate. In case only one #>         value is given, it will be assumed the same for both mates. #>       streamable: no #>       id: '#clip3pAdapterSeq' #>       inputBinding: #>         position: 0 #>         prefix: --clip3pAdapterSeq #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Read parameters #>       sbg:toolDefaultValue: '-' #>       required: no #>     - type: #>       - 'null' #>       - items: float #>         type: array #>       label: Max mismatches proportions #>       description: Max proportion of mismatches for 3p adapter clipping for each mate. #>         In case only one value is given, it will be assumed the same for both mates. #>       streamable: no #>       id: '#clip3pAdapterMMp' #>       inputBinding: #>         position: 0 #>         prefix: --clip3pAdapterMMp #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Read parameters #>       sbg:toolDefaultValue: '0.1' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min segment length #>       description: Minimum length of chimeric segment length, if =0, no chimeric output #>         (int>=0). #>       streamable: no #>       id: '#chimSegmentMin' #>       inputBinding: #>         position: 0 #>         prefix: --chimSegmentMin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Chimeric Alignments #>       sbg:toolDefaultValue: '15' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min separation score #>       description: Minimum difference (separation) between the best chimeric score #>         and the next one (int>=0). #>       streamable: no #>       id: '#chimScoreSeparation' #>       inputBinding: #>         position: 0 #>         prefix: --chimScoreSeparation #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Chimeric Alignments #>       sbg:includeInPorts: no #>       sbg:toolDefaultValue: '10' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min total score #>       description: Minimum total (summed) score of the chimeric segments (int>=0). #>       streamable: no #>       id: '#chimScoreMin' #>       inputBinding: #>         position: 0 #>         prefix: --chimScoreMin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Chimeric Alignments #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Non-GT/AG penalty #>       description: Penalty for a non-GT/AG chimeric junction. #>       streamable: no #>       id: '#chimScoreJunctionNonGTAG' #>       inputBinding: #>         position: 0 #>         prefix: --chimScoreJunctionNonGTAG #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Chimeric Alignments #>       sbg:toolDefaultValue: '-1' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max drop score #>       description: Max drop (difference) of chimeric score (the sum of scores of all #>         chimeric segements) from the read length (int>=0). #>       streamable: no #>       id: '#chimScoreDropMax' #>       inputBinding: #>         position: 0 #>         prefix: --chimScoreDropMax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Chimeric Alignments #>       sbg:toolDefaultValue: '20' #>       required: no #>     - type: #>       - 'null' #>       - name: chimOutType #>         symbols: #>         - SeparateSAMold #>         - Within #>         type: enum #>       label: Chimeric output type #>       description: 'Type of chimeric output. SeparateSAMold: output old SAM into separate #>         Chimeric.out.sam file; Within: output into main aligned SAM/BAM files.' #>       streamable: no #>       id: '#chimOutType' #>       sbg:category: Chimeric Alignments #>       sbg:toolDefaultValue: SeparateSAMold #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min junction overhang #>       description: Minimum overhang for a chimeric junction (int>=0). #>       streamable: no #>       id: '#chimJunctionOverhangMin' #>       inputBinding: #>         position: 0 #>         prefix: --chimJunctionOverhangMin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Chimeric Alignments #>       sbg:toolDefaultValue: '20' #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Max windows per read #>       description: Max number of windows per read (int>0). #>       streamable: no #>       id: '#alignWindowsPerReadNmax' #>       inputBinding: #>         position: 0 #>         prefix: --alignWindowsPerReadNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '10000' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max transcripts per window #>       description: Max number of transcripts per window (int>0). #>       streamable: no #>       id: '#alignTranscriptsPerWindowNmax' #>       inputBinding: #>         position: 0 #>         prefix: --alignTranscriptsPerWindowNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '100' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max transcripts per read #>       description: Max number of different alignments per read to consider (int>0). #>       streamable: no #>       id: '#alignTranscriptsPerReadNmax' #>       inputBinding: #>         position: 0 #>         prefix: --alignTranscriptsPerReadNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '10000' #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Min mapped length normalized #>       description: alignSplicedMateMapLmin normalized to mate length (float>0). #>       streamable: no #>       id: '#alignSplicedMateMapLminOverLmate' #>       inputBinding: #>         position: 0 #>         prefix: --alignSplicedMateMapLminOverLmate #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '0.66' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min mapped length #>       description: Minimum mapped length for a read mate that is spliced (int>0). #>       streamable: no #>       id: '#alignSplicedMateMapLmin' #>       inputBinding: #>         position: 0 #>         prefix: --alignSplicedMateMapLmin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - name: alignSoftClipAtReferenceEnds #>         symbols: #>         - 'Yes' #>         - 'No' #>         type: enum #>       label: Soft clipping #>       description: 'Option which allows soft clipping of alignments at the reference #>         (chromosome) ends. Can be disabled for compatibility with Cufflinks/Cuffmerge. #>         Yes: Enables soft clipping; No: Disables soft clipping.' #>       streamable: no #>       id: '#alignSoftClipAtReferenceEnds' #>       inputBinding: #>         position: 0 #>         prefix: --alignSoftClipAtReferenceEnds #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: 'Yes' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min overhang #>       description: Minimum overhang (i.e. block size) for spliced alignments (int>0). #>       streamable: no #>       id: '#alignSJoverhangMin' #>       inputBinding: #>         position: 0 #>         prefix: --alignSJoverhangMin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '5' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: 'Min overhang: annotated' #>       description: Minimum overhang (i.e. block size) for annotated (sjdb) spliced #>         alignments (int>0). #>       streamable: no #>       id: '#alignSJDBoverhangMin' #>       inputBinding: #>         position: 0 #>         prefix: --alignSJDBoverhangMin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:includeInPorts: no #>       sbg:toolDefaultValue: '3' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max mates gap #>       description: Maximum gap between two mates, if 0, max intron gap will be determined #>         by (2^winBinNbits)*winAnchorDistNbins. #>       streamable: no #>       id: '#alignMatesGapMax' #>       inputBinding: #>         position: 0 #>         prefix: --alignMatesGapMax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min intron size #>       description: 'Minimum intron size: genomic gap is considered intron if its length #>         >= alignIntronMin, otherwise it is considered Deletion (int>=0).' #>       streamable: no #>       id: '#alignIntronMin' #>       inputBinding: #>         position: 0 #>         prefix: --alignIntronMin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '21' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max intron size #>       description: Maximum intron size, if 0, max intron size will be determined by #>         (2^winBinNbits)*winAnchorDistNbins. #>       streamable: no #>       id: '#alignIntronMax' #>       inputBinding: #>         position: 0 #>         prefix: --alignIntronMax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - name: alignEndsType #>         symbols: #>         - Local #>         - EndToEnd #>         type: enum #>       label: Alignment type #>       description: 'Type of read ends alignment. Local: standard local alignment with #>         soft-clipping allowed. EndToEnd: force end to end read alignment, do not soft-clip.' #>       streamable: no #>       id: '#alignEndsType' #>       inputBinding: #>         position: 0 #>         prefix: --alignEndsType #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: Local #>       required: no #>     outputs: #>     - type: #>       - 'null' #>       - items: File #>         type: array #>       label: Unmapped reads #>       description: Output of unmapped reads. #>       streamable: no #>       id: '#unmapped_reads' #>       outputBinding: #>         glob: '*Unmapped.out*' #>       sbg:fileTypes: FASTQ #>     - type: #>       - 'null' #>       - File #>       label: Transcriptome alignments #>       description: Alignments translated into transcript coordinates. #>       streamable: no #>       id: '#transcriptome_aligned_reads' #>       outputBinding: #>         glob: '*Transcriptome*' #>       sbg:fileTypes: BAM #>     - type: #>       - 'null' #>       - File #>       label: Splice junctions #>       description: High confidence collapsed splice junctions in tab-delimited format. #>         Only junctions supported by uniquely mapping reads are reported. #>       streamable: no #>       id: '#splice_junctions' #>       outputBinding: #>         glob: '*SJ.out.tab' #>       sbg:fileTypes: TAB #>     - type: #>       - 'null' #>       - File #>       label: Reads per gene #>       description: File with number of reads per gene. A read is counted if it overlaps #>         (1nt or more) one and only one gene. #>       streamable: no #>       id: '#reads_per_gene' #>       outputBinding: #>         glob: '*ReadsPerGene*' #>       sbg:fileTypes: TAB #>     - type: #>       - 'null' #>       - items: File #>         type: array #>       label: Log files #>       description: Log files produced during alignment. #>       streamable: no #>       id: '#log_files' #>       outputBinding: #>         glob: '*Log*.out' #>       sbg:fileTypes: OUT #>     - type: #>       - 'null' #>       - File #>       label: Intermediate genome files #>       description: Archive with genome files produced when annotations are included #>         on the fly (in the mapping step). #>       streamable: no #>       id: '#intermediate_genome' #>       outputBinding: #>         glob: '*_STARgenome.tar' #>       sbg:fileTypes: TAR #>     - type: #>       - 'null' #>       - File #>       label: Chimeric junctions #>       description: If chimSegmentMin in 'Chimeric Alignments' section is set to 0, #>         'Chimeric Junctions' won't be output. #>       streamable: no #>       id: '#chimeric_junctions' #>       outputBinding: #>         glob: '*Chimeric.out.junction' #>       sbg:fileTypes: JUNCTION #>     - type: #>       - 'null' #>       - File #>       label: Chimeric alignments #>       description: Aligned Chimeric sequences SAM - if chimSegmentMin = 0, no Chimeric #>         Alignment SAM and Chimeric Junctions outputs. #>       streamable: no #>       id: '#chimeric_alignments' #>       outputBinding: #>         glob: '*.Chimeric.out.sam' #>       sbg:fileTypes: SAM #>     - type: #>       - 'null' #>       - File #>       label: Aligned SAM/BAM #>       description: Aligned sequence in SAM/BAM format. #>       streamable: no #>       id: '#aligned_reads' #>       outputBinding: #>         glob: #>           engine: '#cwl-js-engine' #>           script: |- #>             { #>               if ($job.inputs.outSortingType == 'SortedByCoordinate') { #>                 sort_name = '.sortedByCoord' #>               } #>               else { #>                 sort_name = '' #>               } #>               if ($job.inputs.outSAMtype == 'BAM') { #>                 sam_name = \"*.Aligned\".concat( sort_name, '.out.bam') #>               } #>               else { #>                 sam_name = \"*.Aligned.out.sam\" #>               } #>               return sam_name #>             } #>           class: Expression #>       sbg:fileTypes: SAM, BAM #>     requirements: #>     - class: ExpressionEngineRequirement #>       id: '#cwl-js-engine' #>       requirements: #>       - class: DockerRequirement #>         dockerPull: rabix/js-engine #>     hints: #>     - class: DockerRequirement #>       dockerPull: images.sbgenomics.com/ana_d/star:2.4.2a #>       dockerImageId: a4b0ad2c3cae #>     - class: sbg:MemRequirement #>       value: 60000 #>     - class: sbg:CPURequirement #>       value: 15 #>     label: STAR #>     description: STAR is an ultrafast universal RNA-seq aligner. It has very high #>       mapping speed, accurate alignment of contiguous and spliced reads, detection #>       of polyA-tails, non-canonical splices and chimeric (fusion) junctions. It works #>       with reads starting from lengths ~15 bases up to ~300 bases. In case of having #>       longer reads, use of STAR Long is recommended. #>     class: CommandLineTool #>     baseCommand: #>     - tar #>     - -xvf #>     - class: Expression #>       script: $job.inputs.genome.path #>       engine: '#cwl-js-engine' #>     - '&&' #>     - /opt/STAR #>     - --runThreadN #>     - class: Expression #>       script: |- #>         { #>           return $job.allocatedResources.cpu #>         } #>       engine: '#cwl-js-engine' #>     arguments: #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: |- #>           { #>             file = [].concat($job.inputs.reads)[0].path #>             extension = /(?:\\.([^.]+))?$/.exec(file)[1] #>             if (extension == \"gz\") { #>               return \"--readFilesCommand zcat\" #>             } else if (extension == \"bz2\") { #>               return \"--readFilesCommand bzcat\" #>             } #>           } #>         class: Expression #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\t\\n  var sjFormat = \\\"False\\\"\\n  var gtfgffFormat = \\\"False\\\"\\n #>           \\ var list = $job.inputs.sjdbGTFfile\\n  var paths_list = []\\n  var joined_paths #>           = \\\"\\\"\\n  \\n  if (list) {\\n    list.forEach(function(f){return paths_list.push(f.path)})\\n #>           \\   joined_paths = paths_list.join(\\\" \\\")\\n\\n\\n    paths_list.forEach(function(f){\\n #>           \\     ext = f.replace(/^.*\\\\./, '')\\n      if (ext == \\\"gff\\\" || ext == #>           \\\"gtf\\\") {\\n        gtfgffFormat = \\\"True\\\"\\n        return gtfgffFormat\\n #>           \\     }\\n      if (ext == \\\"txt\\\") {\\n        sjFormat = \\\"True\\\"\\n        return #>           sjFormat\\n      }\\n    })\\n\\n    if ($job.inputs.sjdbGTFfile && $job.inputs.sjdbInsertSave #>           != \\\"None\\\") {\\n      if (sjFormat == \\\"True\\\") {\\n        return \\\"--sjdbFileChrStartEnd #>           \\\".concat(joined_paths)\\n      }\\n      else if (gtfgffFormat == \\\"True\\\") #>           {\\n        return \\\"--sjdbGTFfile \\\".concat(joined_paths)\\n      }\\n    }\\n #>           \\ }\\n}\" #>         class: Expression #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  a = b = c = d = e = f = g = []\\n  if ($job.inputs.sjdbGTFchrPrefix) #>           {\\n    a = [\\\"--sjdbGTFchrPrefix\\\", $job.inputs.sjdbGTFchrPrefix]\\n  }\\n #>           \\ if ($job.inputs.sjdbGTFfeatureExon) {\\n    b = [\\\"--sjdbGTFfeatureExon\\\", #>           $job.inputs.sjdbGTFfeatureExon]\\n  }\\n  if ($job.inputs.sjdbGTFtagExonParentTranscript) #>           {\\n    c = [\\\"--sjdbGTFtagExonParentTranscript\\\", $job.inputs.sjdbGTFtagExonParentTranscript]\\n #>           \\ }\\n  if ($job.inputs.sjdbGTFtagExonParentGene) {\\n    d = [\\\"--sjdbGTFtagExonParentGene\\\", #>           $job.inputs.sjdbGTFtagExonParentGene]\\n  }\\n  if ($job.inputs.sjdbOverhang) #>           {\\n    e = [\\\"--sjdbOverhang\\\", $job.inputs.sjdbOverhang]\\n  }\\n  if ($job.inputs.sjdbScore) #>           {\\n    f = [\\\"--sjdbScore\\\", $job.inputs.sjdbScore]\\n  }\\n  if ($job.inputs.sjdbInsertSave) #>           {\\n    g = [\\\"--sjdbInsertSave\\\", $job.inputs.sjdbInsertSave]\\n  }\\n  \\n #>           \\ \\n  \\n  if ($job.inputs.sjdbInsertSave != \\\"None\\\" && $job.inputs.sjdbGTFfile) #>           {\\n    new_list = a.concat(b, c, d, e, f, g)\\n    return new_list.join(\\\" #>           \\\")\\n  }\\n}\" #>         class: Expression #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: |- #>           { #>             if ($job.inputs.twopassMode == \"Basic\") { #>               return \"--twopass1readsN \".concat($job.inputs.twopass1readsN) #>             } #>           } #>         class: Expression #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: |- #>           { #>             if ($job.inputs.chimOutType == \"Within\") { #>               return \"--chimOutType \".concat(\"Within\", $job.inputs.outSAMtype) #>             } #>             else { #>               return \"--chimOutType SeparateSAMold\" #>             } #>           } #>         class: Expression #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  var param_list = []\\n  \\n  function add_param(key, value){\\n #>           \\   if (value == \\\"\\\") {\\n      return\\n    }\\n    else {\\n      return #>           param_list.push(key.concat(\\\":\\\", value))\\n    }\\n  }\\n  \\n  add_param('ID', #>           \\\"1\\\")\\n  if ($job.inputs.rg_seq_center) {\\n    add_param('CN', $job.inputs.rg_seq_center)\\n #>           \\ } else if ([].concat($job.inputs.reads)[0].metadata.seq_center) {\\n    add_param('CN', #>           [].concat($job.inputs.reads)[0].metadata.seq_center)\\n  }\\n  if ($job.inputs.rg_library_id) #>           {\\n    add_param('LB', $job.inputs.rg_library_id)\\n  } else if ([].concat($job.inputs.reads)[0].metadata.library_id) #>           {\\n    add_param('LB', [].concat($job.inputs.reads)[0].metadata.library_id)\\n #>           \\ }\\n  if ($job.inputs.rg_mfl) {\\n    add_param('PI', $job.inputs.rg_mfl)\\n #>           \\ } else if ([].concat($job.inputs.reads)[0].metadata.median_fragment_length) #>           {\\n    add_param('PI', [].concat($job.inputs.reads)[0].metadata.median_fragment_length)\\n #>           \\ }\\n  if ($job.inputs.rg_platform) {\\n    add_param('PL', $job.inputs.rg_platform.replace(/ #>           /g,\\\"_\\\"))\\n  } else if ([].concat($job.inputs.reads)[0].metadata.platform) #>           {\\n    add_param('PL', [].concat($job.inputs.reads)[0].metadata.platform.replace(/ #>           /g,\\\"_\\\"))\\n  }\\n  if ($job.inputs.rg_platform_unit_id) {\\n    add_param('PU', #>           $job.inputs.rg_platform_unit_id)\\n  } else if ([].concat($job.inputs.reads)[0].metadata.platform_unit_id) #>           {\\n    add_param('PU', [].concat($job.inputs.reads)[0].metadata.platform_unit_id)\\n #>           \\ }\\n  if ($job.inputs.rg_sample_id) {\\n    add_param('SM', $job.inputs.rg_sample_id)\\n #>           \\ } else if ([].concat($job.inputs.reads)[0].metadata.sample_id) {\\n    add_param('SM', #>           [].concat($job.inputs.reads)[0].metadata.sample_id)\\n  }\\n  return \\\"--outSAMattrRGline #>           \\\".concat(param_list.join(\\\" \\\"))\\n}\" #>         class: Expression #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: |- #>           { #>             if ($job.inputs.sjdbGTFfile && $job.inputs.quantMode) { #>               return \"--quantMode \".concat($job.inputs.quantMode) #>             } #>           } #>         class: Expression #>     - position: 100 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  function sharedStart(array){\\n  var A= array.concat().sort(), #>           \\n      a1= A[0], a2= A[A.length-1], L= a1.length, i= 0;\\n  while(i<L && #>           a1.charAt(i)=== a2.charAt(i)) i++;\\n  return a1.substring(0, i);\\n  }\\n #>           \\ path_list = []\\n  arr = [].concat($job.inputs.reads)\\n  arr.forEach(function(f){return #>           path_list.push(f.path.replace(/\\\\\\\\/g,'/').replace( /.*\\\\//, '' ))})\\n  common_prefix #>           = sharedStart(path_list)\\n  intermediate = common_prefix.replace( /\\\\-$|\\\\_$|\\\\.$/, #>           '' ).concat(\\\"._STARgenome\\\")\\n  source = \\\"./\\\".concat(intermediate)\\n #>           \\ destination = intermediate.concat(\\\".tar\\\")\\n  if ($job.inputs.sjdbGTFfile #>           && $job.inputs.sjdbInsertSave && $job.inputs.sjdbInsertSave != \\\"None\\\") #>           {\\n    return \\\"&& tar -vcf \\\".concat(destination, \\\" \\\", source)\\n  }\\n}\" #>         class: Expression #>     - position: 0 #>       prefix: --outFileNamePrefix #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  function sharedStart(array){\\n  var A= array.concat().sort(), #>           \\n      a1= A[0], a2= A[A.length-1], L= a1.length, i= 0;\\n  while(i<L && #>           a1.charAt(i)=== a2.charAt(i)) i++;\\n  return a1.substring(0, i);\\n  }\\n #>           \\ path_list = []\\n  arr = [].concat($job.inputs.reads)\\n  arr.forEach(function(f){return #>           path_list.push(f.path.replace(/\\\\\\\\/g,'/').replace( /.*\\\\//, '' ))})\\n  common_prefix #>           = sharedStart(path_list)\\n  return \\\"./\\\".concat(common_prefix.replace( #>           /\\\\-$|\\\\_$|\\\\.$/, '' ), \\\".\\\")\\n}\" #>         class: Expression #>     - position: 101 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  function sharedStart(array){\\n  var A= array.concat().sort(), #>           \\n      a1= A[0], a2= A[A.length-1], L= a1.length, i= 0;\\n  while(i<L && #>           a1.charAt(i)=== a2.charAt(i)) i++;\\n  return a1.substring(0, i);\\n  }\\n #>           \\ path_list = []\\n  arr = [].concat($job.inputs.reads)\\n  arr.forEach(function(f){return #>           path_list.push(f.path.replace(/\\\\\\\\/g,'/').replace( /.*\\\\//, '' ))})\\n  common_prefix #>           = sharedStart(path_list)\\n  mate1 = common_prefix.replace( /\\\\-$|\\\\_$|\\\\.$/, #>           '' ).concat(\\\".Unmapped.out.mate1\\\")\\n  mate2 = common_prefix.replace( /\\\\-$|\\\\_$|\\\\.$/, #>           '' ).concat(\\\".Unmapped.out.mate2\\\")\\n  mate1fq = mate1.concat(\\\".fastq\\\")\\n #>           \\ mate2fq = mate2.concat(\\\".fastq\\\")\\n  if ($job.inputs.outReadsUnmapped #>           == \\\"Fastx\\\" && arr.length > 1) {\\n    return \\\"&& mv \\\".concat(mate1, \\\" #>           \\\", mate1fq, \\\" && mv \\\", mate2, \\\" \\\", mate2fq)\\n  }\\n  else if ($job.inputs.outReadsUnmapped #>           == \\\"Fastx\\\" && arr.length == 1) {\\n    return \\\"&& mv \\\".concat(mate1, #>           \\\" \\\", mate1fq)\\n  }\\n}\" #>         class: Expression #>     stdin: '' #>     stdout: '' #>     successCodes: [] #>     temporaryFailCodes: [] #>     x: 624.0 #>     'y': 323 #>   sbg:x: 700.0 #>   sbg:y: 200.0 #> sbg:canvas_zoom: 0.6 #> sbg:canvas_y: -16 #> sbg:canvas_x: -41 #>  f1$input_id() #> [1] \"#reads\"                          \"#sjdbGTFfile\"                    #> [3] \"#fastq\"                          \"#genomeFastaFiles\"               #> [5] \"#sjdbGTFtagExonParentTranscript\" \"#sjdbGTFtagExonParentGene\"       #> [7] \"#winAnchorMultimapNmax\"          \"#winAnchorDistNbins\"             # batch f1$set_batch(\"sjdbGTFfile\", c(\"metadata.sample_id\", \"metadata.library_id\")) #> criteria provided, convert type from ITEM to CRITERIA #> sbg:validationErrors: [] #> sbg:sbgMaintained: no #> sbg:latestRevision: 2 #> sbg:toolAuthor: Seven Bridges Genomics #> sbg:createdOn: 1463601910 #> sbg:categories: #> - Alignment #> - RNA #> sbg:contributors: #> - tengfei #> sbg:project: tengfei/quickstart #> sbg:createdBy: tengfei #> sbg:toolkitVersion: 2.4.2a #> sbg:id: tengfei/quickstart/rna-seq-alignment-star-demo/2 #> sbg:license: Apache License 2.0 #> sbg:revision: 2 #> sbg:modifiedOn: 1463601974 #> sbg:modifiedBy: tengfei #> sbg:revisionsInfo: #> - sbg:modifiedBy: tengfei #>   sbg:modifiedOn: 1463601910 #>   sbg:revision: 0 #> - sbg:modifiedBy: tengfei #>   sbg:modifiedOn: 1463601952 #>   sbg:revision: 1 #> - sbg:modifiedBy: tengfei #>   sbg:modifiedOn: 1463601974 #>   sbg:revision: 2 #> sbg:toolkit: STAR #> id: '#tengfei/quickstart/rna-seq-alignment-star-demo/2' #> inputs: #> - type: #>   - items: File #>     type: array #>   label: Read sequence #>   description: Read sequence. #>   streamable: no #>   id: '#reads' #>   inputBinding: #>     position: 10 #>     separate: yes #>     itemSeparator: ' ' #>     valueFrom: #>       engine: '#cwl-js-engine' #>       script: \"{\\t\\n  var list = [].concat($job.inputs.reads)\\n  \\n  var resp = []\\n #>         \\ \\n  if (list.length == 1){\\n    resp.push(list[0].path)\\n    \\n  }else if #>         (list.length == 2){    \\n    \\n    left = \\\"\\\"\\n    right = \\\"\\\"\\n      \\n #>         \\   for (index = 0; index < list.length; ++index) {\\n      \\n      if (list[index].metadata #>         != null){\\n        if (list[index].metadata.paired_end == 1){\\n          left #>         = list[index].path\\n        }else if (list[index].metadata.paired_end == 2){\\n #>         \\         right = list[index].path\\n        }\\n      }\\n    }\\n    \\n    if #>         (left != \\\"\\\" && right != \\\"\\\"){      \\n      resp.push(left)\\n      resp.push(right)\\n #>         \\   }\\n  }\\n  else if (list.length > 2){\\n    left = []\\n    right = []\\n #>         \\     \\n    for (index = 0; index < list.length; ++index) {\\n      \\n      if #>         (list[index].metadata != null){\\n        if (list[index].metadata.paired_end #>         == 1){\\n          left.push(list[index].path)\\n        }else if (list[index].metadata.paired_end #>         == 2){\\n          right.push(list[index].path)\\n        }\\n      }\\n    }\\n #>         \\   left_join = left.join()\\n    right_join = right.join()\\n    if (left != #>         [] && right != []){      \\n      resp.push(left_join)\\n      resp.push(right_join)\\n #>         \\   }\\t\\n  }\\n  \\n  if(resp.length > 0){    \\n    return \\\"--readFilesIn \\\".concat(resp.join(\\\" #>         \\\"))\\n  }\\n}\" #>       class: Expression #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Basic #>   sbg:fileTypes: FASTA, FASTQ, FA, FQ, FASTQ.GZ, FQ.GZ, FASTQ.BZ2, FQ.BZ2 #>   sbg:x: 200.0 #>   sbg:y: 200.0 #>   sbg:includeInPorts: yes #>   required: yes #> - type: #>   - 'null' #>   - items: File #>     type: array #>   label: sjdbGTFfile #>   streamable: no #>   id: '#sjdbGTFfile' #>   sbg:x: 160.4999759 #>   sbg:y: 195.0833106 #>   sbg:includeInPorts: yes #>   required: no #>   batchType: metadata.library_id #> - type: #>   - items: File #>     type: array #>   label: fastq #>   streamable: no #>   id: '#fastq' #>   sbg:x: 164.2499914 #>   sbg:y: 323.7499502 #>   sbg:includeInPorts: yes #>   required: yes #> - type: #>   - File #>   label: genomeFastaFiles #>   streamable: no #>   id: '#genomeFastaFiles' #>   sbg:x: 167.7499601 #>   sbg:y: 469.9999106 #>   sbg:includeInPorts: yes #>   required: yes #> - type: #>   - 'null' #>   - string #>   label: Exons' parents name #>   description: Tag name to be used as exons' transcript-parents. #>   streamable: no #>   id: '#sjdbGTFtagExonParentTranscript' #>   sbg:category: Splice junctions db parameters #>   sbg:x: 200.0 #>   sbg:y: 350.0 #>   sbg:includeInPorts: yes #>   sbg:toolDefaultValue: transcript_id #>   required: no #> - type: #>   - 'null' #>   - string #>   label: Gene name #>   description: Tag name to be used as exons' gene-parents. #>   streamable: no #>   id: '#sjdbGTFtagExonParentGene' #>   sbg:category: Splice junctions db parameters #>   sbg:x: 200.0 #>   sbg:y: 400.0 #>   sbg:includeInPorts: yes #>   sbg:toolDefaultValue: gene_id #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max loci anchors #>   description: Max number of loci anchors are allowed to map to (int>0). #>   streamable: no #>   id: '#winAnchorMultimapNmax' #>   sbg:category: Windows, Anchors, Binning #>   sbg:x: 200.0 #>   sbg:y: 450.0 #>   sbg:includeInPorts: yes #>   sbg:toolDefaultValue: '50' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max bins between anchors #>   description: Max number of bins between two anchors that allows aggregation of anchors #>     into one window (int>0). #>   streamable: no #>   id: '#winAnchorDistNbins' #>   sbg:category: Windows, Anchors, Binning #>   sbg:x: 200.0 #>   sbg:y: 500.0 #>   sbg:includeInPorts: yes #>   sbg:toolDefaultValue: '9' #>   required: no #> outputs: #> - type: #>   - 'null' #>   - items: File #>     type: array #>   label: Unmapped reads #>   description: Output of unmapped reads. #>   streamable: no #>   id: '#unmapped_reads' #>   source: '#unmapped_reads' #>   sbg:x: 800.0 #>   sbg:y: 200.0 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: Transcriptome alignments #>   description: Alignments translated into transcript coordinates. #>   streamable: no #>   id: '#transcriptome_aligned_reads' #>   source: '#transcriptome_aligned_reads' #>   sbg:x: 800.0 #>   sbg:y: 233.3333333 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: Splice junctions #>   description: High confidence collapsed splice junctions in tab-delimited format. #>     Only junctions supported by uniquely mapping reads are reported. #>   streamable: no #>   id: '#splice_junctions' #>   source: '#splice_junctions' #>   sbg:x: 800.0 #>   sbg:y: 266.6666667 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: Reads per gene #>   description: File with number of reads per gene. A read is counted if it overlaps #>     (1nt or more) one and only one gene. #>   streamable: no #>   id: '#reads_per_gene' #>   source: '#reads_per_gene' #>   sbg:x: 800.0 #>   sbg:y: 300.0 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - items: File #>     type: array #>   label: Log files #>   description: Log files produced during alignment. #>   streamable: no #>   id: '#log_files' #>   source: '#log_files' #>   sbg:x: 800.0 #>   sbg:y: 333.3333333 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: Chimeric junctions #>   description: If chimSegmentMin in 'Chimeric Alignments' section is set to 0, 'Chimeric #>     Junctions' won't be output. #>   streamable: no #>   id: '#chimeric_junctions' #>   source: '#chimeric_junctions' #>   sbg:x: 800.0 #>   sbg:y: 366.6666667 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: Intermediate genome files #>   description: Archive with genome files produced when annotations are included on #>     the fly (in the mapping step). #>   streamable: no #>   id: '#intermediate_genome' #>   source: #>   - '#intermediate_genome' #>   - intermediate_genome #>   sbg:x: 800.0 #>   sbg:y: 400.0 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: Chimeric alignments #>   description: Aligned Chimeric sequences SAM - if chimSegmentMin = 0, no Chimeric #>     Alignment SAM and Chimeric Junctions outputs. #>   streamable: no #>   id: '#chimeric_alignments' #>   source: '#chimeric_alignments' #>   sbg:x: 800.0 #>   sbg:y: 433.3333333 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: Sorted BAM/SAM #>   description: Sorted BAM or SAM file. #>   streamable: no #>   id: '#sorted_bam' #>   source: '#sorted_bam' #>   sbg:x: 800.0 #>   sbg:y: 466.6666667 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: Result #>   description: Source FASTQ file with updated metadata. #>   streamable: no #>   id: '#result' #>   source: '#result' #>   sbg:x: 800.0 #>   sbg:y: 500.0 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: Intermediate genome files #>   description: Archive with genome files produced when annotations are included on #>     the fly (in the mapping step). #>   streamable: no #>   id: '#intermediate_genome' #>   source: #>   - '#intermediate_genome' #>   - intermediate_genome #>   sbg:x: 800.0 #>   sbg:y: 533.3333333 #>   sbg:includeInPorts: yes #>   required: no #> requirements: #> - class: CreateFileRequirement #>   fileDef: [] #> hints: #> - class: sbg:AWSInstanceType #>   value: c3.8xlarge #> label: RNA-seq Alignment - STAR #> description: \"Alignment to a reference genome and transcriptome presents the first #>   step of RNA-Seq analysis. This pipeline uses STAR, an ultrafast RNA-seq aligner #>   capable of mapping full length RNA sequences and detecting de novo canonical junctions, #>   non-canonical splices, and chimeric (fusion) transcripts. It is optimized for mammalian #>   sequence reads, but fine tuning of its parameters enables customization to satisfy #>   unique needs.\\n\\nSTAR accepts one file per sample (or two files for paired-end data). #>   \\ \\nSplice junction annotations can optionally be collected from splice junction #>   databases. Set the \\\"Overhang length\\\" parameter to a value larger than zero in #>   order to use splice junction databases. For constant read length, this value should #>   (ideally) be equal to mate length decreased by 1; for long reads with non-constant #>   length, this value should be 100 (pipeline default). \\nFastQC Analysis on FASTQ #>   files reveals read length distribution. STAR can detect chimeric transcripts, but #>   parameter \\\"Min segment length\\\" in \\\"Chimeric Alignments\\\" category must be adjusted #>   to a desired minimum chimeric segment length. Aligned reads are reported in BAM #>   format and can be viewed in a genome browser (such as IGV). A file containing detected #>   splice junctions is also produced.\\n\\nUnmapped reads are reported in FASTQ format #>   and can be included in an output BAM file. The \\\"Output unmapped reads\\\" and \\\"Write #>   unmapped in SAM\\\" parameters enable unmapped output type selection.\" #> class: Workflow #> steps: #> - id: '#STAR_Genome_Generate' #>   inputs: #>   - id: '#STAR_Genome_Generate.sjdbScore' #>   - id: '#STAR_Genome_Generate.sjdbOverhang' #>   - id: '#STAR_Genome_Generate.sjdbGTFtagExonParentTranscript' #>     source: '#sjdbGTFtagExonParentTranscript' #>   - id: '#STAR_Genome_Generate.sjdbGTFtagExonParentGene' #>     source: '#sjdbGTFtagExonParentGene' #>   - id: '#STAR_Genome_Generate.sjdbGTFfile' #>     source: '#sjdbGTFfile' #>   - id: '#STAR_Genome_Generate.sjdbGTFfeatureExon' #>   - id: '#STAR_Genome_Generate.sjdbGTFchrPrefix' #>   - id: '#STAR_Genome_Generate.genomeSAsparseD' #>   - id: '#STAR_Genome_Generate.genomeSAindexNbases' #>   - id: '#STAR_Genome_Generate.genomeFastaFiles' #>     source: '#genomeFastaFiles' #>   - id: '#STAR_Genome_Generate.genomeChrBinNbits' #>   outputs: #>   - id: '#STAR_Genome_Generate.genome' #>   hints: [] #>   run: #>     sbg:validationErrors: [] #>     sbg:sbgMaintained: no #>     sbg:latestRevision: 1 #>     sbg:job: #>       allocatedResources: #>         mem: 60000 #>         cpu: 15 #>       inputs: #>         sjdbScore: 0 #>         sjdbGTFfeatureExon: sjdbGTFfeatureExon #>         sjdbOverhang: 0 #>         sjdbGTFtagExonParentTranscript: sjdbGTFtagExonParentTranscript #>         genomeChrBinNbits: genomeChrBinNbits #>         genomeSAsparseD: 0 #>         sjdbGTFfile: #>         - size: 0 #>           secondaryFiles: [] #>           class: File #>           path: /demo/test-files/chr20.gtf #>         sjdbGTFtagExonParentGene: sjdbGTFtagExonParentGene #>         genomeFastaFiles: #>           size: 0 #>           secondaryFiles: [] #>           class: File #>           path: /sbgenomics/test-data/chr20.fa #>         sjdbGTFchrPrefix: sjdbGTFchrPrefix #>         genomeSAindexNbases: 0 #>     sbg:toolAuthor: Alexander Dobin/CSHL #>     sbg:createdOn: 1450911469 #>     sbg:categories: #>     - Alignment #>     sbg:contributors: #>     - bix-demo #>     sbg:links: #>     - id: https://github.com/alexdobin/STAR #>       label: Homepage #>     - id: https://github.com/alexdobin/STAR/releases #>       label: Releases #>     - id: https://github.com/alexdobin/STAR/blob/master/doc/STARmanual.pdf #>       label: Manual #>     - id: https://groups.google.com/forum/#!forum/rna-star #>       label: Support #>     - id: http://www.ncbi.nlm.nih.gov/pubmed/23104886 #>       label: Publication #>     sbg:project: bix-demo/star-2-4-2a-demo #>     sbg:createdBy: bix-demo #>     sbg:toolkitVersion: 2.4.2a #>     sbg:id: sevenbridges/public-apps/star-genome-generate/1 #>     sbg:license: GNU General Public License v3.0 only #>     sbg:revision: 1 #>     sbg:cmdPreview: mkdir genomeDir && /opt/STAR --runMode genomeGenerate --genomeDir #>       ./genomeDir --runThreadN 15 --genomeFastaFiles /sbgenomics/test-data/chr20.fa #>       --genomeChrBinNbits genomeChrBinNbits --genomeSAindexNbases 0 --genomeSAsparseD #>       0 --sjdbGTFfeatureExon sjdbGTFfeatureExon --sjdbGTFtagExonParentTranscript sjdbGTFtagExonParentTranscript #>       --sjdbGTFtagExonParentGene sjdbGTFtagExonParentGene --sjdbOverhang 0 --sjdbScore #>       0 --sjdbGTFchrPrefix sjdbGTFchrPrefix  --sjdbGTFfile /demo/test-files/chr20.gtf  && #>       tar -vcf genome.tar ./genomeDir /sbgenomics/test-data/chr20.fa #>     sbg:modifiedOn: 1450911470 #>     sbg:modifiedBy: bix-demo #>     sbg:revisionsInfo: #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911469 #>       sbg:revision: 0 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911470 #>       sbg:revision: 1 #>     sbg:toolkit: STAR #>     id: sevenbridges/public-apps/star-genome-generate/1 #>     inputs: #>     - type: #>       - 'null' #>       - int #>       label: Extra alignment score #>       description: Extra alignment score for alignments that cross database junctions. #>       streamable: no #>       id: '#sjdbScore' #>       inputBinding: #>         position: 0 #>         prefix: --sjdbScore #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Splice junctions db parameters #>       sbg:includeInPorts: yes #>       sbg:toolDefaultValue: '2' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: '\"Overhang\" length' #>       description: Length of the donor/acceptor sequence on each side of the junctions, #>         ideally = (mate_length - 1) (int >= 0), if int = 0, splice junction database #>         is not used. #>       streamable: no #>       id: '#sjdbOverhang' #>       inputBinding: #>         position: 0 #>         prefix: --sjdbOverhang #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Splice junctions db parameters #>       sbg:includeInPorts: yes #>       sbg:toolDefaultValue: '100' #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Exons' parents name #>       description: Tag name to be used as exons' transcript-parents. #>       streamable: no #>       id: '#sjdbGTFtagExonParentTranscript' #>       inputBinding: #>         position: 0 #>         prefix: --sjdbGTFtagExonParentTranscript #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Splice junctions db parameters #>       sbg:toolDefaultValue: transcript_id #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Gene name #>       description: Tag name to be used as exons' gene-parents. #>       streamable: no #>       id: '#sjdbGTFtagExonParentGene' #>       inputBinding: #>         position: 0 #>         prefix: --sjdbGTFtagExonParentGene #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Splice junctions db parameters #>       sbg:toolDefaultValue: gene_id #>       required: no #>     - type: #>       - 'null' #>       - items: File #>         type: array #>       label: Splice junction file #>       description: Gene model annotations and/or known transcripts. #>       streamable: no #>       id: '#sjdbGTFfile' #>       sbg:category: Basic #>       sbg:fileTypes: GTF, GFF, TXT #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Set exons feature #>       description: Feature type in GTF file to be used as exons for building transcripts. #>       streamable: no #>       id: '#sjdbGTFfeatureExon' #>       inputBinding: #>         position: 0 #>         prefix: --sjdbGTFfeatureExon #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Splice junctions db parameters #>       sbg:toolDefaultValue: exon #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Chromosome names #>       description: Prefix for chromosome names in a GTF file (e.g. 'chr' for using #>         ENSMEBL annotations with UCSC geneomes). #>       streamable: no #>       id: '#sjdbGTFchrPrefix' #>       inputBinding: #>         position: 0 #>         prefix: --sjdbGTFchrPrefix #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Splice junctions db parameters #>       sbg:toolDefaultValue: '-' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Suffux array sparsity #>       description: 'Distance between indices: use bigger numbers to decrease needed #>         RAM at the cost of mapping speed reduction (int>0).' #>       streamable: no #>       id: '#genomeSAsparseD' #>       inputBinding: #>         position: 0 #>         prefix: --genomeSAsparseD #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Genome generation parameters #>       sbg:toolDefaultValue: '1' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Pre-indexing string length #>       description: Length (bases) of the SA pre-indexing string. Typically between #>         10 and 15. Longer strings will use much more memory, but allow faster searches. #>         For small genomes, this number needs to be scaled down, with a typical value #>         of min(14, log2(GenomeLength)/2 - 1). For example, for 1 megaBase genome, #>         this is equal to 9, for 100 kiloBase genome, this is equal to 7. #>       streamable: no #>       id: '#genomeSAindexNbases' #>       inputBinding: #>         position: 0 #>         prefix: --genomeSAindexNbases #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Genome generation parameters #>       sbg:toolDefaultValue: '14' #>       required: no #>     - type: #>       - File #>       label: Genome fasta files #>       description: Reference sequence to which to align the reads. #>       streamable: no #>       id: '#genomeFastaFiles' #>       inputBinding: #>         position: 0 #>         prefix: --genomeFastaFiles #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Basic #>       sbg:fileTypes: FASTA, FA #>       required: yes #>     - type: #>       - 'null' #>       - string #>       label: Bins size #>       description: 'Set log2(chrBin), where chrBin is the size (bits) of the bins #>         for genome storage: each chromosome will occupy an integer number of bins. #>         If you are using a genome with a large (>5,000) number of chrosomes/scaffolds, #>         you may need to reduce this number to reduce RAM consumption. The following #>         scaling is recomended: genomeChrBinNbits = min(18, log2(GenomeLength/NumberOfReferences)). #>         For example, for 3 gigaBase genome with 100,000 chromosomes/scaffolds, this #>         is equal to 15.' #>       streamable: no #>       id: '#genomeChrBinNbits' #>       inputBinding: #>         position: 0 #>         prefix: --genomeChrBinNbits #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Genome generation parameters #>       sbg:toolDefaultValue: '18' #>       required: no #>     outputs: #>     - type: #>       - 'null' #>       - File #>       label: Genome Files #>       description: Genome files comprise binary genome sequence, suffix arrays, text #>         chromosome names/lengths, splice junctions coordinates, and transcripts/genes #>         information. #>       streamable: no #>       id: '#genome' #>       outputBinding: #>         glob: '*.tar' #>       sbg:fileTypes: TAR #>     requirements: #>     - class: ExpressionEngineRequirement #>       id: '#cwl-js-engine' #>       requirements: #>       - class: DockerRequirement #>         dockerPull: rabix/js-engine #>     hints: #>     - class: DockerRequirement #>       dockerPull: images.sbgenomics.com/ana_d/star:2.4.2a #>       dockerImageId: a4b0ad2c3cae #>     - class: sbg:CPURequirement #>       value: 15 #>     - class: sbg:MemRequirement #>       value: 60000 #>     label: STAR Genome Generate #>     description: STAR Genome Generate is a tool that generates genome index files. #>       One set of files should be generated per each genome/annotation combination. #>       Once produced, these files could be used as long as genome/annotation combination #>       stays the same. Also, STAR Genome Generate which produced these files and STAR #>       aligner using them must be the same toolkit version. #>     class: CommandLineTool #>     baseCommand: #>     - mkdir #>     - genomeDir #>     - '&&' #>     - /opt/STAR #>     - --runMode #>     - genomeGenerate #>     - --genomeDir #>     - ./genomeDir #>     - --runThreadN #>     - class: Expression #>       script: |- #>         { #>           return $job.allocatedResources.cpu #>         } #>       engine: '#cwl-js-engine' #>     arguments: #>     - position: 99 #>       separate: yes #>       valueFrom: '&& tar -vcf genome.tar ./genomeDir' #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\t\\n  var sjFormat = \\\"False\\\"\\n  var gtfgffFormat = \\\"False\\\"\\n #>           \\ var list = $job.inputs.sjdbGTFfile\\n  var paths_list = []\\n  var joined_paths #>           = \\\"\\\"\\n  \\n  if (list) {\\n    list.forEach(function(f){return paths_list.push(f.path)})\\n #>           \\   joined_paths = paths_list.join(\\\" \\\")\\n\\n\\n    paths_list.forEach(function(f){\\n #>           \\     ext = f.replace(/^.*\\\\./, '')\\n      if (ext == \\\"gff\\\" || ext == #>           \\\"gtf\\\") {\\n        gtfgffFormat = \\\"True\\\"\\n        return gtfgffFormat\\n #>           \\     }\\n      if (ext == \\\"txt\\\") {\\n        sjFormat = \\\"True\\\"\\n        return #>           sjFormat\\n      }\\n    })\\n\\n    if ($job.inputs.sjdbGTFfile && $job.inputs.sjdbInsertSave #>           != \\\"None\\\") {\\n      if (sjFormat == \\\"True\\\") {\\n        return \\\"--sjdbFileChrStartEnd #>           \\\".concat(joined_paths)\\n      }\\n      else if (gtfgffFormat == \\\"True\\\") #>           {\\n        return \\\"--sjdbGTFfile \\\".concat(joined_paths)\\n      }\\n    }\\n #>           \\ }\\n}\" #>         class: Expression #>     stdin: '' #>     stdout: '' #>     successCodes: [] #>     temporaryFailCodes: [] #>     x: 384.0832266 #>     'y': 446.4998957 #>   sbg:x: 100.0 #>   sbg:y: 200.0 #> - id: '#SBG_FASTQ_Quality_Detector' #>   inputs: #>   - id: '#SBG_FASTQ_Quality_Detector.fastq' #>     source: '#fastq' #>   outputs: #>   - id: '#SBG_FASTQ_Quality_Detector.result' #>   hints: [] #>   run: #>     sbg:validationErrors: [] #>     sbg:sbgMaintained: no #>     sbg:latestRevision: 3 #>     sbg:job: #>       allocatedResources: #>         mem: 1000 #>         cpu: 1 #>       inputs: #>         fastq: #>           size: 0 #>           secondaryFiles: [] #>           class: File #>           path: /path/to/fastq.ext #>     sbg:toolAuthor: Seven Bridges Genomics #>     sbg:createdOn: 1450911312 #>     sbg:categories: #>     - FASTQ-Processing #>     sbg:contributors: #>     - bix-demo #>     sbg:project: bix-demo/sbgtools-demo #>     sbg:createdBy: bix-demo #>     sbg:id: sevenbridges/public-apps/sbg-fastq-quality-detector/3 #>     sbg:license: Apache License 2.0 #>     sbg:revision: 3 #>     sbg:cmdPreview: python /opt/sbg_fastq_quality_scale_detector.py --fastq /path/to/fastq.ext #>       /path/to/fastq.ext #>     sbg:modifiedOn: 1450911314 #>     sbg:modifiedBy: bix-demo #>     sbg:revisionsInfo: #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911312 #>       sbg:revision: 0 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911314 #>       sbg:revision: 3 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911313 #>       sbg:revision: 1 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911313 #>       sbg:revision: 2 #>     sbg:toolkit: SBGTools #>     id: sevenbridges/public-apps/sbg-fastq-quality-detector/3 #>     inputs: #>     - type: #>       - File #>       label: Fastq #>       description: FASTQ file. #>       streamable: no #>       id: '#fastq' #>       inputBinding: #>         position: 0 #>         prefix: --fastq #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       required: yes #>     outputs: #>     - type: #>       - 'null' #>       - File #>       label: Result #>       description: Source FASTQ file with updated metadata. #>       streamable: no #>       id: '#result' #>       outputBinding: #>         glob: '*.fastq' #>       sbg:fileTypes: FASTQ #>     requirements: #>     - class: CreateFileRequirement #>       fileDef: [] #>     hints: #>     - class: DockerRequirement #>       dockerPull: images.sbgenomics.com/tziotas/sbg_fastq_quality_scale_detector:1.0 #>       dockerImageId: '' #>     - class: sbg:CPURequirement #>       value: 1 #>     - class: sbg:MemRequirement #>       value: 1000 #>     label: SBG FASTQ Quality Detector #>     description: FASTQ Quality Scale Detector detects which quality encoding scheme #>       was used in your reads and automatically enters the proper value in the \"Quality #>       Scale\" metadata field. #>     class: CommandLineTool #>     baseCommand: #>     - python #>     - /opt/sbg_fastq_quality_scale_detector.py #>     arguments: [] #>     stdin: '' #>     stdout: '' #>     successCodes: [] #>     temporaryFailCodes: [] #>     x: 375.3333179 #>     'y': 323.5833156 #>   sbg:x: 300.0 #>   sbg:y: 200.0 #> - id: '#Picard_SortSam' #>   inputs: #>   - id: '#Picard_SortSam.validation_stringency' #>     default: SILENT #>   - id: '#Picard_SortSam.sort_order' #>     default: Coordinate #>   - id: '#Picard_SortSam.quiet' #>   - id: '#Picard_SortSam.output_type' #>   - id: '#Picard_SortSam.memory_per_job' #>   - id: '#Picard_SortSam.max_records_in_ram' #>   - id: '#Picard_SortSam.input_bam' #>     source: '#STAR.aligned_reads' #>   - id: '#Picard_SortSam.create_index' #>     default: 'True' #>   - id: '#Picard_SortSam.compression_level' #>   outputs: #>   - id: '#Picard_SortSam.sorted_bam' #>   hints: [] #>   run: #>     sbg:validationErrors: [] #>     sbg:sbgMaintained: no #>     sbg:latestRevision: 2 #>     sbg:job: #>       allocatedResources: #>         mem: 2048 #>         cpu: 1 #>       inputs: #>         sort_order: Coordinate #>         input_bam: #>           path: /root/dir/example.tested.bam #>         memory_per_job: 2048 #>         output_type: ~ #>         create_index: ~ #>     sbg:toolAuthor: Broad Institute #>     sbg:createdOn: 1450911168 #>     sbg:categories: #>     - SAM/BAM-Processing #>     sbg:contributors: #>     - bix-demo #>     sbg:links: #>     - id: http://broadinstitute.github.io/picard/index.html #>       label: Homepage #>     - id: https://github.com/broadinstitute/picard/releases/tag/1.138 #>       label: Source Code #>     - id: http://broadinstitute.github.io/picard/ #>       label: Wiki #>     - id: https://github.com/broadinstitute/picard/zipball/master #>       label: Download #>     - id: http://broadinstitute.github.io/picard/ #>       label: Publication #>     sbg:project: bix-demo/picard-1-140-demo #>     sbg:createdBy: bix-demo #>     sbg:toolkitVersion: '1.140' #>     sbg:id: sevenbridges/public-apps/picard-sortsam-1-140/2 #>     sbg:license: MIT License, Apache 2.0 Licence #>     sbg:revision: 2 #>     sbg:cmdPreview: java -Xmx2048M -jar /opt/picard-tools-1.140/picard.jar SortSam #>       OUTPUT=example.tested.sorted.bam INPUT=/root/dir/example.tested.bam SORT_ORDER=coordinate   INPUT=/root/dir/example.tested.bam #>       SORT_ORDER=coordinate  /root/dir/example.tested.bam #>     sbg:modifiedOn: 1450911170 #>     sbg:modifiedBy: bix-demo #>     sbg:revisionsInfo: #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911168 #>       sbg:revision: 0 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911169 #>       sbg:revision: 1 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911170 #>       sbg:revision: 2 #>     sbg:toolkit: Picard #>     id: sevenbridges/public-apps/picard-sortsam-1-140/2 #>     inputs: #>     - type: #>       - 'null' #>       - name: validation_stringency #>         symbols: #>         - STRICT #>         - LENIENT #>         - SILENT #>         type: enum #>       label: Validation stringency #>       description: 'Validation stringency for all SAM files read by this program. #>         Setting stringency to SILENT can improve performance when processing a BAM #>         file in which variable-length data (read, qualities, tags) do not otherwise #>         need to be decoded. This option can be set to ''null'' to clear the default #>         value. Possible values: {STRICT, LENIENT, SILENT}.' #>       streamable: no #>       id: '#validation_stringency' #>       inputBinding: #>         position: 0 #>         prefix: VALIDATION_STRINGENCY= #>         separate: no #>         valueFrom: #>           engine: '#cwl-js-engine' #>           script: |- #>             { #>               if ($job.inputs.validation_stringency) #>               { #>                 return $job.inputs.validation_stringency #>               } #>               else #>               { #>                 return \"SILENT\" #>               } #>             } #>           class: Expression #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Other input types #>       sbg:toolDefaultValue: SILENT #>       required: no #>     - type: #>       - name: sort_order #>         symbols: #>         - Unsorted #>         - Queryname #>         - Coordinate #>         type: enum #>       label: Sort order #>       description: 'Sort order of the output file. Possible values: {unsorted, queryname, #>         coordinate}.' #>       streamable: no #>       id: '#sort_order' #>       inputBinding: #>         position: 3 #>         prefix: SORT_ORDER= #>         separate: no #>         valueFrom: #>           engine: '#cwl-js-engine' #>           script: |- #>             { #>               p = $job.inputs.sort_order.toLowerCase() #>               return p #>             } #>           class: Expression #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Other input types #>       sbg:toolDefaultValue: Coordinate #>       sbg:altPrefix: SO #>       required: yes #>     - type: #>       - 'null' #>       - name: quiet #>         symbols: #>         - 'True' #>         - 'False' #>         type: enum #>       label: Quiet #>       description: 'This parameter indicates whether to suppress job-summary info #>         on System.err. This option can be set to ''null'' to clear the default value. #>         Possible values: {true, false}.' #>       streamable: no #>       id: '#quiet' #>       inputBinding: #>         position: 0 #>         prefix: QUIET= #>         separate: no #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Other input types #>       sbg:toolDefaultValue: 'False' #>       required: no #>     - type: #>       - 'null' #>       - name: output_type #>         symbols: #>         - BAM #>         - SAM #>         - SAME AS INPUT #>         type: enum #>       label: Output format #>       description: Since Picard tools can output both SAM and BAM files, user can #>         choose the format of the output file. #>       streamable: no #>       id: '#output_type' #>       sbg:category: Other input types #>       sbg:toolDefaultValue: SAME AS INPUT #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Memory per job #>       description: Amount of RAM memory to be used per job. Defaults to 2048 MB for #>         single threaded jobs. #>       streamable: no #>       id: '#memory_per_job' #>       sbg:toolDefaultValue: '2048' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max records in RAM #>       description: When writing SAM files that need to be sorted, this parameter will #>         specify the number of records stored in RAM before spilling to disk. Increasing #>         this number reduces the number of file handles needed to sort a SAM file, #>         and increases the amount of RAM needed. This option can be set to 'null' to #>         clear the default value. #>       streamable: no #>       id: '#max_records_in_ram' #>       inputBinding: #>         position: 0 #>         prefix: MAX_RECORDS_IN_RAM= #>         separate: no #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Other input types #>       sbg:toolDefaultValue: '500000' #>       required: no #>     - type: #>       - File #>       label: Input BAM #>       description: The BAM or SAM file to sort. #>       streamable: no #>       id: '#input_bam' #>       inputBinding: #>         position: 1 #>         prefix: INPUT= #>         separate: no #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: File inputs #>       sbg:fileTypes: BAM, SAM #>       sbg:altPrefix: I #>       required: yes #>     - type: #>       - 'null' #>       - name: create_index #>         symbols: #>         - 'True' #>         - 'False' #>         type: enum #>       label: Create index #>       description: 'This parameter indicates whether to create a BAM index when writing #>         a coordinate-sorted BAM file. This option can be set to ''null'' to clear #>         the default value. Possible values: {true, false}.' #>       streamable: no #>       id: '#create_index' #>       inputBinding: #>         position: 5 #>         prefix: CREATE_INDEX= #>         separate: no #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Other input types #>       sbg:toolDefaultValue: 'False' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Compression level #>       description: Compression level for all compressed files created (e.g. BAM and #>         GELI). This option can be set to 'null' to clear the default value. #>       streamable: no #>       id: '#compression_level' #>       inputBinding: #>         position: 0 #>         prefix: COMPRESSION_LEVEL= #>         separate: no #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Other input types #>       sbg:toolDefaultValue: '5' #>       required: no #>     outputs: #>     - type: #>       - 'null' #>       - File #>       label: Sorted BAM/SAM #>       description: Sorted BAM or SAM file. #>       streamable: no #>       id: '#sorted_bam' #>       outputBinding: #>         glob: '*.sorted.?am' #>       sbg:fileTypes: BAM, SAM #>     requirements: #>     - class: ExpressionEngineRequirement #>       id: '#cwl-js-engine' #>       requirements: #>       - class: DockerRequirement #>         dockerPull: rabix/js-engine #>       engineCommand: cwl-engine.js #>     hints: #>     - class: DockerRequirement #>       dockerPull: images.sbgenomics.com/mladenlsbg/picard:1.140 #>       dockerImageId: eab0e70b6629 #>     - class: sbg:CPURequirement #>       value: 1 #>     - class: sbg:MemRequirement #>       value: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  if($job.inputs.memory_per_job){\\n  \\treturn $job.inputs.memory_per_job\\n #>           \\ }\\n  \\treturn 2048\\n}\" #>         class: Expression #>     label: Picard SortSam #>     description: Picard SortSam sorts the input SAM or BAM. Input and output formats #>       are determined by the file extension. #>     class: CommandLineTool #>     baseCommand: #>     - java #>     - class: Expression #>       script: \"{   \\n  if($job.inputs.memory_per_job){\\n    return '-Xmx'.concat($job.inputs.memory_per_job, #>         'M')\\n  }   \\n  \\treturn '-Xmx2048M'\\n}\" #>       engine: '#cwl-js-engine' #>     - -jar #>     - /opt/picard-tools-1.140/picard.jar #>     - SortSam #>     arguments: #>     - position: 0 #>       prefix: OUTPUT= #>       separate: no #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  filename = $job.inputs.input_bam.path\\n  ext = $job.inputs.output_type\\n\\nif #>           (ext === \\\"BAM\\\")\\n{\\n    return filename.split('.').slice(0, -1).concat(\\\"sorted.bam\\\").join(\\\".\\\").replace(/^.*[\\\\\\\\\\\\/]/, #>           '')\\n    }\\n\\nelse if (ext === \\\"SAM\\\")\\n{\\n    return filename.split('.').slice(0, #>           -1).concat(\\\"sorted.sam\\\").join('.').replace(/^.*[\\\\\\\\\\\\/]/, '')\\n}\\n\\nelse #>           \\n{\\n\\treturn filename.split('.').slice(0, -1).concat(\\\"sorted.\\\"+filename.split('.').slice(-1)[0]).join(\\\".\\\").replace(/^.*[\\\\\\\\\\\\/]/, #>           '')\\n}\\n}\" #>         class: Expression #>     - position: 1000 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  filename = $job.inputs.input_bam.path\\n  \\n  /* figuring out #>           output file type */\\n  ext = $job.inputs.output_type\\n  if (ext === \\\"BAM\\\")\\n #>           \\ {\\n    out_extension = \\\"BAM\\\"\\n  }\\n  else if (ext === \\\"SAM\\\")\\n  {\\n #>           \\   out_extension = \\\"SAM\\\"\\n  }\\n  else \\n  {\\n\\tout_extension = filename.split('.').slice(-1)[0].toUpperCase()\\n #>           \\ }  \\n  \\n  /* if exist moving .bai in bam.bai */\\n  if ($job.inputs.create_index #>           === 'True' && $job.inputs.sort_order === 'Coordinate' && out_extension == #>           \\\"BAM\\\")\\n  {\\n    \\n    old_name = filename.split('.').slice(0, -1).concat('sorted.bai').join('.').replace(/^.*[\\\\\\\\\\\\/]/, #>           '')\\n    new_name = filename.split('.').slice(0, -1).concat('sorted.bam.bai').join('.').replace(/^.*[\\\\\\\\\\\\/]/, #>           '')\\n    return \\\"; mv \\\" + \\\" \\\" + old_name + \\\" \\\" + new_name\\n  }\\n\\n}\" #>         class: Expression #>     stdin: '' #>     stdout: '' #>     successCodes: [] #>     temporaryFailCodes: [] #>     x: 773.0831807 #>     'y': 470.9165939 #>   sbg:x: 500.0 #>   sbg:y: 200.0 #> - id: '#STAR' #>   inputs: #>   - id: '#STAR.winFlankNbins' #>   - id: '#STAR.winBinNbits' #>   - id: '#STAR.winAnchorMultimapNmax' #>     source: '#winAnchorMultimapNmax' #>   - id: '#STAR.winAnchorDistNbins' #>     source: '#winAnchorDistNbins' #>   - id: '#STAR.twopassMode' #>   - id: '#STAR.twopass1readsN' #>   - id: '#STAR.sjdbScore' #>   - id: '#STAR.sjdbOverhang' #>     default: 100 #>   - id: '#STAR.sjdbInsertSave' #>   - id: '#STAR.sjdbGTFtagExonParentTranscript' #>   - id: '#STAR.sjdbGTFtagExonParentGene' #>   - id: '#STAR.sjdbGTFfile' #>     source: '#sjdbGTFfile' #>   - id: '#STAR.sjdbGTFfeatureExon' #>   - id: '#STAR.sjdbGTFchrPrefix' #>   - id: '#STAR.seedSearchStartLmaxOverLread' #>   - id: '#STAR.seedSearchStartLmax' #>   - id: '#STAR.seedSearchLmax' #>   - id: '#STAR.seedPerWindowNmax' #>   - id: '#STAR.seedPerReadNmax' #>   - id: '#STAR.seedNoneLociPerWindow' #>   - id: '#STAR.seedMultimapNmax' #>   - id: '#STAR.scoreStitchSJshift' #>   - id: '#STAR.scoreInsOpen' #>   - id: '#STAR.scoreInsBase' #>   - id: '#STAR.scoreGenomicLengthLog2scale' #>   - id: '#STAR.scoreGapNoncan' #>   - id: '#STAR.scoreGapGCAG' #>   - id: '#STAR.scoreGapATAC' #>   - id: '#STAR.scoreGap' #>   - id: '#STAR.scoreDelOpen' #>   - id: '#STAR.scoreDelBase' #>   - id: '#STAR.rg_seq_center' #>   - id: '#STAR.rg_sample_id' #>   - id: '#STAR.rg_platform_unit_id' #>   - id: '#STAR.rg_platform' #>   - id: '#STAR.rg_mfl' #>   - id: '#STAR.rg_library_id' #>   - id: '#STAR.reads' #>     source: '#reads' #>   - id: '#STAR.readMatesLengthsIn' #>   - id: '#STAR.readMapNumber' #>   - id: '#STAR.quantTranscriptomeBan' #>   - id: '#STAR.quantMode' #>     default: TranscriptomeSAM #>   - id: '#STAR.outSortingType' #>     default: SortedByCoordinate #>   - id: '#STAR.outSJfilterReads' #>   - id: '#STAR.outSJfilterOverhangMin' #>   - id: '#STAR.outSJfilterIntronMaxVsReadN' #>   - id: '#STAR.outSJfilterDistToOtherSJmin' #>   - id: '#STAR.outSJfilterCountUniqueMin' #>   - id: '#STAR.outSJfilterCountTotalMin' #>   - id: '#STAR.outSAMunmapped' #>   - id: '#STAR.outSAMtype' #>     default: BAM #>   - id: '#STAR.outSAMstrandField' #>   - id: '#STAR.outSAMreadID' #>   - id: '#STAR.outSAMprimaryFlag' #>   - id: '#STAR.outSAMorder' #>   - id: '#STAR.outSAMmode' #>   - id: '#STAR.outSAMmapqUnique' #>   - id: '#STAR.outSAMheaderPG' #>   - id: '#STAR.outSAMheaderHD' #>   - id: '#STAR.outSAMflagOR' #>   - id: '#STAR.outSAMflagAND' #>   - id: '#STAR.outSAMattributes' #>   - id: '#STAR.outReadsUnmapped' #>     default: Fastx #>   - id: '#STAR.outQSconversionAdd' #>   - id: '#STAR.outFilterType' #>   - id: '#STAR.outFilterScoreMinOverLread' #>   - id: '#STAR.outFilterScoreMin' #>   - id: '#STAR.outFilterMultimapScoreRange' #>   - id: '#STAR.outFilterMultimapNmax' #>   - id: '#STAR.outFilterMismatchNoverReadLmax' #>   - id: '#STAR.outFilterMismatchNoverLmax' #>   - id: '#STAR.outFilterMismatchNmax' #>   - id: '#STAR.outFilterMatchNminOverLread' #>   - id: '#STAR.outFilterMatchNmin' #>   - id: '#STAR.outFilterIntronMotifs' #>   - id: '#STAR.limitSjdbInsertNsj' #>   - id: '#STAR.limitOutSJoneRead' #>   - id: '#STAR.limitOutSJcollapsed' #>   - id: '#STAR.limitBAMsortRAM' #>   - id: '#STAR.genomeDirName' #>   - id: '#STAR.genome' #>     source: '#STAR_Genome_Generate.genome' #>   - id: '#STAR.clip5pNbases' #>   - id: '#STAR.clip3pNbases' #>   - id: '#STAR.clip3pAfterAdapterNbases' #>   - id: '#STAR.clip3pAdapterSeq' #>   - id: '#STAR.clip3pAdapterMMp' #>   - id: '#STAR.chimSegmentMin' #>   - id: '#STAR.chimScoreSeparation' #>   - id: '#STAR.chimScoreMin' #>   - id: '#STAR.chimScoreJunctionNonGTAG' #>   - id: '#STAR.chimScoreDropMax' #>   - id: '#STAR.chimOutType' #>   - id: '#STAR.chimJunctionOverhangMin' #>   - id: '#STAR.alignWindowsPerReadNmax' #>   - id: '#STAR.alignTranscriptsPerWindowNmax' #>   - id: '#STAR.alignTranscriptsPerReadNmax' #>   - id: '#STAR.alignSplicedMateMapLminOverLmate' #>   - id: '#STAR.alignSplicedMateMapLmin' #>   - id: '#STAR.alignSoftClipAtReferenceEnds' #>   - id: '#STAR.alignSJoverhangMin' #>   - id: '#STAR.alignSJDBoverhangMin' #>   - id: '#STAR.alignMatesGapMax' #>   - id: '#STAR.alignIntronMin' #>   - id: '#STAR.alignIntronMax' #>   - id: '#STAR.alignEndsType' #>   outputs: #>   - id: '#STAR.unmapped_reads' #>   - id: '#STAR.transcriptome_aligned_reads' #>   - id: '#STAR.splice_junctions' #>   - id: '#STAR.reads_per_gene' #>   - id: '#STAR.log_files' #>   - id: '#STAR.intermediate_genome' #>   - id: '#STAR.chimeric_junctions' #>   - id: '#STAR.chimeric_alignments' #>   - id: '#STAR.aligned_reads' #>   hints: [] #>   run: #>     sbg:validationErrors: [] #>     sbg:sbgMaintained: no #>     sbg:latestRevision: 4 #>     sbg:job: #>       allocatedResources: #>         mem: 60000 #>         cpu: 15 #>       inputs: #>         alignWindowsPerReadNmax: 0 #>         outSAMheaderPG: outSAMheaderPG #>         GENOME_DIR_NAME: '' #>         outFilterMatchNminOverLread: 0 #>         rg_platform_unit_id: rg_platform_unit #>         alignTranscriptsPerReadNmax: 0 #>         readMapNumber: 0 #>         alignSplicedMateMapLminOverLmate: 0 #>         alignMatesGapMax: 0 #>         outFilterMultimapNmax: 0 #>         clip5pNbases: #>         - 0 #>         outSAMstrandField: None #>         readMatesLengthsIn: NotEqual #>         outSAMattributes: Standard #>         seedMultimapNmax: 0 #>         rg_mfl: rg_mfl #>         chimSegmentMin: 0 #>         winAnchorDistNbins: 0 #>         outSortingType: SortedByCoordinate #>         outFilterMultimapScoreRange: 0 #>         sjdbInsertSave: Basic #>         clip3pAfterAdapterNbases: #>         - 0 #>         scoreDelBase: 0 #>         outFilterMatchNmin: 0 #>         twopass1readsN: 0 #>         outSAMunmapped: None #>         genome: #>           size: 0 #>           secondaryFiles: [] #>           class: File #>           path: genome.ext #>         sjdbGTFtagExonParentTranscript: '' #>         limitBAMsortRAM: 0 #>         alignEndsType: Local #>         seedNoneLociPerWindow: 0 #>         rg_sample_id: rg_sample #>         sjdbGTFtagExonParentGene: '' #>         chimScoreMin: 0 #>         outSJfilterIntronMaxVsReadN: #>         - 0 #>         twopassMode: Basic #>         alignSplicedMateMapLmin: 0 #>         outSJfilterReads: All #>         outSAMprimaryFlag: OneBestScore #>         outSJfilterCountTotalMin: #>         - 3 #>         - 1 #>         - 1 #>         - 1 #>         outSAMorder: Paired #>         outSAMflagAND: 0 #>         chimScoreSeparation: 0 #>         alignSJoverhangMin: 0 #>         outFilterScoreMin: 0 #>         seedSearchStartLmax: 0 #>         scoreGapGCAG: 0 #>         scoreGenomicLengthLog2scale: 0 #>         outFilterIntronMotifs: None #>         outFilterMismatchNmax: 0 #>         reads: #>         - size: 0 #>           secondaryFiles: [] #>           class: File #>           metadata: #>             format: fastq #>             paired_end: '1' #>             seq_center: illumina #>           path: /test-data/mate_1.fastq.bz2 #>         scoreGap: 0 #>         outSJfilterOverhangMin: #>         - 30 #>         - 12 #>         - 12 #>         - 12 #>         outSAMflagOR: 0 #>         outSAMmode: Full #>         rg_library_id: '' #>         chimScoreJunctionNonGTAG: 0 #>         scoreInsOpen: 0 #>         clip3pAdapterSeq: #>         - clip3pAdapterSeq #>         chimScoreDropMax: 0 #>         outFilterType: Normal #>         scoreGapATAC: 0 #>         rg_platform: Ion Torrent PGM #>         clip3pAdapterMMp: #>         - 0 #>         sjdbGTFfeatureExon: '' #>         outQSconversionAdd: 0 #>         quantMode: TranscriptomeSAM #>         alignIntronMin: 0 #>         scoreInsBase: 0 #>         scoreGapNoncan: 0 #>         seedSearchLmax: 0 #>         outSJfilterDistToOtherSJmin: #>         - 0 #>         outFilterScoreMinOverLread: 0 #>         alignSJDBoverhangMin: 0 #>         limitOutSJcollapsed: 0 #>         winAnchorMultimapNmax: 0 #>         outFilterMismatchNoverLmax: 0 #>         rg_seq_center: '' #>         outSAMheaderHD: outSAMheaderHD #>         chimOutType: Within #>         quantTranscriptomeBan: IndelSoftclipSingleend #>         limitOutSJoneRead: 0 #>         alignTranscriptsPerWindowNmax: 0 #>         sjdbOverhang: ~ #>         outReadsUnmapped: Fastx #>         scoreStitchSJshift: 0 #>         seedPerWindowNmax: 0 #>         outSJfilterCountUniqueMin: #>         - 3 #>         - 1 #>         - 1 #>         - 1 #>         scoreDelOpen: 0 #>         sjdbGTFfile: #>         - path: /demo/test-data/chr20.gtf #>         clip3pNbases: #>         - 0 #>         - 3 #>         winBinNbits: 0 #>         sjdbScore: ~ #>         seedSearchStartLmaxOverLread: 0 #>         alignIntronMax: 0 #>         seedPerReadNmax: 0 #>         outFilterMismatchNoverReadLmax: 0 #>         winFlankNbins: 0 #>         sjdbGTFchrPrefix: chrPrefix #>         alignSoftClipAtReferenceEnds: 'Yes' #>         outSAMreadID: Standard #>         outSAMtype: BAM #>         chimJunctionOverhangMin: 0 #>         limitSjdbInsertNsj: 0 #>         outSAMmapqUnique: 0 #>     sbg:toolAuthor: Alexander Dobin/CSHL #>     sbg:createdOn: 1450911471 #>     sbg:categories: #>     - Alignment #>     sbg:contributors: #>     - ana_d #>     - bix-demo #>     - uros_sipetic #>     sbg:links: #>     - id: https://github.com/alexdobin/STAR #>       label: Homepage #>     - id: https://github.com/alexdobin/STAR/releases #>       label: Releases #>     - id: https://github.com/alexdobin/STAR/blob/master/doc/STARmanual.pdf #>       label: Manual #>     - id: https://groups.google.com/forum/#!forum/rna-star #>       label: Support #>     - id: http://www.ncbi.nlm.nih.gov/pubmed/23104886 #>       label: Publication #>     sbg:project: bix-demo/star-2-4-2a-demo #>     sbg:createdBy: bix-demo #>     sbg:toolkitVersion: 2.4.2a #>     sbg:id: sevenbridges/public-apps/star/4 #>     sbg:license: GNU General Public License v3.0 only #>     sbg:revision: 4 #>     sbg:cmdPreview: tar -xvf genome.ext && /opt/STAR --runThreadN 15  --readFilesCommand #>       bzcat  --sjdbGTFfile /demo/test-data/chr20.gtf  --sjdbGTFchrPrefix chrPrefix #>       --sjdbInsertSave Basic  --twopass1readsN 0  --chimOutType WithinBAM  --outSAMattrRGline #>       ID:1 CN:illumina PI:rg_mfl PL:Ion_Torrent_PGM PU:rg_platform_unit SM:rg_sample  --quantMode #>       TranscriptomeSAM --outFileNamePrefix ./mate_1.fastq.bz2.  --readFilesIn /test-data/mate_1.fastq.bz2  && #>       tar -vcf mate_1.fastq.bz2._STARgenome.tar ./mate_1.fastq.bz2._STARgenome  && #>       mv mate_1.fastq.bz2.Unmapped.out.mate1 mate_1.fastq.bz2.Unmapped.out.mate1.fastq #>     sbg:modifiedOn: 1462889222 #>     sbg:modifiedBy: ana_d #>     sbg:revisionsInfo: #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911471 #>       sbg:revision: 0 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911473 #>       sbg:revision: 1 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911475 #>       sbg:revision: 2 #>     - sbg:modifiedBy: uros_sipetic #>       sbg:modifiedOn: 1462878528 #>       sbg:revision: 3 #>     - sbg:modifiedBy: ana_d #>       sbg:modifiedOn: 1462889222 #>       sbg:revision: 4 #>     sbg:toolkit: STAR #>     id: sevenbridges/public-apps/star/4 #>     inputs: #>     - type: #>       - 'null' #>       - int #>       label: Flanking regions size #>       description: =log2(winFlank), where win Flank is the size of the left and right #>         flanking regions for each window (int>0). #>       streamable: no #>       id: '#winFlankNbins' #>       inputBinding: #>         position: 0 #>         prefix: --winFlankNbins #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Windows, Anchors, Binning #>       sbg:includeInPorts: yes #>       sbg:toolDefaultValue: '4' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Bin size #>       description: =log2(winBin), where winBin is the size of the bin for the windows/clustering, #>         each window will occupy an integer number of bins (int>0). #>       streamable: no #>       id: '#winBinNbits' #>       inputBinding: #>         position: 0 #>         prefix: --winBinNbits #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Windows, Anchors, Binning #>       sbg:includeInPorts: yes #>       sbg:toolDefaultValue: '16' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max loci anchors #>       description: Max number of loci anchors are allowed to map to (int>0). #>       streamable: no #>       id: '#winAnchorMultimapNmax' #>       inputBinding: #>         position: 0 #>         prefix: --winAnchorMultimapNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Windows, Anchors, Binning #>       sbg:toolDefaultValue: '50' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max bins between anchors #>       description: Max number of bins between two anchors that allows aggregation #>         of anchors into one window (int>0). #>       streamable: no #>       id: '#winAnchorDistNbins' #>       inputBinding: #>         position: 0 #>         prefix: --winAnchorDistNbins #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Windows, Anchors, Binning #>       sbg:toolDefaultValue: '9' #>       required: no #>     - type: #>       - 'null' #>       - name: twopassMode #>         symbols: #>         - None #>         - Basic #>         type: enum #>       label: Two-pass mode #>       description: '2-pass mapping mode. None: 1-pass mapping; Basic: basic 2-pass #>         mapping, with all 1st pass junctions inserted into the genome indices on the #>         fly.' #>       streamable: no #>       id: '#twopassMode' #>       inputBinding: #>         position: 0 #>         prefix: --twopassMode #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: 2-pass mapping #>       sbg:toolDefaultValue: None #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Reads to process in 1st step #>       description: 'Number of reads to process for the 1st step. 0: 1-step only, no #>         2nd pass; use very large number to map all reads in the first step (int>0).' #>       streamable: no #>       id: '#twopass1readsN' #>       sbg:category: 2-pass mapping #>       sbg:toolDefaultValue: '-1' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Extra alignment score #>       description: Extra alignment score for alignments that cross database junctions. #>       streamable: no #>       id: '#sjdbScore' #>       sbg:category: Splice junctions database #>       sbg:toolDefaultValue: '2' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: '\"Overhang\" length' #>       description: Length of the donor/acceptor sequence on each side of the junctions, #>         ideally = (mate_length - 1) (int >= 0), if int = 0, splice junction database #>         is not used. #>       streamable: no #>       id: '#sjdbOverhang' #>       sbg:category: Splice junctions database #>       sbg:toolDefaultValue: '100' #>       required: no #>     - type: #>       - 'null' #>       - name: sjdbInsertSave #>         symbols: #>         - Basic #>         - All #>         - None #>         type: enum #>       label: Save junction files #>       description: 'Which files to save when sjdb junctions are inserted on the fly #>         at the mapping step. None: not saving files at all; Basic: only small junction/transcript #>         files; All: all files including big Genome, SA and SAindex. These files are #>         output as archive.' #>       streamable: no #>       id: '#sjdbInsertSave' #>       sbg:category: Splice junctions database #>       sbg:toolDefaultValue: None #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Exons' parents name #>       description: Tag name to be used as exons' transcript-parents. #>       streamable: no #>       id: '#sjdbGTFtagExonParentTranscript' #>       sbg:category: Splice junctions database #>       sbg:toolDefaultValue: transcript_id #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Gene name #>       description: Tag name to be used as exons' gene-parents. #>       streamable: no #>       id: '#sjdbGTFtagExonParentGene' #>       sbg:category: Splice junctions database #>       sbg:toolDefaultValue: gene_id #>       required: no #>     - type: #>       - 'null' #>       - items: File #>         type: array #>       label: Splice junction file #>       description: Gene model annotations and/or known transcripts. No need to include #>         this input, except in case of using \"on the fly\" annotations. #>       streamable: no #>       id: '#sjdbGTFfile' #>       sbg:category: Basic #>       sbg:fileTypes: GTF, GFF, TXT #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Set exons feature #>       description: Feature type in GTF file to be used as exons for building transcripts. #>       streamable: no #>       id: '#sjdbGTFfeatureExon' #>       sbg:category: Splice junctions database #>       sbg:toolDefaultValue: exon #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Chromosome names #>       description: Prefix for chromosome names in a GTF file (e.g. 'chr' for using #>         ENSMEBL annotations with UCSC geneomes). #>       streamable: no #>       id: '#sjdbGTFchrPrefix' #>       sbg:category: Splice junctions database #>       sbg:toolDefaultValue: '-' #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Search start point normalized #>       description: seedSearchStartLmax normalized to read length (sum of mates' lengths #>         for paired-end reads). #>       streamable: no #>       id: '#seedSearchStartLmaxOverLread' #>       inputBinding: #>         position: 0 #>         prefix: --seedSearchStartLmaxOverLread #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '1.0' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Search start point #>       description: Defines the search start point through the read - the read is split #>         into pieces no longer than this value (int>0). #>       streamable: no #>       id: '#seedSearchStartLmax' #>       inputBinding: #>         position: 0 #>         prefix: --seedSearchStartLmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '50' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max seed length #>       description: Defines the maximum length of the seeds, if =0 max seed length #>         is infinite (int>=0). #>       streamable: no #>       id: '#seedSearchLmax' #>       inputBinding: #>         position: 0 #>         prefix: --seedSearchLmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max seeds per window #>       description: Max number of seeds per window (int>=0). #>       streamable: no #>       id: '#seedPerWindowNmax' #>       inputBinding: #>         position: 0 #>         prefix: --seedPerWindowNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '50' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max seeds per read #>       description: Max number of seeds per read (int>=0). #>       streamable: no #>       id: '#seedPerReadNmax' #>       inputBinding: #>         position: 0 #>         prefix: --seedPerReadNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '1000' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max one-seed loci per window #>       description: Max number of one seed loci per window (int>=0). #>       streamable: no #>       id: '#seedNoneLociPerWindow' #>       inputBinding: #>         position: 0 #>         prefix: --seedNoneLociPerWindow #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '10' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Filter pieces for stitching #>       description: Only pieces that map fewer than this value are utilized in the #>         stitching procedure (int>=0). #>       streamable: no #>       id: '#seedMultimapNmax' #>       inputBinding: #>         position: 0 #>         prefix: --seedMultimapNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '10000' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max score reduction #>       description: Maximum score reduction while searching for SJ boundaries in the #>         stitching step. #>       streamable: no #>       id: '#scoreStitchSJshift' #>       inputBinding: #>         position: 0 #>         prefix: --scoreStitchSJshift #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '1' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Insertion Open Penalty #>       description: Insertion open penalty. #>       streamable: no #>       id: '#scoreInsOpen' #>       inputBinding: #>         position: 0 #>         prefix: --scoreInsOpen #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-2' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Insertion extension penalty #>       description: Insertion extension penalty per base (in addition to --scoreInsOpen). #>       streamable: no #>       id: '#scoreInsBase' #>       inputBinding: #>         position: 0 #>         prefix: --scoreInsBase #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-2' #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Log scaled score #>       description: 'Extra score logarithmically scaled with genomic length of the #>         alignment: <int>*log2(genomicLength).' #>       streamable: no #>       id: '#scoreGenomicLengthLog2scale' #>       inputBinding: #>         position: 0 #>         prefix: --scoreGenomicLengthLog2scale #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-0.25' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Non-canonical gap open #>       description: Non-canonical gap open penalty (in addition to --scoreGap). #>       streamable: no #>       id: '#scoreGapNoncan' #>       inputBinding: #>         position: 0 #>         prefix: --scoreGapNoncan #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-8' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: GC/AG and CT/GC gap open #>       description: GC/AG and CT/GC gap open penalty (in addition to --scoreGap). #>       streamable: no #>       id: '#scoreGapGCAG' #>       inputBinding: #>         position: 0 #>         prefix: --scoreGapGCAG #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-4' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: AT/AC and GT/AT gap open #>       description: AT/AC and GT/AT gap open penalty (in addition to --scoreGap). #>       streamable: no #>       id: '#scoreGapATAC' #>       inputBinding: #>         position: 0 #>         prefix: --scoreGapATAC #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-8' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Gap open penalty #>       description: Gap open penalty. #>       streamable: no #>       id: '#scoreGap' #>       inputBinding: #>         position: 0 #>         prefix: --scoreGap #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Deletion open penalty #>       description: Deletion open penalty. #>       streamable: no #>       id: '#scoreDelOpen' #>       inputBinding: #>         position: 0 #>         prefix: --scoreDelOpen #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-2' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Deletion extension penalty #>       description: Deletion extension penalty per base (in addition to --scoreDelOpen). #>       streamable: no #>       id: '#scoreDelBase' #>       inputBinding: #>         position: 0 #>         prefix: --scoreDelBase #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-2' #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Sequencing center #>       description: Specify the sequencing center for RG line. #>       streamable: no #>       id: '#rg_seq_center' #>       sbg:category: Read group #>       sbg:toolDefaultValue: Inferred from metadata #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Sample ID #>       description: Specify the sample ID for RG line. #>       streamable: no #>       id: '#rg_sample_id' #>       sbg:category: Read group #>       sbg:toolDefaultValue: Inferred from metadata #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Platform unit ID #>       description: Specify the platform unit ID for RG line. #>       streamable: no #>       id: '#rg_platform_unit_id' #>       sbg:category: Read group #>       sbg:toolDefaultValue: Inferred from metadata #>       required: no #>     - type: #>       - 'null' #>       - name: rg_platform #>         symbols: #>         - LS 454 #>         - Helicos #>         - Illumina #>         - ABI SOLiD #>         - Ion Torrent PGM #>         - PacBio #>         type: enum #>       label: Platform #>       description: Specify the version of the technology that was used for sequencing #>         or assaying. #>       streamable: no #>       id: '#rg_platform' #>       sbg:category: Read group #>       sbg:toolDefaultValue: Inferred from metadata #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Median fragment length #>       description: Specify the median fragment length for RG line. #>       streamable: no #>       id: '#rg_mfl' #>       sbg:category: Read group #>       sbg:toolDefaultValue: Inferred from metadata #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Library ID #>       description: Specify the library ID for RG line. #>       streamable: no #>       id: '#rg_library_id' #>       sbg:category: Read group #>       sbg:toolDefaultValue: Inferred from metadata #>       required: no #>     - type: #>       - items: File #>         type: array #>       label: Read sequence #>       description: Read sequence. #>       streamable: no #>       id: '#reads' #>       inputBinding: #>         position: 10 #>         separate: yes #>         itemSeparator: ' ' #>         valueFrom: #>           engine: '#cwl-js-engine' #>           script: \"{\\t\\n  var list = [].concat($job.inputs.reads)\\n  \\n  var resp #>             = []\\n  \\n  if (list.length == 1){\\n    resp.push(list[0].path)\\n    \\n #>             \\ }else if (list.length == 2){    \\n    \\n    left = \\\"\\\"\\n    right = #>             \\\"\\\"\\n      \\n    for (index = 0; index < list.length; ++index) {\\n      \\n #>             \\     if (list[index].metadata != null){\\n        if (list[index].metadata.paired_end #>             == 1){\\n          left = list[index].path\\n        }else if (list[index].metadata.paired_end #>             == 2){\\n          right = list[index].path\\n        }\\n      }\\n    }\\n #>             \\   \\n    if (left != \\\"\\\" && right != \\\"\\\"){      \\n      resp.push(left)\\n #>             \\     resp.push(right)\\n    }\\n  }\\n  else if (list.length > 2){\\n    left #>             = []\\n    right = []\\n      \\n    for (index = 0; index < list.length; #>             ++index) {\\n      \\n      if (list[index].metadata != null){\\n        if #>             (list[index].metadata.paired_end == 1){\\n          left.push(list[index].path)\\n #>             \\       }else if (list[index].metadata.paired_end == 2){\\n          right.push(list[index].path)\\n #>             \\       }\\n      }\\n    }\\n    left_join = left.join()\\n    right_join #>             = right.join()\\n    if (left != [] && right != []){      \\n      resp.push(left_join)\\n #>             \\     resp.push(right_join)\\n    }\\t\\n  }\\n  \\n  if(resp.length > 0){ #>             \\   \\n    return \\\"--readFilesIn \\\".concat(resp.join(\\\" \\\"))\\n  }\\n}\" #>           class: Expression #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Basic #>       sbg:fileTypes: FASTA, FASTQ, FA, FQ, FASTQ.GZ, FQ.GZ, FASTQ.BZ2, FQ.BZ2 #>       sbg:x: 200.0 #>       sbg:y: 200.0 #>       sbg:includeInPorts: yes #>       required: yes #>     - type: #>       - 'null' #>       - name: readMatesLengthsIn #>         symbols: #>         - NotEqual #>         - Equal #>         type: enum #>       label: Reads lengths #>       description: Equal/Not equal - lengths of names, sequences, qualities for both #>         mates are the same/not the same. \"Not equal\" is safe in all situations. #>       streamable: no #>       id: '#readMatesLengthsIn' #>       inputBinding: #>         position: 0 #>         prefix: --readMatesLengthsIn #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Read parameters #>       sbg:toolDefaultValue: NotEqual #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Reads to map #>       description: Number of reads to map from the beginning of the file. #>       streamable: no #>       id: '#readMapNumber' #>       inputBinding: #>         position: 0 #>         prefix: --readMapNumber #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Read parameters #>       sbg:toolDefaultValue: '-1' #>       required: no #>     - type: #>       - 'null' #>       - name: quantTranscriptomeBan #>         symbols: #>         - IndelSoftclipSingleend #>         - Singleend #>         type: enum #>       label: Prohibit alignment type #>       description: 'Prohibit various alignment type. IndelSoftclipSingleend: prohibit #>         indels, soft clipping and single-end alignments - compatible with RSEM; Singleend: #>         prohibit single-end alignments.' #>       streamable: no #>       id: '#quantTranscriptomeBan' #>       inputBinding: #>         position: 0 #>         prefix: --quantTranscriptomeBan #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Quantification of Annotations #>       sbg:toolDefaultValue: IndelSoftclipSingleend #>       required: no #>     - type: #>       - 'null' #>       - name: quantMode #>         symbols: #>         - TranscriptomeSAM #>         - GeneCounts #>         type: enum #>       label: Quantification mode #>       description: Types of quantification requested. 'TranscriptomeSAM' option outputs #>         SAM/BAM alignments to transcriptome into a separate file. With 'GeneCounts' #>         option, STAR will count number of reads per gene while mapping. #>       streamable: no #>       id: '#quantMode' #>       sbg:category: Quantification of Annotations #>       sbg:toolDefaultValue: '-' #>       required: no #>     - type: #>       - 'null' #>       - name: outSortingType #>         symbols: #>         - Unsorted #>         - SortedByCoordinate #>         - Unsorted SortedByCoordinate #>         type: enum #>       label: Output sorting type #>       description: Type of output sorting. #>       streamable: no #>       id: '#outSortingType' #>       sbg:category: Output #>       sbg:toolDefaultValue: SortedByCoordinate #>       required: no #>     - type: #>       - 'null' #>       - name: outSJfilterReads #>         symbols: #>         - All #>         - Unique #>         type: enum #>       label: Collapsed junctions reads #>       description: 'Which reads to consider for collapsed splice junctions output. #>         All: all reads, unique- and multi-mappers; Unique: uniquely mapping reads #>         only.' #>       streamable: no #>       id: '#outSJfilterReads' #>       inputBinding: #>         position: 0 #>         prefix: --outSJfilterReads #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: 'Output filtering: splice junctions' #>       sbg:toolDefaultValue: All #>       required: no #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Min overhang SJ #>       description: Minimum overhang length for splice junctions on both sides for #>         each of the motifs. To set no output for desired motif, assign -1 to the corresponding #>         field. Does not apply to annotated junctions. #>       streamable: no #>       id: '#outSJfilterOverhangMin' #>       inputBinding: #>         position: 0 #>         prefix: --outSJfilterOverhangMin #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: 'Output filtering: splice junctions' #>       sbg:toolDefaultValue: 30 12 12 12 #>       required: no #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Max gap allowed #>       description: 'Maximum gap allowed for junctions supported by 1,2,3...N reads #>         (int >= 0) i.e. by default junctions supported by 1 read can have gaps <=50000b, #>         by 2 reads: <=100000b, by 3 reads: <=200000. By 4 or more reads: any gap <=alignIntronMax. #>         Does not apply to annotated junctions.' #>       streamable: no #>       id: '#outSJfilterIntronMaxVsReadN' #>       inputBinding: #>         position: 0 #>         prefix: --outSJfilterIntronMaxVsReadN #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: 'Output filtering: splice junctions' #>       sbg:toolDefaultValue: 50000 100000 200000 #>       required: no #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Min distance to other donor/acceptor #>       description: Minimum allowed distance to other junctions' donor/acceptor for #>         each of the motifs (int >= 0). Does not apply to annotated junctions. #>       streamable: no #>       id: '#outSJfilterDistToOtherSJmin' #>       inputBinding: #>         position: 0 #>         prefix: --outSJfilterDistToOtherSJmin #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: 'Output filtering: splice junctions' #>       sbg:toolDefaultValue: 10 0 5 10 #>       required: no #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Min unique count #>       description: Minimum uniquely mapping read count per junction for each of the #>         motifs. To set no output for desired motif, assign -1 to the corresponding #>         field. Junctions are output if one of --outSJfilterCountUniqueMin OR --outSJfilterCountTotalMin #>         conditions are satisfied. Does not apply to annotated junctions. #>       streamable: no #>       id: '#outSJfilterCountUniqueMin' #>       inputBinding: #>         position: 0 #>         prefix: --outSJfilterCountUniqueMin #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: 'Output filtering: splice junctions' #>       sbg:toolDefaultValue: 3 1 1 1 #>       required: no #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Min total count #>       description: Minimum total (multi-mapping+unique) read count per junction for #>         each of the motifs. To set no output for desired motif, assign -1 to the corresponding #>         field. Junctions are output if one of --outSJfilterCountUniqueMin OR --outSJfilterCountTotalMin #>         conditions are satisfied. Does not apply to annotated junctions. #>       streamable: no #>       id: '#outSJfilterCountTotalMin' #>       inputBinding: #>         position: 0 #>         prefix: --outSJfilterCountTotalMin #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: 'Output filtering: splice junctions' #>       sbg:toolDefaultValue: 3 1 1 1 #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMunmapped #>         symbols: #>         - None #>         - Within #>         type: enum #>       label: Write unmapped in SAM #>       description: 'Output of unmapped reads in the SAM format. None: no output Within: #>         output unmapped reads within the main SAM file (i.e. Aligned.out.sam).' #>       streamable: no #>       id: '#outSAMunmapped' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMunmapped #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: None #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMtype #>         symbols: #>         - SAM #>         - BAM #>         type: enum #>       label: Output format #>       description: Format of output alignments. #>       streamable: no #>       id: '#outSAMtype' #>       inputBinding: #>         position: 0 #>         separate: yes #>         valueFrom: #>           engine: '#cwl-js-engine' #>           script: |- #>             { #>               SAM_type = $job.inputs.outSAMtype #>               SORT_type = $job.inputs.outSortingType #>               if (SAM_type && SORT_type) { #>                 return \"--outSAMtype \".concat(SAM_type, \" \", SORT_type) #>               } #>             } #>           class: Expression #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: SAM #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMstrandField #>         symbols: #>         - None #>         - intronMotif #>         type: enum #>       label: Strand field flag #>       description: 'Cufflinks-like strand field flag. None: not used; intronMotif: #>         strand derived from the intron motif. Reads with inconsistent and/or non-canonical #>         introns are filtered out.' #>       streamable: no #>       id: '#outSAMstrandField' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMstrandField #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: None #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMreadID #>         symbols: #>         - Standard #>         - Number #>         type: enum #>       label: Read ID #>       description: 'Read ID record type. Standard: first word (until space) from the #>         FASTx read ID line, removing /1,/2 from the end; Number: read number (index) #>         in the FASTx file.' #>       streamable: no #>       id: '#outSAMreadID' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMreadID #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: Standard #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMprimaryFlag #>         symbols: #>         - OneBestScore #>         - AllBestScore #>         type: enum #>       label: Primary alignments #>       description: 'Which alignments are considered primary - all others will be marked #>         with 0x100 bit in the FLAG. OneBestScore: only one alignment with the best #>         score is primary; AllBestScore: all alignments with the best score are primary.' #>       streamable: no #>       id: '#outSAMprimaryFlag' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMprimaryFlag #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: OneBestScore #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMorder #>         symbols: #>         - Paired #>         - PairedKeepInputOrder #>         type: enum #>       label: Sorting in SAM #>       description: 'Type of sorting for the SAM output. Paired: one mate after the #>         other for all paired alignments; PairedKeepInputOrder: one mate after the #>         other for all paired alignments, the order is kept the same as in the input #>         FASTQ files.' #>       streamable: no #>       id: '#outSAMorder' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMorder #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: Paired #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMmode #>         symbols: #>         - Full #>         - NoQS #>         type: enum #>       label: SAM mode #>       description: 'Mode of SAM output. Full: full SAM output; NoQS: full SAM but #>         without quality scores.' #>       streamable: no #>       id: '#outSAMmode' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMmode #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: Full #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: MAPQ value #>       description: MAPQ value for unique mappers (0 to 255). #>       streamable: no #>       id: '#outSAMmapqUnique' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMmapqUnique #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: '255' #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: SAM header @PG #>       description: Extra @PG (software) line of the SAM header (in addition to STAR). #>       streamable: no #>       id: '#outSAMheaderPG' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMheaderPG #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: '-' #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: SAM header @HD #>       description: '@HD (header) line of the SAM header.' #>       streamable: no #>       id: '#outSAMheaderHD' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMheaderHD #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: '-' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: OR SAM flag #>       description: Set specific bits of the SAM FLAG. #>       streamable: no #>       id: '#outSAMflagOR' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMflagOR #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: AND SAM flag #>       description: Set specific bits of the SAM FLAG. #>       streamable: no #>       id: '#outSAMflagAND' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMflagAND #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: '65535' #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMattributes #>         symbols: #>         - Standard #>         - NH #>         - All #>         - None #>         type: enum #>       label: SAM attributes #>       description: 'Desired SAM attributes, in the order desired for the output SAM. #>         NH: any combination in any order; Standard: NH HI AS nM; All: NH HI AS nM #>         NM MD jM jI; None: no attributes.' #>       streamable: no #>       id: '#outSAMattributes' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMattributes #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: Standard #>       required: no #>     - type: #>       - 'null' #>       - name: outReadsUnmapped #>         symbols: #>         - None #>         - Fastx #>         type: enum #>       label: Output unmapped reads #>       description: 'Output of unmapped reads (besides SAM). None: no output; Fastx: #>         output in separate fasta/fastq files, Unmapped.out.mate1/2.' #>       streamable: no #>       id: '#outReadsUnmapped' #>       inputBinding: #>         position: 0 #>         prefix: --outReadsUnmapped #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: None #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Quality conversion #>       description: Add this number to the quality score (e.g. to convert from Illumina #>         to Sanger, use -31). #>       streamable: no #>       id: '#outQSconversionAdd' #>       inputBinding: #>         position: 0 #>         prefix: --outQSconversionAdd #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - name: outFilterType #>         symbols: #>         - Normal #>         - BySJout #>         type: enum #>       label: Filtering type #>       description: 'Type of filtering. Normal: standard filtering using only current #>         alignment; BySJout: keep only those reads that contain junctions that passed #>         filtering into SJ.out.tab.' #>       streamable: no #>       id: '#outFilterType' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterType #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: Normal #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Min score normalized #>       description: '''Minimum score'' normalized to read length (sum of mates'' lengths #>         for paired-end reads).' #>       streamable: no #>       id: '#outFilterScoreMinOverLread' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterScoreMinOverLread #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '0.66' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min score #>       description: Alignment will be output only if its score is higher than this #>         value. #>       streamable: no #>       id: '#outFilterScoreMin' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterScoreMin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Multimapping score range #>       description: The score range below the maximum score for multimapping alignments. #>       streamable: no #>       id: '#outFilterMultimapScoreRange' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterMultimapScoreRange #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '1' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max number of mappings #>       description: Read alignments will be output only if the read maps fewer than #>         this value, otherwise no alignments will be output. #>       streamable: no #>       id: '#outFilterMultimapNmax' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterMultimapNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '10' #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Mismatches to *read* length #>       description: Alignment will be output only if its ratio of mismatches to *read* #>         length is less than this value. #>       streamable: no #>       id: '#outFilterMismatchNoverReadLmax' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterMismatchNoverReadLmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '1' #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Mismatches to *mapped* length #>       description: Alignment will be output only if its ratio of mismatches to *mapped* #>         length is less than this value. #>       streamable: no #>       id: '#outFilterMismatchNoverLmax' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterMismatchNoverLmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '0.3' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max number of mismatches #>       description: Alignment will be output only if it has fewer mismatches than this #>         value. #>       streamable: no #>       id: '#outFilterMismatchNmax' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterMismatchNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '10' #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Min matched bases normalized #>       description: '''Minimum matched bases'' normalized to read length (sum of mates #>         lengths for paired-end reads).' #>       streamable: no #>       id: '#outFilterMatchNminOverLread' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterMatchNminOverLread #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '0.66' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min matched bases #>       description: Alignment will be output only if the number of matched bases is #>         higher than this value. #>       streamable: no #>       id: '#outFilterMatchNmin' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterMatchNmin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - name: outFilterIntronMotifs #>         symbols: #>         - None #>         - RemoveNoncanonical #>         - RemoveNoncanonicalUnannotated #>         type: enum #>       label: Motifs filtering #>       description: 'Filter alignment using their motifs. None: no filtering; RemoveNoncanonical: #>         filter out alignments that contain non-canonical junctions; RemoveNoncanonicalUnannotated: #>         filter out alignments that contain non-canonical unannotated junctions when #>         using annotated splice junctions database. The annotated non-canonical junctions #>         will be kept.' #>       streamable: no #>       id: '#outFilterIntronMotifs' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterIntronMotifs #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: None #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max insert junctions #>       description: Maximum number of junction to be inserted to the genome on the #>         fly at the mapping stage, including those from annotations and those detected #>         in the 1st step of the 2-pass run. #>       streamable: no #>       id: '#limitSjdbInsertNsj' #>       inputBinding: #>         position: 0 #>         prefix: --limitSjdbInsertNsj #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Limits #>       sbg:toolDefaultValue: '1000000' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Junctions max number #>       description: Max number of junctions for one read (including all multi-mappers). #>       streamable: no #>       id: '#limitOutSJoneRead' #>       inputBinding: #>         position: 0 #>         prefix: --limitOutSJoneRead #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Limits #>       sbg:toolDefaultValue: '1000' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Collapsed junctions max number #>       description: Max number of collapsed junctions. #>       streamable: no #>       id: '#limitOutSJcollapsed' #>       inputBinding: #>         position: 0 #>         prefix: --limitOutSJcollapsed #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Limits #>       sbg:toolDefaultValue: '1000000' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Limit BAM sorting memory #>       description: Maximum available RAM for sorting BAM. If set to 0, it will be #>         set to the genome index size. #>       streamable: no #>       id: '#limitBAMsortRAM' #>       inputBinding: #>         position: 0 #>         prefix: --limitBAMsortRAM #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Limits #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Genome dir name #>       description: Name of the directory which contains genome files (when genome.tar #>         is uncompressed). #>       streamable: no #>       id: '#genomeDirName' #>       inputBinding: #>         position: 0 #>         prefix: --genomeDir #>         separate: yes #>         valueFrom: #>           engine: '#cwl-js-engine' #>           script: $job.inputs.genomeDirName || \"genomeDir\" #>           class: Expression #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Basic #>       sbg:toolDefaultValue: genomeDir #>       required: no #>     - type: #>       - File #>       label: Genome files #>       description: Genome files created using STAR Genome Generate. #>       streamable: no #>       id: '#genome' #>       sbg:category: Basic #>       sbg:fileTypes: TAR #>       required: yes #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Clip 5p bases #>       description: Number of bases to clip from 5p of each mate. In case only one #>         value is given, it will be assumed the same for both mates. #>       streamable: no #>       id: '#clip5pNbases' #>       inputBinding: #>         position: 0 #>         prefix: --clip5pNbases #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Read parameters #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Clip 3p bases #>       description: Number of bases to clip from 3p of each mate. In case only one #>         value is given, it will be assumed the same for both mates. #>       streamable: no #>       id: '#clip3pNbases' #>       inputBinding: #>         position: 0 #>         prefix: --clip3pNbases #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Read parameters #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Clip 3p after adapter seq. #>       description: Number of bases to clip from 3p of each mate after the adapter #>         clipping. In case only one value is given, it will be assumed the same for #>         both mates. #>       streamable: no #>       id: '#clip3pAfterAdapterNbases' #>       inputBinding: #>         position: 0 #>         prefix: --clip3pAfterAdapterNbases #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Read parameters #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - items: string #>         type: array #>       label: Clip 3p adapter sequence #>       description: Adapter sequence to clip from 3p of each mate. In case only one #>         value is given, it will be assumed the same for both mates. #>       streamable: no #>       id: '#clip3pAdapterSeq' #>       inputBinding: #>         position: 0 #>         prefix: --clip3pAdapterSeq #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Read parameters #>       sbg:toolDefaultValue: '-' #>       required: no #>     - type: #>       - 'null' #>       - items: float #>         type: array #>       label: Max mismatches proportions #>       description: Max proportion of mismatches for 3p adapter clipping for each mate. #>         In case only one value is given, it will be assumed the same for both mates. #>       streamable: no #>       id: '#clip3pAdapterMMp' #>       inputBinding: #>         position: 0 #>         prefix: --clip3pAdapterMMp #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Read parameters #>       sbg:toolDefaultValue: '0.1' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min segment length #>       description: Minimum length of chimeric segment length, if =0, no chimeric output #>         (int>=0). #>       streamable: no #>       id: '#chimSegmentMin' #>       inputBinding: #>         position: 0 #>         prefix: --chimSegmentMin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Chimeric Alignments #>       sbg:toolDefaultValue: '15' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min separation score #>       description: Minimum difference (separation) between the best chimeric score #>         and the next one (int>=0). #>       streamable: no #>       id: '#chimScoreSeparation' #>       inputBinding: #>         position: 0 #>         prefix: --chimScoreSeparation #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Chimeric Alignments #>       sbg:includeInPorts: no #>       sbg:toolDefaultValue: '10' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min total score #>       description: Minimum total (summed) score of the chimeric segments (int>=0). #>       streamable: no #>       id: '#chimScoreMin' #>       inputBinding: #>         position: 0 #>         prefix: --chimScoreMin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Chimeric Alignments #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Non-GT/AG penalty #>       description: Penalty for a non-GT/AG chimeric junction. #>       streamable: no #>       id: '#chimScoreJunctionNonGTAG' #>       inputBinding: #>         position: 0 #>         prefix: --chimScoreJunctionNonGTAG #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Chimeric Alignments #>       sbg:toolDefaultValue: '-1' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max drop score #>       description: Max drop (difference) of chimeric score (the sum of scores of all #>         chimeric segements) from the read length (int>=0). #>       streamable: no #>       id: '#chimScoreDropMax' #>       inputBinding: #>         position: 0 #>         prefix: --chimScoreDropMax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Chimeric Alignments #>       sbg:toolDefaultValue: '20' #>       required: no #>     - type: #>       - 'null' #>       - name: chimOutType #>         symbols: #>         - SeparateSAMold #>         - Within #>         type: enum #>       label: Chimeric output type #>       description: 'Type of chimeric output. SeparateSAMold: output old SAM into separate #>         Chimeric.out.sam file; Within: output into main aligned SAM/BAM files.' #>       streamable: no #>       id: '#chimOutType' #>       sbg:category: Chimeric Alignments #>       sbg:toolDefaultValue: SeparateSAMold #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min junction overhang #>       description: Minimum overhang for a chimeric junction (int>=0). #>       streamable: no #>       id: '#chimJunctionOverhangMin' #>       inputBinding: #>         position: 0 #>         prefix: --chimJunctionOverhangMin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Chimeric Alignments #>       sbg:toolDefaultValue: '20' #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Max windows per read #>       description: Max number of windows per read (int>0). #>       streamable: no #>       id: '#alignWindowsPerReadNmax' #>       inputBinding: #>         position: 0 #>         prefix: --alignWindowsPerReadNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '10000' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max transcripts per window #>       description: Max number of transcripts per window (int>0). #>       streamable: no #>       id: '#alignTranscriptsPerWindowNmax' #>       inputBinding: #>         position: 0 #>         prefix: --alignTranscriptsPerWindowNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '100' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max transcripts per read #>       description: Max number of different alignments per read to consider (int>0). #>       streamable: no #>       id: '#alignTranscriptsPerReadNmax' #>       inputBinding: #>         position: 0 #>         prefix: --alignTranscriptsPerReadNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '10000' #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Min mapped length normalized #>       description: alignSplicedMateMapLmin normalized to mate length (float>0). #>       streamable: no #>       id: '#alignSplicedMateMapLminOverLmate' #>       inputBinding: #>         position: 0 #>         prefix: --alignSplicedMateMapLminOverLmate #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '0.66' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min mapped length #>       description: Minimum mapped length for a read mate that is spliced (int>0). #>       streamable: no #>       id: '#alignSplicedMateMapLmin' #>       inputBinding: #>         position: 0 #>         prefix: --alignSplicedMateMapLmin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - name: alignSoftClipAtReferenceEnds #>         symbols: #>         - 'Yes' #>         - 'No' #>         type: enum #>       label: Soft clipping #>       description: 'Option which allows soft clipping of alignments at the reference #>         (chromosome) ends. Can be disabled for compatibility with Cufflinks/Cuffmerge. #>         Yes: Enables soft clipping; No: Disables soft clipping.' #>       streamable: no #>       id: '#alignSoftClipAtReferenceEnds' #>       inputBinding: #>         position: 0 #>         prefix: --alignSoftClipAtReferenceEnds #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: 'Yes' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min overhang #>       description: Minimum overhang (i.e. block size) for spliced alignments (int>0). #>       streamable: no #>       id: '#alignSJoverhangMin' #>       inputBinding: #>         position: 0 #>         prefix: --alignSJoverhangMin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '5' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: 'Min overhang: annotated' #>       description: Minimum overhang (i.e. block size) for annotated (sjdb) spliced #>         alignments (int>0). #>       streamable: no #>       id: '#alignSJDBoverhangMin' #>       inputBinding: #>         position: 0 #>         prefix: --alignSJDBoverhangMin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:includeInPorts: no #>       sbg:toolDefaultValue: '3' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max mates gap #>       description: Maximum gap between two mates, if 0, max intron gap will be determined #>         by (2^winBinNbits)*winAnchorDistNbins. #>       streamable: no #>       id: '#alignMatesGapMax' #>       inputBinding: #>         position: 0 #>         prefix: --alignMatesGapMax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min intron size #>       description: 'Minimum intron size: genomic gap is considered intron if its length #>         >= alignIntronMin, otherwise it is considered Deletion (int>=0).' #>       streamable: no #>       id: '#alignIntronMin' #>       inputBinding: #>         position: 0 #>         prefix: --alignIntronMin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '21' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max intron size #>       description: Maximum intron size, if 0, max intron size will be determined by #>         (2^winBinNbits)*winAnchorDistNbins. #>       streamable: no #>       id: '#alignIntronMax' #>       inputBinding: #>         position: 0 #>         prefix: --alignIntronMax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - name: alignEndsType #>         symbols: #>         - Local #>         - EndToEnd #>         type: enum #>       label: Alignment type #>       description: 'Type of read ends alignment. Local: standard local alignment with #>         soft-clipping allowed. EndToEnd: force end to end read alignment, do not soft-clip.' #>       streamable: no #>       id: '#alignEndsType' #>       inputBinding: #>         position: 0 #>         prefix: --alignEndsType #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: Local #>       required: no #>     outputs: #>     - type: #>       - 'null' #>       - items: File #>         type: array #>       label: Unmapped reads #>       description: Output of unmapped reads. #>       streamable: no #>       id: '#unmapped_reads' #>       outputBinding: #>         glob: '*Unmapped.out*' #>       sbg:fileTypes: FASTQ #>     - type: #>       - 'null' #>       - File #>       label: Transcriptome alignments #>       description: Alignments translated into transcript coordinates. #>       streamable: no #>       id: '#transcriptome_aligned_reads' #>       outputBinding: #>         glob: '*Transcriptome*' #>       sbg:fileTypes: BAM #>     - type: #>       - 'null' #>       - File #>       label: Splice junctions #>       description: High confidence collapsed splice junctions in tab-delimited format. #>         Only junctions supported by uniquely mapping reads are reported. #>       streamable: no #>       id: '#splice_junctions' #>       outputBinding: #>         glob: '*SJ.out.tab' #>       sbg:fileTypes: TAB #>     - type: #>       - 'null' #>       - File #>       label: Reads per gene #>       description: File with number of reads per gene. A read is counted if it overlaps #>         (1nt or more) one and only one gene. #>       streamable: no #>       id: '#reads_per_gene' #>       outputBinding: #>         glob: '*ReadsPerGene*' #>       sbg:fileTypes: TAB #>     - type: #>       - 'null' #>       - items: File #>         type: array #>       label: Log files #>       description: Log files produced during alignment. #>       streamable: no #>       id: '#log_files' #>       outputBinding: #>         glob: '*Log*.out' #>       sbg:fileTypes: OUT #>     - type: #>       - 'null' #>       - File #>       label: Intermediate genome files #>       description: Archive with genome files produced when annotations are included #>         on the fly (in the mapping step). #>       streamable: no #>       id: '#intermediate_genome' #>       outputBinding: #>         glob: '*_STARgenome.tar' #>       sbg:fileTypes: TAR #>     - type: #>       - 'null' #>       - File #>       label: Chimeric junctions #>       description: If chimSegmentMin in 'Chimeric Alignments' section is set to 0, #>         'Chimeric Junctions' won't be output. #>       streamable: no #>       id: '#chimeric_junctions' #>       outputBinding: #>         glob: '*Chimeric.out.junction' #>       sbg:fileTypes: JUNCTION #>     - type: #>       - 'null' #>       - File #>       label: Chimeric alignments #>       description: Aligned Chimeric sequences SAM - if chimSegmentMin = 0, no Chimeric #>         Alignment SAM and Chimeric Junctions outputs. #>       streamable: no #>       id: '#chimeric_alignments' #>       outputBinding: #>         glob: '*.Chimeric.out.sam' #>       sbg:fileTypes: SAM #>     - type: #>       - 'null' #>       - File #>       label: Aligned SAM/BAM #>       description: Aligned sequence in SAM/BAM format. #>       streamable: no #>       id: '#aligned_reads' #>       outputBinding: #>         glob: #>           engine: '#cwl-js-engine' #>           script: |- #>             { #>               if ($job.inputs.outSortingType == 'SortedByCoordinate') { #>                 sort_name = '.sortedByCoord' #>               } #>               else { #>                 sort_name = '' #>               } #>               if ($job.inputs.outSAMtype == 'BAM') { #>                 sam_name = \"*.Aligned\".concat( sort_name, '.out.bam') #>               } #>               else { #>                 sam_name = \"*.Aligned.out.sam\" #>               } #>               return sam_name #>             } #>           class: Expression #>       sbg:fileTypes: SAM, BAM #>     requirements: #>     - class: ExpressionEngineRequirement #>       id: '#cwl-js-engine' #>       requirements: #>       - class: DockerRequirement #>         dockerPull: rabix/js-engine #>     hints: #>     - class: DockerRequirement #>       dockerPull: images.sbgenomics.com/ana_d/star:2.4.2a #>       dockerImageId: a4b0ad2c3cae #>     - class: sbg:MemRequirement #>       value: 60000 #>     - class: sbg:CPURequirement #>       value: 15 #>     label: STAR #>     description: STAR is an ultrafast universal RNA-seq aligner. It has very high #>       mapping speed, accurate alignment of contiguous and spliced reads, detection #>       of polyA-tails, non-canonical splices and chimeric (fusion) junctions. It works #>       with reads starting from lengths ~15 bases up to ~300 bases. In case of having #>       longer reads, use of STAR Long is recommended. #>     class: CommandLineTool #>     baseCommand: #>     - tar #>     - -xvf #>     - class: Expression #>       script: $job.inputs.genome.path #>       engine: '#cwl-js-engine' #>     - '&&' #>     - /opt/STAR #>     - --runThreadN #>     - class: Expression #>       script: |- #>         { #>           return $job.allocatedResources.cpu #>         } #>       engine: '#cwl-js-engine' #>     arguments: #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: |- #>           { #>             file = [].concat($job.inputs.reads)[0].path #>             extension = /(?:\\.([^.]+))?$/.exec(file)[1] #>             if (extension == \"gz\") { #>               return \"--readFilesCommand zcat\" #>             } else if (extension == \"bz2\") { #>               return \"--readFilesCommand bzcat\" #>             } #>           } #>         class: Expression #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\t\\n  var sjFormat = \\\"False\\\"\\n  var gtfgffFormat = \\\"False\\\"\\n #>           \\ var list = $job.inputs.sjdbGTFfile\\n  var paths_list = []\\n  var joined_paths #>           = \\\"\\\"\\n  \\n  if (list) {\\n    list.forEach(function(f){return paths_list.push(f.path)})\\n #>           \\   joined_paths = paths_list.join(\\\" \\\")\\n\\n\\n    paths_list.forEach(function(f){\\n #>           \\     ext = f.replace(/^.*\\\\./, '')\\n      if (ext == \\\"gff\\\" || ext == #>           \\\"gtf\\\") {\\n        gtfgffFormat = \\\"True\\\"\\n        return gtfgffFormat\\n #>           \\     }\\n      if (ext == \\\"txt\\\") {\\n        sjFormat = \\\"True\\\"\\n        return #>           sjFormat\\n      }\\n    })\\n\\n    if ($job.inputs.sjdbGTFfile && $job.inputs.sjdbInsertSave #>           != \\\"None\\\") {\\n      if (sjFormat == \\\"True\\\") {\\n        return \\\"--sjdbFileChrStartEnd #>           \\\".concat(joined_paths)\\n      }\\n      else if (gtfgffFormat == \\\"True\\\") #>           {\\n        return \\\"--sjdbGTFfile \\\".concat(joined_paths)\\n      }\\n    }\\n #>           \\ }\\n}\" #>         class: Expression #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  a = b = c = d = e = f = g = []\\n  if ($job.inputs.sjdbGTFchrPrefix) #>           {\\n    a = [\\\"--sjdbGTFchrPrefix\\\", $job.inputs.sjdbGTFchrPrefix]\\n  }\\n #>           \\ if ($job.inputs.sjdbGTFfeatureExon) {\\n    b = [\\\"--sjdbGTFfeatureExon\\\", #>           $job.inputs.sjdbGTFfeatureExon]\\n  }\\n  if ($job.inputs.sjdbGTFtagExonParentTranscript) #>           {\\n    c = [\\\"--sjdbGTFtagExonParentTranscript\\\", $job.inputs.sjdbGTFtagExonParentTranscript]\\n #>           \\ }\\n  if ($job.inputs.sjdbGTFtagExonParentGene) {\\n    d = [\\\"--sjdbGTFtagExonParentGene\\\", #>           $job.inputs.sjdbGTFtagExonParentGene]\\n  }\\n  if ($job.inputs.sjdbOverhang) #>           {\\n    e = [\\\"--sjdbOverhang\\\", $job.inputs.sjdbOverhang]\\n  }\\n  if ($job.inputs.sjdbScore) #>           {\\n    f = [\\\"--sjdbScore\\\", $job.inputs.sjdbScore]\\n  }\\n  if ($job.inputs.sjdbInsertSave) #>           {\\n    g = [\\\"--sjdbInsertSave\\\", $job.inputs.sjdbInsertSave]\\n  }\\n  \\n #>           \\ \\n  \\n  if ($job.inputs.sjdbInsertSave != \\\"None\\\" && $job.inputs.sjdbGTFfile) #>           {\\n    new_list = a.concat(b, c, d, e, f, g)\\n    return new_list.join(\\\" #>           \\\")\\n  }\\n}\" #>         class: Expression #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: |- #>           { #>             if ($job.inputs.twopassMode == \"Basic\") { #>               return \"--twopass1readsN \".concat($job.inputs.twopass1readsN) #>             } #>           } #>         class: Expression #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: |- #>           { #>             if ($job.inputs.chimOutType == \"Within\") { #>               return \"--chimOutType \".concat(\"Within\", $job.inputs.outSAMtype) #>             } #>             else { #>               return \"--chimOutType SeparateSAMold\" #>             } #>           } #>         class: Expression #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  var param_list = []\\n  \\n  function add_param(key, value){\\n #>           \\   if (value == \\\"\\\") {\\n      return\\n    }\\n    else {\\n      return #>           param_list.push(key.concat(\\\":\\\", value))\\n    }\\n  }\\n  \\n  add_param('ID', #>           \\\"1\\\")\\n  if ($job.inputs.rg_seq_center) {\\n    add_param('CN', $job.inputs.rg_seq_center)\\n #>           \\ } else if ([].concat($job.inputs.reads)[0].metadata.seq_center) {\\n    add_param('CN', #>           [].concat($job.inputs.reads)[0].metadata.seq_center)\\n  }\\n  if ($job.inputs.rg_library_id) #>           {\\n    add_param('LB', $job.inputs.rg_library_id)\\n  } else if ([].concat($job.inputs.reads)[0].metadata.library_id) #>           {\\n    add_param('LB', [].concat($job.inputs.reads)[0].metadata.library_id)\\n #>           \\ }\\n  if ($job.inputs.rg_mfl) {\\n    add_param('PI', $job.inputs.rg_mfl)\\n #>           \\ } else if ([].concat($job.inputs.reads)[0].metadata.median_fragment_length) #>           {\\n    add_param('PI', [].concat($job.inputs.reads)[0].metadata.median_fragment_length)\\n #>           \\ }\\n  if ($job.inputs.rg_platform) {\\n    add_param('PL', $job.inputs.rg_platform.replace(/ #>           /g,\\\"_\\\"))\\n  } else if ([].concat($job.inputs.reads)[0].metadata.platform) #>           {\\n    add_param('PL', [].concat($job.inputs.reads)[0].metadata.platform.replace(/ #>           /g,\\\"_\\\"))\\n  }\\n  if ($job.inputs.rg_platform_unit_id) {\\n    add_param('PU', #>           $job.inputs.rg_platform_unit_id)\\n  } else if ([].concat($job.inputs.reads)[0].metadata.platform_unit_id) #>           {\\n    add_param('PU', [].concat($job.inputs.reads)[0].metadata.platform_unit_id)\\n #>           \\ }\\n  if ($job.inputs.rg_sample_id) {\\n    add_param('SM', $job.inputs.rg_sample_id)\\n #>           \\ } else if ([].concat($job.inputs.reads)[0].metadata.sample_id) {\\n    add_param('SM', #>           [].concat($job.inputs.reads)[0].metadata.sample_id)\\n  }\\n  return \\\"--outSAMattrRGline #>           \\\".concat(param_list.join(\\\" \\\"))\\n}\" #>         class: Expression #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: |- #>           { #>             if ($job.inputs.sjdbGTFfile && $job.inputs.quantMode) { #>               return \"--quantMode \".concat($job.inputs.quantMode) #>             } #>           } #>         class: Expression #>     - position: 100 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  function sharedStart(array){\\n  var A= array.concat().sort(), #>           \\n      a1= A[0], a2= A[A.length-1], L= a1.length, i= 0;\\n  while(i<L && #>           a1.charAt(i)=== a2.charAt(i)) i++;\\n  return a1.substring(0, i);\\n  }\\n #>           \\ path_list = []\\n  arr = [].concat($job.inputs.reads)\\n  arr.forEach(function(f){return #>           path_list.push(f.path.replace(/\\\\\\\\/g,'/').replace( /.*\\\\//, '' ))})\\n  common_prefix #>           = sharedStart(path_list)\\n  intermediate = common_prefix.replace( /\\\\-$|\\\\_$|\\\\.$/, #>           '' ).concat(\\\"._STARgenome\\\")\\n  source = \\\"./\\\".concat(intermediate)\\n #>           \\ destination = intermediate.concat(\\\".tar\\\")\\n  if ($job.inputs.sjdbGTFfile #>           && $job.inputs.sjdbInsertSave && $job.inputs.sjdbInsertSave != \\\"None\\\") #>           {\\n    return \\\"&& tar -vcf \\\".concat(destination, \\\" \\\", source)\\n  }\\n}\" #>         class: Expression #>     - position: 0 #>       prefix: --outFileNamePrefix #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  function sharedStart(array){\\n  var A= array.concat().sort(), #>           \\n      a1= A[0], a2= A[A.length-1], L= a1.length, i= 0;\\n  while(i<L && #>           a1.charAt(i)=== a2.charAt(i)) i++;\\n  return a1.substring(0, i);\\n  }\\n #>           \\ path_list = []\\n  arr = [].concat($job.inputs.reads)\\n  arr.forEach(function(f){return #>           path_list.push(f.path.replace(/\\\\\\\\/g,'/').replace( /.*\\\\//, '' ))})\\n  common_prefix #>           = sharedStart(path_list)\\n  return \\\"./\\\".concat(common_prefix.replace( #>           /\\\\-$|\\\\_$|\\\\.$/, '' ), \\\".\\\")\\n}\" #>         class: Expression #>     - position: 101 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  function sharedStart(array){\\n  var A= array.concat().sort(), #>           \\n      a1= A[0], a2= A[A.length-1], L= a1.length, i= 0;\\n  while(i<L && #>           a1.charAt(i)=== a2.charAt(i)) i++;\\n  return a1.substring(0, i);\\n  }\\n #>           \\ path_list = []\\n  arr = [].concat($job.inputs.reads)\\n  arr.forEach(function(f){return #>           path_list.push(f.path.replace(/\\\\\\\\/g,'/').replace( /.*\\\\//, '' ))})\\n  common_prefix #>           = sharedStart(path_list)\\n  mate1 = common_prefix.replace( /\\\\-$|\\\\_$|\\\\.$/, #>           '' ).concat(\\\".Unmapped.out.mate1\\\")\\n  mate2 = common_prefix.replace( /\\\\-$|\\\\_$|\\\\.$/, #>           '' ).concat(\\\".Unmapped.out.mate2\\\")\\n  mate1fq = mate1.concat(\\\".fastq\\\")\\n #>           \\ mate2fq = mate2.concat(\\\".fastq\\\")\\n  if ($job.inputs.outReadsUnmapped #>           == \\\"Fastx\\\" && arr.length > 1) {\\n    return \\\"&& mv \\\".concat(mate1, \\\" #>           \\\", mate1fq, \\\" && mv \\\", mate2, \\\" \\\", mate2fq)\\n  }\\n  else if ($job.inputs.outReadsUnmapped #>           == \\\"Fastx\\\" && arr.length == 1) {\\n    return \\\"&& mv \\\".concat(mate1, #>           \\\" \\\", mate1fq)\\n  }\\n}\" #>         class: Expression #>     stdin: '' #>     stdout: '' #>     successCodes: [] #>     temporaryFailCodes: [] #>     x: 624.0 #>     'y': 323 #>   sbg:x: 700.0 #>   sbg:y: 200.0 #> sbg:canvas_zoom: 0.6 #> sbg:canvas_y: -16 #> sbg:canvas_x: -41 #> sbg:batchInput: '#sjdbGTFfile' #> sbg:batchBy: #>   type: criteria #>   criteria: #>   - metadata.sample_id #>   - metadata.library_id #>  f1$set_batch(\"sjdbGTFfile\", type = \"ITEM\") #> sbg:validationErrors: [] #> sbg:sbgMaintained: no #> sbg:latestRevision: 2 #> sbg:toolAuthor: Seven Bridges Genomics #> sbg:createdOn: 1463601910 #> sbg:categories: #> - Alignment #> - RNA #> sbg:contributors: #> - tengfei #> sbg:project: tengfei/quickstart #> sbg:createdBy: tengfei #> sbg:toolkitVersion: 2.4.2a #> sbg:id: tengfei/quickstart/rna-seq-alignment-star-demo/2 #> sbg:license: Apache License 2.0 #> sbg:revision: 2 #> sbg:modifiedOn: 1463601974 #> sbg:modifiedBy: tengfei #> sbg:revisionsInfo: #> - sbg:modifiedBy: tengfei #>   sbg:modifiedOn: 1463601910 #>   sbg:revision: 0 #> - sbg:modifiedBy: tengfei #>   sbg:modifiedOn: 1463601952 #>   sbg:revision: 1 #> - sbg:modifiedBy: tengfei #>   sbg:modifiedOn: 1463601974 #>   sbg:revision: 2 #> sbg:toolkit: STAR #> id: '#tengfei/quickstart/rna-seq-alignment-star-demo/2' #> inputs: #> - type: #>   - items: File #>     type: array #>   label: Read sequence #>   description: Read sequence. #>   streamable: no #>   id: '#reads' #>   inputBinding: #>     position: 10 #>     separate: yes #>     itemSeparator: ' ' #>     valueFrom: #>       engine: '#cwl-js-engine' #>       script: \"{\\t\\n  var list = [].concat($job.inputs.reads)\\n  \\n  var resp = []\\n #>         \\ \\n  if (list.length == 1){\\n    resp.push(list[0].path)\\n    \\n  }else if #>         (list.length == 2){    \\n    \\n    left = \\\"\\\"\\n    right = \\\"\\\"\\n      \\n #>         \\   for (index = 0; index < list.length; ++index) {\\n      \\n      if (list[index].metadata #>         != null){\\n        if (list[index].metadata.paired_end == 1){\\n          left #>         = list[index].path\\n        }else if (list[index].metadata.paired_end == 2){\\n #>         \\         right = list[index].path\\n        }\\n      }\\n    }\\n    \\n    if #>         (left != \\\"\\\" && right != \\\"\\\"){      \\n      resp.push(left)\\n      resp.push(right)\\n #>         \\   }\\n  }\\n  else if (list.length > 2){\\n    left = []\\n    right = []\\n #>         \\     \\n    for (index = 0; index < list.length; ++index) {\\n      \\n      if #>         (list[index].metadata != null){\\n        if (list[index].metadata.paired_end #>         == 1){\\n          left.push(list[index].path)\\n        }else if (list[index].metadata.paired_end #>         == 2){\\n          right.push(list[index].path)\\n        }\\n      }\\n    }\\n #>         \\   left_join = left.join()\\n    right_join = right.join()\\n    if (left != #>         [] && right != []){      \\n      resp.push(left_join)\\n      resp.push(right_join)\\n #>         \\   }\\t\\n  }\\n  \\n  if(resp.length > 0){    \\n    return \\\"--readFilesIn \\\".concat(resp.join(\\\" #>         \\\"))\\n  }\\n}\" #>       class: Expression #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Basic #>   sbg:fileTypes: FASTA, FASTQ, FA, FQ, FASTQ.GZ, FQ.GZ, FASTQ.BZ2, FQ.BZ2 #>   sbg:x: 200.0 #>   sbg:y: 200.0 #>   sbg:includeInPorts: yes #>   required: yes #> - type: #>   - 'null' #>   - items: File #>     type: array #>   label: sjdbGTFfile #>   streamable: no #>   id: '#sjdbGTFfile' #>   sbg:x: 160.4999759 #>   sbg:y: 195.0833106 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - items: File #>     type: array #>   label: fastq #>   streamable: no #>   id: '#fastq' #>   sbg:x: 164.2499914 #>   sbg:y: 323.7499502 #>   sbg:includeInPorts: yes #>   required: yes #> - type: #>   - File #>   label: genomeFastaFiles #>   streamable: no #>   id: '#genomeFastaFiles' #>   sbg:x: 167.7499601 #>   sbg:y: 469.9999106 #>   sbg:includeInPorts: yes #>   required: yes #> - type: #>   - 'null' #>   - string #>   label: Exons' parents name #>   description: Tag name to be used as exons' transcript-parents. #>   streamable: no #>   id: '#sjdbGTFtagExonParentTranscript' #>   sbg:category: Splice junctions db parameters #>   sbg:x: 200.0 #>   sbg:y: 350.0 #>   sbg:includeInPorts: yes #>   sbg:toolDefaultValue: transcript_id #>   required: no #> - type: #>   - 'null' #>   - string #>   label: Gene name #>   description: Tag name to be used as exons' gene-parents. #>   streamable: no #>   id: '#sjdbGTFtagExonParentGene' #>   sbg:category: Splice junctions db parameters #>   sbg:x: 200.0 #>   sbg:y: 400.0 #>   sbg:includeInPorts: yes #>   sbg:toolDefaultValue: gene_id #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max loci anchors #>   description: Max number of loci anchors are allowed to map to (int>0). #>   streamable: no #>   id: '#winAnchorMultimapNmax' #>   sbg:category: Windows, Anchors, Binning #>   sbg:x: 200.0 #>   sbg:y: 450.0 #>   sbg:includeInPorts: yes #>   sbg:toolDefaultValue: '50' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max bins between anchors #>   description: Max number of bins between two anchors that allows aggregation of anchors #>     into one window (int>0). #>   streamable: no #>   id: '#winAnchorDistNbins' #>   sbg:category: Windows, Anchors, Binning #>   sbg:x: 200.0 #>   sbg:y: 500.0 #>   sbg:includeInPorts: yes #>   sbg:toolDefaultValue: '9' #>   required: no #> outputs: #> - type: #>   - 'null' #>   - items: File #>     type: array #>   label: Unmapped reads #>   description: Output of unmapped reads. #>   streamable: no #>   id: '#unmapped_reads' #>   source: '#unmapped_reads' #>   sbg:x: 800.0 #>   sbg:y: 200.0 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: Transcriptome alignments #>   description: Alignments translated into transcript coordinates. #>   streamable: no #>   id: '#transcriptome_aligned_reads' #>   source: '#transcriptome_aligned_reads' #>   sbg:x: 800.0 #>   sbg:y: 233.3333333 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: Splice junctions #>   description: High confidence collapsed splice junctions in tab-delimited format. #>     Only junctions supported by uniquely mapping reads are reported. #>   streamable: no #>   id: '#splice_junctions' #>   source: '#splice_junctions' #>   sbg:x: 800.0 #>   sbg:y: 266.6666667 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: Reads per gene #>   description: File with number of reads per gene. A read is counted if it overlaps #>     (1nt or more) one and only one gene. #>   streamable: no #>   id: '#reads_per_gene' #>   source: '#reads_per_gene' #>   sbg:x: 800.0 #>   sbg:y: 300.0 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - items: File #>     type: array #>   label: Log files #>   description: Log files produced during alignment. #>   streamable: no #>   id: '#log_files' #>   source: '#log_files' #>   sbg:x: 800.0 #>   sbg:y: 333.3333333 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: Chimeric junctions #>   description: If chimSegmentMin in 'Chimeric Alignments' section is set to 0, 'Chimeric #>     Junctions' won't be output. #>   streamable: no #>   id: '#chimeric_junctions' #>   source: '#chimeric_junctions' #>   sbg:x: 800.0 #>   sbg:y: 366.6666667 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: Intermediate genome files #>   description: Archive with genome files produced when annotations are included on #>     the fly (in the mapping step). #>   streamable: no #>   id: '#intermediate_genome' #>   source: #>   - '#intermediate_genome' #>   - intermediate_genome #>   sbg:x: 800.0 #>   sbg:y: 400.0 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: Chimeric alignments #>   description: Aligned Chimeric sequences SAM - if chimSegmentMin = 0, no Chimeric #>     Alignment SAM and Chimeric Junctions outputs. #>   streamable: no #>   id: '#chimeric_alignments' #>   source: '#chimeric_alignments' #>   sbg:x: 800.0 #>   sbg:y: 433.3333333 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: Sorted BAM/SAM #>   description: Sorted BAM or SAM file. #>   streamable: no #>   id: '#sorted_bam' #>   source: '#sorted_bam' #>   sbg:x: 800.0 #>   sbg:y: 466.6666667 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: Result #>   description: Source FASTQ file with updated metadata. #>   streamable: no #>   id: '#result' #>   source: '#result' #>   sbg:x: 800.0 #>   sbg:y: 500.0 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: Intermediate genome files #>   description: Archive with genome files produced when annotations are included on #>     the fly (in the mapping step). #>   streamable: no #>   id: '#intermediate_genome' #>   source: #>   - '#intermediate_genome' #>   - intermediate_genome #>   sbg:x: 800.0 #>   sbg:y: 533.3333333 #>   sbg:includeInPorts: yes #>   required: no #> requirements: #> - class: CreateFileRequirement #>   fileDef: [] #> hints: #> - class: sbg:AWSInstanceType #>   value: c3.8xlarge #> label: RNA-seq Alignment - STAR #> description: \"Alignment to a reference genome and transcriptome presents the first #>   step of RNA-Seq analysis. This pipeline uses STAR, an ultrafast RNA-seq aligner #>   capable of mapping full length RNA sequences and detecting de novo canonical junctions, #>   non-canonical splices, and chimeric (fusion) transcripts. It is optimized for mammalian #>   sequence reads, but fine tuning of its parameters enables customization to satisfy #>   unique needs.\\n\\nSTAR accepts one file per sample (or two files for paired-end data). #>   \\ \\nSplice junction annotations can optionally be collected from splice junction #>   databases. Set the \\\"Overhang length\\\" parameter to a value larger than zero in #>   order to use splice junction databases. For constant read length, this value should #>   (ideally) be equal to mate length decreased by 1; for long reads with non-constant #>   length, this value should be 100 (pipeline default). \\nFastQC Analysis on FASTQ #>   files reveals read length distribution. STAR can detect chimeric transcripts, but #>   parameter \\\"Min segment length\\\" in \\\"Chimeric Alignments\\\" category must be adjusted #>   to a desired minimum chimeric segment length. Aligned reads are reported in BAM #>   format and can be viewed in a genome browser (such as IGV). A file containing detected #>   splice junctions is also produced.\\n\\nUnmapped reads are reported in FASTQ format #>   and can be included in an output BAM file. The \\\"Output unmapped reads\\\" and \\\"Write #>   unmapped in SAM\\\" parameters enable unmapped output type selection.\" #> class: Workflow #> steps: #> - id: '#STAR_Genome_Generate' #>   inputs: #>   - id: '#STAR_Genome_Generate.sjdbScore' #>   - id: '#STAR_Genome_Generate.sjdbOverhang' #>   - id: '#STAR_Genome_Generate.sjdbGTFtagExonParentTranscript' #>     source: '#sjdbGTFtagExonParentTranscript' #>   - id: '#STAR_Genome_Generate.sjdbGTFtagExonParentGene' #>     source: '#sjdbGTFtagExonParentGene' #>   - id: '#STAR_Genome_Generate.sjdbGTFfile' #>     source: '#sjdbGTFfile' #>   - id: '#STAR_Genome_Generate.sjdbGTFfeatureExon' #>   - id: '#STAR_Genome_Generate.sjdbGTFchrPrefix' #>   - id: '#STAR_Genome_Generate.genomeSAsparseD' #>   - id: '#STAR_Genome_Generate.genomeSAindexNbases' #>   - id: '#STAR_Genome_Generate.genomeFastaFiles' #>     source: '#genomeFastaFiles' #>   - id: '#STAR_Genome_Generate.genomeChrBinNbits' #>   outputs: #>   - id: '#STAR_Genome_Generate.genome' #>   hints: [] #>   run: #>     sbg:validationErrors: [] #>     sbg:sbgMaintained: no #>     sbg:latestRevision: 1 #>     sbg:job: #>       allocatedResources: #>         mem: 60000 #>         cpu: 15 #>       inputs: #>         sjdbScore: 0 #>         sjdbGTFfeatureExon: sjdbGTFfeatureExon #>         sjdbOverhang: 0 #>         sjdbGTFtagExonParentTranscript: sjdbGTFtagExonParentTranscript #>         genomeChrBinNbits: genomeChrBinNbits #>         genomeSAsparseD: 0 #>         sjdbGTFfile: #>         - size: 0 #>           secondaryFiles: [] #>           class: File #>           path: /demo/test-files/chr20.gtf #>         sjdbGTFtagExonParentGene: sjdbGTFtagExonParentGene #>         genomeFastaFiles: #>           size: 0 #>           secondaryFiles: [] #>           class: File #>           path: /sbgenomics/test-data/chr20.fa #>         sjdbGTFchrPrefix: sjdbGTFchrPrefix #>         genomeSAindexNbases: 0 #>     sbg:toolAuthor: Alexander Dobin/CSHL #>     sbg:createdOn: 1450911469 #>     sbg:categories: #>     - Alignment #>     sbg:contributors: #>     - bix-demo #>     sbg:links: #>     - id: https://github.com/alexdobin/STAR #>       label: Homepage #>     - id: https://github.com/alexdobin/STAR/releases #>       label: Releases #>     - id: https://github.com/alexdobin/STAR/blob/master/doc/STARmanual.pdf #>       label: Manual #>     - id: https://groups.google.com/forum/#!forum/rna-star #>       label: Support #>     - id: http://www.ncbi.nlm.nih.gov/pubmed/23104886 #>       label: Publication #>     sbg:project: bix-demo/star-2-4-2a-demo #>     sbg:createdBy: bix-demo #>     sbg:toolkitVersion: 2.4.2a #>     sbg:id: sevenbridges/public-apps/star-genome-generate/1 #>     sbg:license: GNU General Public License v3.0 only #>     sbg:revision: 1 #>     sbg:cmdPreview: mkdir genomeDir && /opt/STAR --runMode genomeGenerate --genomeDir #>       ./genomeDir --runThreadN 15 --genomeFastaFiles /sbgenomics/test-data/chr20.fa #>       --genomeChrBinNbits genomeChrBinNbits --genomeSAindexNbases 0 --genomeSAsparseD #>       0 --sjdbGTFfeatureExon sjdbGTFfeatureExon --sjdbGTFtagExonParentTranscript sjdbGTFtagExonParentTranscript #>       --sjdbGTFtagExonParentGene sjdbGTFtagExonParentGene --sjdbOverhang 0 --sjdbScore #>       0 --sjdbGTFchrPrefix sjdbGTFchrPrefix  --sjdbGTFfile /demo/test-files/chr20.gtf  && #>       tar -vcf genome.tar ./genomeDir /sbgenomics/test-data/chr20.fa #>     sbg:modifiedOn: 1450911470 #>     sbg:modifiedBy: bix-demo #>     sbg:revisionsInfo: #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911469 #>       sbg:revision: 0 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911470 #>       sbg:revision: 1 #>     sbg:toolkit: STAR #>     id: sevenbridges/public-apps/star-genome-generate/1 #>     inputs: #>     - type: #>       - 'null' #>       - int #>       label: Extra alignment score #>       description: Extra alignment score for alignments that cross database junctions. #>       streamable: no #>       id: '#sjdbScore' #>       inputBinding: #>         position: 0 #>         prefix: --sjdbScore #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Splice junctions db parameters #>       sbg:includeInPorts: yes #>       sbg:toolDefaultValue: '2' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: '\"Overhang\" length' #>       description: Length of the donor/acceptor sequence on each side of the junctions, #>         ideally = (mate_length - 1) (int >= 0), if int = 0, splice junction database #>         is not used. #>       streamable: no #>       id: '#sjdbOverhang' #>       inputBinding: #>         position: 0 #>         prefix: --sjdbOverhang #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Splice junctions db parameters #>       sbg:includeInPorts: yes #>       sbg:toolDefaultValue: '100' #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Exons' parents name #>       description: Tag name to be used as exons' transcript-parents. #>       streamable: no #>       id: '#sjdbGTFtagExonParentTranscript' #>       inputBinding: #>         position: 0 #>         prefix: --sjdbGTFtagExonParentTranscript #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Splice junctions db parameters #>       sbg:toolDefaultValue: transcript_id #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Gene name #>       description: Tag name to be used as exons' gene-parents. #>       streamable: no #>       id: '#sjdbGTFtagExonParentGene' #>       inputBinding: #>         position: 0 #>         prefix: --sjdbGTFtagExonParentGene #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Splice junctions db parameters #>       sbg:toolDefaultValue: gene_id #>       required: no #>     - type: #>       - 'null' #>       - items: File #>         type: array #>       label: Splice junction file #>       description: Gene model annotations and/or known transcripts. #>       streamable: no #>       id: '#sjdbGTFfile' #>       sbg:category: Basic #>       sbg:fileTypes: GTF, GFF, TXT #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Set exons feature #>       description: Feature type in GTF file to be used as exons for building transcripts. #>       streamable: no #>       id: '#sjdbGTFfeatureExon' #>       inputBinding: #>         position: 0 #>         prefix: --sjdbGTFfeatureExon #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Splice junctions db parameters #>       sbg:toolDefaultValue: exon #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Chromosome names #>       description: Prefix for chromosome names in a GTF file (e.g. 'chr' for using #>         ENSMEBL annotations with UCSC geneomes). #>       streamable: no #>       id: '#sjdbGTFchrPrefix' #>       inputBinding: #>         position: 0 #>         prefix: --sjdbGTFchrPrefix #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Splice junctions db parameters #>       sbg:toolDefaultValue: '-' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Suffux array sparsity #>       description: 'Distance between indices: use bigger numbers to decrease needed #>         RAM at the cost of mapping speed reduction (int>0).' #>       streamable: no #>       id: '#genomeSAsparseD' #>       inputBinding: #>         position: 0 #>         prefix: --genomeSAsparseD #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Genome generation parameters #>       sbg:toolDefaultValue: '1' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Pre-indexing string length #>       description: Length (bases) of the SA pre-indexing string. Typically between #>         10 and 15. Longer strings will use much more memory, but allow faster searches. #>         For small genomes, this number needs to be scaled down, with a typical value #>         of min(14, log2(GenomeLength)/2 - 1). For example, for 1 megaBase genome, #>         this is equal to 9, for 100 kiloBase genome, this is equal to 7. #>       streamable: no #>       id: '#genomeSAindexNbases' #>       inputBinding: #>         position: 0 #>         prefix: --genomeSAindexNbases #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Genome generation parameters #>       sbg:toolDefaultValue: '14' #>       required: no #>     - type: #>       - File #>       label: Genome fasta files #>       description: Reference sequence to which to align the reads. #>       streamable: no #>       id: '#genomeFastaFiles' #>       inputBinding: #>         position: 0 #>         prefix: --genomeFastaFiles #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Basic #>       sbg:fileTypes: FASTA, FA #>       required: yes #>     - type: #>       - 'null' #>       - string #>       label: Bins size #>       description: 'Set log2(chrBin), where chrBin is the size (bits) of the bins #>         for genome storage: each chromosome will occupy an integer number of bins. #>         If you are using a genome with a large (>5,000) number of chrosomes/scaffolds, #>         you may need to reduce this number to reduce RAM consumption. The following #>         scaling is recomended: genomeChrBinNbits = min(18, log2(GenomeLength/NumberOfReferences)). #>         For example, for 3 gigaBase genome with 100,000 chromosomes/scaffolds, this #>         is equal to 15.' #>       streamable: no #>       id: '#genomeChrBinNbits' #>       inputBinding: #>         position: 0 #>         prefix: --genomeChrBinNbits #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Genome generation parameters #>       sbg:toolDefaultValue: '18' #>       required: no #>     outputs: #>     - type: #>       - 'null' #>       - File #>       label: Genome Files #>       description: Genome files comprise binary genome sequence, suffix arrays, text #>         chromosome names/lengths, splice junctions coordinates, and transcripts/genes #>         information. #>       streamable: no #>       id: '#genome' #>       outputBinding: #>         glob: '*.tar' #>       sbg:fileTypes: TAR #>     requirements: #>     - class: ExpressionEngineRequirement #>       id: '#cwl-js-engine' #>       requirements: #>       - class: DockerRequirement #>         dockerPull: rabix/js-engine #>     hints: #>     - class: DockerRequirement #>       dockerPull: images.sbgenomics.com/ana_d/star:2.4.2a #>       dockerImageId: a4b0ad2c3cae #>     - class: sbg:CPURequirement #>       value: 15 #>     - class: sbg:MemRequirement #>       value: 60000 #>     label: STAR Genome Generate #>     description: STAR Genome Generate is a tool that generates genome index files. #>       One set of files should be generated per each genome/annotation combination. #>       Once produced, these files could be used as long as genome/annotation combination #>       stays the same. Also, STAR Genome Generate which produced these files and STAR #>       aligner using them must be the same toolkit version. #>     class: CommandLineTool #>     baseCommand: #>     - mkdir #>     - genomeDir #>     - '&&' #>     - /opt/STAR #>     - --runMode #>     - genomeGenerate #>     - --genomeDir #>     - ./genomeDir #>     - --runThreadN #>     - class: Expression #>       script: |- #>         { #>           return $job.allocatedResources.cpu #>         } #>       engine: '#cwl-js-engine' #>     arguments: #>     - position: 99 #>       separate: yes #>       valueFrom: '&& tar -vcf genome.tar ./genomeDir' #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\t\\n  var sjFormat = \\\"False\\\"\\n  var gtfgffFormat = \\\"False\\\"\\n #>           \\ var list = $job.inputs.sjdbGTFfile\\n  var paths_list = []\\n  var joined_paths #>           = \\\"\\\"\\n  \\n  if (list) {\\n    list.forEach(function(f){return paths_list.push(f.path)})\\n #>           \\   joined_paths = paths_list.join(\\\" \\\")\\n\\n\\n    paths_list.forEach(function(f){\\n #>           \\     ext = f.replace(/^.*\\\\./, '')\\n      if (ext == \\\"gff\\\" || ext == #>           \\\"gtf\\\") {\\n        gtfgffFormat = \\\"True\\\"\\n        return gtfgffFormat\\n #>           \\     }\\n      if (ext == \\\"txt\\\") {\\n        sjFormat = \\\"True\\\"\\n        return #>           sjFormat\\n      }\\n    })\\n\\n    if ($job.inputs.sjdbGTFfile && $job.inputs.sjdbInsertSave #>           != \\\"None\\\") {\\n      if (sjFormat == \\\"True\\\") {\\n        return \\\"--sjdbFileChrStartEnd #>           \\\".concat(joined_paths)\\n      }\\n      else if (gtfgffFormat == \\\"True\\\") #>           {\\n        return \\\"--sjdbGTFfile \\\".concat(joined_paths)\\n      }\\n    }\\n #>           \\ }\\n}\" #>         class: Expression #>     stdin: '' #>     stdout: '' #>     successCodes: [] #>     temporaryFailCodes: [] #>     x: 384.0832266 #>     'y': 446.4998957 #>   sbg:x: 100.0 #>   sbg:y: 200.0 #> - id: '#SBG_FASTQ_Quality_Detector' #>   inputs: #>   - id: '#SBG_FASTQ_Quality_Detector.fastq' #>     source: '#fastq' #>   outputs: #>   - id: '#SBG_FASTQ_Quality_Detector.result' #>   hints: [] #>   run: #>     sbg:validationErrors: [] #>     sbg:sbgMaintained: no #>     sbg:latestRevision: 3 #>     sbg:job: #>       allocatedResources: #>         mem: 1000 #>         cpu: 1 #>       inputs: #>         fastq: #>           size: 0 #>           secondaryFiles: [] #>           class: File #>           path: /path/to/fastq.ext #>     sbg:toolAuthor: Seven Bridges Genomics #>     sbg:createdOn: 1450911312 #>     sbg:categories: #>     - FASTQ-Processing #>     sbg:contributors: #>     - bix-demo #>     sbg:project: bix-demo/sbgtools-demo #>     sbg:createdBy: bix-demo #>     sbg:id: sevenbridges/public-apps/sbg-fastq-quality-detector/3 #>     sbg:license: Apache License 2.0 #>     sbg:revision: 3 #>     sbg:cmdPreview: python /opt/sbg_fastq_quality_scale_detector.py --fastq /path/to/fastq.ext #>       /path/to/fastq.ext #>     sbg:modifiedOn: 1450911314 #>     sbg:modifiedBy: bix-demo #>     sbg:revisionsInfo: #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911312 #>       sbg:revision: 0 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911314 #>       sbg:revision: 3 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911313 #>       sbg:revision: 1 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911313 #>       sbg:revision: 2 #>     sbg:toolkit: SBGTools #>     id: sevenbridges/public-apps/sbg-fastq-quality-detector/3 #>     inputs: #>     - type: #>       - File #>       label: Fastq #>       description: FASTQ file. #>       streamable: no #>       id: '#fastq' #>       inputBinding: #>         position: 0 #>         prefix: --fastq #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       required: yes #>     outputs: #>     - type: #>       - 'null' #>       - File #>       label: Result #>       description: Source FASTQ file with updated metadata. #>       streamable: no #>       id: '#result' #>       outputBinding: #>         glob: '*.fastq' #>       sbg:fileTypes: FASTQ #>     requirements: #>     - class: CreateFileRequirement #>       fileDef: [] #>     hints: #>     - class: DockerRequirement #>       dockerPull: images.sbgenomics.com/tziotas/sbg_fastq_quality_scale_detector:1.0 #>       dockerImageId: '' #>     - class: sbg:CPURequirement #>       value: 1 #>     - class: sbg:MemRequirement #>       value: 1000 #>     label: SBG FASTQ Quality Detector #>     description: FASTQ Quality Scale Detector detects which quality encoding scheme #>       was used in your reads and automatically enters the proper value in the \"Quality #>       Scale\" metadata field. #>     class: CommandLineTool #>     baseCommand: #>     - python #>     - /opt/sbg_fastq_quality_scale_detector.py #>     arguments: [] #>     stdin: '' #>     stdout: '' #>     successCodes: [] #>     temporaryFailCodes: [] #>     x: 375.3333179 #>     'y': 323.5833156 #>   sbg:x: 300.0 #>   sbg:y: 200.0 #> - id: '#Picard_SortSam' #>   inputs: #>   - id: '#Picard_SortSam.validation_stringency' #>     default: SILENT #>   - id: '#Picard_SortSam.sort_order' #>     default: Coordinate #>   - id: '#Picard_SortSam.quiet' #>   - id: '#Picard_SortSam.output_type' #>   - id: '#Picard_SortSam.memory_per_job' #>   - id: '#Picard_SortSam.max_records_in_ram' #>   - id: '#Picard_SortSam.input_bam' #>     source: '#STAR.aligned_reads' #>   - id: '#Picard_SortSam.create_index' #>     default: 'True' #>   - id: '#Picard_SortSam.compression_level' #>   outputs: #>   - id: '#Picard_SortSam.sorted_bam' #>   hints: [] #>   run: #>     sbg:validationErrors: [] #>     sbg:sbgMaintained: no #>     sbg:latestRevision: 2 #>     sbg:job: #>       allocatedResources: #>         mem: 2048 #>         cpu: 1 #>       inputs: #>         sort_order: Coordinate #>         input_bam: #>           path: /root/dir/example.tested.bam #>         memory_per_job: 2048 #>         output_type: ~ #>         create_index: ~ #>     sbg:toolAuthor: Broad Institute #>     sbg:createdOn: 1450911168 #>     sbg:categories: #>     - SAM/BAM-Processing #>     sbg:contributors: #>     - bix-demo #>     sbg:links: #>     - id: http://broadinstitute.github.io/picard/index.html #>       label: Homepage #>     - id: https://github.com/broadinstitute/picard/releases/tag/1.138 #>       label: Source Code #>     - id: http://broadinstitute.github.io/picard/ #>       label: Wiki #>     - id: https://github.com/broadinstitute/picard/zipball/master #>       label: Download #>     - id: http://broadinstitute.github.io/picard/ #>       label: Publication #>     sbg:project: bix-demo/picard-1-140-demo #>     sbg:createdBy: bix-demo #>     sbg:toolkitVersion: '1.140' #>     sbg:id: sevenbridges/public-apps/picard-sortsam-1-140/2 #>     sbg:license: MIT License, Apache 2.0 Licence #>     sbg:revision: 2 #>     sbg:cmdPreview: java -Xmx2048M -jar /opt/picard-tools-1.140/picard.jar SortSam #>       OUTPUT=example.tested.sorted.bam INPUT=/root/dir/example.tested.bam SORT_ORDER=coordinate   INPUT=/root/dir/example.tested.bam #>       SORT_ORDER=coordinate  /root/dir/example.tested.bam #>     sbg:modifiedOn: 1450911170 #>     sbg:modifiedBy: bix-demo #>     sbg:revisionsInfo: #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911168 #>       sbg:revision: 0 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911169 #>       sbg:revision: 1 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911170 #>       sbg:revision: 2 #>     sbg:toolkit: Picard #>     id: sevenbridges/public-apps/picard-sortsam-1-140/2 #>     inputs: #>     - type: #>       - 'null' #>       - name: validation_stringency #>         symbols: #>         - STRICT #>         - LENIENT #>         - SILENT #>         type: enum #>       label: Validation stringency #>       description: 'Validation stringency for all SAM files read by this program. #>         Setting stringency to SILENT can improve performance when processing a BAM #>         file in which variable-length data (read, qualities, tags) do not otherwise #>         need to be decoded. This option can be set to ''null'' to clear the default #>         value. Possible values: {STRICT, LENIENT, SILENT}.' #>       streamable: no #>       id: '#validation_stringency' #>       inputBinding: #>         position: 0 #>         prefix: VALIDATION_STRINGENCY= #>         separate: no #>         valueFrom: #>           engine: '#cwl-js-engine' #>           script: |- #>             { #>               if ($job.inputs.validation_stringency) #>               { #>                 return $job.inputs.validation_stringency #>               } #>               else #>               { #>                 return \"SILENT\" #>               } #>             } #>           class: Expression #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Other input types #>       sbg:toolDefaultValue: SILENT #>       required: no #>     - type: #>       - name: sort_order #>         symbols: #>         - Unsorted #>         - Queryname #>         - Coordinate #>         type: enum #>       label: Sort order #>       description: 'Sort order of the output file. Possible values: {unsorted, queryname, #>         coordinate}.' #>       streamable: no #>       id: '#sort_order' #>       inputBinding: #>         position: 3 #>         prefix: SORT_ORDER= #>         separate: no #>         valueFrom: #>           engine: '#cwl-js-engine' #>           script: |- #>             { #>               p = $job.inputs.sort_order.toLowerCase() #>               return p #>             } #>           class: Expression #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Other input types #>       sbg:toolDefaultValue: Coordinate #>       sbg:altPrefix: SO #>       required: yes #>     - type: #>       - 'null' #>       - name: quiet #>         symbols: #>         - 'True' #>         - 'False' #>         type: enum #>       label: Quiet #>       description: 'This parameter indicates whether to suppress job-summary info #>         on System.err. This option can be set to ''null'' to clear the default value. #>         Possible values: {true, false}.' #>       streamable: no #>       id: '#quiet' #>       inputBinding: #>         position: 0 #>         prefix: QUIET= #>         separate: no #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Other input types #>       sbg:toolDefaultValue: 'False' #>       required: no #>     - type: #>       - 'null' #>       - name: output_type #>         symbols: #>         - BAM #>         - SAM #>         - SAME AS INPUT #>         type: enum #>       label: Output format #>       description: Since Picard tools can output both SAM and BAM files, user can #>         choose the format of the output file. #>       streamable: no #>       id: '#output_type' #>       sbg:category: Other input types #>       sbg:toolDefaultValue: SAME AS INPUT #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Memory per job #>       description: Amount of RAM memory to be used per job. Defaults to 2048 MB for #>         single threaded jobs. #>       streamable: no #>       id: '#memory_per_job' #>       sbg:toolDefaultValue: '2048' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max records in RAM #>       description: When writing SAM files that need to be sorted, this parameter will #>         specify the number of records stored in RAM before spilling to disk. Increasing #>         this number reduces the number of file handles needed to sort a SAM file, #>         and increases the amount of RAM needed. This option can be set to 'null' to #>         clear the default value. #>       streamable: no #>       id: '#max_records_in_ram' #>       inputBinding: #>         position: 0 #>         prefix: MAX_RECORDS_IN_RAM= #>         separate: no #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Other input types #>       sbg:toolDefaultValue: '500000' #>       required: no #>     - type: #>       - File #>       label: Input BAM #>       description: The BAM or SAM file to sort. #>       streamable: no #>       id: '#input_bam' #>       inputBinding: #>         position: 1 #>         prefix: INPUT= #>         separate: no #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: File inputs #>       sbg:fileTypes: BAM, SAM #>       sbg:altPrefix: I #>       required: yes #>     - type: #>       - 'null' #>       - name: create_index #>         symbols: #>         - 'True' #>         - 'False' #>         type: enum #>       label: Create index #>       description: 'This parameter indicates whether to create a BAM index when writing #>         a coordinate-sorted BAM file. This option can be set to ''null'' to clear #>         the default value. Possible values: {true, false}.' #>       streamable: no #>       id: '#create_index' #>       inputBinding: #>         position: 5 #>         prefix: CREATE_INDEX= #>         separate: no #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Other input types #>       sbg:toolDefaultValue: 'False' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Compression level #>       description: Compression level for all compressed files created (e.g. BAM and #>         GELI). This option can be set to 'null' to clear the default value. #>       streamable: no #>       id: '#compression_level' #>       inputBinding: #>         position: 0 #>         prefix: COMPRESSION_LEVEL= #>         separate: no #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Other input types #>       sbg:toolDefaultValue: '5' #>       required: no #>     outputs: #>     - type: #>       - 'null' #>       - File #>       label: Sorted BAM/SAM #>       description: Sorted BAM or SAM file. #>       streamable: no #>       id: '#sorted_bam' #>       outputBinding: #>         glob: '*.sorted.?am' #>       sbg:fileTypes: BAM, SAM #>     requirements: #>     - class: ExpressionEngineRequirement #>       id: '#cwl-js-engine' #>       requirements: #>       - class: DockerRequirement #>         dockerPull: rabix/js-engine #>       engineCommand: cwl-engine.js #>     hints: #>     - class: DockerRequirement #>       dockerPull: images.sbgenomics.com/mladenlsbg/picard:1.140 #>       dockerImageId: eab0e70b6629 #>     - class: sbg:CPURequirement #>       value: 1 #>     - class: sbg:MemRequirement #>       value: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  if($job.inputs.memory_per_job){\\n  \\treturn $job.inputs.memory_per_job\\n #>           \\ }\\n  \\treturn 2048\\n}\" #>         class: Expression #>     label: Picard SortSam #>     description: Picard SortSam sorts the input SAM or BAM. Input and output formats #>       are determined by the file extension. #>     class: CommandLineTool #>     baseCommand: #>     - java #>     - class: Expression #>       script: \"{   \\n  if($job.inputs.memory_per_job){\\n    return '-Xmx'.concat($job.inputs.memory_per_job, #>         'M')\\n  }   \\n  \\treturn '-Xmx2048M'\\n}\" #>       engine: '#cwl-js-engine' #>     - -jar #>     - /opt/picard-tools-1.140/picard.jar #>     - SortSam #>     arguments: #>     - position: 0 #>       prefix: OUTPUT= #>       separate: no #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  filename = $job.inputs.input_bam.path\\n  ext = $job.inputs.output_type\\n\\nif #>           (ext === \\\"BAM\\\")\\n{\\n    return filename.split('.').slice(0, -1).concat(\\\"sorted.bam\\\").join(\\\".\\\").replace(/^.*[\\\\\\\\\\\\/]/, #>           '')\\n    }\\n\\nelse if (ext === \\\"SAM\\\")\\n{\\n    return filename.split('.').slice(0, #>           -1).concat(\\\"sorted.sam\\\").join('.').replace(/^.*[\\\\\\\\\\\\/]/, '')\\n}\\n\\nelse #>           \\n{\\n\\treturn filename.split('.').slice(0, -1).concat(\\\"sorted.\\\"+filename.split('.').slice(-1)[0]).join(\\\".\\\").replace(/^.*[\\\\\\\\\\\\/]/, #>           '')\\n}\\n}\" #>         class: Expression #>     - position: 1000 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  filename = $job.inputs.input_bam.path\\n  \\n  /* figuring out #>           output file type */\\n  ext = $job.inputs.output_type\\n  if (ext === \\\"BAM\\\")\\n #>           \\ {\\n    out_extension = \\\"BAM\\\"\\n  }\\n  else if (ext === \\\"SAM\\\")\\n  {\\n #>           \\   out_extension = \\\"SAM\\\"\\n  }\\n  else \\n  {\\n\\tout_extension = filename.split('.').slice(-1)[0].toUpperCase()\\n #>           \\ }  \\n  \\n  /* if exist moving .bai in bam.bai */\\n  if ($job.inputs.create_index #>           === 'True' && $job.inputs.sort_order === 'Coordinate' && out_extension == #>           \\\"BAM\\\")\\n  {\\n    \\n    old_name = filename.split('.').slice(0, -1).concat('sorted.bai').join('.').replace(/^.*[\\\\\\\\\\\\/]/, #>           '')\\n    new_name = filename.split('.').slice(0, -1).concat('sorted.bam.bai').join('.').replace(/^.*[\\\\\\\\\\\\/]/, #>           '')\\n    return \\\"; mv \\\" + \\\" \\\" + old_name + \\\" \\\" + new_name\\n  }\\n\\n}\" #>         class: Expression #>     stdin: '' #>     stdout: '' #>     successCodes: [] #>     temporaryFailCodes: [] #>     x: 773.0831807 #>     'y': 470.9165939 #>   sbg:x: 500.0 #>   sbg:y: 200.0 #> - id: '#STAR' #>   inputs: #>   - id: '#STAR.winFlankNbins' #>   - id: '#STAR.winBinNbits' #>   - id: '#STAR.winAnchorMultimapNmax' #>     source: '#winAnchorMultimapNmax' #>   - id: '#STAR.winAnchorDistNbins' #>     source: '#winAnchorDistNbins' #>   - id: '#STAR.twopassMode' #>   - id: '#STAR.twopass1readsN' #>   - id: '#STAR.sjdbScore' #>   - id: '#STAR.sjdbOverhang' #>     default: 100 #>   - id: '#STAR.sjdbInsertSave' #>   - id: '#STAR.sjdbGTFtagExonParentTranscript' #>   - id: '#STAR.sjdbGTFtagExonParentGene' #>   - id: '#STAR.sjdbGTFfile' #>     source: '#sjdbGTFfile' #>   - id: '#STAR.sjdbGTFfeatureExon' #>   - id: '#STAR.sjdbGTFchrPrefix' #>   - id: '#STAR.seedSearchStartLmaxOverLread' #>   - id: '#STAR.seedSearchStartLmax' #>   - id: '#STAR.seedSearchLmax' #>   - id: '#STAR.seedPerWindowNmax' #>   - id: '#STAR.seedPerReadNmax' #>   - id: '#STAR.seedNoneLociPerWindow' #>   - id: '#STAR.seedMultimapNmax' #>   - id: '#STAR.scoreStitchSJshift' #>   - id: '#STAR.scoreInsOpen' #>   - id: '#STAR.scoreInsBase' #>   - id: '#STAR.scoreGenomicLengthLog2scale' #>   - id: '#STAR.scoreGapNoncan' #>   - id: '#STAR.scoreGapGCAG' #>   - id: '#STAR.scoreGapATAC' #>   - id: '#STAR.scoreGap' #>   - id: '#STAR.scoreDelOpen' #>   - id: '#STAR.scoreDelBase' #>   - id: '#STAR.rg_seq_center' #>   - id: '#STAR.rg_sample_id' #>   - id: '#STAR.rg_platform_unit_id' #>   - id: '#STAR.rg_platform' #>   - id: '#STAR.rg_mfl' #>   - id: '#STAR.rg_library_id' #>   - id: '#STAR.reads' #>     source: '#reads' #>   - id: '#STAR.readMatesLengthsIn' #>   - id: '#STAR.readMapNumber' #>   - id: '#STAR.quantTranscriptomeBan' #>   - id: '#STAR.quantMode' #>     default: TranscriptomeSAM #>   - id: '#STAR.outSortingType' #>     default: SortedByCoordinate #>   - id: '#STAR.outSJfilterReads' #>   - id: '#STAR.outSJfilterOverhangMin' #>   - id: '#STAR.outSJfilterIntronMaxVsReadN' #>   - id: '#STAR.outSJfilterDistToOtherSJmin' #>   - id: '#STAR.outSJfilterCountUniqueMin' #>   - id: '#STAR.outSJfilterCountTotalMin' #>   - id: '#STAR.outSAMunmapped' #>   - id: '#STAR.outSAMtype' #>     default: BAM #>   - id: '#STAR.outSAMstrandField' #>   - id: '#STAR.outSAMreadID' #>   - id: '#STAR.outSAMprimaryFlag' #>   - id: '#STAR.outSAMorder' #>   - id: '#STAR.outSAMmode' #>   - id: '#STAR.outSAMmapqUnique' #>   - id: '#STAR.outSAMheaderPG' #>   - id: '#STAR.outSAMheaderHD' #>   - id: '#STAR.outSAMflagOR' #>   - id: '#STAR.outSAMflagAND' #>   - id: '#STAR.outSAMattributes' #>   - id: '#STAR.outReadsUnmapped' #>     default: Fastx #>   - id: '#STAR.outQSconversionAdd' #>   - id: '#STAR.outFilterType' #>   - id: '#STAR.outFilterScoreMinOverLread' #>   - id: '#STAR.outFilterScoreMin' #>   - id: '#STAR.outFilterMultimapScoreRange' #>   - id: '#STAR.outFilterMultimapNmax' #>   - id: '#STAR.outFilterMismatchNoverReadLmax' #>   - id: '#STAR.outFilterMismatchNoverLmax' #>   - id: '#STAR.outFilterMismatchNmax' #>   - id: '#STAR.outFilterMatchNminOverLread' #>   - id: '#STAR.outFilterMatchNmin' #>   - id: '#STAR.outFilterIntronMotifs' #>   - id: '#STAR.limitSjdbInsertNsj' #>   - id: '#STAR.limitOutSJoneRead' #>   - id: '#STAR.limitOutSJcollapsed' #>   - id: '#STAR.limitBAMsortRAM' #>   - id: '#STAR.genomeDirName' #>   - id: '#STAR.genome' #>     source: '#STAR_Genome_Generate.genome' #>   - id: '#STAR.clip5pNbases' #>   - id: '#STAR.clip3pNbases' #>   - id: '#STAR.clip3pAfterAdapterNbases' #>   - id: '#STAR.clip3pAdapterSeq' #>   - id: '#STAR.clip3pAdapterMMp' #>   - id: '#STAR.chimSegmentMin' #>   - id: '#STAR.chimScoreSeparation' #>   - id: '#STAR.chimScoreMin' #>   - id: '#STAR.chimScoreJunctionNonGTAG' #>   - id: '#STAR.chimScoreDropMax' #>   - id: '#STAR.chimOutType' #>   - id: '#STAR.chimJunctionOverhangMin' #>   - id: '#STAR.alignWindowsPerReadNmax' #>   - id: '#STAR.alignTranscriptsPerWindowNmax' #>   - id: '#STAR.alignTranscriptsPerReadNmax' #>   - id: '#STAR.alignSplicedMateMapLminOverLmate' #>   - id: '#STAR.alignSplicedMateMapLmin' #>   - id: '#STAR.alignSoftClipAtReferenceEnds' #>   - id: '#STAR.alignSJoverhangMin' #>   - id: '#STAR.alignSJDBoverhangMin' #>   - id: '#STAR.alignMatesGapMax' #>   - id: '#STAR.alignIntronMin' #>   - id: '#STAR.alignIntronMax' #>   - id: '#STAR.alignEndsType' #>   outputs: #>   - id: '#STAR.unmapped_reads' #>   - id: '#STAR.transcriptome_aligned_reads' #>   - id: '#STAR.splice_junctions' #>   - id: '#STAR.reads_per_gene' #>   - id: '#STAR.log_files' #>   - id: '#STAR.intermediate_genome' #>   - id: '#STAR.chimeric_junctions' #>   - id: '#STAR.chimeric_alignments' #>   - id: '#STAR.aligned_reads' #>   hints: [] #>   run: #>     sbg:validationErrors: [] #>     sbg:sbgMaintained: no #>     sbg:latestRevision: 4 #>     sbg:job: #>       allocatedResources: #>         mem: 60000 #>         cpu: 15 #>       inputs: #>         alignWindowsPerReadNmax: 0 #>         outSAMheaderPG: outSAMheaderPG #>         GENOME_DIR_NAME: '' #>         outFilterMatchNminOverLread: 0 #>         rg_platform_unit_id: rg_platform_unit #>         alignTranscriptsPerReadNmax: 0 #>         readMapNumber: 0 #>         alignSplicedMateMapLminOverLmate: 0 #>         alignMatesGapMax: 0 #>         outFilterMultimapNmax: 0 #>         clip5pNbases: #>         - 0 #>         outSAMstrandField: None #>         readMatesLengthsIn: NotEqual #>         outSAMattributes: Standard #>         seedMultimapNmax: 0 #>         rg_mfl: rg_mfl #>         chimSegmentMin: 0 #>         winAnchorDistNbins: 0 #>         outSortingType: SortedByCoordinate #>         outFilterMultimapScoreRange: 0 #>         sjdbInsertSave: Basic #>         clip3pAfterAdapterNbases: #>         - 0 #>         scoreDelBase: 0 #>         outFilterMatchNmin: 0 #>         twopass1readsN: 0 #>         outSAMunmapped: None #>         genome: #>           size: 0 #>           secondaryFiles: [] #>           class: File #>           path: genome.ext #>         sjdbGTFtagExonParentTranscript: '' #>         limitBAMsortRAM: 0 #>         alignEndsType: Local #>         seedNoneLociPerWindow: 0 #>         rg_sample_id: rg_sample #>         sjdbGTFtagExonParentGene: '' #>         chimScoreMin: 0 #>         outSJfilterIntronMaxVsReadN: #>         - 0 #>         twopassMode: Basic #>         alignSplicedMateMapLmin: 0 #>         outSJfilterReads: All #>         outSAMprimaryFlag: OneBestScore #>         outSJfilterCountTotalMin: #>         - 3 #>         - 1 #>         - 1 #>         - 1 #>         outSAMorder: Paired #>         outSAMflagAND: 0 #>         chimScoreSeparation: 0 #>         alignSJoverhangMin: 0 #>         outFilterScoreMin: 0 #>         seedSearchStartLmax: 0 #>         scoreGapGCAG: 0 #>         scoreGenomicLengthLog2scale: 0 #>         outFilterIntronMotifs: None #>         outFilterMismatchNmax: 0 #>         reads: #>         - size: 0 #>           secondaryFiles: [] #>           class: File #>           metadata: #>             format: fastq #>             paired_end: '1' #>             seq_center: illumina #>           path: /test-data/mate_1.fastq.bz2 #>         scoreGap: 0 #>         outSJfilterOverhangMin: #>         - 30 #>         - 12 #>         - 12 #>         - 12 #>         outSAMflagOR: 0 #>         outSAMmode: Full #>         rg_library_id: '' #>         chimScoreJunctionNonGTAG: 0 #>         scoreInsOpen: 0 #>         clip3pAdapterSeq: #>         - clip3pAdapterSeq #>         chimScoreDropMax: 0 #>         outFilterType: Normal #>         scoreGapATAC: 0 #>         rg_platform: Ion Torrent PGM #>         clip3pAdapterMMp: #>         - 0 #>         sjdbGTFfeatureExon: '' #>         outQSconversionAdd: 0 #>         quantMode: TranscriptomeSAM #>         alignIntronMin: 0 #>         scoreInsBase: 0 #>         scoreGapNoncan: 0 #>         seedSearchLmax: 0 #>         outSJfilterDistToOtherSJmin: #>         - 0 #>         outFilterScoreMinOverLread: 0 #>         alignSJDBoverhangMin: 0 #>         limitOutSJcollapsed: 0 #>         winAnchorMultimapNmax: 0 #>         outFilterMismatchNoverLmax: 0 #>         rg_seq_center: '' #>         outSAMheaderHD: outSAMheaderHD #>         chimOutType: Within #>         quantTranscriptomeBan: IndelSoftclipSingleend #>         limitOutSJoneRead: 0 #>         alignTranscriptsPerWindowNmax: 0 #>         sjdbOverhang: ~ #>         outReadsUnmapped: Fastx #>         scoreStitchSJshift: 0 #>         seedPerWindowNmax: 0 #>         outSJfilterCountUniqueMin: #>         - 3 #>         - 1 #>         - 1 #>         - 1 #>         scoreDelOpen: 0 #>         sjdbGTFfile: #>         - path: /demo/test-data/chr20.gtf #>         clip3pNbases: #>         - 0 #>         - 3 #>         winBinNbits: 0 #>         sjdbScore: ~ #>         seedSearchStartLmaxOverLread: 0 #>         alignIntronMax: 0 #>         seedPerReadNmax: 0 #>         outFilterMismatchNoverReadLmax: 0 #>         winFlankNbins: 0 #>         sjdbGTFchrPrefix: chrPrefix #>         alignSoftClipAtReferenceEnds: 'Yes' #>         outSAMreadID: Standard #>         outSAMtype: BAM #>         chimJunctionOverhangMin: 0 #>         limitSjdbInsertNsj: 0 #>         outSAMmapqUnique: 0 #>     sbg:toolAuthor: Alexander Dobin/CSHL #>     sbg:createdOn: 1450911471 #>     sbg:categories: #>     - Alignment #>     sbg:contributors: #>     - ana_d #>     - bix-demo #>     - uros_sipetic #>     sbg:links: #>     - id: https://github.com/alexdobin/STAR #>       label: Homepage #>     - id: https://github.com/alexdobin/STAR/releases #>       label: Releases #>     - id: https://github.com/alexdobin/STAR/blob/master/doc/STARmanual.pdf #>       label: Manual #>     - id: https://groups.google.com/forum/#!forum/rna-star #>       label: Support #>     - id: http://www.ncbi.nlm.nih.gov/pubmed/23104886 #>       label: Publication #>     sbg:project: bix-demo/star-2-4-2a-demo #>     sbg:createdBy: bix-demo #>     sbg:toolkitVersion: 2.4.2a #>     sbg:id: sevenbridges/public-apps/star/4 #>     sbg:license: GNU General Public License v3.0 only #>     sbg:revision: 4 #>     sbg:cmdPreview: tar -xvf genome.ext && /opt/STAR --runThreadN 15  --readFilesCommand #>       bzcat  --sjdbGTFfile /demo/test-data/chr20.gtf  --sjdbGTFchrPrefix chrPrefix #>       --sjdbInsertSave Basic  --twopass1readsN 0  --chimOutType WithinBAM  --outSAMattrRGline #>       ID:1 CN:illumina PI:rg_mfl PL:Ion_Torrent_PGM PU:rg_platform_unit SM:rg_sample  --quantMode #>       TranscriptomeSAM --outFileNamePrefix ./mate_1.fastq.bz2.  --readFilesIn /test-data/mate_1.fastq.bz2  && #>       tar -vcf mate_1.fastq.bz2._STARgenome.tar ./mate_1.fastq.bz2._STARgenome  && #>       mv mate_1.fastq.bz2.Unmapped.out.mate1 mate_1.fastq.bz2.Unmapped.out.mate1.fastq #>     sbg:modifiedOn: 1462889222 #>     sbg:modifiedBy: ana_d #>     sbg:revisionsInfo: #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911471 #>       sbg:revision: 0 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911473 #>       sbg:revision: 1 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911475 #>       sbg:revision: 2 #>     - sbg:modifiedBy: uros_sipetic #>       sbg:modifiedOn: 1462878528 #>       sbg:revision: 3 #>     - sbg:modifiedBy: ana_d #>       sbg:modifiedOn: 1462889222 #>       sbg:revision: 4 #>     sbg:toolkit: STAR #>     id: sevenbridges/public-apps/star/4 #>     inputs: #>     - type: #>       - 'null' #>       - int #>       label: Flanking regions size #>       description: =log2(winFlank), where win Flank is the size of the left and right #>         flanking regions for each window (int>0). #>       streamable: no #>       id: '#winFlankNbins' #>       inputBinding: #>         position: 0 #>         prefix: --winFlankNbins #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Windows, Anchors, Binning #>       sbg:includeInPorts: yes #>       sbg:toolDefaultValue: '4' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Bin size #>       description: =log2(winBin), where winBin is the size of the bin for the windows/clustering, #>         each window will occupy an integer number of bins (int>0). #>       streamable: no #>       id: '#winBinNbits' #>       inputBinding: #>         position: 0 #>         prefix: --winBinNbits #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Windows, Anchors, Binning #>       sbg:includeInPorts: yes #>       sbg:toolDefaultValue: '16' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max loci anchors #>       description: Max number of loci anchors are allowed to map to (int>0). #>       streamable: no #>       id: '#winAnchorMultimapNmax' #>       inputBinding: #>         position: 0 #>         prefix: --winAnchorMultimapNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Windows, Anchors, Binning #>       sbg:toolDefaultValue: '50' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max bins between anchors #>       description: Max number of bins between two anchors that allows aggregation #>         of anchors into one window (int>0). #>       streamable: no #>       id: '#winAnchorDistNbins' #>       inputBinding: #>         position: 0 #>         prefix: --winAnchorDistNbins #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Windows, Anchors, Binning #>       sbg:toolDefaultValue: '9' #>       required: no #>     - type: #>       - 'null' #>       - name: twopassMode #>         symbols: #>         - None #>         - Basic #>         type: enum #>       label: Two-pass mode #>       description: '2-pass mapping mode. None: 1-pass mapping; Basic: basic 2-pass #>         mapping, with all 1st pass junctions inserted into the genome indices on the #>         fly.' #>       streamable: no #>       id: '#twopassMode' #>       inputBinding: #>         position: 0 #>         prefix: --twopassMode #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: 2-pass mapping #>       sbg:toolDefaultValue: None #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Reads to process in 1st step #>       description: 'Number of reads to process for the 1st step. 0: 1-step only, no #>         2nd pass; use very large number to map all reads in the first step (int>0).' #>       streamable: no #>       id: '#twopass1readsN' #>       sbg:category: 2-pass mapping #>       sbg:toolDefaultValue: '-1' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Extra alignment score #>       description: Extra alignment score for alignments that cross database junctions. #>       streamable: no #>       id: '#sjdbScore' #>       sbg:category: Splice junctions database #>       sbg:toolDefaultValue: '2' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: '\"Overhang\" length' #>       description: Length of the donor/acceptor sequence on each side of the junctions, #>         ideally = (mate_length - 1) (int >= 0), if int = 0, splice junction database #>         is not used. #>       streamable: no #>       id: '#sjdbOverhang' #>       sbg:category: Splice junctions database #>       sbg:toolDefaultValue: '100' #>       required: no #>     - type: #>       - 'null' #>       - name: sjdbInsertSave #>         symbols: #>         - Basic #>         - All #>         - None #>         type: enum #>       label: Save junction files #>       description: 'Which files to save when sjdb junctions are inserted on the fly #>         at the mapping step. None: not saving files at all; Basic: only small junction/transcript #>         files; All: all files including big Genome, SA and SAindex. These files are #>         output as archive.' #>       streamable: no #>       id: '#sjdbInsertSave' #>       sbg:category: Splice junctions database #>       sbg:toolDefaultValue: None #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Exons' parents name #>       description: Tag name to be used as exons' transcript-parents. #>       streamable: no #>       id: '#sjdbGTFtagExonParentTranscript' #>       sbg:category: Splice junctions database #>       sbg:toolDefaultValue: transcript_id #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Gene name #>       description: Tag name to be used as exons' gene-parents. #>       streamable: no #>       id: '#sjdbGTFtagExonParentGene' #>       sbg:category: Splice junctions database #>       sbg:toolDefaultValue: gene_id #>       required: no #>     - type: #>       - 'null' #>       - items: File #>         type: array #>       label: Splice junction file #>       description: Gene model annotations and/or known transcripts. No need to include #>         this input, except in case of using \"on the fly\" annotations. #>       streamable: no #>       id: '#sjdbGTFfile' #>       sbg:category: Basic #>       sbg:fileTypes: GTF, GFF, TXT #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Set exons feature #>       description: Feature type in GTF file to be used as exons for building transcripts. #>       streamable: no #>       id: '#sjdbGTFfeatureExon' #>       sbg:category: Splice junctions database #>       sbg:toolDefaultValue: exon #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Chromosome names #>       description: Prefix for chromosome names in a GTF file (e.g. 'chr' for using #>         ENSMEBL annotations with UCSC geneomes). #>       streamable: no #>       id: '#sjdbGTFchrPrefix' #>       sbg:category: Splice junctions database #>       sbg:toolDefaultValue: '-' #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Search start point normalized #>       description: seedSearchStartLmax normalized to read length (sum of mates' lengths #>         for paired-end reads). #>       streamable: no #>       id: '#seedSearchStartLmaxOverLread' #>       inputBinding: #>         position: 0 #>         prefix: --seedSearchStartLmaxOverLread #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '1.0' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Search start point #>       description: Defines the search start point through the read - the read is split #>         into pieces no longer than this value (int>0). #>       streamable: no #>       id: '#seedSearchStartLmax' #>       inputBinding: #>         position: 0 #>         prefix: --seedSearchStartLmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '50' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max seed length #>       description: Defines the maximum length of the seeds, if =0 max seed length #>         is infinite (int>=0). #>       streamable: no #>       id: '#seedSearchLmax' #>       inputBinding: #>         position: 0 #>         prefix: --seedSearchLmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max seeds per window #>       description: Max number of seeds per window (int>=0). #>       streamable: no #>       id: '#seedPerWindowNmax' #>       inputBinding: #>         position: 0 #>         prefix: --seedPerWindowNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '50' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max seeds per read #>       description: Max number of seeds per read (int>=0). #>       streamable: no #>       id: '#seedPerReadNmax' #>       inputBinding: #>         position: 0 #>         prefix: --seedPerReadNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '1000' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max one-seed loci per window #>       description: Max number of one seed loci per window (int>=0). #>       streamable: no #>       id: '#seedNoneLociPerWindow' #>       inputBinding: #>         position: 0 #>         prefix: --seedNoneLociPerWindow #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '10' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Filter pieces for stitching #>       description: Only pieces that map fewer than this value are utilized in the #>         stitching procedure (int>=0). #>       streamable: no #>       id: '#seedMultimapNmax' #>       inputBinding: #>         position: 0 #>         prefix: --seedMultimapNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '10000' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max score reduction #>       description: Maximum score reduction while searching for SJ boundaries in the #>         stitching step. #>       streamable: no #>       id: '#scoreStitchSJshift' #>       inputBinding: #>         position: 0 #>         prefix: --scoreStitchSJshift #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '1' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Insertion Open Penalty #>       description: Insertion open penalty. #>       streamable: no #>       id: '#scoreInsOpen' #>       inputBinding: #>         position: 0 #>         prefix: --scoreInsOpen #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-2' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Insertion extension penalty #>       description: Insertion extension penalty per base (in addition to --scoreInsOpen). #>       streamable: no #>       id: '#scoreInsBase' #>       inputBinding: #>         position: 0 #>         prefix: --scoreInsBase #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-2' #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Log scaled score #>       description: 'Extra score logarithmically scaled with genomic length of the #>         alignment: <int>*log2(genomicLength).' #>       streamable: no #>       id: '#scoreGenomicLengthLog2scale' #>       inputBinding: #>         position: 0 #>         prefix: --scoreGenomicLengthLog2scale #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-0.25' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Non-canonical gap open #>       description: Non-canonical gap open penalty (in addition to --scoreGap). #>       streamable: no #>       id: '#scoreGapNoncan' #>       inputBinding: #>         position: 0 #>         prefix: --scoreGapNoncan #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-8' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: GC/AG and CT/GC gap open #>       description: GC/AG and CT/GC gap open penalty (in addition to --scoreGap). #>       streamable: no #>       id: '#scoreGapGCAG' #>       inputBinding: #>         position: 0 #>         prefix: --scoreGapGCAG #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-4' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: AT/AC and GT/AT gap open #>       description: AT/AC and GT/AT gap open penalty (in addition to --scoreGap). #>       streamable: no #>       id: '#scoreGapATAC' #>       inputBinding: #>         position: 0 #>         prefix: --scoreGapATAC #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-8' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Gap open penalty #>       description: Gap open penalty. #>       streamable: no #>       id: '#scoreGap' #>       inputBinding: #>         position: 0 #>         prefix: --scoreGap #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Deletion open penalty #>       description: Deletion open penalty. #>       streamable: no #>       id: '#scoreDelOpen' #>       inputBinding: #>         position: 0 #>         prefix: --scoreDelOpen #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-2' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Deletion extension penalty #>       description: Deletion extension penalty per base (in addition to --scoreDelOpen). #>       streamable: no #>       id: '#scoreDelBase' #>       inputBinding: #>         position: 0 #>         prefix: --scoreDelBase #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-2' #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Sequencing center #>       description: Specify the sequencing center for RG line. #>       streamable: no #>       id: '#rg_seq_center' #>       sbg:category: Read group #>       sbg:toolDefaultValue: Inferred from metadata #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Sample ID #>       description: Specify the sample ID for RG line. #>       streamable: no #>       id: '#rg_sample_id' #>       sbg:category: Read group #>       sbg:toolDefaultValue: Inferred from metadata #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Platform unit ID #>       description: Specify the platform unit ID for RG line. #>       streamable: no #>       id: '#rg_platform_unit_id' #>       sbg:category: Read group #>       sbg:toolDefaultValue: Inferred from metadata #>       required: no #>     - type: #>       - 'null' #>       - name: rg_platform #>         symbols: #>         - LS 454 #>         - Helicos #>         - Illumina #>         - ABI SOLiD #>         - Ion Torrent PGM #>         - PacBio #>         type: enum #>       label: Platform #>       description: Specify the version of the technology that was used for sequencing #>         or assaying. #>       streamable: no #>       id: '#rg_platform' #>       sbg:category: Read group #>       sbg:toolDefaultValue: Inferred from metadata #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Median fragment length #>       description: Specify the median fragment length for RG line. #>       streamable: no #>       id: '#rg_mfl' #>       sbg:category: Read group #>       sbg:toolDefaultValue: Inferred from metadata #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Library ID #>       description: Specify the library ID for RG line. #>       streamable: no #>       id: '#rg_library_id' #>       sbg:category: Read group #>       sbg:toolDefaultValue: Inferred from metadata #>       required: no #>     - type: #>       - items: File #>         type: array #>       label: Read sequence #>       description: Read sequence. #>       streamable: no #>       id: '#reads' #>       inputBinding: #>         position: 10 #>         separate: yes #>         itemSeparator: ' ' #>         valueFrom: #>           engine: '#cwl-js-engine' #>           script: \"{\\t\\n  var list = [].concat($job.inputs.reads)\\n  \\n  var resp #>             = []\\n  \\n  if (list.length == 1){\\n    resp.push(list[0].path)\\n    \\n #>             \\ }else if (list.length == 2){    \\n    \\n    left = \\\"\\\"\\n    right = #>             \\\"\\\"\\n      \\n    for (index = 0; index < list.length; ++index) {\\n      \\n #>             \\     if (list[index].metadata != null){\\n        if (list[index].metadata.paired_end #>             == 1){\\n          left = list[index].path\\n        }else if (list[index].metadata.paired_end #>             == 2){\\n          right = list[index].path\\n        }\\n      }\\n    }\\n #>             \\   \\n    if (left != \\\"\\\" && right != \\\"\\\"){      \\n      resp.push(left)\\n #>             \\     resp.push(right)\\n    }\\n  }\\n  else if (list.length > 2){\\n    left #>             = []\\n    right = []\\n      \\n    for (index = 0; index < list.length; #>             ++index) {\\n      \\n      if (list[index].metadata != null){\\n        if #>             (list[index].metadata.paired_end == 1){\\n          left.push(list[index].path)\\n #>             \\       }else if (list[index].metadata.paired_end == 2){\\n          right.push(list[index].path)\\n #>             \\       }\\n      }\\n    }\\n    left_join = left.join()\\n    right_join #>             = right.join()\\n    if (left != [] && right != []){      \\n      resp.push(left_join)\\n #>             \\     resp.push(right_join)\\n    }\\t\\n  }\\n  \\n  if(resp.length > 0){ #>             \\   \\n    return \\\"--readFilesIn \\\".concat(resp.join(\\\" \\\"))\\n  }\\n}\" #>           class: Expression #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Basic #>       sbg:fileTypes: FASTA, FASTQ, FA, FQ, FASTQ.GZ, FQ.GZ, FASTQ.BZ2, FQ.BZ2 #>       sbg:x: 200.0 #>       sbg:y: 200.0 #>       sbg:includeInPorts: yes #>       required: yes #>     - type: #>       - 'null' #>       - name: readMatesLengthsIn #>         symbols: #>         - NotEqual #>         - Equal #>         type: enum #>       label: Reads lengths #>       description: Equal/Not equal - lengths of names, sequences, qualities for both #>         mates are the same/not the same. \"Not equal\" is safe in all situations. #>       streamable: no #>       id: '#readMatesLengthsIn' #>       inputBinding: #>         position: 0 #>         prefix: --readMatesLengthsIn #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Read parameters #>       sbg:toolDefaultValue: NotEqual #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Reads to map #>       description: Number of reads to map from the beginning of the file. #>       streamable: no #>       id: '#readMapNumber' #>       inputBinding: #>         position: 0 #>         prefix: --readMapNumber #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Read parameters #>       sbg:toolDefaultValue: '-1' #>       required: no #>     - type: #>       - 'null' #>       - name: quantTranscriptomeBan #>         symbols: #>         - IndelSoftclipSingleend #>         - Singleend #>         type: enum #>       label: Prohibit alignment type #>       description: 'Prohibit various alignment type. IndelSoftclipSingleend: prohibit #>         indels, soft clipping and single-end alignments - compatible with RSEM; Singleend: #>         prohibit single-end alignments.' #>       streamable: no #>       id: '#quantTranscriptomeBan' #>       inputBinding: #>         position: 0 #>         prefix: --quantTranscriptomeBan #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Quantification of Annotations #>       sbg:toolDefaultValue: IndelSoftclipSingleend #>       required: no #>     - type: #>       - 'null' #>       - name: quantMode #>         symbols: #>         - TranscriptomeSAM #>         - GeneCounts #>         type: enum #>       label: Quantification mode #>       description: Types of quantification requested. 'TranscriptomeSAM' option outputs #>         SAM/BAM alignments to transcriptome into a separate file. With 'GeneCounts' #>         option, STAR will count number of reads per gene while mapping. #>       streamable: no #>       id: '#quantMode' #>       sbg:category: Quantification of Annotations #>       sbg:toolDefaultValue: '-' #>       required: no #>     - type: #>       - 'null' #>       - name: outSortingType #>         symbols: #>         - Unsorted #>         - SortedByCoordinate #>         - Unsorted SortedByCoordinate #>         type: enum #>       label: Output sorting type #>       description: Type of output sorting. #>       streamable: no #>       id: '#outSortingType' #>       sbg:category: Output #>       sbg:toolDefaultValue: SortedByCoordinate #>       required: no #>     - type: #>       - 'null' #>       - name: outSJfilterReads #>         symbols: #>         - All #>         - Unique #>         type: enum #>       label: Collapsed junctions reads #>       description: 'Which reads to consider for collapsed splice junctions output. #>         All: all reads, unique- and multi-mappers; Unique: uniquely mapping reads #>         only.' #>       streamable: no #>       id: '#outSJfilterReads' #>       inputBinding: #>         position: 0 #>         prefix: --outSJfilterReads #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: 'Output filtering: splice junctions' #>       sbg:toolDefaultValue: All #>       required: no #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Min overhang SJ #>       description: Minimum overhang length for splice junctions on both sides for #>         each of the motifs. To set no output for desired motif, assign -1 to the corresponding #>         field. Does not apply to annotated junctions. #>       streamable: no #>       id: '#outSJfilterOverhangMin' #>       inputBinding: #>         position: 0 #>         prefix: --outSJfilterOverhangMin #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: 'Output filtering: splice junctions' #>       sbg:toolDefaultValue: 30 12 12 12 #>       required: no #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Max gap allowed #>       description: 'Maximum gap allowed for junctions supported by 1,2,3...N reads #>         (int >= 0) i.e. by default junctions supported by 1 read can have gaps <=50000b, #>         by 2 reads: <=100000b, by 3 reads: <=200000. By 4 or more reads: any gap <=alignIntronMax. #>         Does not apply to annotated junctions.' #>       streamable: no #>       id: '#outSJfilterIntronMaxVsReadN' #>       inputBinding: #>         position: 0 #>         prefix: --outSJfilterIntronMaxVsReadN #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: 'Output filtering: splice junctions' #>       sbg:toolDefaultValue: 50000 100000 200000 #>       required: no #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Min distance to other donor/acceptor #>       description: Minimum allowed distance to other junctions' donor/acceptor for #>         each of the motifs (int >= 0). Does not apply to annotated junctions. #>       streamable: no #>       id: '#outSJfilterDistToOtherSJmin' #>       inputBinding: #>         position: 0 #>         prefix: --outSJfilterDistToOtherSJmin #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: 'Output filtering: splice junctions' #>       sbg:toolDefaultValue: 10 0 5 10 #>       required: no #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Min unique count #>       description: Minimum uniquely mapping read count per junction for each of the #>         motifs. To set no output for desired motif, assign -1 to the corresponding #>         field. Junctions are output if one of --outSJfilterCountUniqueMin OR --outSJfilterCountTotalMin #>         conditions are satisfied. Does not apply to annotated junctions. #>       streamable: no #>       id: '#outSJfilterCountUniqueMin' #>       inputBinding: #>         position: 0 #>         prefix: --outSJfilterCountUniqueMin #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: 'Output filtering: splice junctions' #>       sbg:toolDefaultValue: 3 1 1 1 #>       required: no #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Min total count #>       description: Minimum total (multi-mapping+unique) read count per junction for #>         each of the motifs. To set no output for desired motif, assign -1 to the corresponding #>         field. Junctions are output if one of --outSJfilterCountUniqueMin OR --outSJfilterCountTotalMin #>         conditions are satisfied. Does not apply to annotated junctions. #>       streamable: no #>       id: '#outSJfilterCountTotalMin' #>       inputBinding: #>         position: 0 #>         prefix: --outSJfilterCountTotalMin #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: 'Output filtering: splice junctions' #>       sbg:toolDefaultValue: 3 1 1 1 #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMunmapped #>         symbols: #>         - None #>         - Within #>         type: enum #>       label: Write unmapped in SAM #>       description: 'Output of unmapped reads in the SAM format. None: no output Within: #>         output unmapped reads within the main SAM file (i.e. Aligned.out.sam).' #>       streamable: no #>       id: '#outSAMunmapped' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMunmapped #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: None #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMtype #>         symbols: #>         - SAM #>         - BAM #>         type: enum #>       label: Output format #>       description: Format of output alignments. #>       streamable: no #>       id: '#outSAMtype' #>       inputBinding: #>         position: 0 #>         separate: yes #>         valueFrom: #>           engine: '#cwl-js-engine' #>           script: |- #>             { #>               SAM_type = $job.inputs.outSAMtype #>               SORT_type = $job.inputs.outSortingType #>               if (SAM_type && SORT_type) { #>                 return \"--outSAMtype \".concat(SAM_type, \" \", SORT_type) #>               } #>             } #>           class: Expression #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: SAM #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMstrandField #>         symbols: #>         - None #>         - intronMotif #>         type: enum #>       label: Strand field flag #>       description: 'Cufflinks-like strand field flag. None: not used; intronMotif: #>         strand derived from the intron motif. Reads with inconsistent and/or non-canonical #>         introns are filtered out.' #>       streamable: no #>       id: '#outSAMstrandField' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMstrandField #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: None #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMreadID #>         symbols: #>         - Standard #>         - Number #>         type: enum #>       label: Read ID #>       description: 'Read ID record type. Standard: first word (until space) from the #>         FASTx read ID line, removing /1,/2 from the end; Number: read number (index) #>         in the FASTx file.' #>       streamable: no #>       id: '#outSAMreadID' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMreadID #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: Standard #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMprimaryFlag #>         symbols: #>         - OneBestScore #>         - AllBestScore #>         type: enum #>       label: Primary alignments #>       description: 'Which alignments are considered primary - all others will be marked #>         with 0x100 bit in the FLAG. OneBestScore: only one alignment with the best #>         score is primary; AllBestScore: all alignments with the best score are primary.' #>       streamable: no #>       id: '#outSAMprimaryFlag' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMprimaryFlag #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: OneBestScore #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMorder #>         symbols: #>         - Paired #>         - PairedKeepInputOrder #>         type: enum #>       label: Sorting in SAM #>       description: 'Type of sorting for the SAM output. Paired: one mate after the #>         other for all paired alignments; PairedKeepInputOrder: one mate after the #>         other for all paired alignments, the order is kept the same as in the input #>         FASTQ files.' #>       streamable: no #>       id: '#outSAMorder' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMorder #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: Paired #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMmode #>         symbols: #>         - Full #>         - NoQS #>         type: enum #>       label: SAM mode #>       description: 'Mode of SAM output. Full: full SAM output; NoQS: full SAM but #>         without quality scores.' #>       streamable: no #>       id: '#outSAMmode' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMmode #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: Full #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: MAPQ value #>       description: MAPQ value for unique mappers (0 to 255). #>       streamable: no #>       id: '#outSAMmapqUnique' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMmapqUnique #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: '255' #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: SAM header @PG #>       description: Extra @PG (software) line of the SAM header (in addition to STAR). #>       streamable: no #>       id: '#outSAMheaderPG' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMheaderPG #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: '-' #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: SAM header @HD #>       description: '@HD (header) line of the SAM header.' #>       streamable: no #>       id: '#outSAMheaderHD' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMheaderHD #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: '-' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: OR SAM flag #>       description: Set specific bits of the SAM FLAG. #>       streamable: no #>       id: '#outSAMflagOR' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMflagOR #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: AND SAM flag #>       description: Set specific bits of the SAM FLAG. #>       streamable: no #>       id: '#outSAMflagAND' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMflagAND #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: '65535' #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMattributes #>         symbols: #>         - Standard #>         - NH #>         - All #>         - None #>         type: enum #>       label: SAM attributes #>       description: 'Desired SAM attributes, in the order desired for the output SAM. #>         NH: any combination in any order; Standard: NH HI AS nM; All: NH HI AS nM #>         NM MD jM jI; None: no attributes.' #>       streamable: no #>       id: '#outSAMattributes' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMattributes #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: Standard #>       required: no #>     - type: #>       - 'null' #>       - name: outReadsUnmapped #>         symbols: #>         - None #>         - Fastx #>         type: enum #>       label: Output unmapped reads #>       description: 'Output of unmapped reads (besides SAM). None: no output; Fastx: #>         output in separate fasta/fastq files, Unmapped.out.mate1/2.' #>       streamable: no #>       id: '#outReadsUnmapped' #>       inputBinding: #>         position: 0 #>         prefix: --outReadsUnmapped #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: None #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Quality conversion #>       description: Add this number to the quality score (e.g. to convert from Illumina #>         to Sanger, use -31). #>       streamable: no #>       id: '#outQSconversionAdd' #>       inputBinding: #>         position: 0 #>         prefix: --outQSconversionAdd #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - name: outFilterType #>         symbols: #>         - Normal #>         - BySJout #>         type: enum #>       label: Filtering type #>       description: 'Type of filtering. Normal: standard filtering using only current #>         alignment; BySJout: keep only those reads that contain junctions that passed #>         filtering into SJ.out.tab.' #>       streamable: no #>       id: '#outFilterType' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterType #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: Normal #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Min score normalized #>       description: '''Minimum score'' normalized to read length (sum of mates'' lengths #>         for paired-end reads).' #>       streamable: no #>       id: '#outFilterScoreMinOverLread' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterScoreMinOverLread #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '0.66' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min score #>       description: Alignment will be output only if its score is higher than this #>         value. #>       streamable: no #>       id: '#outFilterScoreMin' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterScoreMin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Multimapping score range #>       description: The score range below the maximum score for multimapping alignments. #>       streamable: no #>       id: '#outFilterMultimapScoreRange' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterMultimapScoreRange #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '1' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max number of mappings #>       description: Read alignments will be output only if the read maps fewer than #>         this value, otherwise no alignments will be output. #>       streamable: no #>       id: '#outFilterMultimapNmax' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterMultimapNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '10' #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Mismatches to *read* length #>       description: Alignment will be output only if its ratio of mismatches to *read* #>         length is less than this value. #>       streamable: no #>       id: '#outFilterMismatchNoverReadLmax' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterMismatchNoverReadLmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '1' #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Mismatches to *mapped* length #>       description: Alignment will be output only if its ratio of mismatches to *mapped* #>         length is less than this value. #>       streamable: no #>       id: '#outFilterMismatchNoverLmax' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterMismatchNoverLmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '0.3' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max number of mismatches #>       description: Alignment will be output only if it has fewer mismatches than this #>         value. #>       streamable: no #>       id: '#outFilterMismatchNmax' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterMismatchNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '10' #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Min matched bases normalized #>       description: '''Minimum matched bases'' normalized to read length (sum of mates #>         lengths for paired-end reads).' #>       streamable: no #>       id: '#outFilterMatchNminOverLread' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterMatchNminOverLread #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '0.66' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min matched bases #>       description: Alignment will be output only if the number of matched bases is #>         higher than this value. #>       streamable: no #>       id: '#outFilterMatchNmin' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterMatchNmin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - name: outFilterIntronMotifs #>         symbols: #>         - None #>         - RemoveNoncanonical #>         - RemoveNoncanonicalUnannotated #>         type: enum #>       label: Motifs filtering #>       description: 'Filter alignment using their motifs. None: no filtering; RemoveNoncanonical: #>         filter out alignments that contain non-canonical junctions; RemoveNoncanonicalUnannotated: #>         filter out alignments that contain non-canonical unannotated junctions when #>         using annotated splice junctions database. The annotated non-canonical junctions #>         will be kept.' #>       streamable: no #>       id: '#outFilterIntronMotifs' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterIntronMotifs #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: None #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max insert junctions #>       description: Maximum number of junction to be inserted to the genome on the #>         fly at the mapping stage, including those from annotations and those detected #>         in the 1st step of the 2-pass run. #>       streamable: no #>       id: '#limitSjdbInsertNsj' #>       inputBinding: #>         position: 0 #>         prefix: --limitSjdbInsertNsj #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Limits #>       sbg:toolDefaultValue: '1000000' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Junctions max number #>       description: Max number of junctions for one read (including all multi-mappers). #>       streamable: no #>       id: '#limitOutSJoneRead' #>       inputBinding: #>         position: 0 #>         prefix: --limitOutSJoneRead #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Limits #>       sbg:toolDefaultValue: '1000' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Collapsed junctions max number #>       description: Max number of collapsed junctions. #>       streamable: no #>       id: '#limitOutSJcollapsed' #>       inputBinding: #>         position: 0 #>         prefix: --limitOutSJcollapsed #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Limits #>       sbg:toolDefaultValue: '1000000' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Limit BAM sorting memory #>       description: Maximum available RAM for sorting BAM. If set to 0, it will be #>         set to the genome index size. #>       streamable: no #>       id: '#limitBAMsortRAM' #>       inputBinding: #>         position: 0 #>         prefix: --limitBAMsortRAM #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Limits #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Genome dir name #>       description: Name of the directory which contains genome files (when genome.tar #>         is uncompressed). #>       streamable: no #>       id: '#genomeDirName' #>       inputBinding: #>         position: 0 #>         prefix: --genomeDir #>         separate: yes #>         valueFrom: #>           engine: '#cwl-js-engine' #>           script: $job.inputs.genomeDirName || \"genomeDir\" #>           class: Expression #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Basic #>       sbg:toolDefaultValue: genomeDir #>       required: no #>     - type: #>       - File #>       label: Genome files #>       description: Genome files created using STAR Genome Generate. #>       streamable: no #>       id: '#genome' #>       sbg:category: Basic #>       sbg:fileTypes: TAR #>       required: yes #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Clip 5p bases #>       description: Number of bases to clip from 5p of each mate. In case only one #>         value is given, it will be assumed the same for both mates. #>       streamable: no #>       id: '#clip5pNbases' #>       inputBinding: #>         position: 0 #>         prefix: --clip5pNbases #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Read parameters #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Clip 3p bases #>       description: Number of bases to clip from 3p of each mate. In case only one #>         value is given, it will be assumed the same for both mates. #>       streamable: no #>       id: '#clip3pNbases' #>       inputBinding: #>         position: 0 #>         prefix: --clip3pNbases #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Read parameters #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Clip 3p after adapter seq. #>       description: Number of bases to clip from 3p of each mate after the adapter #>         clipping. In case only one value is given, it will be assumed the same for #>         both mates. #>       streamable: no #>       id: '#clip3pAfterAdapterNbases' #>       inputBinding: #>         position: 0 #>         prefix: --clip3pAfterAdapterNbases #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Read parameters #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - items: string #>         type: array #>       label: Clip 3p adapter sequence #>       description: Adapter sequence to clip from 3p of each mate. In case only one #>         value is given, it will be assumed the same for both mates. #>       streamable: no #>       id: '#clip3pAdapterSeq' #>       inputBinding: #>         position: 0 #>         prefix: --clip3pAdapterSeq #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Read parameters #>       sbg:toolDefaultValue: '-' #>       required: no #>     - type: #>       - 'null' #>       - items: float #>         type: array #>       label: Max mismatches proportions #>       description: Max proportion of mismatches for 3p adapter clipping for each mate. #>         In case only one value is given, it will be assumed the same for both mates. #>       streamable: no #>       id: '#clip3pAdapterMMp' #>       inputBinding: #>         position: 0 #>         prefix: --clip3pAdapterMMp #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Read parameters #>       sbg:toolDefaultValue: '0.1' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min segment length #>       description: Minimum length of chimeric segment length, if =0, no chimeric output #>         (int>=0). #>       streamable: no #>       id: '#chimSegmentMin' #>       inputBinding: #>         position: 0 #>         prefix: --chimSegmentMin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Chimeric Alignments #>       sbg:toolDefaultValue: '15' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min separation score #>       description: Minimum difference (separation) between the best chimeric score #>         and the next one (int>=0). #>       streamable: no #>       id: '#chimScoreSeparation' #>       inputBinding: #>         position: 0 #>         prefix: --chimScoreSeparation #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Chimeric Alignments #>       sbg:includeInPorts: no #>       sbg:toolDefaultValue: '10' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min total score #>       description: Minimum total (summed) score of the chimeric segments (int>=0). #>       streamable: no #>       id: '#chimScoreMin' #>       inputBinding: #>         position: 0 #>         prefix: --chimScoreMin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Chimeric Alignments #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Non-GT/AG penalty #>       description: Penalty for a non-GT/AG chimeric junction. #>       streamable: no #>       id: '#chimScoreJunctionNonGTAG' #>       inputBinding: #>         position: 0 #>         prefix: --chimScoreJunctionNonGTAG #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Chimeric Alignments #>       sbg:toolDefaultValue: '-1' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max drop score #>       description: Max drop (difference) of chimeric score (the sum of scores of all #>         chimeric segements) from the read length (int>=0). #>       streamable: no #>       id: '#chimScoreDropMax' #>       inputBinding: #>         position: 0 #>         prefix: --chimScoreDropMax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Chimeric Alignments #>       sbg:toolDefaultValue: '20' #>       required: no #>     - type: #>       - 'null' #>       - name: chimOutType #>         symbols: #>         - SeparateSAMold #>         - Within #>         type: enum #>       label: Chimeric output type #>       description: 'Type of chimeric output. SeparateSAMold: output old SAM into separate #>         Chimeric.out.sam file; Within: output into main aligned SAM/BAM files.' #>       streamable: no #>       id: '#chimOutType' #>       sbg:category: Chimeric Alignments #>       sbg:toolDefaultValue: SeparateSAMold #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min junction overhang #>       description: Minimum overhang for a chimeric junction (int>=0). #>       streamable: no #>       id: '#chimJunctionOverhangMin' #>       inputBinding: #>         position: 0 #>         prefix: --chimJunctionOverhangMin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Chimeric Alignments #>       sbg:toolDefaultValue: '20' #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Max windows per read #>       description: Max number of windows per read (int>0). #>       streamable: no #>       id: '#alignWindowsPerReadNmax' #>       inputBinding: #>         position: 0 #>         prefix: --alignWindowsPerReadNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '10000' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max transcripts per window #>       description: Max number of transcripts per window (int>0). #>       streamable: no #>       id: '#alignTranscriptsPerWindowNmax' #>       inputBinding: #>         position: 0 #>         prefix: --alignTranscriptsPerWindowNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '100' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max transcripts per read #>       description: Max number of different alignments per read to consider (int>0). #>       streamable: no #>       id: '#alignTranscriptsPerReadNmax' #>       inputBinding: #>         position: 0 #>         prefix: --alignTranscriptsPerReadNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '10000' #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Min mapped length normalized #>       description: alignSplicedMateMapLmin normalized to mate length (float>0). #>       streamable: no #>       id: '#alignSplicedMateMapLminOverLmate' #>       inputBinding: #>         position: 0 #>         prefix: --alignSplicedMateMapLminOverLmate #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '0.66' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min mapped length #>       description: Minimum mapped length for a read mate that is spliced (int>0). #>       streamable: no #>       id: '#alignSplicedMateMapLmin' #>       inputBinding: #>         position: 0 #>         prefix: --alignSplicedMateMapLmin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - name: alignSoftClipAtReferenceEnds #>         symbols: #>         - 'Yes' #>         - 'No' #>         type: enum #>       label: Soft clipping #>       description: 'Option which allows soft clipping of alignments at the reference #>         (chromosome) ends. Can be disabled for compatibility with Cufflinks/Cuffmerge. #>         Yes: Enables soft clipping; No: Disables soft clipping.' #>       streamable: no #>       id: '#alignSoftClipAtReferenceEnds' #>       inputBinding: #>         position: 0 #>         prefix: --alignSoftClipAtReferenceEnds #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: 'Yes' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min overhang #>       description: Minimum overhang (i.e. block size) for spliced alignments (int>0). #>       streamable: no #>       id: '#alignSJoverhangMin' #>       inputBinding: #>         position: 0 #>         prefix: --alignSJoverhangMin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '5' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: 'Min overhang: annotated' #>       description: Minimum overhang (i.e. block size) for annotated (sjdb) spliced #>         alignments (int>0). #>       streamable: no #>       id: '#alignSJDBoverhangMin' #>       inputBinding: #>         position: 0 #>         prefix: --alignSJDBoverhangMin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:includeInPorts: no #>       sbg:toolDefaultValue: '3' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max mates gap #>       description: Maximum gap between two mates, if 0, max intron gap will be determined #>         by (2^winBinNbits)*winAnchorDistNbins. #>       streamable: no #>       id: '#alignMatesGapMax' #>       inputBinding: #>         position: 0 #>         prefix: --alignMatesGapMax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min intron size #>       description: 'Minimum intron size: genomic gap is considered intron if its length #>         >= alignIntronMin, otherwise it is considered Deletion (int>=0).' #>       streamable: no #>       id: '#alignIntronMin' #>       inputBinding: #>         position: 0 #>         prefix: --alignIntronMin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '21' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max intron size #>       description: Maximum intron size, if 0, max intron size will be determined by #>         (2^winBinNbits)*winAnchorDistNbins. #>       streamable: no #>       id: '#alignIntronMax' #>       inputBinding: #>         position: 0 #>         prefix: --alignIntronMax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - name: alignEndsType #>         symbols: #>         - Local #>         - EndToEnd #>         type: enum #>       label: Alignment type #>       description: 'Type of read ends alignment. Local: standard local alignment with #>         soft-clipping allowed. EndToEnd: force end to end read alignment, do not soft-clip.' #>       streamable: no #>       id: '#alignEndsType' #>       inputBinding: #>         position: 0 #>         prefix: --alignEndsType #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: Local #>       required: no #>     outputs: #>     - type: #>       - 'null' #>       - items: File #>         type: array #>       label: Unmapped reads #>       description: Output of unmapped reads. #>       streamable: no #>       id: '#unmapped_reads' #>       outputBinding: #>         glob: '*Unmapped.out*' #>       sbg:fileTypes: FASTQ #>     - type: #>       - 'null' #>       - File #>       label: Transcriptome alignments #>       description: Alignments translated into transcript coordinates. #>       streamable: no #>       id: '#transcriptome_aligned_reads' #>       outputBinding: #>         glob: '*Transcriptome*' #>       sbg:fileTypes: BAM #>     - type: #>       - 'null' #>       - File #>       label: Splice junctions #>       description: High confidence collapsed splice junctions in tab-delimited format. #>         Only junctions supported by uniquely mapping reads are reported. #>       streamable: no #>       id: '#splice_junctions' #>       outputBinding: #>         glob: '*SJ.out.tab' #>       sbg:fileTypes: TAB #>     - type: #>       - 'null' #>       - File #>       label: Reads per gene #>       description: File with number of reads per gene. A read is counted if it overlaps #>         (1nt or more) one and only one gene. #>       streamable: no #>       id: '#reads_per_gene' #>       outputBinding: #>         glob: '*ReadsPerGene*' #>       sbg:fileTypes: TAB #>     - type: #>       - 'null' #>       - items: File #>         type: array #>       label: Log files #>       description: Log files produced during alignment. #>       streamable: no #>       id: '#log_files' #>       outputBinding: #>         glob: '*Log*.out' #>       sbg:fileTypes: OUT #>     - type: #>       - 'null' #>       - File #>       label: Intermediate genome files #>       description: Archive with genome files produced when annotations are included #>         on the fly (in the mapping step). #>       streamable: no #>       id: '#intermediate_genome' #>       outputBinding: #>         glob: '*_STARgenome.tar' #>       sbg:fileTypes: TAR #>     - type: #>       - 'null' #>       - File #>       label: Chimeric junctions #>       description: If chimSegmentMin in 'Chimeric Alignments' section is set to 0, #>         'Chimeric Junctions' won't be output. #>       streamable: no #>       id: '#chimeric_junctions' #>       outputBinding: #>         glob: '*Chimeric.out.junction' #>       sbg:fileTypes: JUNCTION #>     - type: #>       - 'null' #>       - File #>       label: Chimeric alignments #>       description: Aligned Chimeric sequences SAM - if chimSegmentMin = 0, no Chimeric #>         Alignment SAM and Chimeric Junctions outputs. #>       streamable: no #>       id: '#chimeric_alignments' #>       outputBinding: #>         glob: '*.Chimeric.out.sam' #>       sbg:fileTypes: SAM #>     - type: #>       - 'null' #>       - File #>       label: Aligned SAM/BAM #>       description: Aligned sequence in SAM/BAM format. #>       streamable: no #>       id: '#aligned_reads' #>       outputBinding: #>         glob: #>           engine: '#cwl-js-engine' #>           script: |- #>             { #>               if ($job.inputs.outSortingType == 'SortedByCoordinate') { #>                 sort_name = '.sortedByCoord' #>               } #>               else { #>                 sort_name = '' #>               } #>               if ($job.inputs.outSAMtype == 'BAM') { #>                 sam_name = \"*.Aligned\".concat( sort_name, '.out.bam') #>               } #>               else { #>                 sam_name = \"*.Aligned.out.sam\" #>               } #>               return sam_name #>             } #>           class: Expression #>       sbg:fileTypes: SAM, BAM #>     requirements: #>     - class: ExpressionEngineRequirement #>       id: '#cwl-js-engine' #>       requirements: #>       - class: DockerRequirement #>         dockerPull: rabix/js-engine #>     hints: #>     - class: DockerRequirement #>       dockerPull: images.sbgenomics.com/ana_d/star:2.4.2a #>       dockerImageId: a4b0ad2c3cae #>     - class: sbg:MemRequirement #>       value: 60000 #>     - class: sbg:CPURequirement #>       value: 15 #>     label: STAR #>     description: STAR is an ultrafast universal RNA-seq aligner. It has very high #>       mapping speed, accurate alignment of contiguous and spliced reads, detection #>       of polyA-tails, non-canonical splices and chimeric (fusion) junctions. It works #>       with reads starting from lengths ~15 bases up to ~300 bases. In case of having #>       longer reads, use of STAR Long is recommended. #>     class: CommandLineTool #>     baseCommand: #>     - tar #>     - -xvf #>     - class: Expression #>       script: $job.inputs.genome.path #>       engine: '#cwl-js-engine' #>     - '&&' #>     - /opt/STAR #>     - --runThreadN #>     - class: Expression #>       script: |- #>         { #>           return $job.allocatedResources.cpu #>         } #>       engine: '#cwl-js-engine' #>     arguments: #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: |- #>           { #>             file = [].concat($job.inputs.reads)[0].path #>             extension = /(?:\\.([^.]+))?$/.exec(file)[1] #>             if (extension == \"gz\") { #>               return \"--readFilesCommand zcat\" #>             } else if (extension == \"bz2\") { #>               return \"--readFilesCommand bzcat\" #>             } #>           } #>         class: Expression #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\t\\n  var sjFormat = \\\"False\\\"\\n  var gtfgffFormat = \\\"False\\\"\\n #>           \\ var list = $job.inputs.sjdbGTFfile\\n  var paths_list = []\\n  var joined_paths #>           = \\\"\\\"\\n  \\n  if (list) {\\n    list.forEach(function(f){return paths_list.push(f.path)})\\n #>           \\   joined_paths = paths_list.join(\\\" \\\")\\n\\n\\n    paths_list.forEach(function(f){\\n #>           \\     ext = f.replace(/^.*\\\\./, '')\\n      if (ext == \\\"gff\\\" || ext == #>           \\\"gtf\\\") {\\n        gtfgffFormat = \\\"True\\\"\\n        return gtfgffFormat\\n #>           \\     }\\n      if (ext == \\\"txt\\\") {\\n        sjFormat = \\\"True\\\"\\n        return #>           sjFormat\\n      }\\n    })\\n\\n    if ($job.inputs.sjdbGTFfile && $job.inputs.sjdbInsertSave #>           != \\\"None\\\") {\\n      if (sjFormat == \\\"True\\\") {\\n        return \\\"--sjdbFileChrStartEnd #>           \\\".concat(joined_paths)\\n      }\\n      else if (gtfgffFormat == \\\"True\\\") #>           {\\n        return \\\"--sjdbGTFfile \\\".concat(joined_paths)\\n      }\\n    }\\n #>           \\ }\\n}\" #>         class: Expression #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  a = b = c = d = e = f = g = []\\n  if ($job.inputs.sjdbGTFchrPrefix) #>           {\\n    a = [\\\"--sjdbGTFchrPrefix\\\", $job.inputs.sjdbGTFchrPrefix]\\n  }\\n #>           \\ if ($job.inputs.sjdbGTFfeatureExon) {\\n    b = [\\\"--sjdbGTFfeatureExon\\\", #>           $job.inputs.sjdbGTFfeatureExon]\\n  }\\n  if ($job.inputs.sjdbGTFtagExonParentTranscript) #>           {\\n    c = [\\\"--sjdbGTFtagExonParentTranscript\\\", $job.inputs.sjdbGTFtagExonParentTranscript]\\n #>           \\ }\\n  if ($job.inputs.sjdbGTFtagExonParentGene) {\\n    d = [\\\"--sjdbGTFtagExonParentGene\\\", #>           $job.inputs.sjdbGTFtagExonParentGene]\\n  }\\n  if ($job.inputs.sjdbOverhang) #>           {\\n    e = [\\\"--sjdbOverhang\\\", $job.inputs.sjdbOverhang]\\n  }\\n  if ($job.inputs.sjdbScore) #>           {\\n    f = [\\\"--sjdbScore\\\", $job.inputs.sjdbScore]\\n  }\\n  if ($job.inputs.sjdbInsertSave) #>           {\\n    g = [\\\"--sjdbInsertSave\\\", $job.inputs.sjdbInsertSave]\\n  }\\n  \\n #>           \\ \\n  \\n  if ($job.inputs.sjdbInsertSave != \\\"None\\\" && $job.inputs.sjdbGTFfile) #>           {\\n    new_list = a.concat(b, c, d, e, f, g)\\n    return new_list.join(\\\" #>           \\\")\\n  }\\n}\" #>         class: Expression #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: |- #>           { #>             if ($job.inputs.twopassMode == \"Basic\") { #>               return \"--twopass1readsN \".concat($job.inputs.twopass1readsN) #>             } #>           } #>         class: Expression #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: |- #>           { #>             if ($job.inputs.chimOutType == \"Within\") { #>               return \"--chimOutType \".concat(\"Within\", $job.inputs.outSAMtype) #>             } #>             else { #>               return \"--chimOutType SeparateSAMold\" #>             } #>           } #>         class: Expression #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  var param_list = []\\n  \\n  function add_param(key, value){\\n #>           \\   if (value == \\\"\\\") {\\n      return\\n    }\\n    else {\\n      return #>           param_list.push(key.concat(\\\":\\\", value))\\n    }\\n  }\\n  \\n  add_param('ID', #>           \\\"1\\\")\\n  if ($job.inputs.rg_seq_center) {\\n    add_param('CN', $job.inputs.rg_seq_center)\\n #>           \\ } else if ([].concat($job.inputs.reads)[0].metadata.seq_center) {\\n    add_param('CN', #>           [].concat($job.inputs.reads)[0].metadata.seq_center)\\n  }\\n  if ($job.inputs.rg_library_id) #>           {\\n    add_param('LB', $job.inputs.rg_library_id)\\n  } else if ([].concat($job.inputs.reads)[0].metadata.library_id) #>           {\\n    add_param('LB', [].concat($job.inputs.reads)[0].metadata.library_id)\\n #>           \\ }\\n  if ($job.inputs.rg_mfl) {\\n    add_param('PI', $job.inputs.rg_mfl)\\n #>           \\ } else if ([].concat($job.inputs.reads)[0].metadata.median_fragment_length) #>           {\\n    add_param('PI', [].concat($job.inputs.reads)[0].metadata.median_fragment_length)\\n #>           \\ }\\n  if ($job.inputs.rg_platform) {\\n    add_param('PL', $job.inputs.rg_platform.replace(/ #>           /g,\\\"_\\\"))\\n  } else if ([].concat($job.inputs.reads)[0].metadata.platform) #>           {\\n    add_param('PL', [].concat($job.inputs.reads)[0].metadata.platform.replace(/ #>           /g,\\\"_\\\"))\\n  }\\n  if ($job.inputs.rg_platform_unit_id) {\\n    add_param('PU', #>           $job.inputs.rg_platform_unit_id)\\n  } else if ([].concat($job.inputs.reads)[0].metadata.platform_unit_id) #>           {\\n    add_param('PU', [].concat($job.inputs.reads)[0].metadata.platform_unit_id)\\n #>           \\ }\\n  if ($job.inputs.rg_sample_id) {\\n    add_param('SM', $job.inputs.rg_sample_id)\\n #>           \\ } else if ([].concat($job.inputs.reads)[0].metadata.sample_id) {\\n    add_param('SM', #>           [].concat($job.inputs.reads)[0].metadata.sample_id)\\n  }\\n  return \\\"--outSAMattrRGline #>           \\\".concat(param_list.join(\\\" \\\"))\\n}\" #>         class: Expression #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: |- #>           { #>             if ($job.inputs.sjdbGTFfile && $job.inputs.quantMode) { #>               return \"--quantMode \".concat($job.inputs.quantMode) #>             } #>           } #>         class: Expression #>     - position: 100 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  function sharedStart(array){\\n  var A= array.concat().sort(), #>           \\n      a1= A[0], a2= A[A.length-1], L= a1.length, i= 0;\\n  while(i<L && #>           a1.charAt(i)=== a2.charAt(i)) i++;\\n  return a1.substring(0, i);\\n  }\\n #>           \\ path_list = []\\n  arr = [].concat($job.inputs.reads)\\n  arr.forEach(function(f){return #>           path_list.push(f.path.replace(/\\\\\\\\/g,'/').replace( /.*\\\\//, '' ))})\\n  common_prefix #>           = sharedStart(path_list)\\n  intermediate = common_prefix.replace( /\\\\-$|\\\\_$|\\\\.$/, #>           '' ).concat(\\\"._STARgenome\\\")\\n  source = \\\"./\\\".concat(intermediate)\\n #>           \\ destination = intermediate.concat(\\\".tar\\\")\\n  if ($job.inputs.sjdbGTFfile #>           && $job.inputs.sjdbInsertSave && $job.inputs.sjdbInsertSave != \\\"None\\\") #>           {\\n    return \\\"&& tar -vcf \\\".concat(destination, \\\" \\\", source)\\n  }\\n}\" #>         class: Expression #>     - position: 0 #>       prefix: --outFileNamePrefix #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  function sharedStart(array){\\n  var A= array.concat().sort(), #>           \\n      a1= A[0], a2= A[A.length-1], L= a1.length, i= 0;\\n  while(i<L && #>           a1.charAt(i)=== a2.charAt(i)) i++;\\n  return a1.substring(0, i);\\n  }\\n #>           \\ path_list = []\\n  arr = [].concat($job.inputs.reads)\\n  arr.forEach(function(f){return #>           path_list.push(f.path.replace(/\\\\\\\\/g,'/').replace( /.*\\\\//, '' ))})\\n  common_prefix #>           = sharedStart(path_list)\\n  return \\\"./\\\".concat(common_prefix.replace( #>           /\\\\-$|\\\\_$|\\\\.$/, '' ), \\\".\\\")\\n}\" #>         class: Expression #>     - position: 101 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  function sharedStart(array){\\n  var A= array.concat().sort(), #>           \\n      a1= A[0], a2= A[A.length-1], L= a1.length, i= 0;\\n  while(i<L && #>           a1.charAt(i)=== a2.charAt(i)) i++;\\n  return a1.substring(0, i);\\n  }\\n #>           \\ path_list = []\\n  arr = [].concat($job.inputs.reads)\\n  arr.forEach(function(f){return #>           path_list.push(f.path.replace(/\\\\\\\\/g,'/').replace( /.*\\\\//, '' ))})\\n  common_prefix #>           = sharedStart(path_list)\\n  mate1 = common_prefix.replace( /\\\\-$|\\\\_$|\\\\.$/, #>           '' ).concat(\\\".Unmapped.out.mate1\\\")\\n  mate2 = common_prefix.replace( /\\\\-$|\\\\_$|\\\\.$/, #>           '' ).concat(\\\".Unmapped.out.mate2\\\")\\n  mate1fq = mate1.concat(\\\".fastq\\\")\\n #>           \\ mate2fq = mate2.concat(\\\".fastq\\\")\\n  if ($job.inputs.outReadsUnmapped #>           == \\\"Fastx\\\" && arr.length > 1) {\\n    return \\\"&& mv \\\".concat(mate1, \\\" #>           \\\", mate1fq, \\\" && mv \\\", mate2, \\\" \\\", mate2fq)\\n  }\\n  else if ($job.inputs.outReadsUnmapped #>           == \\\"Fastx\\\" && arr.length == 1) {\\n    return \\\"&& mv \\\".concat(mate1, #>           \\\" \\\", mate1fq)\\n  }\\n}\" #>         class: Expression #>     stdin: '' #>     stdout: '' #>     successCodes: [] #>     temporaryFailCodes: [] #>     x: 624.0 #>     'y': 323 #>   sbg:x: 700.0 #>   sbg:y: 200.0 #> sbg:canvas_zoom: 0.6 #> sbg:canvas_y: -16 #> sbg:canvas_x: -41 #> sbg:batchInput: '#sjdbGTFfile' #> sbg:batchBy: #>   type: item #>  # add source to id f1$link_map() #>                                                      id #> 1  #STAR_Genome_Generate.sjdbGTFtagExonParentTranscript #> 2        #STAR_Genome_Generate.sjdbGTFtagExonParentGene #> 3                     #STAR_Genome_Generate.sjdbGTFfile #> 4                #STAR_Genome_Generate.genomeFastaFiles #> 5                     #SBG_FASTQ_Quality_Detector.fastq #> 6                             #Picard_SortSam.input_bam #> 7                           #STAR.winAnchorMultimapNmax #> 8                              #STAR.winAnchorDistNbins #> 9                                     #STAR.sjdbGTFfile #> 10                                          #STAR.reads #> 11                                         #STAR.genome #> 12                                      #unmapped_reads #> 13                         #transcriptome_aligned_reads #> 14                                    #splice_junctions #> 15                                      #reads_per_gene #> 16                                           #log_files #> 17                                  #chimeric_junctions #> 18                                 #intermediate_genome #> 19                                 #intermediate_genome #> 20                                 #chimeric_alignments #> 21                                          #sorted_bam #> 22                                              #result #> 23                                 #intermediate_genome #> 24                                 #intermediate_genome #>                             source   type #> 1  #sjdbGTFtagExonParentTranscript  input #> 2        #sjdbGTFtagExonParentGene  input #> 3                     #sjdbGTFfile  input #> 4                #genomeFastaFiles  input #> 5                           #fastq  input #> 6              #STAR.aligned_reads  input #> 7           #winAnchorMultimapNmax  input #> 8              #winAnchorDistNbins  input #> 9                     #sjdbGTFfile  input #> 10                          #reads  input #> 11    #STAR_Genome_Generate.genome  input #> 12                 #unmapped_reads output #> 13    #transcriptome_aligned_reads output #> 14               #splice_junctions output #> 15                 #reads_per_gene output #> 16                      #log_files output #> 17             #chimeric_junctions output #> 18            #intermediate_genome output #> 19             intermediate_genome output #> 20            #chimeric_alignments output #> 21                     #sorted_bam output #> 22                         #result output #> 23            #intermediate_genome output #> 24             intermediate_genome output f1$add_source_to_id(c(\"test1\", \"test2\"), c(\"#STAR.genome\", \"#STAR.reads\")) #> sbg:validationErrors: [] #> sbg:sbgMaintained: no #> sbg:latestRevision: 2 #> sbg:toolAuthor: Seven Bridges Genomics #> sbg:createdOn: 1463601910 #> sbg:categories: #> - Alignment #> - RNA #> sbg:contributors: #> - tengfei #> sbg:project: tengfei/quickstart #> sbg:createdBy: tengfei #> sbg:toolkitVersion: 2.4.2a #> sbg:id: tengfei/quickstart/rna-seq-alignment-star-demo/2 #> sbg:license: Apache License 2.0 #> sbg:revision: 2 #> sbg:modifiedOn: 1463601974 #> sbg:modifiedBy: tengfei #> sbg:revisionsInfo: #> - sbg:modifiedBy: tengfei #>   sbg:modifiedOn: 1463601910 #>   sbg:revision: 0 #> - sbg:modifiedBy: tengfei #>   sbg:modifiedOn: 1463601952 #>   sbg:revision: 1 #> - sbg:modifiedBy: tengfei #>   sbg:modifiedOn: 1463601974 #>   sbg:revision: 2 #> sbg:toolkit: STAR #> id: '#tengfei/quickstart/rna-seq-alignment-star-demo/2' #> inputs: #> - type: #>   - items: File #>     type: array #>   label: Read sequence #>   description: Read sequence. #>   streamable: no #>   id: '#reads' #>   inputBinding: #>     position: 10 #>     separate: yes #>     itemSeparator: ' ' #>     valueFrom: #>       engine: '#cwl-js-engine' #>       script: \"{\\t\\n  var list = [].concat($job.inputs.reads)\\n  \\n  var resp = []\\n #>         \\ \\n  if (list.length == 1){\\n    resp.push(list[0].path)\\n    \\n  }else if #>         (list.length == 2){    \\n    \\n    left = \\\"\\\"\\n    right = \\\"\\\"\\n      \\n #>         \\   for (index = 0; index < list.length; ++index) {\\n      \\n      if (list[index].metadata #>         != null){\\n        if (list[index].metadata.paired_end == 1){\\n          left #>         = list[index].path\\n        }else if (list[index].metadata.paired_end == 2){\\n #>         \\         right = list[index].path\\n        }\\n      }\\n    }\\n    \\n    if #>         (left != \\\"\\\" && right != \\\"\\\"){      \\n      resp.push(left)\\n      resp.push(right)\\n #>         \\   }\\n  }\\n  else if (list.length > 2){\\n    left = []\\n    right = []\\n #>         \\     \\n    for (index = 0; index < list.length; ++index) {\\n      \\n      if #>         (list[index].metadata != null){\\n        if (list[index].metadata.paired_end #>         == 1){\\n          left.push(list[index].path)\\n        }else if (list[index].metadata.paired_end #>         == 2){\\n          right.push(list[index].path)\\n        }\\n      }\\n    }\\n #>         \\   left_join = left.join()\\n    right_join = right.join()\\n    if (left != #>         [] && right != []){      \\n      resp.push(left_join)\\n      resp.push(right_join)\\n #>         \\   }\\t\\n  }\\n  \\n  if(resp.length > 0){    \\n    return \\\"--readFilesIn \\\".concat(resp.join(\\\" #>         \\\"))\\n  }\\n}\" #>       class: Expression #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Basic #>   sbg:fileTypes: FASTA, FASTQ, FA, FQ, FASTQ.GZ, FQ.GZ, FASTQ.BZ2, FQ.BZ2 #>   sbg:x: 200.0 #>   sbg:y: 200.0 #>   sbg:includeInPorts: yes #>   required: yes #> - type: #>   - 'null' #>   - items: File #>     type: array #>   label: sjdbGTFfile #>   streamable: no #>   id: '#sjdbGTFfile' #>   sbg:x: 160.4999759 #>   sbg:y: 195.0833106 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - items: File #>     type: array #>   label: fastq #>   streamable: no #>   id: '#fastq' #>   sbg:x: 164.2499914 #>   sbg:y: 323.7499502 #>   sbg:includeInPorts: yes #>   required: yes #> - type: #>   - File #>   label: genomeFastaFiles #>   streamable: no #>   id: '#genomeFastaFiles' #>   sbg:x: 167.7499601 #>   sbg:y: 469.9999106 #>   sbg:includeInPorts: yes #>   required: yes #> - type: #>   - 'null' #>   - string #>   label: Exons' parents name #>   description: Tag name to be used as exons' transcript-parents. #>   streamable: no #>   id: '#sjdbGTFtagExonParentTranscript' #>   sbg:category: Splice junctions db parameters #>   sbg:x: 200.0 #>   sbg:y: 350.0 #>   sbg:includeInPorts: yes #>   sbg:toolDefaultValue: transcript_id #>   required: no #> - type: #>   - 'null' #>   - string #>   label: Gene name #>   description: Tag name to be used as exons' gene-parents. #>   streamable: no #>   id: '#sjdbGTFtagExonParentGene' #>   sbg:category: Splice junctions db parameters #>   sbg:x: 200.0 #>   sbg:y: 400.0 #>   sbg:includeInPorts: yes #>   sbg:toolDefaultValue: gene_id #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max loci anchors #>   description: Max number of loci anchors are allowed to map to (int>0). #>   streamable: no #>   id: '#winAnchorMultimapNmax' #>   sbg:category: Windows, Anchors, Binning #>   sbg:x: 200.0 #>   sbg:y: 450.0 #>   sbg:includeInPorts: yes #>   sbg:toolDefaultValue: '50' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max bins between anchors #>   description: Max number of bins between two anchors that allows aggregation of anchors #>     into one window (int>0). #>   streamable: no #>   id: '#winAnchorDistNbins' #>   sbg:category: Windows, Anchors, Binning #>   sbg:x: 200.0 #>   sbg:y: 500.0 #>   sbg:includeInPorts: yes #>   sbg:toolDefaultValue: '9' #>   required: no #> outputs: #> - type: #>   - 'null' #>   - items: File #>     type: array #>   label: Unmapped reads #>   description: Output of unmapped reads. #>   streamable: no #>   id: '#unmapped_reads' #>   source: '#unmapped_reads' #>   sbg:x: 800.0 #>   sbg:y: 200.0 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: Transcriptome alignments #>   description: Alignments translated into transcript coordinates. #>   streamable: no #>   id: '#transcriptome_aligned_reads' #>   source: '#transcriptome_aligned_reads' #>   sbg:x: 800.0 #>   sbg:y: 233.3333333 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: Splice junctions #>   description: High confidence collapsed splice junctions in tab-delimited format. #>     Only junctions supported by uniquely mapping reads are reported. #>   streamable: no #>   id: '#splice_junctions' #>   source: '#splice_junctions' #>   sbg:x: 800.0 #>   sbg:y: 266.6666667 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: Reads per gene #>   description: File with number of reads per gene. A read is counted if it overlaps #>     (1nt or more) one and only one gene. #>   streamable: no #>   id: '#reads_per_gene' #>   source: '#reads_per_gene' #>   sbg:x: 800.0 #>   sbg:y: 300.0 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - items: File #>     type: array #>   label: Log files #>   description: Log files produced during alignment. #>   streamable: no #>   id: '#log_files' #>   source: '#log_files' #>   sbg:x: 800.0 #>   sbg:y: 333.3333333 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: Chimeric junctions #>   description: If chimSegmentMin in 'Chimeric Alignments' section is set to 0, 'Chimeric #>     Junctions' won't be output. #>   streamable: no #>   id: '#chimeric_junctions' #>   source: '#chimeric_junctions' #>   sbg:x: 800.0 #>   sbg:y: 366.6666667 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: Intermediate genome files #>   description: Archive with genome files produced when annotations are included on #>     the fly (in the mapping step). #>   streamable: no #>   id: '#intermediate_genome' #>   source: #>   - '#intermediate_genome' #>   - intermediate_genome #>   sbg:x: 800.0 #>   sbg:y: 400.0 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: Chimeric alignments #>   description: Aligned Chimeric sequences SAM - if chimSegmentMin = 0, no Chimeric #>     Alignment SAM and Chimeric Junctions outputs. #>   streamable: no #>   id: '#chimeric_alignments' #>   source: '#chimeric_alignments' #>   sbg:x: 800.0 #>   sbg:y: 433.3333333 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: Sorted BAM/SAM #>   description: Sorted BAM or SAM file. #>   streamable: no #>   id: '#sorted_bam' #>   source: '#sorted_bam' #>   sbg:x: 800.0 #>   sbg:y: 466.6666667 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: Result #>   description: Source FASTQ file with updated metadata. #>   streamable: no #>   id: '#result' #>   source: '#result' #>   sbg:x: 800.0 #>   sbg:y: 500.0 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: Intermediate genome files #>   description: Archive with genome files produced when annotations are included on #>     the fly (in the mapping step). #>   streamable: no #>   id: '#intermediate_genome' #>   source: #>   - '#intermediate_genome' #>   - intermediate_genome #>   sbg:x: 800.0 #>   sbg:y: 533.3333333 #>   sbg:includeInPorts: yes #>   required: no #> requirements: #> - class: CreateFileRequirement #>   fileDef: [] #> hints: #> - class: sbg:AWSInstanceType #>   value: c3.8xlarge #> label: RNA-seq Alignment - STAR #> description: \"Alignment to a reference genome and transcriptome presents the first #>   step of RNA-Seq analysis. This pipeline uses STAR, an ultrafast RNA-seq aligner #>   capable of mapping full length RNA sequences and detecting de novo canonical junctions, #>   non-canonical splices, and chimeric (fusion) transcripts. It is optimized for mammalian #>   sequence reads, but fine tuning of its parameters enables customization to satisfy #>   unique needs.\\n\\nSTAR accepts one file per sample (or two files for paired-end data). #>   \\ \\nSplice junction annotations can optionally be collected from splice junction #>   databases. Set the \\\"Overhang length\\\" parameter to a value larger than zero in #>   order to use splice junction databases. For constant read length, this value should #>   (ideally) be equal to mate length decreased by 1; for long reads with non-constant #>   length, this value should be 100 (pipeline default). \\nFastQC Analysis on FASTQ #>   files reveals read length distribution. STAR can detect chimeric transcripts, but #>   parameter \\\"Min segment length\\\" in \\\"Chimeric Alignments\\\" category must be adjusted #>   to a desired minimum chimeric segment length. Aligned reads are reported in BAM #>   format and can be viewed in a genome browser (such as IGV). A file containing detected #>   splice junctions is also produced.\\n\\nUnmapped reads are reported in FASTQ format #>   and can be included in an output BAM file. The \\\"Output unmapped reads\\\" and \\\"Write #>   unmapped in SAM\\\" parameters enable unmapped output type selection.\" #> class: Workflow #> steps: #> - id: '#STAR_Genome_Generate' #>   inputs: #>   - id: '#STAR_Genome_Generate.sjdbScore' #>   - id: '#STAR_Genome_Generate.sjdbOverhang' #>   - id: '#STAR_Genome_Generate.sjdbGTFtagExonParentTranscript' #>     source: '#sjdbGTFtagExonParentTranscript' #>   - id: '#STAR_Genome_Generate.sjdbGTFtagExonParentGene' #>     source: '#sjdbGTFtagExonParentGene' #>   - id: '#STAR_Genome_Generate.sjdbGTFfile' #>     source: '#sjdbGTFfile' #>   - id: '#STAR_Genome_Generate.sjdbGTFfeatureExon' #>   - id: '#STAR_Genome_Generate.sjdbGTFchrPrefix' #>   - id: '#STAR_Genome_Generate.genomeSAsparseD' #>   - id: '#STAR_Genome_Generate.genomeSAindexNbases' #>   - id: '#STAR_Genome_Generate.genomeFastaFiles' #>     source: '#genomeFastaFiles' #>   - id: '#STAR_Genome_Generate.genomeChrBinNbits' #>   outputs: #>   - id: '#STAR_Genome_Generate.genome' #>   hints: [] #>   run: #>     sbg:validationErrors: [] #>     sbg:sbgMaintained: no #>     sbg:latestRevision: 1 #>     sbg:job: #>       allocatedResources: #>         mem: 60000 #>         cpu: 15 #>       inputs: #>         sjdbScore: 0 #>         sjdbGTFfeatureExon: sjdbGTFfeatureExon #>         sjdbOverhang: 0 #>         sjdbGTFtagExonParentTranscript: sjdbGTFtagExonParentTranscript #>         genomeChrBinNbits: genomeChrBinNbits #>         genomeSAsparseD: 0 #>         sjdbGTFfile: #>         - size: 0 #>           secondaryFiles: [] #>           class: File #>           path: /demo/test-files/chr20.gtf #>         sjdbGTFtagExonParentGene: sjdbGTFtagExonParentGene #>         genomeFastaFiles: #>           size: 0 #>           secondaryFiles: [] #>           class: File #>           path: /sbgenomics/test-data/chr20.fa #>         sjdbGTFchrPrefix: sjdbGTFchrPrefix #>         genomeSAindexNbases: 0 #>     sbg:toolAuthor: Alexander Dobin/CSHL #>     sbg:createdOn: 1450911469 #>     sbg:categories: #>     - Alignment #>     sbg:contributors: #>     - bix-demo #>     sbg:links: #>     - id: https://github.com/alexdobin/STAR #>       label: Homepage #>     - id: https://github.com/alexdobin/STAR/releases #>       label: Releases #>     - id: https://github.com/alexdobin/STAR/blob/master/doc/STARmanual.pdf #>       label: Manual #>     - id: https://groups.google.com/forum/#!forum/rna-star #>       label: Support #>     - id: http://www.ncbi.nlm.nih.gov/pubmed/23104886 #>       label: Publication #>     sbg:project: bix-demo/star-2-4-2a-demo #>     sbg:createdBy: bix-demo #>     sbg:toolkitVersion: 2.4.2a #>     sbg:id: sevenbridges/public-apps/star-genome-generate/1 #>     sbg:license: GNU General Public License v3.0 only #>     sbg:revision: 1 #>     sbg:cmdPreview: mkdir genomeDir && /opt/STAR --runMode genomeGenerate --genomeDir #>       ./genomeDir --runThreadN 15 --genomeFastaFiles /sbgenomics/test-data/chr20.fa #>       --genomeChrBinNbits genomeChrBinNbits --genomeSAindexNbases 0 --genomeSAsparseD #>       0 --sjdbGTFfeatureExon sjdbGTFfeatureExon --sjdbGTFtagExonParentTranscript sjdbGTFtagExonParentTranscript #>       --sjdbGTFtagExonParentGene sjdbGTFtagExonParentGene --sjdbOverhang 0 --sjdbScore #>       0 --sjdbGTFchrPrefix sjdbGTFchrPrefix  --sjdbGTFfile /demo/test-files/chr20.gtf  && #>       tar -vcf genome.tar ./genomeDir /sbgenomics/test-data/chr20.fa #>     sbg:modifiedOn: 1450911470 #>     sbg:modifiedBy: bix-demo #>     sbg:revisionsInfo: #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911469 #>       sbg:revision: 0 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911470 #>       sbg:revision: 1 #>     sbg:toolkit: STAR #>     id: sevenbridges/public-apps/star-genome-generate/1 #>     inputs: #>     - type: #>       - 'null' #>       - int #>       label: Extra alignment score #>       description: Extra alignment score for alignments that cross database junctions. #>       streamable: no #>       id: '#sjdbScore' #>       inputBinding: #>         position: 0 #>         prefix: --sjdbScore #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Splice junctions db parameters #>       sbg:includeInPorts: yes #>       sbg:toolDefaultValue: '2' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: '\"Overhang\" length' #>       description: Length of the donor/acceptor sequence on each side of the junctions, #>         ideally = (mate_length - 1) (int >= 0), if int = 0, splice junction database #>         is not used. #>       streamable: no #>       id: '#sjdbOverhang' #>       inputBinding: #>         position: 0 #>         prefix: --sjdbOverhang #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Splice junctions db parameters #>       sbg:includeInPorts: yes #>       sbg:toolDefaultValue: '100' #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Exons' parents name #>       description: Tag name to be used as exons' transcript-parents. #>       streamable: no #>       id: '#sjdbGTFtagExonParentTranscript' #>       inputBinding: #>         position: 0 #>         prefix: --sjdbGTFtagExonParentTranscript #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Splice junctions db parameters #>       sbg:toolDefaultValue: transcript_id #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Gene name #>       description: Tag name to be used as exons' gene-parents. #>       streamable: no #>       id: '#sjdbGTFtagExonParentGene' #>       inputBinding: #>         position: 0 #>         prefix: --sjdbGTFtagExonParentGene #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Splice junctions db parameters #>       sbg:toolDefaultValue: gene_id #>       required: no #>     - type: #>       - 'null' #>       - items: File #>         type: array #>       label: Splice junction file #>       description: Gene model annotations and/or known transcripts. #>       streamable: no #>       id: '#sjdbGTFfile' #>       sbg:category: Basic #>       sbg:fileTypes: GTF, GFF, TXT #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Set exons feature #>       description: Feature type in GTF file to be used as exons for building transcripts. #>       streamable: no #>       id: '#sjdbGTFfeatureExon' #>       inputBinding: #>         position: 0 #>         prefix: --sjdbGTFfeatureExon #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Splice junctions db parameters #>       sbg:toolDefaultValue: exon #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Chromosome names #>       description: Prefix for chromosome names in a GTF file (e.g. 'chr' for using #>         ENSMEBL annotations with UCSC geneomes). #>       streamable: no #>       id: '#sjdbGTFchrPrefix' #>       inputBinding: #>         position: 0 #>         prefix: --sjdbGTFchrPrefix #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Splice junctions db parameters #>       sbg:toolDefaultValue: '-' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Suffux array sparsity #>       description: 'Distance between indices: use bigger numbers to decrease needed #>         RAM at the cost of mapping speed reduction (int>0).' #>       streamable: no #>       id: '#genomeSAsparseD' #>       inputBinding: #>         position: 0 #>         prefix: --genomeSAsparseD #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Genome generation parameters #>       sbg:toolDefaultValue: '1' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Pre-indexing string length #>       description: Length (bases) of the SA pre-indexing string. Typically between #>         10 and 15. Longer strings will use much more memory, but allow faster searches. #>         For small genomes, this number needs to be scaled down, with a typical value #>         of min(14, log2(GenomeLength)/2 - 1). For example, for 1 megaBase genome, #>         this is equal to 9, for 100 kiloBase genome, this is equal to 7. #>       streamable: no #>       id: '#genomeSAindexNbases' #>       inputBinding: #>         position: 0 #>         prefix: --genomeSAindexNbases #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Genome generation parameters #>       sbg:toolDefaultValue: '14' #>       required: no #>     - type: #>       - File #>       label: Genome fasta files #>       description: Reference sequence to which to align the reads. #>       streamable: no #>       id: '#genomeFastaFiles' #>       inputBinding: #>         position: 0 #>         prefix: --genomeFastaFiles #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Basic #>       sbg:fileTypes: FASTA, FA #>       required: yes #>     - type: #>       - 'null' #>       - string #>       label: Bins size #>       description: 'Set log2(chrBin), where chrBin is the size (bits) of the bins #>         for genome storage: each chromosome will occupy an integer number of bins. #>         If you are using a genome with a large (>5,000) number of chrosomes/scaffolds, #>         you may need to reduce this number to reduce RAM consumption. The following #>         scaling is recomended: genomeChrBinNbits = min(18, log2(GenomeLength/NumberOfReferences)). #>         For example, for 3 gigaBase genome with 100,000 chromosomes/scaffolds, this #>         is equal to 15.' #>       streamable: no #>       id: '#genomeChrBinNbits' #>       inputBinding: #>         position: 0 #>         prefix: --genomeChrBinNbits #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Genome generation parameters #>       sbg:toolDefaultValue: '18' #>       required: no #>     outputs: #>     - type: #>       - 'null' #>       - File #>       label: Genome Files #>       description: Genome files comprise binary genome sequence, suffix arrays, text #>         chromosome names/lengths, splice junctions coordinates, and transcripts/genes #>         information. #>       streamable: no #>       id: '#genome' #>       outputBinding: #>         glob: '*.tar' #>       sbg:fileTypes: TAR #>     requirements: #>     - class: ExpressionEngineRequirement #>       id: '#cwl-js-engine' #>       requirements: #>       - class: DockerRequirement #>         dockerPull: rabix/js-engine #>     hints: #>     - class: DockerRequirement #>       dockerPull: images.sbgenomics.com/ana_d/star:2.4.2a #>       dockerImageId: a4b0ad2c3cae #>     - class: sbg:CPURequirement #>       value: 15 #>     - class: sbg:MemRequirement #>       value: 60000 #>     label: STAR Genome Generate #>     description: STAR Genome Generate is a tool that generates genome index files. #>       One set of files should be generated per each genome/annotation combination. #>       Once produced, these files could be used as long as genome/annotation combination #>       stays the same. Also, STAR Genome Generate which produced these files and STAR #>       aligner using them must be the same toolkit version. #>     class: CommandLineTool #>     baseCommand: #>     - mkdir #>     - genomeDir #>     - '&&' #>     - /opt/STAR #>     - --runMode #>     - genomeGenerate #>     - --genomeDir #>     - ./genomeDir #>     - --runThreadN #>     - class: Expression #>       script: |- #>         { #>           return $job.allocatedResources.cpu #>         } #>       engine: '#cwl-js-engine' #>     arguments: #>     - position: 99 #>       separate: yes #>       valueFrom: '&& tar -vcf genome.tar ./genomeDir' #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\t\\n  var sjFormat = \\\"False\\\"\\n  var gtfgffFormat = \\\"False\\\"\\n #>           \\ var list = $job.inputs.sjdbGTFfile\\n  var paths_list = []\\n  var joined_paths #>           = \\\"\\\"\\n  \\n  if (list) {\\n    list.forEach(function(f){return paths_list.push(f.path)})\\n #>           \\   joined_paths = paths_list.join(\\\" \\\")\\n\\n\\n    paths_list.forEach(function(f){\\n #>           \\     ext = f.replace(/^.*\\\\./, '')\\n      if (ext == \\\"gff\\\" || ext == #>           \\\"gtf\\\") {\\n        gtfgffFormat = \\\"True\\\"\\n        return gtfgffFormat\\n #>           \\     }\\n      if (ext == \\\"txt\\\") {\\n        sjFormat = \\\"True\\\"\\n        return #>           sjFormat\\n      }\\n    })\\n\\n    if ($job.inputs.sjdbGTFfile && $job.inputs.sjdbInsertSave #>           != \\\"None\\\") {\\n      if (sjFormat == \\\"True\\\") {\\n        return \\\"--sjdbFileChrStartEnd #>           \\\".concat(joined_paths)\\n      }\\n      else if (gtfgffFormat == \\\"True\\\") #>           {\\n        return \\\"--sjdbGTFfile \\\".concat(joined_paths)\\n      }\\n    }\\n #>           \\ }\\n}\" #>         class: Expression #>     stdin: '' #>     stdout: '' #>     successCodes: [] #>     temporaryFailCodes: [] #>     x: 384.0832266 #>     'y': 446.4998957 #>   sbg:x: 100.0 #>   sbg:y: 200.0 #> - id: '#SBG_FASTQ_Quality_Detector' #>   inputs: #>   - id: '#SBG_FASTQ_Quality_Detector.fastq' #>     source: '#fastq' #>   outputs: #>   - id: '#SBG_FASTQ_Quality_Detector.result' #>   hints: [] #>   run: #>     sbg:validationErrors: [] #>     sbg:sbgMaintained: no #>     sbg:latestRevision: 3 #>     sbg:job: #>       allocatedResources: #>         mem: 1000 #>         cpu: 1 #>       inputs: #>         fastq: #>           size: 0 #>           secondaryFiles: [] #>           class: File #>           path: /path/to/fastq.ext #>     sbg:toolAuthor: Seven Bridges Genomics #>     sbg:createdOn: 1450911312 #>     sbg:categories: #>     - FASTQ-Processing #>     sbg:contributors: #>     - bix-demo #>     sbg:project: bix-demo/sbgtools-demo #>     sbg:createdBy: bix-demo #>     sbg:id: sevenbridges/public-apps/sbg-fastq-quality-detector/3 #>     sbg:license: Apache License 2.0 #>     sbg:revision: 3 #>     sbg:cmdPreview: python /opt/sbg_fastq_quality_scale_detector.py --fastq /path/to/fastq.ext #>       /path/to/fastq.ext #>     sbg:modifiedOn: 1450911314 #>     sbg:modifiedBy: bix-demo #>     sbg:revisionsInfo: #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911312 #>       sbg:revision: 0 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911314 #>       sbg:revision: 3 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911313 #>       sbg:revision: 1 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911313 #>       sbg:revision: 2 #>     sbg:toolkit: SBGTools #>     id: sevenbridges/public-apps/sbg-fastq-quality-detector/3 #>     inputs: #>     - type: #>       - File #>       label: Fastq #>       description: FASTQ file. #>       streamable: no #>       id: '#fastq' #>       inputBinding: #>         position: 0 #>         prefix: --fastq #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       required: yes #>     outputs: #>     - type: #>       - 'null' #>       - File #>       label: Result #>       description: Source FASTQ file with updated metadata. #>       streamable: no #>       id: '#result' #>       outputBinding: #>         glob: '*.fastq' #>       sbg:fileTypes: FASTQ #>     requirements: #>     - class: CreateFileRequirement #>       fileDef: [] #>     hints: #>     - class: DockerRequirement #>       dockerPull: images.sbgenomics.com/tziotas/sbg_fastq_quality_scale_detector:1.0 #>       dockerImageId: '' #>     - class: sbg:CPURequirement #>       value: 1 #>     - class: sbg:MemRequirement #>       value: 1000 #>     label: SBG FASTQ Quality Detector #>     description: FASTQ Quality Scale Detector detects which quality encoding scheme #>       was used in your reads and automatically enters the proper value in the \"Quality #>       Scale\" metadata field. #>     class: CommandLineTool #>     baseCommand: #>     - python #>     - /opt/sbg_fastq_quality_scale_detector.py #>     arguments: [] #>     stdin: '' #>     stdout: '' #>     successCodes: [] #>     temporaryFailCodes: [] #>     x: 375.3333179 #>     'y': 323.5833156 #>   sbg:x: 300.0 #>   sbg:y: 200.0 #> - id: '#Picard_SortSam' #>   inputs: #>   - id: '#Picard_SortSam.validation_stringency' #>     default: SILENT #>   - id: '#Picard_SortSam.sort_order' #>     default: Coordinate #>   - id: '#Picard_SortSam.quiet' #>   - id: '#Picard_SortSam.output_type' #>   - id: '#Picard_SortSam.memory_per_job' #>   - id: '#Picard_SortSam.max_records_in_ram' #>   - id: '#Picard_SortSam.input_bam' #>     source: '#STAR.aligned_reads' #>   - id: '#Picard_SortSam.create_index' #>     default: 'True' #>   - id: '#Picard_SortSam.compression_level' #>   outputs: #>   - id: '#Picard_SortSam.sorted_bam' #>   hints: [] #>   run: #>     sbg:validationErrors: [] #>     sbg:sbgMaintained: no #>     sbg:latestRevision: 2 #>     sbg:job: #>       allocatedResources: #>         mem: 2048 #>         cpu: 1 #>       inputs: #>         sort_order: Coordinate #>         input_bam: #>           path: /root/dir/example.tested.bam #>         memory_per_job: 2048 #>         output_type: ~ #>         create_index: ~ #>     sbg:toolAuthor: Broad Institute #>     sbg:createdOn: 1450911168 #>     sbg:categories: #>     - SAM/BAM-Processing #>     sbg:contributors: #>     - bix-demo #>     sbg:links: #>     - id: http://broadinstitute.github.io/picard/index.html #>       label: Homepage #>     - id: https://github.com/broadinstitute/picard/releases/tag/1.138 #>       label: Source Code #>     - id: http://broadinstitute.github.io/picard/ #>       label: Wiki #>     - id: https://github.com/broadinstitute/picard/zipball/master #>       label: Download #>     - id: http://broadinstitute.github.io/picard/ #>       label: Publication #>     sbg:project: bix-demo/picard-1-140-demo #>     sbg:createdBy: bix-demo #>     sbg:toolkitVersion: '1.140' #>     sbg:id: sevenbridges/public-apps/picard-sortsam-1-140/2 #>     sbg:license: MIT License, Apache 2.0 Licence #>     sbg:revision: 2 #>     sbg:cmdPreview: java -Xmx2048M -jar /opt/picard-tools-1.140/picard.jar SortSam #>       OUTPUT=example.tested.sorted.bam INPUT=/root/dir/example.tested.bam SORT_ORDER=coordinate   INPUT=/root/dir/example.tested.bam #>       SORT_ORDER=coordinate  /root/dir/example.tested.bam #>     sbg:modifiedOn: 1450911170 #>     sbg:modifiedBy: bix-demo #>     sbg:revisionsInfo: #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911168 #>       sbg:revision: 0 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911169 #>       sbg:revision: 1 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911170 #>       sbg:revision: 2 #>     sbg:toolkit: Picard #>     id: sevenbridges/public-apps/picard-sortsam-1-140/2 #>     inputs: #>     - type: #>       - 'null' #>       - name: validation_stringency #>         symbols: #>         - STRICT #>         - LENIENT #>         - SILENT #>         type: enum #>       label: Validation stringency #>       description: 'Validation stringency for all SAM files read by this program. #>         Setting stringency to SILENT can improve performance when processing a BAM #>         file in which variable-length data (read, qualities, tags) do not otherwise #>         need to be decoded. This option can be set to ''null'' to clear the default #>         value. Possible values: {STRICT, LENIENT, SILENT}.' #>       streamable: no #>       id: '#validation_stringency' #>       inputBinding: #>         position: 0 #>         prefix: VALIDATION_STRINGENCY= #>         separate: no #>         valueFrom: #>           engine: '#cwl-js-engine' #>           script: |- #>             { #>               if ($job.inputs.validation_stringency) #>               { #>                 return $job.inputs.validation_stringency #>               } #>               else #>               { #>                 return \"SILENT\" #>               } #>             } #>           class: Expression #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Other input types #>       sbg:toolDefaultValue: SILENT #>       required: no #>     - type: #>       - name: sort_order #>         symbols: #>         - Unsorted #>         - Queryname #>         - Coordinate #>         type: enum #>       label: Sort order #>       description: 'Sort order of the output file. Possible values: {unsorted, queryname, #>         coordinate}.' #>       streamable: no #>       id: '#sort_order' #>       inputBinding: #>         position: 3 #>         prefix: SORT_ORDER= #>         separate: no #>         valueFrom: #>           engine: '#cwl-js-engine' #>           script: |- #>             { #>               p = $job.inputs.sort_order.toLowerCase() #>               return p #>             } #>           class: Expression #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Other input types #>       sbg:toolDefaultValue: Coordinate #>       sbg:altPrefix: SO #>       required: yes #>     - type: #>       - 'null' #>       - name: quiet #>         symbols: #>         - 'True' #>         - 'False' #>         type: enum #>       label: Quiet #>       description: 'This parameter indicates whether to suppress job-summary info #>         on System.err. This option can be set to ''null'' to clear the default value. #>         Possible values: {true, false}.' #>       streamable: no #>       id: '#quiet' #>       inputBinding: #>         position: 0 #>         prefix: QUIET= #>         separate: no #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Other input types #>       sbg:toolDefaultValue: 'False' #>       required: no #>     - type: #>       - 'null' #>       - name: output_type #>         symbols: #>         - BAM #>         - SAM #>         - SAME AS INPUT #>         type: enum #>       label: Output format #>       description: Since Picard tools can output both SAM and BAM files, user can #>         choose the format of the output file. #>       streamable: no #>       id: '#output_type' #>       sbg:category: Other input types #>       sbg:toolDefaultValue: SAME AS INPUT #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Memory per job #>       description: Amount of RAM memory to be used per job. Defaults to 2048 MB for #>         single threaded jobs. #>       streamable: no #>       id: '#memory_per_job' #>       sbg:toolDefaultValue: '2048' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max records in RAM #>       description: When writing SAM files that need to be sorted, this parameter will #>         specify the number of records stored in RAM before spilling to disk. Increasing #>         this number reduces the number of file handles needed to sort a SAM file, #>         and increases the amount of RAM needed. This option can be set to 'null' to #>         clear the default value. #>       streamable: no #>       id: '#max_records_in_ram' #>       inputBinding: #>         position: 0 #>         prefix: MAX_RECORDS_IN_RAM= #>         separate: no #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Other input types #>       sbg:toolDefaultValue: '500000' #>       required: no #>     - type: #>       - File #>       label: Input BAM #>       description: The BAM or SAM file to sort. #>       streamable: no #>       id: '#input_bam' #>       inputBinding: #>         position: 1 #>         prefix: INPUT= #>         separate: no #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: File inputs #>       sbg:fileTypes: BAM, SAM #>       sbg:altPrefix: I #>       required: yes #>     - type: #>       - 'null' #>       - name: create_index #>         symbols: #>         - 'True' #>         - 'False' #>         type: enum #>       label: Create index #>       description: 'This parameter indicates whether to create a BAM index when writing #>         a coordinate-sorted BAM file. This option can be set to ''null'' to clear #>         the default value. Possible values: {true, false}.' #>       streamable: no #>       id: '#create_index' #>       inputBinding: #>         position: 5 #>         prefix: CREATE_INDEX= #>         separate: no #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Other input types #>       sbg:toolDefaultValue: 'False' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Compression level #>       description: Compression level for all compressed files created (e.g. BAM and #>         GELI). This option can be set to 'null' to clear the default value. #>       streamable: no #>       id: '#compression_level' #>       inputBinding: #>         position: 0 #>         prefix: COMPRESSION_LEVEL= #>         separate: no #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Other input types #>       sbg:toolDefaultValue: '5' #>       required: no #>     outputs: #>     - type: #>       - 'null' #>       - File #>       label: Sorted BAM/SAM #>       description: Sorted BAM or SAM file. #>       streamable: no #>       id: '#sorted_bam' #>       outputBinding: #>         glob: '*.sorted.?am' #>       sbg:fileTypes: BAM, SAM #>     requirements: #>     - class: ExpressionEngineRequirement #>       id: '#cwl-js-engine' #>       requirements: #>       - class: DockerRequirement #>         dockerPull: rabix/js-engine #>       engineCommand: cwl-engine.js #>     hints: #>     - class: DockerRequirement #>       dockerPull: images.sbgenomics.com/mladenlsbg/picard:1.140 #>       dockerImageId: eab0e70b6629 #>     - class: sbg:CPURequirement #>       value: 1 #>     - class: sbg:MemRequirement #>       value: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  if($job.inputs.memory_per_job){\\n  \\treturn $job.inputs.memory_per_job\\n #>           \\ }\\n  \\treturn 2048\\n}\" #>         class: Expression #>     label: Picard SortSam #>     description: Picard SortSam sorts the input SAM or BAM. Input and output formats #>       are determined by the file extension. #>     class: CommandLineTool #>     baseCommand: #>     - java #>     - class: Expression #>       script: \"{   \\n  if($job.inputs.memory_per_job){\\n    return '-Xmx'.concat($job.inputs.memory_per_job, #>         'M')\\n  }   \\n  \\treturn '-Xmx2048M'\\n}\" #>       engine: '#cwl-js-engine' #>     - -jar #>     - /opt/picard-tools-1.140/picard.jar #>     - SortSam #>     arguments: #>     - position: 0 #>       prefix: OUTPUT= #>       separate: no #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  filename = $job.inputs.input_bam.path\\n  ext = $job.inputs.output_type\\n\\nif #>           (ext === \\\"BAM\\\")\\n{\\n    return filename.split('.').slice(0, -1).concat(\\\"sorted.bam\\\").join(\\\".\\\").replace(/^.*[\\\\\\\\\\\\/]/, #>           '')\\n    }\\n\\nelse if (ext === \\\"SAM\\\")\\n{\\n    return filename.split('.').slice(0, #>           -1).concat(\\\"sorted.sam\\\").join('.').replace(/^.*[\\\\\\\\\\\\/]/, '')\\n}\\n\\nelse #>           \\n{\\n\\treturn filename.split('.').slice(0, -1).concat(\\\"sorted.\\\"+filename.split('.').slice(-1)[0]).join(\\\".\\\").replace(/^.*[\\\\\\\\\\\\/]/, #>           '')\\n}\\n}\" #>         class: Expression #>     - position: 1000 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  filename = $job.inputs.input_bam.path\\n  \\n  /* figuring out #>           output file type */\\n  ext = $job.inputs.output_type\\n  if (ext === \\\"BAM\\\")\\n #>           \\ {\\n    out_extension = \\\"BAM\\\"\\n  }\\n  else if (ext === \\\"SAM\\\")\\n  {\\n #>           \\   out_extension = \\\"SAM\\\"\\n  }\\n  else \\n  {\\n\\tout_extension = filename.split('.').slice(-1)[0].toUpperCase()\\n #>           \\ }  \\n  \\n  /* if exist moving .bai in bam.bai */\\n  if ($job.inputs.create_index #>           === 'True' && $job.inputs.sort_order === 'Coordinate' && out_extension == #>           \\\"BAM\\\")\\n  {\\n    \\n    old_name = filename.split('.').slice(0, -1).concat('sorted.bai').join('.').replace(/^.*[\\\\\\\\\\\\/]/, #>           '')\\n    new_name = filename.split('.').slice(0, -1).concat('sorted.bam.bai').join('.').replace(/^.*[\\\\\\\\\\\\/]/, #>           '')\\n    return \\\"; mv \\\" + \\\" \\\" + old_name + \\\" \\\" + new_name\\n  }\\n\\n}\" #>         class: Expression #>     stdin: '' #>     stdout: '' #>     successCodes: [] #>     temporaryFailCodes: [] #>     x: 773.0831807 #>     'y': 470.9165939 #>   sbg:x: 500.0 #>   sbg:y: 200.0 #> - id: '#STAR' #>   inputs: #>   - id: '#STAR.winFlankNbins' #>   - id: '#STAR.winBinNbits' #>   - id: '#STAR.winAnchorMultimapNmax' #>     source: '#winAnchorMultimapNmax' #>   - id: '#STAR.winAnchorDistNbins' #>     source: '#winAnchorDistNbins' #>   - id: '#STAR.twopassMode' #>   - id: '#STAR.twopass1readsN' #>   - id: '#STAR.sjdbScore' #>   - id: '#STAR.sjdbOverhang' #>     default: 100 #>   - id: '#STAR.sjdbInsertSave' #>   - id: '#STAR.sjdbGTFtagExonParentTranscript' #>   - id: '#STAR.sjdbGTFtagExonParentGene' #>   - id: '#STAR.sjdbGTFfile' #>     source: '#sjdbGTFfile' #>   - id: '#STAR.sjdbGTFfeatureExon' #>   - id: '#STAR.sjdbGTFchrPrefix' #>   - id: '#STAR.seedSearchStartLmaxOverLread' #>   - id: '#STAR.seedSearchStartLmax' #>   - id: '#STAR.seedSearchLmax' #>   - id: '#STAR.seedPerWindowNmax' #>   - id: '#STAR.seedPerReadNmax' #>   - id: '#STAR.seedNoneLociPerWindow' #>   - id: '#STAR.seedMultimapNmax' #>   - id: '#STAR.scoreStitchSJshift' #>   - id: '#STAR.scoreInsOpen' #>   - id: '#STAR.scoreInsBase' #>   - id: '#STAR.scoreGenomicLengthLog2scale' #>   - id: '#STAR.scoreGapNoncan' #>   - id: '#STAR.scoreGapGCAG' #>   - id: '#STAR.scoreGapATAC' #>   - id: '#STAR.scoreGap' #>   - id: '#STAR.scoreDelOpen' #>   - id: '#STAR.scoreDelBase' #>   - id: '#STAR.rg_seq_center' #>   - id: '#STAR.rg_sample_id' #>   - id: '#STAR.rg_platform_unit_id' #>   - id: '#STAR.rg_platform' #>   - id: '#STAR.rg_mfl' #>   - id: '#STAR.rg_library_id' #>   - id: '#STAR.reads' #>     source: #>     - '#reads' #>     - test2 #>   - id: '#STAR.readMatesLengthsIn' #>   - id: '#STAR.readMapNumber' #>   - id: '#STAR.quantTranscriptomeBan' #>   - id: '#STAR.quantMode' #>     default: TranscriptomeSAM #>   - id: '#STAR.outSortingType' #>     default: SortedByCoordinate #>   - id: '#STAR.outSJfilterReads' #>   - id: '#STAR.outSJfilterOverhangMin' #>   - id: '#STAR.outSJfilterIntronMaxVsReadN' #>   - id: '#STAR.outSJfilterDistToOtherSJmin' #>   - id: '#STAR.outSJfilterCountUniqueMin' #>   - id: '#STAR.outSJfilterCountTotalMin' #>   - id: '#STAR.outSAMunmapped' #>   - id: '#STAR.outSAMtype' #>     default: BAM #>   - id: '#STAR.outSAMstrandField' #>   - id: '#STAR.outSAMreadID' #>   - id: '#STAR.outSAMprimaryFlag' #>   - id: '#STAR.outSAMorder' #>   - id: '#STAR.outSAMmode' #>   - id: '#STAR.outSAMmapqUnique' #>   - id: '#STAR.outSAMheaderPG' #>   - id: '#STAR.outSAMheaderHD' #>   - id: '#STAR.outSAMflagOR' #>   - id: '#STAR.outSAMflagAND' #>   - id: '#STAR.outSAMattributes' #>   - id: '#STAR.outReadsUnmapped' #>     default: Fastx #>   - id: '#STAR.outQSconversionAdd' #>   - id: '#STAR.outFilterType' #>   - id: '#STAR.outFilterScoreMinOverLread' #>   - id: '#STAR.outFilterScoreMin' #>   - id: '#STAR.outFilterMultimapScoreRange' #>   - id: '#STAR.outFilterMultimapNmax' #>   - id: '#STAR.outFilterMismatchNoverReadLmax' #>   - id: '#STAR.outFilterMismatchNoverLmax' #>   - id: '#STAR.outFilterMismatchNmax' #>   - id: '#STAR.outFilterMatchNminOverLread' #>   - id: '#STAR.outFilterMatchNmin' #>   - id: '#STAR.outFilterIntronMotifs' #>   - id: '#STAR.limitSjdbInsertNsj' #>   - id: '#STAR.limitOutSJoneRead' #>   - id: '#STAR.limitOutSJcollapsed' #>   - id: '#STAR.limitBAMsortRAM' #>   - id: '#STAR.genomeDirName' #>   - id: '#STAR.genome' #>     source: #>     - '#STAR_Genome_Generate.genome' #>     - test1 #>   - id: '#STAR.clip5pNbases' #>   - id: '#STAR.clip3pNbases' #>   - id: '#STAR.clip3pAfterAdapterNbases' #>   - id: '#STAR.clip3pAdapterSeq' #>   - id: '#STAR.clip3pAdapterMMp' #>   - id: '#STAR.chimSegmentMin' #>   - id: '#STAR.chimScoreSeparation' #>   - id: '#STAR.chimScoreMin' #>   - id: '#STAR.chimScoreJunctionNonGTAG' #>   - id: '#STAR.chimScoreDropMax' #>   - id: '#STAR.chimOutType' #>   - id: '#STAR.chimJunctionOverhangMin' #>   - id: '#STAR.alignWindowsPerReadNmax' #>   - id: '#STAR.alignTranscriptsPerWindowNmax' #>   - id: '#STAR.alignTranscriptsPerReadNmax' #>   - id: '#STAR.alignSplicedMateMapLminOverLmate' #>   - id: '#STAR.alignSplicedMateMapLmin' #>   - id: '#STAR.alignSoftClipAtReferenceEnds' #>   - id: '#STAR.alignSJoverhangMin' #>   - id: '#STAR.alignSJDBoverhangMin' #>   - id: '#STAR.alignMatesGapMax' #>   - id: '#STAR.alignIntronMin' #>   - id: '#STAR.alignIntronMax' #>   - id: '#STAR.alignEndsType' #>   outputs: #>   - id: '#STAR.unmapped_reads' #>   - id: '#STAR.transcriptome_aligned_reads' #>   - id: '#STAR.splice_junctions' #>   - id: '#STAR.reads_per_gene' #>   - id: '#STAR.log_files' #>   - id: '#STAR.intermediate_genome' #>   - id: '#STAR.chimeric_junctions' #>   - id: '#STAR.chimeric_alignments' #>   - id: '#STAR.aligned_reads' #>   hints: [] #>   run: #>     sbg:validationErrors: [] #>     sbg:sbgMaintained: no #>     sbg:latestRevision: 4 #>     sbg:job: #>       allocatedResources: #>         mem: 60000 #>         cpu: 15 #>       inputs: #>         alignWindowsPerReadNmax: 0 #>         outSAMheaderPG: outSAMheaderPG #>         GENOME_DIR_NAME: '' #>         outFilterMatchNminOverLread: 0 #>         rg_platform_unit_id: rg_platform_unit #>         alignTranscriptsPerReadNmax: 0 #>         readMapNumber: 0 #>         alignSplicedMateMapLminOverLmate: 0 #>         alignMatesGapMax: 0 #>         outFilterMultimapNmax: 0 #>         clip5pNbases: #>         - 0 #>         outSAMstrandField: None #>         readMatesLengthsIn: NotEqual #>         outSAMattributes: Standard #>         seedMultimapNmax: 0 #>         rg_mfl: rg_mfl #>         chimSegmentMin: 0 #>         winAnchorDistNbins: 0 #>         outSortingType: SortedByCoordinate #>         outFilterMultimapScoreRange: 0 #>         sjdbInsertSave: Basic #>         clip3pAfterAdapterNbases: #>         - 0 #>         scoreDelBase: 0 #>         outFilterMatchNmin: 0 #>         twopass1readsN: 0 #>         outSAMunmapped: None #>         genome: #>           size: 0 #>           secondaryFiles: [] #>           class: File #>           path: genome.ext #>         sjdbGTFtagExonParentTranscript: '' #>         limitBAMsortRAM: 0 #>         alignEndsType: Local #>         seedNoneLociPerWindow: 0 #>         rg_sample_id: rg_sample #>         sjdbGTFtagExonParentGene: '' #>         chimScoreMin: 0 #>         outSJfilterIntronMaxVsReadN: #>         - 0 #>         twopassMode: Basic #>         alignSplicedMateMapLmin: 0 #>         outSJfilterReads: All #>         outSAMprimaryFlag: OneBestScore #>         outSJfilterCountTotalMin: #>         - 3 #>         - 1 #>         - 1 #>         - 1 #>         outSAMorder: Paired #>         outSAMflagAND: 0 #>         chimScoreSeparation: 0 #>         alignSJoverhangMin: 0 #>         outFilterScoreMin: 0 #>         seedSearchStartLmax: 0 #>         scoreGapGCAG: 0 #>         scoreGenomicLengthLog2scale: 0 #>         outFilterIntronMotifs: None #>         outFilterMismatchNmax: 0 #>         reads: #>         - size: 0 #>           secondaryFiles: [] #>           class: File #>           metadata: #>             format: fastq #>             paired_end: '1' #>             seq_center: illumina #>           path: /test-data/mate_1.fastq.bz2 #>         scoreGap: 0 #>         outSJfilterOverhangMin: #>         - 30 #>         - 12 #>         - 12 #>         - 12 #>         outSAMflagOR: 0 #>         outSAMmode: Full #>         rg_library_id: '' #>         chimScoreJunctionNonGTAG: 0 #>         scoreInsOpen: 0 #>         clip3pAdapterSeq: #>         - clip3pAdapterSeq #>         chimScoreDropMax: 0 #>         outFilterType: Normal #>         scoreGapATAC: 0 #>         rg_platform: Ion Torrent PGM #>         clip3pAdapterMMp: #>         - 0 #>         sjdbGTFfeatureExon: '' #>         outQSconversionAdd: 0 #>         quantMode: TranscriptomeSAM #>         alignIntronMin: 0 #>         scoreInsBase: 0 #>         scoreGapNoncan: 0 #>         seedSearchLmax: 0 #>         outSJfilterDistToOtherSJmin: #>         - 0 #>         outFilterScoreMinOverLread: 0 #>         alignSJDBoverhangMin: 0 #>         limitOutSJcollapsed: 0 #>         winAnchorMultimapNmax: 0 #>         outFilterMismatchNoverLmax: 0 #>         rg_seq_center: '' #>         outSAMheaderHD: outSAMheaderHD #>         chimOutType: Within #>         quantTranscriptomeBan: IndelSoftclipSingleend #>         limitOutSJoneRead: 0 #>         alignTranscriptsPerWindowNmax: 0 #>         sjdbOverhang: ~ #>         outReadsUnmapped: Fastx #>         scoreStitchSJshift: 0 #>         seedPerWindowNmax: 0 #>         outSJfilterCountUniqueMin: #>         - 3 #>         - 1 #>         - 1 #>         - 1 #>         scoreDelOpen: 0 #>         sjdbGTFfile: #>         - path: /demo/test-data/chr20.gtf #>         clip3pNbases: #>         - 0 #>         - 3 #>         winBinNbits: 0 #>         sjdbScore: ~ #>         seedSearchStartLmaxOverLread: 0 #>         alignIntronMax: 0 #>         seedPerReadNmax: 0 #>         outFilterMismatchNoverReadLmax: 0 #>         winFlankNbins: 0 #>         sjdbGTFchrPrefix: chrPrefix #>         alignSoftClipAtReferenceEnds: 'Yes' #>         outSAMreadID: Standard #>         outSAMtype: BAM #>         chimJunctionOverhangMin: 0 #>         limitSjdbInsertNsj: 0 #>         outSAMmapqUnique: 0 #>     sbg:toolAuthor: Alexander Dobin/CSHL #>     sbg:createdOn: 1450911471 #>     sbg:categories: #>     - Alignment #>     sbg:contributors: #>     - ana_d #>     - bix-demo #>     - uros_sipetic #>     sbg:links: #>     - id: https://github.com/alexdobin/STAR #>       label: Homepage #>     - id: https://github.com/alexdobin/STAR/releases #>       label: Releases #>     - id: https://github.com/alexdobin/STAR/blob/master/doc/STARmanual.pdf #>       label: Manual #>     - id: https://groups.google.com/forum/#!forum/rna-star #>       label: Support #>     - id: http://www.ncbi.nlm.nih.gov/pubmed/23104886 #>       label: Publication #>     sbg:project: bix-demo/star-2-4-2a-demo #>     sbg:createdBy: bix-demo #>     sbg:toolkitVersion: 2.4.2a #>     sbg:id: sevenbridges/public-apps/star/4 #>     sbg:license: GNU General Public License v3.0 only #>     sbg:revision: 4 #>     sbg:cmdPreview: tar -xvf genome.ext && /opt/STAR --runThreadN 15  --readFilesCommand #>       bzcat  --sjdbGTFfile /demo/test-data/chr20.gtf  --sjdbGTFchrPrefix chrPrefix #>       --sjdbInsertSave Basic  --twopass1readsN 0  --chimOutType WithinBAM  --outSAMattrRGline #>       ID:1 CN:illumina PI:rg_mfl PL:Ion_Torrent_PGM PU:rg_platform_unit SM:rg_sample  --quantMode #>       TranscriptomeSAM --outFileNamePrefix ./mate_1.fastq.bz2.  --readFilesIn /test-data/mate_1.fastq.bz2  && #>       tar -vcf mate_1.fastq.bz2._STARgenome.tar ./mate_1.fastq.bz2._STARgenome  && #>       mv mate_1.fastq.bz2.Unmapped.out.mate1 mate_1.fastq.bz2.Unmapped.out.mate1.fastq #>     sbg:modifiedOn: 1462889222 #>     sbg:modifiedBy: ana_d #>     sbg:revisionsInfo: #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911471 #>       sbg:revision: 0 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911473 #>       sbg:revision: 1 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911475 #>       sbg:revision: 2 #>     - sbg:modifiedBy: uros_sipetic #>       sbg:modifiedOn: 1462878528 #>       sbg:revision: 3 #>     - sbg:modifiedBy: ana_d #>       sbg:modifiedOn: 1462889222 #>       sbg:revision: 4 #>     sbg:toolkit: STAR #>     id: sevenbridges/public-apps/star/4 #>     inputs: #>     - type: #>       - 'null' #>       - int #>       label: Flanking regions size #>       description: =log2(winFlank), where win Flank is the size of the left and right #>         flanking regions for each window (int>0). #>       streamable: no #>       id: '#winFlankNbins' #>       inputBinding: #>         position: 0 #>         prefix: --winFlankNbins #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Windows, Anchors, Binning #>       sbg:includeInPorts: yes #>       sbg:toolDefaultValue: '4' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Bin size #>       description: =log2(winBin), where winBin is the size of the bin for the windows/clustering, #>         each window will occupy an integer number of bins (int>0). #>       streamable: no #>       id: '#winBinNbits' #>       inputBinding: #>         position: 0 #>         prefix: --winBinNbits #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Windows, Anchors, Binning #>       sbg:includeInPorts: yes #>       sbg:toolDefaultValue: '16' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max loci anchors #>       description: Max number of loci anchors are allowed to map to (int>0). #>       streamable: no #>       id: '#winAnchorMultimapNmax' #>       inputBinding: #>         position: 0 #>         prefix: --winAnchorMultimapNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Windows, Anchors, Binning #>       sbg:toolDefaultValue: '50' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max bins between anchors #>       description: Max number of bins between two anchors that allows aggregation #>         of anchors into one window (int>0). #>       streamable: no #>       id: '#winAnchorDistNbins' #>       inputBinding: #>         position: 0 #>         prefix: --winAnchorDistNbins #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Windows, Anchors, Binning #>       sbg:toolDefaultValue: '9' #>       required: no #>     - type: #>       - 'null' #>       - name: twopassMode #>         symbols: #>         - None #>         - Basic #>         type: enum #>       label: Two-pass mode #>       description: '2-pass mapping mode. None: 1-pass mapping; Basic: basic 2-pass #>         mapping, with all 1st pass junctions inserted into the genome indices on the #>         fly.' #>       streamable: no #>       id: '#twopassMode' #>       inputBinding: #>         position: 0 #>         prefix: --twopassMode #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: 2-pass mapping #>       sbg:toolDefaultValue: None #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Reads to process in 1st step #>       description: 'Number of reads to process for the 1st step. 0: 1-step only, no #>         2nd pass; use very large number to map all reads in the first step (int>0).' #>       streamable: no #>       id: '#twopass1readsN' #>       sbg:category: 2-pass mapping #>       sbg:toolDefaultValue: '-1' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Extra alignment score #>       description: Extra alignment score for alignments that cross database junctions. #>       streamable: no #>       id: '#sjdbScore' #>       sbg:category: Splice junctions database #>       sbg:toolDefaultValue: '2' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: '\"Overhang\" length' #>       description: Length of the donor/acceptor sequence on each side of the junctions, #>         ideally = (mate_length - 1) (int >= 0), if int = 0, splice junction database #>         is not used. #>       streamable: no #>       id: '#sjdbOverhang' #>       sbg:category: Splice junctions database #>       sbg:toolDefaultValue: '100' #>       required: no #>     - type: #>       - 'null' #>       - name: sjdbInsertSave #>         symbols: #>         - Basic #>         - All #>         - None #>         type: enum #>       label: Save junction files #>       description: 'Which files to save when sjdb junctions are inserted on the fly #>         at the mapping step. None: not saving files at all; Basic: only small junction/transcript #>         files; All: all files including big Genome, SA and SAindex. These files are #>         output as archive.' #>       streamable: no #>       id: '#sjdbInsertSave' #>       sbg:category: Splice junctions database #>       sbg:toolDefaultValue: None #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Exons' parents name #>       description: Tag name to be used as exons' transcript-parents. #>       streamable: no #>       id: '#sjdbGTFtagExonParentTranscript' #>       sbg:category: Splice junctions database #>       sbg:toolDefaultValue: transcript_id #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Gene name #>       description: Tag name to be used as exons' gene-parents. #>       streamable: no #>       id: '#sjdbGTFtagExonParentGene' #>       sbg:category: Splice junctions database #>       sbg:toolDefaultValue: gene_id #>       required: no #>     - type: #>       - 'null' #>       - items: File #>         type: array #>       label: Splice junction file #>       description: Gene model annotations and/or known transcripts. No need to include #>         this input, except in case of using \"on the fly\" annotations. #>       streamable: no #>       id: '#sjdbGTFfile' #>       sbg:category: Basic #>       sbg:fileTypes: GTF, GFF, TXT #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Set exons feature #>       description: Feature type in GTF file to be used as exons for building transcripts. #>       streamable: no #>       id: '#sjdbGTFfeatureExon' #>       sbg:category: Splice junctions database #>       sbg:toolDefaultValue: exon #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Chromosome names #>       description: Prefix for chromosome names in a GTF file (e.g. 'chr' for using #>         ENSMEBL annotations with UCSC geneomes). #>       streamable: no #>       id: '#sjdbGTFchrPrefix' #>       sbg:category: Splice junctions database #>       sbg:toolDefaultValue: '-' #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Search start point normalized #>       description: seedSearchStartLmax normalized to read length (sum of mates' lengths #>         for paired-end reads). #>       streamable: no #>       id: '#seedSearchStartLmaxOverLread' #>       inputBinding: #>         position: 0 #>         prefix: --seedSearchStartLmaxOverLread #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '1.0' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Search start point #>       description: Defines the search start point through the read - the read is split #>         into pieces no longer than this value (int>0). #>       streamable: no #>       id: '#seedSearchStartLmax' #>       inputBinding: #>         position: 0 #>         prefix: --seedSearchStartLmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '50' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max seed length #>       description: Defines the maximum length of the seeds, if =0 max seed length #>         is infinite (int>=0). #>       streamable: no #>       id: '#seedSearchLmax' #>       inputBinding: #>         position: 0 #>         prefix: --seedSearchLmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max seeds per window #>       description: Max number of seeds per window (int>=0). #>       streamable: no #>       id: '#seedPerWindowNmax' #>       inputBinding: #>         position: 0 #>         prefix: --seedPerWindowNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '50' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max seeds per read #>       description: Max number of seeds per read (int>=0). #>       streamable: no #>       id: '#seedPerReadNmax' #>       inputBinding: #>         position: 0 #>         prefix: --seedPerReadNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '1000' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max one-seed loci per window #>       description: Max number of one seed loci per window (int>=0). #>       streamable: no #>       id: '#seedNoneLociPerWindow' #>       inputBinding: #>         position: 0 #>         prefix: --seedNoneLociPerWindow #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '10' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Filter pieces for stitching #>       description: Only pieces that map fewer than this value are utilized in the #>         stitching procedure (int>=0). #>       streamable: no #>       id: '#seedMultimapNmax' #>       inputBinding: #>         position: 0 #>         prefix: --seedMultimapNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '10000' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max score reduction #>       description: Maximum score reduction while searching for SJ boundaries in the #>         stitching step. #>       streamable: no #>       id: '#scoreStitchSJshift' #>       inputBinding: #>         position: 0 #>         prefix: --scoreStitchSJshift #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '1' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Insertion Open Penalty #>       description: Insertion open penalty. #>       streamable: no #>       id: '#scoreInsOpen' #>       inputBinding: #>         position: 0 #>         prefix: --scoreInsOpen #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-2' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Insertion extension penalty #>       description: Insertion extension penalty per base (in addition to --scoreInsOpen). #>       streamable: no #>       id: '#scoreInsBase' #>       inputBinding: #>         position: 0 #>         prefix: --scoreInsBase #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-2' #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Log scaled score #>       description: 'Extra score logarithmically scaled with genomic length of the #>         alignment: <int>*log2(genomicLength).' #>       streamable: no #>       id: '#scoreGenomicLengthLog2scale' #>       inputBinding: #>         position: 0 #>         prefix: --scoreGenomicLengthLog2scale #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-0.25' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Non-canonical gap open #>       description: Non-canonical gap open penalty (in addition to --scoreGap). #>       streamable: no #>       id: '#scoreGapNoncan' #>       inputBinding: #>         position: 0 #>         prefix: --scoreGapNoncan #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-8' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: GC/AG and CT/GC gap open #>       description: GC/AG and CT/GC gap open penalty (in addition to --scoreGap). #>       streamable: no #>       id: '#scoreGapGCAG' #>       inputBinding: #>         position: 0 #>         prefix: --scoreGapGCAG #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-4' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: AT/AC and GT/AT gap open #>       description: AT/AC and GT/AT gap open penalty (in addition to --scoreGap). #>       streamable: no #>       id: '#scoreGapATAC' #>       inputBinding: #>         position: 0 #>         prefix: --scoreGapATAC #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-8' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Gap open penalty #>       description: Gap open penalty. #>       streamable: no #>       id: '#scoreGap' #>       inputBinding: #>         position: 0 #>         prefix: --scoreGap #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Deletion open penalty #>       description: Deletion open penalty. #>       streamable: no #>       id: '#scoreDelOpen' #>       inputBinding: #>         position: 0 #>         prefix: --scoreDelOpen #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-2' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Deletion extension penalty #>       description: Deletion extension penalty per base (in addition to --scoreDelOpen). #>       streamable: no #>       id: '#scoreDelBase' #>       inputBinding: #>         position: 0 #>         prefix: --scoreDelBase #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-2' #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Sequencing center #>       description: Specify the sequencing center for RG line. #>       streamable: no #>       id: '#rg_seq_center' #>       sbg:category: Read group #>       sbg:toolDefaultValue: Inferred from metadata #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Sample ID #>       description: Specify the sample ID for RG line. #>       streamable: no #>       id: '#rg_sample_id' #>       sbg:category: Read group #>       sbg:toolDefaultValue: Inferred from metadata #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Platform unit ID #>       description: Specify the platform unit ID for RG line. #>       streamable: no #>       id: '#rg_platform_unit_id' #>       sbg:category: Read group #>       sbg:toolDefaultValue: Inferred from metadata #>       required: no #>     - type: #>       - 'null' #>       - name: rg_platform #>         symbols: #>         - LS 454 #>         - Helicos #>         - Illumina #>         - ABI SOLiD #>         - Ion Torrent PGM #>         - PacBio #>         type: enum #>       label: Platform #>       description: Specify the version of the technology that was used for sequencing #>         or assaying. #>       streamable: no #>       id: '#rg_platform' #>       sbg:category: Read group #>       sbg:toolDefaultValue: Inferred from metadata #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Median fragment length #>       description: Specify the median fragment length for RG line. #>       streamable: no #>       id: '#rg_mfl' #>       sbg:category: Read group #>       sbg:toolDefaultValue: Inferred from metadata #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Library ID #>       description: Specify the library ID for RG line. #>       streamable: no #>       id: '#rg_library_id' #>       sbg:category: Read group #>       sbg:toolDefaultValue: Inferred from metadata #>       required: no #>     - type: #>       - items: File #>         type: array #>       label: Read sequence #>       description: Read sequence. #>       streamable: no #>       id: '#reads' #>       inputBinding: #>         position: 10 #>         separate: yes #>         itemSeparator: ' ' #>         valueFrom: #>           engine: '#cwl-js-engine' #>           script: \"{\\t\\n  var list = [].concat($job.inputs.reads)\\n  \\n  var resp #>             = []\\n  \\n  if (list.length == 1){\\n    resp.push(list[0].path)\\n    \\n #>             \\ }else if (list.length == 2){    \\n    \\n    left = \\\"\\\"\\n    right = #>             \\\"\\\"\\n      \\n    for (index = 0; index < list.length; ++index) {\\n      \\n #>             \\     if (list[index].metadata != null){\\n        if (list[index].metadata.paired_end #>             == 1){\\n          left = list[index].path\\n        }else if (list[index].metadata.paired_end #>             == 2){\\n          right = list[index].path\\n        }\\n      }\\n    }\\n #>             \\   \\n    if (left != \\\"\\\" && right != \\\"\\\"){      \\n      resp.push(left)\\n #>             \\     resp.push(right)\\n    }\\n  }\\n  else if (list.length > 2){\\n    left #>             = []\\n    right = []\\n      \\n    for (index = 0; index < list.length; #>             ++index) {\\n      \\n      if (list[index].metadata != null){\\n        if #>             (list[index].metadata.paired_end == 1){\\n          left.push(list[index].path)\\n #>             \\       }else if (list[index].metadata.paired_end == 2){\\n          right.push(list[index].path)\\n #>             \\       }\\n      }\\n    }\\n    left_join = left.join()\\n    right_join #>             = right.join()\\n    if (left != [] && right != []){      \\n      resp.push(left_join)\\n #>             \\     resp.push(right_join)\\n    }\\t\\n  }\\n  \\n  if(resp.length > 0){ #>             \\   \\n    return \\\"--readFilesIn \\\".concat(resp.join(\\\" \\\"))\\n  }\\n}\" #>           class: Expression #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Basic #>       sbg:fileTypes: FASTA, FASTQ, FA, FQ, FASTQ.GZ, FQ.GZ, FASTQ.BZ2, FQ.BZ2 #>       sbg:x: 200.0 #>       sbg:y: 200.0 #>       sbg:includeInPorts: yes #>       required: yes #>     - type: #>       - 'null' #>       - name: readMatesLengthsIn #>         symbols: #>         - NotEqual #>         - Equal #>         type: enum #>       label: Reads lengths #>       description: Equal/Not equal - lengths of names, sequences, qualities for both #>         mates are the same/not the same. \"Not equal\" is safe in all situations. #>       streamable: no #>       id: '#readMatesLengthsIn' #>       inputBinding: #>         position: 0 #>         prefix: --readMatesLengthsIn #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Read parameters #>       sbg:toolDefaultValue: NotEqual #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Reads to map #>       description: Number of reads to map from the beginning of the file. #>       streamable: no #>       id: '#readMapNumber' #>       inputBinding: #>         position: 0 #>         prefix: --readMapNumber #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Read parameters #>       sbg:toolDefaultValue: '-1' #>       required: no #>     - type: #>       - 'null' #>       - name: quantTranscriptomeBan #>         symbols: #>         - IndelSoftclipSingleend #>         - Singleend #>         type: enum #>       label: Prohibit alignment type #>       description: 'Prohibit various alignment type. IndelSoftclipSingleend: prohibit #>         indels, soft clipping and single-end alignments - compatible with RSEM; Singleend: #>         prohibit single-end alignments.' #>       streamable: no #>       id: '#quantTranscriptomeBan' #>       inputBinding: #>         position: 0 #>         prefix: --quantTranscriptomeBan #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Quantification of Annotations #>       sbg:toolDefaultValue: IndelSoftclipSingleend #>       required: no #>     - type: #>       - 'null' #>       - name: quantMode #>         symbols: #>         - TranscriptomeSAM #>         - GeneCounts #>         type: enum #>       label: Quantification mode #>       description: Types of quantification requested. 'TranscriptomeSAM' option outputs #>         SAM/BAM alignments to transcriptome into a separate file. With 'GeneCounts' #>         option, STAR will count number of reads per gene while mapping. #>       streamable: no #>       id: '#quantMode' #>       sbg:category: Quantification of Annotations #>       sbg:toolDefaultValue: '-' #>       required: no #>     - type: #>       - 'null' #>       - name: outSortingType #>         symbols: #>         - Unsorted #>         - SortedByCoordinate #>         - Unsorted SortedByCoordinate #>         type: enum #>       label: Output sorting type #>       description: Type of output sorting. #>       streamable: no #>       id: '#outSortingType' #>       sbg:category: Output #>       sbg:toolDefaultValue: SortedByCoordinate #>       required: no #>     - type: #>       - 'null' #>       - name: outSJfilterReads #>         symbols: #>         - All #>         - Unique #>         type: enum #>       label: Collapsed junctions reads #>       description: 'Which reads to consider for collapsed splice junctions output. #>         All: all reads, unique- and multi-mappers; Unique: uniquely mapping reads #>         only.' #>       streamable: no #>       id: '#outSJfilterReads' #>       inputBinding: #>         position: 0 #>         prefix: --outSJfilterReads #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: 'Output filtering: splice junctions' #>       sbg:toolDefaultValue: All #>       required: no #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Min overhang SJ #>       description: Minimum overhang length for splice junctions on both sides for #>         each of the motifs. To set no output for desired motif, assign -1 to the corresponding #>         field. Does not apply to annotated junctions. #>       streamable: no #>       id: '#outSJfilterOverhangMin' #>       inputBinding: #>         position: 0 #>         prefix: --outSJfilterOverhangMin #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: 'Output filtering: splice junctions' #>       sbg:toolDefaultValue: 30 12 12 12 #>       required: no #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Max gap allowed #>       description: 'Maximum gap allowed for junctions supported by 1,2,3...N reads #>         (int >= 0) i.e. by default junctions supported by 1 read can have gaps <=50000b, #>         by 2 reads: <=100000b, by 3 reads: <=200000. By 4 or more reads: any gap <=alignIntronMax. #>         Does not apply to annotated junctions.' #>       streamable: no #>       id: '#outSJfilterIntronMaxVsReadN' #>       inputBinding: #>         position: 0 #>         prefix: --outSJfilterIntronMaxVsReadN #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: 'Output filtering: splice junctions' #>       sbg:toolDefaultValue: 50000 100000 200000 #>       required: no #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Min distance to other donor/acceptor #>       description: Minimum allowed distance to other junctions' donor/acceptor for #>         each of the motifs (int >= 0). Does not apply to annotated junctions. #>       streamable: no #>       id: '#outSJfilterDistToOtherSJmin' #>       inputBinding: #>         position: 0 #>         prefix: --outSJfilterDistToOtherSJmin #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: 'Output filtering: splice junctions' #>       sbg:toolDefaultValue: 10 0 5 10 #>       required: no #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Min unique count #>       description: Minimum uniquely mapping read count per junction for each of the #>         motifs. To set no output for desired motif, assign -1 to the corresponding #>         field. Junctions are output if one of --outSJfilterCountUniqueMin OR --outSJfilterCountTotalMin #>         conditions are satisfied. Does not apply to annotated junctions. #>       streamable: no #>       id: '#outSJfilterCountUniqueMin' #>       inputBinding: #>         position: 0 #>         prefix: --outSJfilterCountUniqueMin #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: 'Output filtering: splice junctions' #>       sbg:toolDefaultValue: 3 1 1 1 #>       required: no #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Min total count #>       description: Minimum total (multi-mapping+unique) read count per junction for #>         each of the motifs. To set no output for desired motif, assign -1 to the corresponding #>         field. Junctions are output if one of --outSJfilterCountUniqueMin OR --outSJfilterCountTotalMin #>         conditions are satisfied. Does not apply to annotated junctions. #>       streamable: no #>       id: '#outSJfilterCountTotalMin' #>       inputBinding: #>         position: 0 #>         prefix: --outSJfilterCountTotalMin #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: 'Output filtering: splice junctions' #>       sbg:toolDefaultValue: 3 1 1 1 #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMunmapped #>         symbols: #>         - None #>         - Within #>         type: enum #>       label: Write unmapped in SAM #>       description: 'Output of unmapped reads in the SAM format. None: no output Within: #>         output unmapped reads within the main SAM file (i.e. Aligned.out.sam).' #>       streamable: no #>       id: '#outSAMunmapped' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMunmapped #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: None #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMtype #>         symbols: #>         - SAM #>         - BAM #>         type: enum #>       label: Output format #>       description: Format of output alignments. #>       streamable: no #>       id: '#outSAMtype' #>       inputBinding: #>         position: 0 #>         separate: yes #>         valueFrom: #>           engine: '#cwl-js-engine' #>           script: |- #>             { #>               SAM_type = $job.inputs.outSAMtype #>               SORT_type = $job.inputs.outSortingType #>               if (SAM_type && SORT_type) { #>                 return \"--outSAMtype \".concat(SAM_type, \" \", SORT_type) #>               } #>             } #>           class: Expression #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: SAM #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMstrandField #>         symbols: #>         - None #>         - intronMotif #>         type: enum #>       label: Strand field flag #>       description: 'Cufflinks-like strand field flag. None: not used; intronMotif: #>         strand derived from the intron motif. Reads with inconsistent and/or non-canonical #>         introns are filtered out.' #>       streamable: no #>       id: '#outSAMstrandField' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMstrandField #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: None #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMreadID #>         symbols: #>         - Standard #>         - Number #>         type: enum #>       label: Read ID #>       description: 'Read ID record type. Standard: first word (until space) from the #>         FASTx read ID line, removing /1,/2 from the end; Number: read number (index) #>         in the FASTx file.' #>       streamable: no #>       id: '#outSAMreadID' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMreadID #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: Standard #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMprimaryFlag #>         symbols: #>         - OneBestScore #>         - AllBestScore #>         type: enum #>       label: Primary alignments #>       description: 'Which alignments are considered primary - all others will be marked #>         with 0x100 bit in the FLAG. OneBestScore: only one alignment with the best #>         score is primary; AllBestScore: all alignments with the best score are primary.' #>       streamable: no #>       id: '#outSAMprimaryFlag' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMprimaryFlag #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: OneBestScore #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMorder #>         symbols: #>         - Paired #>         - PairedKeepInputOrder #>         type: enum #>       label: Sorting in SAM #>       description: 'Type of sorting for the SAM output. Paired: one mate after the #>         other for all paired alignments; PairedKeepInputOrder: one mate after the #>         other for all paired alignments, the order is kept the same as in the input #>         FASTQ files.' #>       streamable: no #>       id: '#outSAMorder' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMorder #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: Paired #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMmode #>         symbols: #>         - Full #>         - NoQS #>         type: enum #>       label: SAM mode #>       description: 'Mode of SAM output. Full: full SAM output; NoQS: full SAM but #>         without quality scores.' #>       streamable: no #>       id: '#outSAMmode' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMmode #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: Full #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: MAPQ value #>       description: MAPQ value for unique mappers (0 to 255). #>       streamable: no #>       id: '#outSAMmapqUnique' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMmapqUnique #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: '255' #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: SAM header @PG #>       description: Extra @PG (software) line of the SAM header (in addition to STAR). #>       streamable: no #>       id: '#outSAMheaderPG' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMheaderPG #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: '-' #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: SAM header @HD #>       description: '@HD (header) line of the SAM header.' #>       streamable: no #>       id: '#outSAMheaderHD' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMheaderHD #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: '-' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: OR SAM flag #>       description: Set specific bits of the SAM FLAG. #>       streamable: no #>       id: '#outSAMflagOR' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMflagOR #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: AND SAM flag #>       description: Set specific bits of the SAM FLAG. #>       streamable: no #>       id: '#outSAMflagAND' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMflagAND #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: '65535' #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMattributes #>         symbols: #>         - Standard #>         - NH #>         - All #>         - None #>         type: enum #>       label: SAM attributes #>       description: 'Desired SAM attributes, in the order desired for the output SAM. #>         NH: any combination in any order; Standard: NH HI AS nM; All: NH HI AS nM #>         NM MD jM jI; None: no attributes.' #>       streamable: no #>       id: '#outSAMattributes' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMattributes #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: Standard #>       required: no #>     - type: #>       - 'null' #>       - name: outReadsUnmapped #>         symbols: #>         - None #>         - Fastx #>         type: enum #>       label: Output unmapped reads #>       description: 'Output of unmapped reads (besides SAM). None: no output; Fastx: #>         output in separate fasta/fastq files, Unmapped.out.mate1/2.' #>       streamable: no #>       id: '#outReadsUnmapped' #>       inputBinding: #>         position: 0 #>         prefix: --outReadsUnmapped #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: None #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Quality conversion #>       description: Add this number to the quality score (e.g. to convert from Illumina #>         to Sanger, use -31). #>       streamable: no #>       id: '#outQSconversionAdd' #>       inputBinding: #>         position: 0 #>         prefix: --outQSconversionAdd #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - name: outFilterType #>         symbols: #>         - Normal #>         - BySJout #>         type: enum #>       label: Filtering type #>       description: 'Type of filtering. Normal: standard filtering using only current #>         alignment; BySJout: keep only those reads that contain junctions that passed #>         filtering into SJ.out.tab.' #>       streamable: no #>       id: '#outFilterType' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterType #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: Normal #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Min score normalized #>       description: '''Minimum score'' normalized to read length (sum of mates'' lengths #>         for paired-end reads).' #>       streamable: no #>       id: '#outFilterScoreMinOverLread' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterScoreMinOverLread #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '0.66' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min score #>       description: Alignment will be output only if its score is higher than this #>         value. #>       streamable: no #>       id: '#outFilterScoreMin' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterScoreMin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Multimapping score range #>       description: The score range below the maximum score for multimapping alignments. #>       streamable: no #>       id: '#outFilterMultimapScoreRange' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterMultimapScoreRange #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '1' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max number of mappings #>       description: Read alignments will be output only if the read maps fewer than #>         this value, otherwise no alignments will be output. #>       streamable: no #>       id: '#outFilterMultimapNmax' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterMultimapNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '10' #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Mismatches to *read* length #>       description: Alignment will be output only if its ratio of mismatches to *read* #>         length is less than this value. #>       streamable: no #>       id: '#outFilterMismatchNoverReadLmax' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterMismatchNoverReadLmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '1' #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Mismatches to *mapped* length #>       description: Alignment will be output only if its ratio of mismatches to *mapped* #>         length is less than this value. #>       streamable: no #>       id: '#outFilterMismatchNoverLmax' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterMismatchNoverLmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '0.3' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max number of mismatches #>       description: Alignment will be output only if it has fewer mismatches than this #>         value. #>       streamable: no #>       id: '#outFilterMismatchNmax' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterMismatchNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '10' #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Min matched bases normalized #>       description: '''Minimum matched bases'' normalized to read length (sum of mates #>         lengths for paired-end reads).' #>       streamable: no #>       id: '#outFilterMatchNminOverLread' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterMatchNminOverLread #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '0.66' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min matched bases #>       description: Alignment will be output only if the number of matched bases is #>         higher than this value. #>       streamable: no #>       id: '#outFilterMatchNmin' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterMatchNmin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - name: outFilterIntronMotifs #>         symbols: #>         - None #>         - RemoveNoncanonical #>         - RemoveNoncanonicalUnannotated #>         type: enum #>       label: Motifs filtering #>       description: 'Filter alignment using their motifs. None: no filtering; RemoveNoncanonical: #>         filter out alignments that contain non-canonical junctions; RemoveNoncanonicalUnannotated: #>         filter out alignments that contain non-canonical unannotated junctions when #>         using annotated splice junctions database. The annotated non-canonical junctions #>         will be kept.' #>       streamable: no #>       id: '#outFilterIntronMotifs' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterIntronMotifs #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: None #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max insert junctions #>       description: Maximum number of junction to be inserted to the genome on the #>         fly at the mapping stage, including those from annotations and those detected #>         in the 1st step of the 2-pass run. #>       streamable: no #>       id: '#limitSjdbInsertNsj' #>       inputBinding: #>         position: 0 #>         prefix: --limitSjdbInsertNsj #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Limits #>       sbg:toolDefaultValue: '1000000' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Junctions max number #>       description: Max number of junctions for one read (including all multi-mappers). #>       streamable: no #>       id: '#limitOutSJoneRead' #>       inputBinding: #>         position: 0 #>         prefix: --limitOutSJoneRead #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Limits #>       sbg:toolDefaultValue: '1000' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Collapsed junctions max number #>       description: Max number of collapsed junctions. #>       streamable: no #>       id: '#limitOutSJcollapsed' #>       inputBinding: #>         position: 0 #>         prefix: --limitOutSJcollapsed #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Limits #>       sbg:toolDefaultValue: '1000000' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Limit BAM sorting memory #>       description: Maximum available RAM for sorting BAM. If set to 0, it will be #>         set to the genome index size. #>       streamable: no #>       id: '#limitBAMsortRAM' #>       inputBinding: #>         position: 0 #>         prefix: --limitBAMsortRAM #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Limits #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Genome dir name #>       description: Name of the directory which contains genome files (when genome.tar #>         is uncompressed). #>       streamable: no #>       id: '#genomeDirName' #>       inputBinding: #>         position: 0 #>         prefix: --genomeDir #>         separate: yes #>         valueFrom: #>           engine: '#cwl-js-engine' #>           script: $job.inputs.genomeDirName || \"genomeDir\" #>           class: Expression #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Basic #>       sbg:toolDefaultValue: genomeDir #>       required: no #>     - type: #>       - File #>       label: Genome files #>       description: Genome files created using STAR Genome Generate. #>       streamable: no #>       id: '#genome' #>       sbg:category: Basic #>       sbg:fileTypes: TAR #>       required: yes #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Clip 5p bases #>       description: Number of bases to clip from 5p of each mate. In case only one #>         value is given, it will be assumed the same for both mates. #>       streamable: no #>       id: '#clip5pNbases' #>       inputBinding: #>         position: 0 #>         prefix: --clip5pNbases #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Read parameters #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Clip 3p bases #>       description: Number of bases to clip from 3p of each mate. In case only one #>         value is given, it will be assumed the same for both mates. #>       streamable: no #>       id: '#clip3pNbases' #>       inputBinding: #>         position: 0 #>         prefix: --clip3pNbases #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Read parameters #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Clip 3p after adapter seq. #>       description: Number of bases to clip from 3p of each mate after the adapter #>         clipping. In case only one value is given, it will be assumed the same for #>         both mates. #>       streamable: no #>       id: '#clip3pAfterAdapterNbases' #>       inputBinding: #>         position: 0 #>         prefix: --clip3pAfterAdapterNbases #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Read parameters #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - items: string #>         type: array #>       label: Clip 3p adapter sequence #>       description: Adapter sequence to clip from 3p of each mate. In case only one #>         value is given, it will be assumed the same for both mates. #>       streamable: no #>       id: '#clip3pAdapterSeq' #>       inputBinding: #>         position: 0 #>         prefix: --clip3pAdapterSeq #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Read parameters #>       sbg:toolDefaultValue: '-' #>       required: no #>     - type: #>       - 'null' #>       - items: float #>         type: array #>       label: Max mismatches proportions #>       description: Max proportion of mismatches for 3p adapter clipping for each mate. #>         In case only one value is given, it will be assumed the same for both mates. #>       streamable: no #>       id: '#clip3pAdapterMMp' #>       inputBinding: #>         position: 0 #>         prefix: --clip3pAdapterMMp #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Read parameters #>       sbg:toolDefaultValue: '0.1' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min segment length #>       description: Minimum length of chimeric segment length, if =0, no chimeric output #>         (int>=0). #>       streamable: no #>       id: '#chimSegmentMin' #>       inputBinding: #>         position: 0 #>         prefix: --chimSegmentMin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Chimeric Alignments #>       sbg:toolDefaultValue: '15' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min separation score #>       description: Minimum difference (separation) between the best chimeric score #>         and the next one (int>=0). #>       streamable: no #>       id: '#chimScoreSeparation' #>       inputBinding: #>         position: 0 #>         prefix: --chimScoreSeparation #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Chimeric Alignments #>       sbg:includeInPorts: no #>       sbg:toolDefaultValue: '10' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min total score #>       description: Minimum total (summed) score of the chimeric segments (int>=0). #>       streamable: no #>       id: '#chimScoreMin' #>       inputBinding: #>         position: 0 #>         prefix: --chimScoreMin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Chimeric Alignments #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Non-GT/AG penalty #>       description: Penalty for a non-GT/AG chimeric junction. #>       streamable: no #>       id: '#chimScoreJunctionNonGTAG' #>       inputBinding: #>         position: 0 #>         prefix: --chimScoreJunctionNonGTAG #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Chimeric Alignments #>       sbg:toolDefaultValue: '-1' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max drop score #>       description: Max drop (difference) of chimeric score (the sum of scores of all #>         chimeric segements) from the read length (int>=0). #>       streamable: no #>       id: '#chimScoreDropMax' #>       inputBinding: #>         position: 0 #>         prefix: --chimScoreDropMax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Chimeric Alignments #>       sbg:toolDefaultValue: '20' #>       required: no #>     - type: #>       - 'null' #>       - name: chimOutType #>         symbols: #>         - SeparateSAMold #>         - Within #>         type: enum #>       label: Chimeric output type #>       description: 'Type of chimeric output. SeparateSAMold: output old SAM into separate #>         Chimeric.out.sam file; Within: output into main aligned SAM/BAM files.' #>       streamable: no #>       id: '#chimOutType' #>       sbg:category: Chimeric Alignments #>       sbg:toolDefaultValue: SeparateSAMold #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min junction overhang #>       description: Minimum overhang for a chimeric junction (int>=0). #>       streamable: no #>       id: '#chimJunctionOverhangMin' #>       inputBinding: #>         position: 0 #>         prefix: --chimJunctionOverhangMin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Chimeric Alignments #>       sbg:toolDefaultValue: '20' #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Max windows per read #>       description: Max number of windows per read (int>0). #>       streamable: no #>       id: '#alignWindowsPerReadNmax' #>       inputBinding: #>         position: 0 #>         prefix: --alignWindowsPerReadNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '10000' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max transcripts per window #>       description: Max number of transcripts per window (int>0). #>       streamable: no #>       id: '#alignTranscriptsPerWindowNmax' #>       inputBinding: #>         position: 0 #>         prefix: --alignTranscriptsPerWindowNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '100' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max transcripts per read #>       description: Max number of different alignments per read to consider (int>0). #>       streamable: no #>       id: '#alignTranscriptsPerReadNmax' #>       inputBinding: #>         position: 0 #>         prefix: --alignTranscriptsPerReadNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '10000' #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Min mapped length normalized #>       description: alignSplicedMateMapLmin normalized to mate length (float>0). #>       streamable: no #>       id: '#alignSplicedMateMapLminOverLmate' #>       inputBinding: #>         position: 0 #>         prefix: --alignSplicedMateMapLminOverLmate #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '0.66' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min mapped length #>       description: Minimum mapped length for a read mate that is spliced (int>0). #>       streamable: no #>       id: '#alignSplicedMateMapLmin' #>       inputBinding: #>         position: 0 #>         prefix: --alignSplicedMateMapLmin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - name: alignSoftClipAtReferenceEnds #>         symbols: #>         - 'Yes' #>         - 'No' #>         type: enum #>       label: Soft clipping #>       description: 'Option which allows soft clipping of alignments at the reference #>         (chromosome) ends. Can be disabled for compatibility with Cufflinks/Cuffmerge. #>         Yes: Enables soft clipping; No: Disables soft clipping.' #>       streamable: no #>       id: '#alignSoftClipAtReferenceEnds' #>       inputBinding: #>         position: 0 #>         prefix: --alignSoftClipAtReferenceEnds #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: 'Yes' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min overhang #>       description: Minimum overhang (i.e. block size) for spliced alignments (int>0). #>       streamable: no #>       id: '#alignSJoverhangMin' #>       inputBinding: #>         position: 0 #>         prefix: --alignSJoverhangMin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '5' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: 'Min overhang: annotated' #>       description: Minimum overhang (i.e. block size) for annotated (sjdb) spliced #>         alignments (int>0). #>       streamable: no #>       id: '#alignSJDBoverhangMin' #>       inputBinding: #>         position: 0 #>         prefix: --alignSJDBoverhangMin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:includeInPorts: no #>       sbg:toolDefaultValue: '3' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max mates gap #>       description: Maximum gap between two mates, if 0, max intron gap will be determined #>         by (2^winBinNbits)*winAnchorDistNbins. #>       streamable: no #>       id: '#alignMatesGapMax' #>       inputBinding: #>         position: 0 #>         prefix: --alignMatesGapMax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min intron size #>       description: 'Minimum intron size: genomic gap is considered intron if its length #>         >= alignIntronMin, otherwise it is considered Deletion (int>=0).' #>       streamable: no #>       id: '#alignIntronMin' #>       inputBinding: #>         position: 0 #>         prefix: --alignIntronMin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '21' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max intron size #>       description: Maximum intron size, if 0, max intron size will be determined by #>         (2^winBinNbits)*winAnchorDistNbins. #>       streamable: no #>       id: '#alignIntronMax' #>       inputBinding: #>         position: 0 #>         prefix: --alignIntronMax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - name: alignEndsType #>         symbols: #>         - Local #>         - EndToEnd #>         type: enum #>       label: Alignment type #>       description: 'Type of read ends alignment. Local: standard local alignment with #>         soft-clipping allowed. EndToEnd: force end to end read alignment, do not soft-clip.' #>       streamable: no #>       id: '#alignEndsType' #>       inputBinding: #>         position: 0 #>         prefix: --alignEndsType #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: Local #>       required: no #>     outputs: #>     - type: #>       - 'null' #>       - items: File #>         type: array #>       label: Unmapped reads #>       description: Output of unmapped reads. #>       streamable: no #>       id: '#unmapped_reads' #>       outputBinding: #>         glob: '*Unmapped.out*' #>       sbg:fileTypes: FASTQ #>     - type: #>       - 'null' #>       - File #>       label: Transcriptome alignments #>       description: Alignments translated into transcript coordinates. #>       streamable: no #>       id: '#transcriptome_aligned_reads' #>       outputBinding: #>         glob: '*Transcriptome*' #>       sbg:fileTypes: BAM #>     - type: #>       - 'null' #>       - File #>       label: Splice junctions #>       description: High confidence collapsed splice junctions in tab-delimited format. #>         Only junctions supported by uniquely mapping reads are reported. #>       streamable: no #>       id: '#splice_junctions' #>       outputBinding: #>         glob: '*SJ.out.tab' #>       sbg:fileTypes: TAB #>     - type: #>       - 'null' #>       - File #>       label: Reads per gene #>       description: File with number of reads per gene. A read is counted if it overlaps #>         (1nt or more) one and only one gene. #>       streamable: no #>       id: '#reads_per_gene' #>       outputBinding: #>         glob: '*ReadsPerGene*' #>       sbg:fileTypes: TAB #>     - type: #>       - 'null' #>       - items: File #>         type: array #>       label: Log files #>       description: Log files produced during alignment. #>       streamable: no #>       id: '#log_files' #>       outputBinding: #>         glob: '*Log*.out' #>       sbg:fileTypes: OUT #>     - type: #>       - 'null' #>       - File #>       label: Intermediate genome files #>       description: Archive with genome files produced when annotations are included #>         on the fly (in the mapping step). #>       streamable: no #>       id: '#intermediate_genome' #>       outputBinding: #>         glob: '*_STARgenome.tar' #>       sbg:fileTypes: TAR #>     - type: #>       - 'null' #>       - File #>       label: Chimeric junctions #>       description: If chimSegmentMin in 'Chimeric Alignments' section is set to 0, #>         'Chimeric Junctions' won't be output. #>       streamable: no #>       id: '#chimeric_junctions' #>       outputBinding: #>         glob: '*Chimeric.out.junction' #>       sbg:fileTypes: JUNCTION #>     - type: #>       - 'null' #>       - File #>       label: Chimeric alignments #>       description: Aligned Chimeric sequences SAM - if chimSegmentMin = 0, no Chimeric #>         Alignment SAM and Chimeric Junctions outputs. #>       streamable: no #>       id: '#chimeric_alignments' #>       outputBinding: #>         glob: '*.Chimeric.out.sam' #>       sbg:fileTypes: SAM #>     - type: #>       - 'null' #>       - File #>       label: Aligned SAM/BAM #>       description: Aligned sequence in SAM/BAM format. #>       streamable: no #>       id: '#aligned_reads' #>       outputBinding: #>         glob: #>           engine: '#cwl-js-engine' #>           script: |- #>             { #>               if ($job.inputs.outSortingType == 'SortedByCoordinate') { #>                 sort_name = '.sortedByCoord' #>               } #>               else { #>                 sort_name = '' #>               } #>               if ($job.inputs.outSAMtype == 'BAM') { #>                 sam_name = \"*.Aligned\".concat( sort_name, '.out.bam') #>               } #>               else { #>                 sam_name = \"*.Aligned.out.sam\" #>               } #>               return sam_name #>             } #>           class: Expression #>       sbg:fileTypes: SAM, BAM #>     requirements: #>     - class: ExpressionEngineRequirement #>       id: '#cwl-js-engine' #>       requirements: #>       - class: DockerRequirement #>         dockerPull: rabix/js-engine #>     hints: #>     - class: DockerRequirement #>       dockerPull: images.sbgenomics.com/ana_d/star:2.4.2a #>       dockerImageId: a4b0ad2c3cae #>     - class: sbg:MemRequirement #>       value: 60000 #>     - class: sbg:CPURequirement #>       value: 15 #>     label: STAR #>     description: STAR is an ultrafast universal RNA-seq aligner. It has very high #>       mapping speed, accurate alignment of contiguous and spliced reads, detection #>       of polyA-tails, non-canonical splices and chimeric (fusion) junctions. It works #>       with reads starting from lengths ~15 bases up to ~300 bases. In case of having #>       longer reads, use of STAR Long is recommended. #>     class: CommandLineTool #>     baseCommand: #>     - tar #>     - -xvf #>     - class: Expression #>       script: $job.inputs.genome.path #>       engine: '#cwl-js-engine' #>     - '&&' #>     - /opt/STAR #>     - --runThreadN #>     - class: Expression #>       script: |- #>         { #>           return $job.allocatedResources.cpu #>         } #>       engine: '#cwl-js-engine' #>     arguments: #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: |- #>           { #>             file = [].concat($job.inputs.reads)[0].path #>             extension = /(?:\\.([^.]+))?$/.exec(file)[1] #>             if (extension == \"gz\") { #>               return \"--readFilesCommand zcat\" #>             } else if (extension == \"bz2\") { #>               return \"--readFilesCommand bzcat\" #>             } #>           } #>         class: Expression #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\t\\n  var sjFormat = \\\"False\\\"\\n  var gtfgffFormat = \\\"False\\\"\\n #>           \\ var list = $job.inputs.sjdbGTFfile\\n  var paths_list = []\\n  var joined_paths #>           = \\\"\\\"\\n  \\n  if (list) {\\n    list.forEach(function(f){return paths_list.push(f.path)})\\n #>           \\   joined_paths = paths_list.join(\\\" \\\")\\n\\n\\n    paths_list.forEach(function(f){\\n #>           \\     ext = f.replace(/^.*\\\\./, '')\\n      if (ext == \\\"gff\\\" || ext == #>           \\\"gtf\\\") {\\n        gtfgffFormat = \\\"True\\\"\\n        return gtfgffFormat\\n #>           \\     }\\n      if (ext == \\\"txt\\\") {\\n        sjFormat = \\\"True\\\"\\n        return #>           sjFormat\\n      }\\n    })\\n\\n    if ($job.inputs.sjdbGTFfile && $job.inputs.sjdbInsertSave #>           != \\\"None\\\") {\\n      if (sjFormat == \\\"True\\\") {\\n        return \\\"--sjdbFileChrStartEnd #>           \\\".concat(joined_paths)\\n      }\\n      else if (gtfgffFormat == \\\"True\\\") #>           {\\n        return \\\"--sjdbGTFfile \\\".concat(joined_paths)\\n      }\\n    }\\n #>           \\ }\\n}\" #>         class: Expression #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  a = b = c = d = e = f = g = []\\n  if ($job.inputs.sjdbGTFchrPrefix) #>           {\\n    a = [\\\"--sjdbGTFchrPrefix\\\", $job.inputs.sjdbGTFchrPrefix]\\n  }\\n #>           \\ if ($job.inputs.sjdbGTFfeatureExon) {\\n    b = [\\\"--sjdbGTFfeatureExon\\\", #>           $job.inputs.sjdbGTFfeatureExon]\\n  }\\n  if ($job.inputs.sjdbGTFtagExonParentTranscript) #>           {\\n    c = [\\\"--sjdbGTFtagExonParentTranscript\\\", $job.inputs.sjdbGTFtagExonParentTranscript]\\n #>           \\ }\\n  if ($job.inputs.sjdbGTFtagExonParentGene) {\\n    d = [\\\"--sjdbGTFtagExonParentGene\\\", #>           $job.inputs.sjdbGTFtagExonParentGene]\\n  }\\n  if ($job.inputs.sjdbOverhang) #>           {\\n    e = [\\\"--sjdbOverhang\\\", $job.inputs.sjdbOverhang]\\n  }\\n  if ($job.inputs.sjdbScore) #>           {\\n    f = [\\\"--sjdbScore\\\", $job.inputs.sjdbScore]\\n  }\\n  if ($job.inputs.sjdbInsertSave) #>           {\\n    g = [\\\"--sjdbInsertSave\\\", $job.inputs.sjdbInsertSave]\\n  }\\n  \\n #>           \\ \\n  \\n  if ($job.inputs.sjdbInsertSave != \\\"None\\\" && $job.inputs.sjdbGTFfile) #>           {\\n    new_list = a.concat(b, c, d, e, f, g)\\n    return new_list.join(\\\" #>           \\\")\\n  }\\n}\" #>         class: Expression #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: |- #>           { #>             if ($job.inputs.twopassMode == \"Basic\") { #>               return \"--twopass1readsN \".concat($job.inputs.twopass1readsN) #>             } #>           } #>         class: Expression #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: |- #>           { #>             if ($job.inputs.chimOutType == \"Within\") { #>               return \"--chimOutType \".concat(\"Within\", $job.inputs.outSAMtype) #>             } #>             else { #>               return \"--chimOutType SeparateSAMold\" #>             } #>           } #>         class: Expression #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  var param_list = []\\n  \\n  function add_param(key, value){\\n #>           \\   if (value == \\\"\\\") {\\n      return\\n    }\\n    else {\\n      return #>           param_list.push(key.concat(\\\":\\\", value))\\n    }\\n  }\\n  \\n  add_param('ID', #>           \\\"1\\\")\\n  if ($job.inputs.rg_seq_center) {\\n    add_param('CN', $job.inputs.rg_seq_center)\\n #>           \\ } else if ([].concat($job.inputs.reads)[0].metadata.seq_center) {\\n    add_param('CN', #>           [].concat($job.inputs.reads)[0].metadata.seq_center)\\n  }\\n  if ($job.inputs.rg_library_id) #>           {\\n    add_param('LB', $job.inputs.rg_library_id)\\n  } else if ([].concat($job.inputs.reads)[0].metadata.library_id) #>           {\\n    add_param('LB', [].concat($job.inputs.reads)[0].metadata.library_id)\\n #>           \\ }\\n  if ($job.inputs.rg_mfl) {\\n    add_param('PI', $job.inputs.rg_mfl)\\n #>           \\ } else if ([].concat($job.inputs.reads)[0].metadata.median_fragment_length) #>           {\\n    add_param('PI', [].concat($job.inputs.reads)[0].metadata.median_fragment_length)\\n #>           \\ }\\n  if ($job.inputs.rg_platform) {\\n    add_param('PL', $job.inputs.rg_platform.replace(/ #>           /g,\\\"_\\\"))\\n  } else if ([].concat($job.inputs.reads)[0].metadata.platform) #>           {\\n    add_param('PL', [].concat($job.inputs.reads)[0].metadata.platform.replace(/ #>           /g,\\\"_\\\"))\\n  }\\n  if ($job.inputs.rg_platform_unit_id) {\\n    add_param('PU', #>           $job.inputs.rg_platform_unit_id)\\n  } else if ([].concat($job.inputs.reads)[0].metadata.platform_unit_id) #>           {\\n    add_param('PU', [].concat($job.inputs.reads)[0].metadata.platform_unit_id)\\n #>           \\ }\\n  if ($job.inputs.rg_sample_id) {\\n    add_param('SM', $job.inputs.rg_sample_id)\\n #>           \\ } else if ([].concat($job.inputs.reads)[0].metadata.sample_id) {\\n    add_param('SM', #>           [].concat($job.inputs.reads)[0].metadata.sample_id)\\n  }\\n  return \\\"--outSAMattrRGline #>           \\\".concat(param_list.join(\\\" \\\"))\\n}\" #>         class: Expression #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: |- #>           { #>             if ($job.inputs.sjdbGTFfile && $job.inputs.quantMode) { #>               return \"--quantMode \".concat($job.inputs.quantMode) #>             } #>           } #>         class: Expression #>     - position: 100 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  function sharedStart(array){\\n  var A= array.concat().sort(), #>           \\n      a1= A[0], a2= A[A.length-1], L= a1.length, i= 0;\\n  while(i<L && #>           a1.charAt(i)=== a2.charAt(i)) i++;\\n  return a1.substring(0, i);\\n  }\\n #>           \\ path_list = []\\n  arr = [].concat($job.inputs.reads)\\n  arr.forEach(function(f){return #>           path_list.push(f.path.replace(/\\\\\\\\/g,'/').replace( /.*\\\\//, '' ))})\\n  common_prefix #>           = sharedStart(path_list)\\n  intermediate = common_prefix.replace( /\\\\-$|\\\\_$|\\\\.$/, #>           '' ).concat(\\\"._STARgenome\\\")\\n  source = \\\"./\\\".concat(intermediate)\\n #>           \\ destination = intermediate.concat(\\\".tar\\\")\\n  if ($job.inputs.sjdbGTFfile #>           && $job.inputs.sjdbInsertSave && $job.inputs.sjdbInsertSave != \\\"None\\\") #>           {\\n    return \\\"&& tar -vcf \\\".concat(destination, \\\" \\\", source)\\n  }\\n}\" #>         class: Expression #>     - position: 0 #>       prefix: --outFileNamePrefix #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  function sharedStart(array){\\n  var A= array.concat().sort(), #>           \\n      a1= A[0], a2= A[A.length-1], L= a1.length, i= 0;\\n  while(i<L && #>           a1.charAt(i)=== a2.charAt(i)) i++;\\n  return a1.substring(0, i);\\n  }\\n #>           \\ path_list = []\\n  arr = [].concat($job.inputs.reads)\\n  arr.forEach(function(f){return #>           path_list.push(f.path.replace(/\\\\\\\\/g,'/').replace( /.*\\\\//, '' ))})\\n  common_prefix #>           = sharedStart(path_list)\\n  return \\\"./\\\".concat(common_prefix.replace( #>           /\\\\-$|\\\\_$|\\\\.$/, '' ), \\\".\\\")\\n}\" #>         class: Expression #>     - position: 101 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  function sharedStart(array){\\n  var A= array.concat().sort(), #>           \\n      a1= A[0], a2= A[A.length-1], L= a1.length, i= 0;\\n  while(i<L && #>           a1.charAt(i)=== a2.charAt(i)) i++;\\n  return a1.substring(0, i);\\n  }\\n #>           \\ path_list = []\\n  arr = [].concat($job.inputs.reads)\\n  arr.forEach(function(f){return #>           path_list.push(f.path.replace(/\\\\\\\\/g,'/').replace( /.*\\\\//, '' ))})\\n  common_prefix #>           = sharedStart(path_list)\\n  mate1 = common_prefix.replace( /\\\\-$|\\\\_$|\\\\.$/, #>           '' ).concat(\\\".Unmapped.out.mate1\\\")\\n  mate2 = common_prefix.replace( /\\\\-$|\\\\_$|\\\\.$/, #>           '' ).concat(\\\".Unmapped.out.mate2\\\")\\n  mate1fq = mate1.concat(\\\".fastq\\\")\\n #>           \\ mate2fq = mate2.concat(\\\".fastq\\\")\\n  if ($job.inputs.outReadsUnmapped #>           == \\\"Fastx\\\" && arr.length > 1) {\\n    return \\\"&& mv \\\".concat(mate1, \\\" #>           \\\", mate1fq, \\\" && mv \\\", mate2, \\\" \\\", mate2fq)\\n  }\\n  else if ($job.inputs.outReadsUnmapped #>           == \\\"Fastx\\\" && arr.length == 1) {\\n    return \\\"&& mv \\\".concat(mate1, #>           \\\" \\\", mate1fq)\\n  }\\n}\" #>         class: Expression #>     stdin: '' #>     stdout: '' #>     successCodes: [] #>     temporaryFailCodes: [] #>     x: 624.0 #>     'y': 323 #>   sbg:x: 700.0 #>   sbg:y: 200.0 #> sbg:canvas_zoom: 0.6 #> sbg:canvas_y: -16 #> sbg:canvas_x: -41 #> sbg:batchInput: '#sjdbGTFfile' #> sbg:batchBy: #>   type: item #>  f1$link_map() #>                                                      id #> 1  #STAR_Genome_Generate.sjdbGTFtagExonParentTranscript #> 2        #STAR_Genome_Generate.sjdbGTFtagExonParentGene #> 3                     #STAR_Genome_Generate.sjdbGTFfile #> 4                #STAR_Genome_Generate.genomeFastaFiles #> 5                     #SBG_FASTQ_Quality_Detector.fastq #> 6                             #Picard_SortSam.input_bam #> 7                           #STAR.winAnchorMultimapNmax #> 8                              #STAR.winAnchorDistNbins #> 9                                     #STAR.sjdbGTFfile #> 10                                          #STAR.reads #> 11                                          #STAR.reads #> 12                                         #STAR.genome #> 13                                         #STAR.genome #> 14                                      #unmapped_reads #> 15                         #transcriptome_aligned_reads #> 16                                    #splice_junctions #> 17                                      #reads_per_gene #> 18                                           #log_files #> 19                                  #chimeric_junctions #> 20                                 #intermediate_genome #> 21                                 #intermediate_genome #> 22                                 #chimeric_alignments #> 23                                          #sorted_bam #> 24                                              #result #> 25                                 #intermediate_genome #> 26                                 #intermediate_genome #>                             source   type #> 1  #sjdbGTFtagExonParentTranscript  input #> 2        #sjdbGTFtagExonParentGene  input #> 3                     #sjdbGTFfile  input #> 4                #genomeFastaFiles  input #> 5                           #fastq  input #> 6              #STAR.aligned_reads  input #> 7           #winAnchorMultimapNmax  input #> 8              #winAnchorDistNbins  input #> 9                     #sjdbGTFfile  input #> 10                          #reads  input #> 11                           test2  input #> 12    #STAR_Genome_Generate.genome  input #> 13                           test1  input #> 14                 #unmapped_reads output #> 15    #transcriptome_aligned_reads output #> 16               #splice_junctions output #> 17                 #reads_per_gene output #> 18                      #log_files output #> 19             #chimeric_junctions output #> 20            #intermediate_genome output #> 21             intermediate_genome output #> 22            #chimeric_alignments output #> 23                     #sorted_bam output #> 24                         #result output #> 25            #intermediate_genome output #> 26             intermediate_genome output"},{"path":"/reference/Handler-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Handler instance — Handler-class","title":"Handler instance — Handler-class","text":"Create Handler instance","code":""},{"path":"/reference/Handler-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Handler instance — Handler-class","text":"Handler object","code":""},{"path":"/reference/Handler-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Handler instance — Handler-class","text":"Used parse R Markdown lift command line interface, Dockerfile, Docker container, cwl json.","code":""},{"path":"/reference/Handler-class.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Handler instance — Handler-class","text":"dockerfileHandler function NULL, handle Dockefile, example, push GitHub. dockerHandler function NULL, handle local docker container, example, push DockerHub. cwlHandler function NULL, handle cwl json file yaml file, example, push SevenBridges platform app.","code":""},{"path":"/reference/Item-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class Item — Item-class","title":"Class Item — Item-class","text":"Class Item","code":""},{"path":"/reference/Item-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Class Item — Item-class","text":"Base class describing set objects: Project, Task, Pipeline, Files, etc.","code":""},{"path":"/reference/Item-class.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Class Item — Item-class","text":"response save raw response request. auth_token propagate auth_token parent. href API href","code":""},{"path":"/reference/Metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Meta schema — misc_make_metadata","title":"Meta schema — misc_make_metadata","text":"Meta schema","code":""},{"path":"/reference/Metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Meta schema — misc_make_metadata","text":"","code":"misc_make_metadata()"},{"path":"/reference/Metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Meta schema — misc_make_metadata","text":"Metadata object","code":""},{"path":"/reference/Metadata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Meta schema — misc_make_metadata","text":"V2 version meta data schema","code":""},{"path":"/reference/Metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Meta schema — misc_make_metadata","text":"","code":"# show schema (you can still provide customized one) # empty beause they are all NULL Metadata() # show schema Metadata()$show(TRUE) #> experimental_strategy :  #> library_id :  #> platform :  #> platform_unit_id :  #> file_segment_number :  #> quality_scale :  #> paired_end :  #> data_format :  #> file_extension :  #> reference_genome :  #> data_type :  #> data_subtype :  #> analysis_uuid :  #> gdc_file_uuid :  #> access_level :  #> investigation :  #> case_id :  #> case_uuid :  #> gender :  #> race :  #> ethnicity :  #> primary_site :  #> disease_type :  #> age_at_diagnosis :  #> vital_status :  #> days_to_death :  #> sample_id :  #> sample_uuid :  #> sample_type :  #> aliquot_id :  #> aliquot_uuid :  # or names(Metadata()$asList(TRUE)) #>  [1] \"experimental_strategy\" \"library_id\"            \"platform\"              #>  [4] \"platform_unit_id\"      \"file_segment_number\"   \"quality_scale\"         #>  [7] \"paired_end\"            \"data_format\"           \"file_extension\"        #> [10] \"reference_genome\"      \"data_type\"             \"data_subtype\"          #> [13] \"analysis_uuid\"         \"gdc_file_uuid\"         \"access_level\"          #> [16] \"investigation\"         \"case_id\"               \"case_uuid\"             #> [19] \"gender\"                \"race\"                  \"ethnicity\"             #> [22] \"primary_site\"          \"disease_type\"          \"age_at_diagnosis\"      #> [25] \"vital_status\"          \"days_to_death\"         \"sample_id\"             #> [28] \"sample_uuid\"           \"sample_type\"           \"aliquot_id\"            #> [31] \"aliquot_uuid\"          # returned meta field is actually define as function too, direclty # call them will give you details platform() #> -- Platform -- #> data : NA #> name : Platform #> description : The version (manufacturer, model, etc.) of the  #>     technology that was used sequencing or assaying.  #>     See NCI Thesaurus Code: C45378. #> category : File #> locked : FALSE #> type :  #> suggested_values : Affymetrix SNP Array 6.0 / Illumina HiSeq / Illumina Human Methylation 450 / Illumina GA / MDA_RPPA_Core / BCR Record / Hospital Record / Illumina Human Methylation 27 / ABI capillary sequencer / AgilentG4502A_07_3 / HG-CGH-244A / HG-CGH-415K_G4124A / CGH-1x1M_G4447A / Illumina MiSeq / HT_HG-U133A / Illumina Human 1M Duo / H-miRNA_8x15Kv2 / Illumina HumanHap550 / H-miRNA_8x15K / AgilentG4502A_07_2 / HuEx-1_0-st-v2 / ABI SOLiD / Complete Genomics / HG-U133_Plus_2 / Illumina DNA Methylation OMA003 CPI / Illumina DNA Methylation OMA002 CPI / AgilentG4502A_07_1 / Ion Torrent PGM / Affymetrix U133 Plus 2 / LS 454 / HiSeq X Ten / Mixed platforms / Illumina / Helicos / PacBio #> regex : ^.{0,128}$ #> regexErrMsg : The Platform can contain maximum 128 characters paired_end() #> -- Paired-end -- #> data : NA #> name : Paired-end #> description : For paired-end sequencing, this value determines the  #>     end of the fragment sequenced. For single-end  #>     sequencing no value is needed. #> category : File #> locked : FALSE #> type :  #> suggested_values : NA / 1 / 2 #> regex :  #> regexErrMsg :  quality_scale() #> -- Quality scale -- #> data : NA #> name : Quality scale #> description : For raw reads, this value denotes the sequencing\" #>     technology and quality format. For BAM and SAM #>     files, this value should always be 'Sanger'. #> category : File #> locked : FALSE #> type :  #> suggested_values : NA / sanger / illumina13 / illumina15 / illumina18 / solexa #> regex :  #> regexErrMsg :  # check their suggested value and construct your metadata Metadata(platform  = \"Affymetrix SNP Array 6.0\", paired_end = 1, quality_scale = \"sanger\") #> platform : Affymetrix SNP Array 6.0 #> quality_scale : sanger #> paired_end : 1"},{"path":"/reference/Parameter.html","id":null,"dir":"Reference","previous_headings":"","what":"Paramter class (reference class) — Parameter-class","title":"Paramter class (reference class) — Parameter-class","text":"Define input output parameter process.","code":""},{"path":"/reference/Parameter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Paramter class (reference class) — Parameter-class","text":"","code":"InputParameterList(...)  OutputParameterList(...)"},{"path":"/reference/Parameter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Paramter class (reference class) — Parameter-class","text":"... element list element.","code":""},{"path":"/reference/Parameter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Paramter class (reference class) — Parameter-class","text":"Parameter object","code":""},{"path":"/reference/Parameter.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Paramter class (reference class) — Parameter-class","text":"type [] Specify valid types data may assigned parameter. label [character] short, human-readable label parameter object. description [character] long, human-readable description parameter object. streamable [logical] Currently applies type File. value true indicates file read written sequentially without seeking. implementation may use flag indicate whether valid stream file contents using named pipe. Default: false. default [] default value parameter provided input object. id (character) unique identifier parameter object. inputBinding [Binding] Describes handle inputs process convert concrete form execution, command line parameters. id (character) unique identifier parameter object.","code":""},{"path":"/reference/Parameter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Paramter class (reference class) — Parameter-class","text":"","code":"Parameter(   type = \"integer\", label = \"thread\",   description = \"Specify the thread #\",   default = 0 ) #> type: #> - integer #> label: thread #> description: 'Specify the thread #' #> streamable: no #> default: 0.0 #>   ipl <- InputParameterList(   InputParameter(     id = \"BAM\", type = \"File\",     label = \"input bam\",     description = \"input bam\",     inputBinding = CommandLineBinding(       position = 1L     )   ),   InputParameter(     id = \"level\", type = \"Integer\",     label = \"Compression level\",     description = \"Compression level\",     inputBinding = CommandLineBinding(       position = 2L,       prefix = \"-l\"     )   ) ) ipl #> [[1]] #> type: #> - File #> label: input bam #> description: input bam #> streamable: no #> id: '#BAM' #> inputBinding: #>   position: 1 #>   separate: yes #>  #> [[2]] #> type: #> - Integer #> label: Compression level #> description: Compression level #> streamable: no #> id: '#level' #> inputBinding: #>   position: 2 #>   prefix: -l #>   separate: yes #>"},{"path":"/reference/Process.html","id":null,"dir":"Reference","previous_headings":"","what":"Process Class — Process-class","title":"Process Class — Process-class","text":"base executable type CWL Process object defined document. Note Process object abstract directly executed.","code":""},{"path":"/reference/Process.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Process Class — Process-class","text":"id [character] unique identifier process object. inputs (InputParameterList) Defines input parameters process. process ready run required input parameters associated concrete values. Input parameters include schema parameter used validate input object, may also used build user interface constructing input object. outputs (OutputParameterList) Defines parameters representing output process. May used generate /validate output object. requirements [ProcessRequirementList] Declares requirements apply either runtime environment workflow engine must met order execute process. implementation satisfy requirements, requirement listed recognized implementation, fatal error implementation must attempt run process, unless overridden user option. hints [] Declares hints applying either runtime environment workflow engine may helpful executing process. error implementation satisfy hints, however implementation may report warning. label [character] short, human-readable label process object. description [character] long, human-readable description process object.","code":""},{"path":"/reference/Process.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process Class — Process-class","text":"","code":"ipl <- InputParameterList(   InputParameter(     id = \"BAM\", type = \"File\",     label = \"input bam\",     description = \"input bam\",     inputBinding = CommandLineBinding(       position = 1L     )   ),   InputParameter(     id = \"level\", type = \"Integer\",     label = \"Compression level\",     description = \"Compression level\",     inputBinding = CommandLineBinding(       position = 2L,       prefix = \"-l\"     )   ) ) ipl #> [[1]] #> type: #> - File #> label: input bam #> description: input bam #> streamable: no #> id: '#BAM' #> inputBinding: #>   position: 1 #>   separate: yes #>  #> [[2]] #> type: #> - Integer #> label: Compression level #> description: Compression level #> streamable: no #> id: '#level' #> inputBinding: #>   position: 2 #>   prefix: -l #>   separate: yes #>  p <- Process(id = \"process\", inputs = ipl) p #> id: '#process' #> inputs: #> - type: #>   - File #>   label: input bam #>   description: input bam #>   streamable: no #>   id: '#BAM' #>   inputBinding: #>     position: 1 #>     separate: yes #> - type: #>   - Integer #>   label: Compression level #>   description: Compression level #>   streamable: no #>   id: '#level' #>   inputBinding: #>     position: 2 #>     prefix: -l #>     separate: yes #> outputs: [] #> requirements: [] #> hints: [] #>"},{"path":"/reference/ProcessRequirement.html","id":null,"dir":"Reference","previous_headings":"","what":"ProcessRequirement Class — ProcessRequirement-class","title":"ProcessRequirement Class — ProcessRequirement-class","text":"ProcessRequirement Class DockerRequirement Class ProcessRequirementList","code":""},{"path":"/reference/ProcessRequirement.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ProcessRequirement Class — ProcessRequirement-class","text":"","code":"FileDefList(...)  EnvironmentDefList(...)  ProcessRequirementList(...)"},{"path":"/reference/ProcessRequirement.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ProcessRequirement Class — ProcessRequirement-class","text":"... element list element.","code":""},{"path":"/reference/ProcessRequirement.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ProcessRequirement Class — ProcessRequirement-class","text":"ProcessRequirement object subclass object.","code":""},{"path":"/reference/ProcessRequirement.html","id":"processrequirement","dir":"Reference","previous_headings":"","what":"ProcessRequirement","title":"ProcessRequirement Class — ProcessRequirement-class","text":"class (character) specific requirement type.","code":""},{"path":"/reference/ProcessRequirement.html","id":"dockerrequirement-class","dir":"Reference","previous_headings":"","what":"DockerRequirement Class","title":"ProcessRequirement Class — ProcessRequirement-class","text":"dockerPull (character) Get Docker image using docker pull dockerLoad (character) Specify HTTP URL download Docker image using docker load. dockerFile (character) Supply contents Dockerfile build using docker build. dockerImageId (character) image id used docker run. May human-readable image name image identifier hash. May skipped dockerPull specified, case dockerPull image id used. dockerOutputDirectory (character) Set designated output directory specific location inside Docker container.","code":""},{"path":"/reference/ProcessRequirement.html","id":"subworkflowfeaturerequirement-class","dir":"Reference","previous_headings":"","what":"SubworkflowFeatureRequirement Class","title":"ProcessRequirement Class — ProcessRequirement-class","text":"Indicates workflow platform must support nested workflows run field (WorkflowStep)(#workflowstep).","code":""},{"path":"/reference/ProcessRequirement.html","id":"filedef-class","dir":"Reference","previous_headings":"","what":"FileDef Class","title":"ProcessRequirement Class — ProcessRequirement-class","text":"filename (characterORExpression) name file create output directory. fileContent (characterORExpression) value string literal expression evalutes string, new file must created string file contents. value expression evaluates File object, indicates referenced file added designated output directory prior executing tool. Files added way may read-, may implemented bind mounts file system links way avoid unecessary copying input file.","code":""},{"path":"/reference/ProcessRequirement.html","id":"createfilerequirement-class","dir":"Reference","previous_headings":"","what":"CreateFileRequirement Class","title":"ProcessRequirement Class — ProcessRequirement-class","text":"fileDef (FileDefList) list files.","code":""},{"path":"/reference/ProcessRequirement.html","id":"environmentdef-class","dir":"Reference","previous_headings":"","what":"EnvironmentDef Class","title":"ProcessRequirement Class — ProcessRequirement-class","text":"envName (character) environment variable name. envValue (characterORExpression) environment variable value.","code":""},{"path":"/reference/ProcessRequirement.html","id":"envvarrequirement-class","dir":"Reference","previous_headings":"","what":"EnvVarRequirement Class","title":"ProcessRequirement Class — ProcessRequirement-class","text":"envDef (EnvironmentDefList) list environment variables.","code":""},{"path":"/reference/ProcessRequirement.html","id":"scatterfeaturerequirement-class","dir":"Reference","previous_headings":"","what":"ScatterFeatureRequirement Class","title":"ProcessRequirement Class — ProcessRequirement-class","text":"Indicates workflow platform must support scatter scatterMethod fields (WorkflowStep)(#workflowstep).","code":""},{"path":"/reference/ProcessRequirement.html","id":"expressionenginerequirement-class","dir":"Reference","previous_headings":"","what":"ExpressionEngineRequirement Class","title":"ProcessRequirement Class — ProcessRequirement-class","text":"id (character) Used identify expression engine engine field Expressions. requirements [ProcessRequirement]Requirements run expression engine, DockerRequirement specifying container engine. engineCommand [character] command line invoke expression engine. engineConfig [character] Additional configuration code fragments also passed expression engine. semantics field defined underlying expression engine. Intended uses providing function definitions called CWL expressions.","code":""},{"path":"/reference/ProcessRequirement.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ProcessRequirement Class — ProcessRequirement-class","text":"","code":"dkr <- DockerRequirement(dockerImageId = \"testid\") cfr <- CreateFileRequirement(fileDef = FileDefList(FileDef(filename = \"hello.txt\"))) sfr <- SubworkflowFeatureRequirement() evr <- EnvVarRequirement(envDef = EnvironmentDefList(   EnvironmentDef(envName = \"path\", envValue = \"testpath\") )) safr <- ScatterFeatureRequirement() eer <- ExpressionEngineRequirement(id = \"hello\") ProcessRequirementList(dkr, cfr, sfr, evr, safr, eer) #> [[1]] #> class: DockerRequirement #> dockerImageId: testid #>  #> [[2]] #> class: CreateFileRequirement #> fileDef: #> - filename: hello.txt #>   fileContent: ~ #>  #> [[3]] #> class: SubworkflowFeatureRequirement #>  #> [[4]] #> class: EnvVarRequirement #> envDef: #> - envName: path #>   envValue: testpath #>  #> [[5]] #> class: ScatterFeatureRequirement #>  #> [[6]] #> class: ExpressionEngineRequirement #> id: hello #> requirements: [] #>"},{"path":"/reference/Schema.html","id":null,"dir":"Reference","previous_headings":"","what":"SchemaList — SchemaList","title":"SchemaList — SchemaList","text":"schema defines parameter type.","code":""},{"path":"/reference/Schema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SchemaList — SchemaList","text":"","code":"SchemaList(...)  SchemaDefList(...)"},{"path":"/reference/Schema.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SchemaList — SchemaList","text":"... element list element.","code":""},{"path":"/reference/Schema.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SchemaList — SchemaList","text":"Schema object sbuclass object.","code":""},{"path":"/reference/Schema.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"SchemaList — SchemaList","text":"type () data type parameter. fields [SchemaList] type record, defines fields record. symbols [character] type enum, defines set valid symbols. items [] type array, defines type array elements. values [] type map, defines value type key/value pairs. inputBinding [Binding] Describes handle value input object convert concrete form execution, command line parameters.","code":""},{"path":"/reference/Schema.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SchemaList — SchemaList","text":"","code":"Schema(fields = SchemaList(SchemaDef(name = \"schema\"))) #> type: #> - '' #> fields: #> - type: #>   - '' #>   fields: [] #>   items: #>     field: items #>     className: ANY #>   values: #>     field: values #>     className: ANY #>   name: schema #> items: #>   field: items #>   className: ANY #> values: #>   field: values #>   className: ANY #>"},{"path":"/reference/TaskHook.html","id":null,"dir":"Reference","previous_headings":"","what":"set task function hook — setTaskHook","title":"set task function hook — setTaskHook","text":"set task function hook according ","code":""},{"path":"/reference/TaskHook.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"set task function hook — setTaskHook","text":"","code":"setTaskHook(   status = c(\"queued\", \"draft\", \"running\", \"completed\", \"aborted\", \"failed\"),   fun )  getTaskHook(   status = c(\"queued\", \"draft\", \"running\", \"completed\", \"aborted\", \"failed\") )"},{"path":"/reference/TaskHook.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"set task function hook — setTaskHook","text":"status one \"queued\", \"draft\", \"running\", \"completed\", \"aborted\", \"failed\". fun function must return TRUE FALSE end function body, TRUE function also terminate monitor process, FALSE, function called, going terminate task monitoring process.","code":""},{"path":"/reference/TaskHook.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"set task function hook — setTaskHook","text":"object setHook getHook.","code":""},{"path":"/reference/TaskHook.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"set task function hook — setTaskHook","text":"","code":"getTaskHook(\"completed\") #> function (...)  #> { #>     cat(\"\\r\", \"completed\") #>     return(TRUE) #> } #> <environment: 0x7fdf47e9e888> setTaskHook(\"completed\", function() {   message(\"completed\")   return(TRUE) })"},{"path":"/reference/Tool-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class Tool — Tool-class","title":"Class Tool — Tool-class","text":"codeTool class extends CommandLineTool seven bridges flabored fields SBG class. obj$toJSON(), obj$toJSON(pretty = TRUE) obj$toYAML() convert Tool object text JSON/YAML file.","code":""},{"path":"/reference/Tool-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Class Tool — Tool-class","text":"Tool object.","code":""},{"path":"/reference/Tool-class.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Class Tool — Tool-class","text":"context [character] default: http://www.commonwl.org/draft-2/ owner [list] list owner names. contributor [list] list contributor names.","code":""},{"path":"/reference/Tool-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class Tool — Tool-class","text":"copy_obj() hack make copy reference cwl object get_input(name = NULL, id = NULL) get input objects names id get_input_port() inputs node sbg:includeInPorts equals TRUE get_output(name = NULL, id = NULL) get output objects names id get_required() return required input fields types, names input id input_id(full = FALSE, requiredOnly = FALSE) Get input id Tool, full = TRUE, connect tool id input id. e.g. requiredOnly = TRUE, return required field . input_matrix(   new.order = c(\"id\", \"label\", \"type\", \"required\", \"prefix\", \"fileTypes\"),   required = NULL ) return matrix input parameters, default, following order id, label, type, required, prefix, fileTypes. new.order accept names column want print, field inputs. set NULL, prints fields. required = TRUE, print required field. input_type() return vector types, names input id output_id(full = FALSE) Get output id Tool, full = TRUE, connect tool id input id. output_matrix(new.order = c(\"id\", \"label\", \"type\", \"fileTypes\")) return matrix output parameters, default, following order id, label, type, fileTypes. new.order accept names column want print, field outputs. set NULL, prints fields. required = TRUE, print required field. output_type() return vector types, names output id run(run_inputs = list(), engine = c(\"bunny\", \"rabix\", \"cwlrun\")) Run tool inputs locally. Engines supported: bunny, rabix, cwlrun. Inputs accept list JSON. set_input_port(ids, include = TRUE) Set inputs ports field sbg:includeInPorts value include, default TRUE. set_required(ids, required = TRUE) Set input node required required. first parameter takes single input id one ids. second parameters required value want set inputs. TRUE means set required.","code":""},{"path":[]},{"path":"/reference/Workflow.html","id":null,"dir":"Reference","previous_headings":"","what":"Workflow — WorkflowOutputParameter-class","title":"Workflow — WorkflowOutputParameter-class","text":"workflow process consisting one steps. step input output parameters defined inputs outputs fields. workflow executes described execution model.","code":""},{"path":"/reference/Workflow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Workflow — WorkflowOutputParameter-class","text":"","code":"WorkflowOutputParameterList(...)"},{"path":"/reference/Workflow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Workflow — WorkflowOutputParameter-class","text":"... element list element.","code":""},{"path":"/reference/Workflow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Workflow — WorkflowOutputParameter-class","text":"Workflow object.","code":""},{"path":"/reference/Workflow.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Workflow — WorkflowOutputParameter-class","text":"outputs (WorkflowOutputParameterList) Defines parameters representing output process. May used generate /validate output object. Inherited Process steps (WorkflowStepList) individual steps make workflow. Steps executed input data links fufilled. implementation may choose execute steps different order listed /execute steps concurrently, provided dependencies steps met.","code":""},{"path":"/reference/Workflow.html","id":"workflowoutputparameter-class","dir":"Reference","previous_headings":"","what":"WorkflowOutputParameter Class","title":"Workflow — WorkflowOutputParameter-class","text":"source [character] Specifies one workflow parameters provide output value. linkMerge [LinkMergeMethod] method use merge multiple inbound links single array. specified, default method merge_nested:","code":""},{"path":"/reference/Workflow.html","id":"dependencies","dir":"Reference","previous_headings":"","what":"Dependencies","title":"Workflow — WorkflowOutputParameter-class","text":"Dependencies parameters expressed using source field workflow step input parameters workflow output parameters. source field expresses dependency one parameter another value associated parameter specified source, value propagated destination parameter. data links inbound given step fufilled, step ready execute.","code":""},{"path":"/reference/Workflow.html","id":"extensions","dir":"Reference","previous_headings":"","what":"Extensions","title":"Workflow — WorkflowOutputParameter-class","text":"ScatterFeatureRequirement SubworkflowFeatureRequirement available standard extensions core workflow semantics.","code":""},{"path":"/reference/Workflow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Workflow — WorkflowOutputParameter-class","text":"","code":"# need better examples here ws <- WorkflowStepList(     WorkflowStep(         id = \"step1\", label = \"align-and-sort\",         description = \"align and sort\",         inputs = WorkflowStepInputList(             WorkflowStepInput(id = \"id1\"),             WorkflowStepInput(id = \"id2\")         )     ) ) Workflow(steps = ws) #> id: '#' #> inputs: [] #> outputs: [] #> requirements: [] #> hints: [] #> class: Workflow #> steps: #> - id: '#step1' #>   inputs: #>   - id: '#id1' #>   - id: '#id2' #>   outputs: [] #>   hints: [] #>   label: align-and-sort #>   description: align and sort #>"},{"path":"/reference/WorkflowStep.html","id":null,"dir":"Reference","previous_headings":"","what":"WorkflowStepInputList — WorkflowStepInput-class","title":"WorkflowStepInputList — WorkflowStepInput-class","text":"workflow step executable element workflow. specifies underlying process implementation (CommandLineTool) run field connects input output parameters underlying process workflow parameters.","code":""},{"path":"/reference/WorkflowStep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"WorkflowStepInputList — WorkflowStepInput-class","text":"","code":"WorkflowStepInputList(...)  WorkflowStepOutputList(...)  WorkflowStepList(...)"},{"path":"/reference/WorkflowStep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"WorkflowStepInputList — WorkflowStepInput-class","text":"... element list element.","code":""},{"path":"/reference/WorkflowStep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"WorkflowStepInputList — WorkflowStepInput-class","text":"WorkflowStep object subclass object.","code":""},{"path":"/reference/WorkflowStep.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"WorkflowStepInputList — WorkflowStepInput-class","text":"id [character] unique identifier workflow step. inputs (WorkflowStepInputList) Defines input parameters workflow step. process ready run required input parameters associated concrete values. Input parameters include schema parameter used validate input object, may also used build user interface constructing input object. outputs (WorkflowStepOutputList) Defines parameters representing output process. May used generate /validate output object. requirements [ProcessRequirement] Declares requirements apply either runtime environment workflow engine must met order execute workflow step. implementation satisfy requirements, requirement listed recognized implementation, fatal error implementation must attempt run process, unless overridden user option. hints [] Declares hints applying either runtime environment workflow engine may helpful executing workflow step. error implementation satisfy hints, however implementation may report warning. label [character] short, human-readable label process object. description [character] long, human-readable description process object. run (CommandLineToolORExpressionToolORWorkflow) Specifies process run. scatter [character] scatterMethod [ScatterMethod] Required scatter array one element.","code":""},{"path":"/reference/WorkflowStep.html","id":"workflowstepinput-class","dir":"Reference","previous_headings":"","what":"WorkflowStepInput Class","title":"WorkflowStepInputList — WorkflowStepInput-class","text":"merge_nested input shall array consisting exactly one entry input link. merge_nested specified single link, value link wrapped single-item list. merge_flattened 1) source sink parameters must compatible types, source type must compatible single element \"items\" type destination array parameter. 2) Source parameters arrays concatenated; source parameters single element types appended single elements. id (character) unique identifier workflow input parameter. source [character] Specifies one workflow parameters provide input underlying process parameter. linkMerge [LineMergeMethod] method use merge multiple inbound links single array. specified, default method merge_nested: default [] default value parameter source field.","code":""},{"path":"/reference/WorkflowStep.html","id":"workflowstepoutput-class","dir":"Reference","previous_headings":"","what":"WorkflowStepOutput Class","title":"WorkflowStepInputList — WorkflowStepInput-class","text":"id (character) unique identifier workflow output parameter. identifier use source field WorkflowStepInput connect output value downstream parameters.","code":""},{"path":"/reference/WorkflowStep.html","id":"scatter-gather","dir":"Reference","previous_headings":"","what":"Scatter/gather","title":"WorkflowStepInputList — WorkflowStepInput-class","text":"use scatter/gather, ScatterFeatureRequirement must specified workflow workflow step requirements. \"scatter\" operation specifies associated workflow step subworkflow execute separately list input elements. job making scatter operaution independent may executed concurrently. scatter field specifies one input parameters scattered. input parameter may listed . declared type input parameter implicitly wrapped array time appears scatter field. result, upstream parameters connected scattered parameters may arrays. output parameters types also implicitly wrapped arrays; job scatter results entry output array. scatter declares one input parameter, scatterMethod describes decompose input discrete set jobs. dotproduct specifies input arrays aligned one element taken array construct job. error input arrays length. nested_crossproductspecifies cartesian product inputs, producing job every combination scattered inputs. output must nested arrays level scattering, order input arrays listed scatter field. flat_crossproductspecifies cartesian product inputs, producing job every combination scattered inputs. output arrays must flattened single level, otherwise listed order input arrays listed scatter field.","code":""},{"path":"/reference/WorkflowStep.html","id":"subworkflows","dir":"Reference","previous_headings":"","what":"Subworkflows","title":"WorkflowStepInputList — WorkflowStepInput-class","text":"specify nested workflow part workflow step, SubworkflowFeatureRequirement must specified workflow workflow step requirements.","code":""},{"path":"/reference/WorkflowStep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"WorkflowStepInputList — WorkflowStepInput-class","text":"","code":"ws <- WorkflowStepList(WorkflowStep(   id = \"step1\", label = \"align-and-sort\",   description = \"align and sort\",   inputs = WorkflowStepInputList(     WorkflowStepInput(id = \"id1\"),     WorkflowStepInput(id = \"id2\")   ) ))"},{"path":"/reference/addIdNum.html","id":null,"dir":"Reference","previous_headings":"","what":"add # prefix to id — addIdNum","title":"add # prefix to id — addIdNum","text":"add # prefix id","code":""},{"path":"/reference/addIdNum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add # prefix to id — addIdNum","text":"","code":"addIdNum(x)"},{"path":"/reference/addIdNum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add # prefix to id — addIdNum","text":"x (character) # .","code":""},{"path":"/reference/addIdNum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"add # prefix to id — addIdNum","text":"character # prefix.","code":""},{"path":"/reference/addIdNum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"add # prefix to id — addIdNum","text":"","code":"addIdNum(c(\"bam\", \"#fastq\")) #>      bam   #fastq  #>   \"#bam\" \"#fastq\""},{"path":"/reference/api.html","id":null,"dir":"Reference","previous_headings":"","what":"Core HTTP logic for Seven Bridges API — api","title":"Core HTTP logic for Seven Bridges API — api","text":"Core HTTP logic Seven Bridges API","code":""},{"path":"/reference/api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Core HTTP logic for Seven Bridges API — api","text":"","code":"api(   token = NULL,   version = \"v2\",   path = NULL,   method = c(\"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"),   query = NULL,   body = list(),   encode = c(\"json\", \"form\", \"multipart\"),   limit = getOption(\"sevenbridges\")$limit,   offset = getOption(\"sevenbridges\")$offset,   advance_access = getOption(\"sevenbridges\")$advance_access,   authorization = FALSE,   fields = NULL,   base_url = paste0(\"https://api.sbgenomics.com/\", version, \"/\"),   ... )"},{"path":"/reference/api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Core HTTP logic for Seven Bridges API — api","text":"token API auth token access_token Seven Bridges single sign-. version API version number, default v2. path path connected base_url. method one \"GET\", \"POST\", \"PUT\", \"Delete\". query Passed httr package GET/POST call. body Passed httr package GET/POST/PUT/DELETE call. encode body named list, encoded? Can one \"json\" (application/json), \"form\" (application/x-www-form-urlencoded), \"multipart\" (multipart/form-data). Default \"json\". \"multipart\", list elements can strings objects created upload_file. \"form\", elements coerced strings escaped, use () prevent double-escaping. \"json\", parameters automatically \"unboxed\" (.e. length 1 vectors converted scalars). preserve length 1 vector vector, wrap (). limit many results return offset point start displaying advance_access Enable advance access features? Default FALSE. authorization Logical. token API auth token (FALSE) access token Seven Bridges single sign-(TRUE)? fields API calls take optional query parameter fields. parameter enables specify fields want returned listing resources (e.g. projects) getting details specific resource (e.g. given project). example, fields=\"id,name,size\" return fields id, name size files. details please check https://docs.sevenbridges.com/docs/-api#section-general-api-information base_url defeault \"https://api.sbgenomics.com/v2\" ... passed GET/POST/PUT/DELETE/PATCH call.","code":""},{"path":"/reference/api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Core HTTP logic for Seven Bridges API — api","text":"returned request list httr","code":""},{"path":"/reference/api.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Core HTTP logic for Seven Bridges API — api","text":"Used advanced users core method higher level API package, please refer easy api vignette additional vignettes pages convenient usage.","code":""},{"path":"/reference/api.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Core HTTP logic for Seven Bridges API — api","text":"https://docs.sevenbridges.com/v1.0/page/api","code":""},{"path":"/reference/api.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Core HTTP logic for Seven Bridges API — api","text":"","code":"token <- \"your_token\" # list projects if (FALSE) { api(token = token, path = \"projects\", method = \"GET\")}"},{"path":"/reference/as-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a object slots/fields to a list, json, or yaml file — asList","title":"Convert a object slots/fields to a list, json, or yaml file — asList","text":"like .list, fields slots converted, prepare object conveted YAML/JSON.","code":""},{"path":"/reference/as-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a object slots/fields to a list, json, or yaml file — asList","text":"","code":"asList(object, ...)  # S4 method for ANY asList(object, ...)  # S4 method for CWL asList(object, ...)  # S4 method for SingleEnum asList(object, ...)  # S4 method for SimpleList asList(object, ...)  # S4 method for DSCList asList(object, ...)"},{"path":"/reference/as-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a object slots/fields to a list, json, or yaml file — asList","text":"object object, S4/R5 object. example, class CWL, SimpleList. ... parameters passed .yaml toJSON.","code":""},{"path":"/reference/as-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a object slots/fields to a list, json, or yaml file — asList","text":"list object json yaml file.","code":""},{"path":"/reference/as-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a object slots/fields to a list, json, or yaml file — asList","text":"","code":"# define a S4 object A <- setClass(\"A\", slots = list(a = \"character\", b = \"numeric\")) # define a reference object which extends 'CWL' class B <- setRefClass(\"B\", fields = list(x = \"character\", y = \"A\"), contains = \"CWL\") # new instances a <- A(a = \"hello\", b = 123) b <- B(x = \"world\", y = a)  # show b #> x: world #> 'y': #>   a: hello #>   b: 123.0 #>  b$show(\"JSON\") #> { #>     \"x\": \"world\", #>     \"y\": { #>         \"a\": \"hello\", #>         \"b\": 123 #>     } #> } #>   b$show(\"YAML\") #> x: world #> 'y': #>   a: hello #>   b: 123.0 #>   # You can convert slots/fields into a list asList(a) #> $a #> [1] \"hello\" #>  #> $b #> [1] 123 #>  asList(b) #> $x #> [x] \"world\" #>  #> $y #> $y$a #> [x] \"hello\" #>  #> $y$b #> [x] 123 #>  #>  b$toList() #> $x #> [x] \"world\" #>  #> $y #> $y$a #> [x] \"hello\" #>  #> $y$b #> [x] 123 #>  #>  b$toYAML() #> [1] \"x: world\\n'y':\\n  a: hello\\n  b: 123.0\\n\" b$toJSON() #> {\"x\":\"world\",\"y\":{\"a\":\"hello\",\"b\":123}}"},{"path":"/reference/batch.html","id":null,"dir":"Reference","previous_headings":"","what":"batch function for task batch execution — batch","title":"batch function for task batch execution — batch","text":"batch function task batch execution","code":""},{"path":"/reference/batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"batch function for task batch execution — batch","text":"","code":"batch(input = NULL, criteria = NULL, type = c(\"ITEM\", \"CRITERIA\"))"},{"path":"/reference/batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"batch function for task batch execution — batch","text":"input character, ID input wish batch . usually batch input containing list files. left , default batching criteria defined app used. criteria character vector, example. c(\"metadata.sample_id\", \"metadata.library_id\"). meaning batch_by dictionary - group inputs (usually files) first sample ID library ID. NULL, using type \"ITEM\" default. type Criteria batch - can two formats.\"ITEM\" \"CRITERIA\". wish batch per item input (usually file) using \"ITEM\". wish complex criteria, specify \"CRITERIA\" wish group inputs . Please check examples.","code":""},{"path":"/reference/batch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"batch function for task batch execution — batch","text":"list 'batch_input' 'batch_by' used task batch","code":""},{"path":"/reference/batch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"batch function for task batch execution — batch","text":"","code":"batch(input = \"fastq\") # by ITEM #> $batch_input #> [1] \"fastq\" #>  #> $batch_by #> $batch_by$type #> [1] \"ITEM\" #>  #>  batch(input = \"fastq\", c(\"metadata.sample_id\", \"metadata.library_id\")) #> criteria provided, convert type from ITEM to CRITERIA #> $batch_input #> [1] \"fastq\" #>  #> $batch_by #> $batch_by$type #> [1] \"CRITERIA\" #>  #> $batch_by$criteria #> [1] \"metadata.sample_id\"  \"metadata.library_id\" #>  #>  # shorthand for this batch(input = \"fastq\", c(\"metadata.sample_id\", \"metadata.library_id\"), type = \"CRITERIA\") #> $batch_input #> [1] \"fastq\" #>  #> $batch_by #> $batch_by$type #> [1] \"CRITERIA\" #>  #> $batch_by$criteria #> [1] \"metadata.sample_id\"  \"metadata.library_id\" #>  #>"},{"path":"/reference/cli_list_projects.html","id":null,"dir":"Reference","previous_headings":"","what":"List projects using Seven Bridges command line uploader — cli_list_projects","title":"List projects using Seven Bridges command line uploader — cli_list_projects","text":"List projects available upload targets using Seven Bridges command line uploader.","code":""},{"path":"/reference/cli_list_projects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List projects using Seven Bridges command line uploader — cli_list_projects","text":"","code":"cli_list_projects(token = NULL, uploader = NULL, proxy = NULL)"},{"path":"/reference/cli_list_projects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List projects using Seven Bridges command line uploader — cli_list_projects","text":"token Authentication token. uploader directory Seven Bridges command line uploader located (directory contains bin/ directory). proxy proxy server uploader connect. details proxy parameter format, see part parameter --proxy reference .","code":""},{"path":"/reference/cli_list_projects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List projects using Seven Bridges command line uploader — cli_list_projects","text":"Character vector available project names.","code":""},{"path":"/reference/cli_list_projects.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"List projects using Seven Bridges command line uploader — cli_list_projects","text":"https://docs.sevenbridges.com/docs/upload-via--command-line","code":""},{"path":[]},{"path":"/reference/cli_list_projects.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List projects using Seven Bridges command line uploader — cli_list_projects","text":"","code":"token <- \"your_token\" if (FALSE) { cli_list_projects(   token = token,   uploader = \"~/Downloads/sbg-uploader/\" )}"},{"path":"/reference/cli_list_tags.html","id":null,"dir":"Reference","previous_headings":"","what":"List all the tags in project using Seven Bridges command line uploader — cli_list_tags","title":"List all the tags in project using Seven Bridges command line uploader — cli_list_tags","text":"List tags destination project using Seven Bridges command line uploader.","code":""},{"path":"/reference/cli_list_tags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all the tags in project using Seven Bridges command line uploader — cli_list_tags","text":"","code":"cli_list_tags(token = NULL, uploader = NULL, project = NULL, proxy = NULL)"},{"path":"/reference/cli_list_tags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List all the tags in project using Seven Bridges command line uploader — cli_list_tags","text":"token Authentication token. uploader directory Seven Bridges command line uploader located (directory contains bin/ directory). project Unique identifier project, example, \"username/project-name\". proxy proxy server uploader connect. details proxy parameter format, see part parameter --proxy reference .","code":""},{"path":"/reference/cli_list_tags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List all the tags in project using Seven Bridges command line uploader — cli_list_tags","text":"Chracter vector file tags project.","code":""},{"path":"/reference/cli_list_tags.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"List all the tags in project using Seven Bridges command line uploader — cli_list_tags","text":"https://docs.sevenbridges.com/docs/upload-via--command-line","code":""},{"path":[]},{"path":"/reference/cli_list_tags.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List all the tags in project using Seven Bridges command line uploader — cli_list_tags","text":"","code":"token <- \"your_token\" if (FALSE) { cli_list_tags(   token = token,   uploader = \"~/Downloads/sbg-uploader/\",   project = \"username/project-name\" )}"},{"path":"/reference/cli_upload.html","id":null,"dir":"Reference","previous_headings":"","what":"Upload files using Seven Bridges command line uploader — cli_upload","title":"Upload files using Seven Bridges command line uploader — cli_upload","text":"Upload files using Seven Bridges command line uploader.","code":""},{"path":"/reference/cli_upload.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upload files using Seven Bridges command line uploader — cli_upload","text":"","code":"cli_upload(   token = NULL,   uploader = NULL,   file = NULL,   project = NULL,   proxy = NULL,   tag = NULL,   manifest_file = NULL,   manifest_metadata = c(\"all\", \"none\", \"partial\"),   metadata_fields = NULL,   dry_run = FALSE,   dry_run_fields = NULL )  misc_upload_cli()"},{"path":"/reference/cli_upload.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upload files using Seven Bridges command line uploader — cli_upload","text":"token Authentication token. uploader directory command line uploader located (directory contains bin/ directory). file location (single) file upload. upload multiple files, please use manifest_file specify. project project identifier (e.g. username/project-name) upload files . option mandatory. upload files project, must member project must write permission granted project administrator. proxy proxy server uploader connect. details proxy parameter format, see part parameter --proxy reference . tag Tags files (optional). Use vector character strings, instance, c(\"tag one\", \"second tag\"). manifest_file Location manifest file (uploading multiple files metadata). See reference URL format manifest file. manifest_metadata use , none, part metadata fields included manifest file? Default \"\". metadata_fields Character vector, metadata fields use manifest file. specified manifest_metadata = \"partial\". dry_run just output data check settings without uploading anything? Default FALSE. dry_run_fields Character vector, specific metadata fields output information dry_run = TRUE.","code":""},{"path":"/reference/cli_upload.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upload files using Seven Bridges command line uploader — cli_upload","text":"uploaded file's ID number.","code":""},{"path":"/reference/cli_upload.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Upload files using Seven Bridges command line uploader — cli_upload","text":"use command line uploader, Java 1.7 newer installed. See reference link details.","code":""},{"path":"/reference/cli_upload.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Upload files using Seven Bridges command line uploader — cli_upload","text":"Seven Bridges Command Line Uploader: https://docs.sevenbridges.com/docs/upload-via--command-line Manifest file format: https://docs.sevenbridges.com/docs/format---manifest-file","code":""},{"path":[]},{"path":"/reference/cli_upload.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upload files using Seven Bridges command line uploader — cli_upload","text":"","code":"token <- \"your_token\" if (FALSE) { cli_upload(   token = token,   uploader = \"~/Downloads/cgc-uploader/\",   file = \"~/example.fastq\", project = \"username/project-name\" )}"},{"path":"/reference/convert_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert App or a CWL JSON file to Tool or Flow object — convert_app","title":"Convert App or a CWL JSON file to Tool or Flow object — convert_app","text":"Convert App CWL JSON file Tool Flow object","code":""},{"path":"/reference/convert_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert App or a CWL JSON file to Tool or Flow object — convert_app","text":"","code":"convert_app(from)  appType(x)"},{"path":"/reference/convert_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert App or a CWL JSON file to Tool or Flow object — convert_app","text":"App object CWL JSON x App object","code":""},{"path":"/reference/convert_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert App or a CWL JSON file to Tool or Flow object — convert_app","text":"Tool Flow object depends CWL type.","code":""},{"path":"/reference/convert_app.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert App or a CWL JSON file to Tool or Flow object — convert_app","text":"function import CWL JSON file, based class: CommandLineTool Worklfow relevant object R, Tool object Flow object.","code":""},{"path":[]},{"path":"/reference/convert_app.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert App or a CWL JSON file to Tool or Flow object — convert_app","text":"","code":"tool.in <- system.file(\"extdata/app\", \"tool_star.json\", package = \"sevenbridges\") flow.in <- system.file(\"extdata/app\", \"flow_star.json\", package = \"sevenbridges\") # convert to Tool object convert_app(tool.in) #> sbg:validationErrors: [] #> sbg:sbgMaintained: no #> sbg:latestRevision: 4 #> sbg:job: #>   allocatedResources: #>     mem: 60000 #>     cpu: 15 #>   inputs: #>     alignWindowsPerReadNmax: 0 #>     outSAMheaderPG: outSAMheaderPG #>     GENOME_DIR_NAME: '' #>     outFilterMatchNminOverLread: 0 #>     rg_platform_unit_id: rg_platform_unit #>     readMapNumber: 0 #>     alignSplicedMateMapLminOverLmate: 0 #>     alignMatesGapMax: 0 #>     outFilterMultimapNmax: 0 #>     clip5pNbases: #>     - 0 #>     outSAMstrandField: None #>     readMatesLengthsIn: NotEqual #>     outSAMattributes: Standard #>     seedMultimapNmax: 0 #>     rg_mfl: rg_mfl #>     chimSegmentMin: 0 #>     winAnchorDistNbins: 0 #>     outSortingType: SortedByCoordinate #>     outFilterMultimapScoreRange: 0 #>     sjdbInsertSave: Basic #>     clip3pAfterAdapterNbases: #>     - 0 #>     twopassMode: Basic #>     outFilterMatchNmin: 0 #>     twopass1readsN: 0 #>     outSAMunmapped: None #>     genome: #>       size: 0 #>       secondaryFiles: [] #>       class: File #>       path: genome.ext #>     sjdbGTFtagExonParentTranscript: '' #>     limitBAMsortRAM: 0 #>     alignEndsType: Local #>     seedNoneLociPerWindow: 0 #>     rg_sample_id: rg_sample #>     sjdbGTFtagExonParentGene: '' #>     chimScoreMin: 0 #>     outSJfilterIntronMaxVsReadN: #>     - 0 #>     alignSplicedMateMapLmin: 0 #>     seedSearchStartLmaxOverLread: 0 #>     outSJfilterCountTotalMin: #>     - 3 #>     - 1 #>     - 1 #>     - 1 #>     outSAMorder: Paired #>     outSAMflagAND: 0 #>     scoreDelBase: 0 #>     alignIntronMax: 0 #>     alignSJoverhangMin: 0 #>     outFilterScoreMin: 0 #>     outSAMtype: BAM #>     seedSearchStartLmax: 0 #>     scoreGapGCAG: 0 #>     scoreGenomicLengthLog2scale: 0 #>     outFilterIntronMotifs: None #>     quantTranscriptomeBan: IndelSoftclipSingleend #>     reads: #>     - size: 0 #>       secondaryFiles: [] #>       class: File #>       metadata: #>         format: fastq #>         paired_end: '1' #>         seq_center: illumina #>       path: /test-data/mate_1.fastq.bz2 #>     scoreGap: 0 #>     outSJfilterOverhangMin: #>     - 30 #>     - 12 #>     - 12 #>     - 12 #>     outSAMflagOR: 0 #>     outSAMmode: Full #>     sjdbScore: ~ #>     winFlankNbins: 0 #>     chimScoreJunctionNonGTAG: 0 #>     clip3pAdapterSeq: #>     - clip3pAdapterSeq #>     chimScoreDropMax: 0 #>     scoreGapATAC: 0 #>     rg_platform: Ion Torrent PGM #>     clip3pAdapterMMp: #>     - 0 #>     sjdbGTFfeatureExon: '' #>     outQSconversionAdd: 0 #>     alignSoftClipAtReferenceEnds: 'Yes' #>     quantMode: TranscriptomeSAM #>     alignIntronMin: 0 #>     scoreInsBase: 0 #>     outSAMreadID: Standard #>     scoreGapNoncan: 0 #>     seedSearchLmax: 0 #>     outSJfilterDistToOtherSJmin: #>     - 0 #>     outFilterScoreMinOverLread: 0 #>     alignSJDBoverhangMin: 0 #>     limitOutSJcollapsed: 0 #>     winAnchorMultimapNmax: 0 #>     outFilterMismatchNoverLmax: 0 #>     rg_seq_center: '' #>     outSAMheaderHD: outSAMheaderHD #>     chimOutType: Within #>     outFilterMismatchNmax: 0 #>     limitOutSJoneRead: 0 #>     alignTranscriptsPerWindowNmax: 0 #>     sjdbOverhang: ~ #>     outReadsUnmapped: Fastx #>     scoreStitchSJshift: 0 #>     seedPerWindowNmax: 0 #>     outSJfilterCountUniqueMin: #>     - 3 #>     - 1 #>     - 1 #>     - 1 #>     scoreDelOpen: 0 #>     sjdbGTFfile: #>     - path: /demo/test-data/chr20.gtf #>     clip3pNbases: #>     - 0 #>     - 3 #>     winBinNbits: 0 #>     outFilterType: Normal #>     outSJfilterReads: All #>     chimScoreSeparation: 0 #>     seedPerReadNmax: 0 #>     outFilterMismatchNoverReadLmax: 0 #>     rg_library_id: '' #>     sjdbGTFchrPrefix: chrPrefix #>     outSAMprimaryFlag: OneBestScore #>     alignTranscriptsPerReadNmax: 0 #>     scoreInsOpen: 0 #>     chimJunctionOverhangMin: 0 #>     limitSjdbInsertNsj: 0 #>     outSAMmapqUnique: 0 #> sbg:toolAuthor: Alexander Dobin/CSHL #> sbg:createdOn: 1453799778 #> sbg:categories: #> - Alignment #> sbg:contributors: #> - sevenbridges #> sbg:links: #> - id: https://github.com/alexdobin/STAR #>   label: Homepage #> - id: https://github.com/alexdobin/STAR/releases #>   label: Releases #> - id: https://github.com/alexdobin/STAR/blob/master/doc/STARmanual.pdf #>   label: Manual #> - id: https://groups.google.com/forum/#!forum/rna-star #>   label: Support #> - id: http://www.ncbi.nlm.nih.gov/pubmed/23104886 #>   label: Publication #> sbg:project: sevenbridges/public-apps #> sbg:createdBy: sevenbridges #> sbg:toolkitVersion: 2.4.2a #> sbg:id: https://api.sbgenomics.com/v2/apps/sevenbridges/public-apps/star/4/raw/ #> sbg:license: GNU General Public License v3.0 only #> sbg:revision: 4 #> sbg:cmdPreview: tar -xvf genome.ext && /opt/STAR --runThreadN 15  --readFilesCommand #>   bzcat  --sjdbGTFfile /demo/test-data/chr20.gtf  --sjdbGTFchrPrefix chrPrefix --sjdbInsertSave #>   Basic  --twopass1readsN 0  --chimOutType WithinBAM  --outSAMattrRGline ID:1 CN:illumina #>   PI:rg_mfl PL:Ion_Torrent_PGM PU:rg_platform_unit SM:rg_sample  --quantMode TranscriptomeSAM #>   --outFileNamePrefix ./mate_1.fastq.bz2.  --readFilesIn /test-data/mate_1.fastq.bz2  && #>   tar -vcf mate_1.fastq.bz2._STARgenome.tar ./mate_1.fastq.bz2._STARgenome  && mv #>   mate_1.fastq.bz2.Unmapped.out.mate1 mate_1.fastq.bz2.Unmapped.out.mate1.fastq #> sbg:modifiedOn: 1462904151 #> sbg:modifiedBy: sevenbridges #> sbg:revisionsInfo: #> - sbg:modifiedBy: sevenbridges #>   sbg:modifiedOn: 1453799778 #>   sbg:revision: 0 #> - sbg:modifiedBy: sevenbridges #>   sbg:modifiedOn: 1453799780 #>   sbg:revision: 1 #> - sbg:modifiedBy: sevenbridges #>   sbg:modifiedOn: 1453799782 #>   sbg:revision: 2 #> - sbg:modifiedBy: sevenbridges #>   sbg:modifiedOn: 1462904151 #>   sbg:revision: 3 #> - sbg:modifiedBy: sevenbridges #>   sbg:modifiedOn: 1462904151 #>   sbg:revision: 4 #> sbg:toolkit: STAR #> id: https://api.sbgenomics.com/v2/apps/sevenbridges/public-apps/star/4/raw/ #> inputs: #> - type: #>   - items: File #>     type: array #>   label: Read sequence #>   description: Read sequence. #>   streamable: no #>   id: '#reads' #>   inputBinding: #>     position: 10 #>     separate: yes #>     itemSeparator: ' ' #>     valueFrom: #>       engine: '#cwl-js-engine' #>       script: \"{\\t\\n  var list = [].concat($job.inputs.reads)\\n  \\n  var resp = []\\n #>         \\ \\n  if (list.length == 1){\\n    resp.push(list[0].path)\\n    \\n  }else if #>         (list.length == 2){    \\n    \\n    left = \\\"\\\"\\n    right = \\\"\\\"\\n      \\n #>         \\   for (index = 0; index < list.length; ++index) {\\n      \\n      if (list[index].metadata #>         != null){\\n        if (list[index].metadata.paired_end == 1){\\n          left #>         = list[index].path\\n        }else if (list[index].metadata.paired_end == 2){\\n #>         \\         right = list[index].path\\n        }\\n      }\\n    }\\n    \\n    if #>         (left != \\\"\\\" && right != \\\"\\\"){      \\n      resp.push(left)\\n      resp.push(right)\\n #>         \\   }\\n  }\\n  else if (list.length > 2){\\n    left = []\\n    right = []\\n #>         \\     \\n    for (index = 0; index < list.length; ++index) {\\n      \\n      if #>         (list[index].metadata != null){\\n        if (list[index].metadata.paired_end #>         == 1){\\n          left.push(list[index].path)\\n        }else if (list[index].metadata.paired_end #>         == 2){\\n          right.push(list[index].path)\\n        }\\n      }\\n    }\\n #>         \\   left_join = left.join()\\n    right_join = right.join()\\n    if (left != #>         [] && right != []){      \\n      resp.push(left_join)\\n      resp.push(right_join)\\n #>         \\   }\\t\\n  }\\n  \\n  if(resp.length > 0){    \\n    return \\\"--readFilesIn \\\".concat(resp.join(\\\" #>         \\\"))\\n  }\\n}\" #>       class: Expression #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Basic #>   sbg:fileTypes: FASTA, FASTQ, FA, FQ, FASTQ.GZ, FQ.GZ, FASTQ.BZ2, FQ.BZ2 #>   required: yes #> - type: #>   - 'null' #>   - name: readMatesLengthsIn #>     symbols: #>     - NotEqual #>     - Equal #>     type: enum #>   label: Reads lengths #>   description: Equal/Not equal - lengths of names, sequences, qualities for both mates #>     are the same/not the same. \"Not equal\" is safe in all situations. #>   streamable: no #>   id: '#readMatesLengthsIn' #>   inputBinding: #>     position: 0 #>     prefix: --readMatesLengthsIn #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Read parameters #>   sbg:toolDefaultValue: NotEqual #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Reads to map #>   description: Number of reads to map from the beginning of the file. #>   streamable: no #>   id: '#readMapNumber' #>   inputBinding: #>     position: 0 #>     prefix: --readMapNumber #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Read parameters #>   sbg:toolDefaultValue: '-1' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Junctions max number #>   description: Max number of junctions for one read (including all multi-mappers). #>   streamable: no #>   id: '#limitOutSJoneRead' #>   inputBinding: #>     position: 0 #>     prefix: --limitOutSJoneRead #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Limits #>   sbg:toolDefaultValue: '1000' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Collapsed junctions max number #>   description: Max number of collapsed junctions. #>   streamable: no #>   id: '#limitOutSJcollapsed' #>   inputBinding: #>     position: 0 #>     prefix: --limitOutSJcollapsed #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Limits #>   sbg:toolDefaultValue: '1000000' #>   required: no #> - type: #>   - 'null' #>   - name: outReadsUnmapped #>     symbols: #>     - None #>     - Fastx #>     type: enum #>   label: Output unmapped reads #>   description: 'Output of unmapped reads (besides SAM). None: no output; Fastx: output #>     in separate fasta/fastq files, Unmapped.out.mate1/2.' #>   streamable: no #>   id: '#outReadsUnmapped' #>   inputBinding: #>     position: 0 #>     prefix: --outReadsUnmapped #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output #>   sbg:toolDefaultValue: None #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Quality conversion #>   description: Add this number to the quality score (e.g. to convert from Illumina #>     to Sanger, use -31). #>   streamable: no #>   id: '#outQSconversionAdd' #>   inputBinding: #>     position: 0 #>     prefix: --outQSconversionAdd #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output #>   sbg:toolDefaultValue: '0' #>   required: no #> - type: #>   - 'null' #>   - name: outSAMtype #>     symbols: #>     - SAM #>     - BAM #>     type: enum #>   label: Output format #>   description: Format of output alignments. #>   streamable: no #>   id: '#outSAMtype' #>   inputBinding: #>     position: 0 #>     separate: yes #>     valueFrom: #>       engine: '#cwl-js-engine' #>       script: |- #>         { #>           SAM_type = $job.inputs.outSAMtype #>           SORT_type = $job.inputs.outSortingType #>           if (SAM_type && SORT_type) { #>             return \"--outSAMtype \".concat(SAM_type, \" \", SORT_type) #>           } #>         } #>       class: Expression #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output #>   sbg:toolDefaultValue: SAM #>   required: no #> - type: #>   - 'null' #>   - name: outSortingType #>     symbols: #>     - Unsorted #>     - SortedByCoordinate #>     - Unsorted SortedByCoordinate #>     type: enum #>   label: Output sorting type #>   description: Type of output sorting. #>   streamable: no #>   id: '#outSortingType' #>   sbg:category: Output #>   sbg:toolDefaultValue: SortedByCoordinate #>   required: no #> - type: #>   - 'null' #>   - name: outSAMmode #>     symbols: #>     - Full #>     - NoQS #>     type: enum #>   label: SAM mode #>   description: 'Mode of SAM output. Full: full SAM output; NoQS: full SAM but without #>     quality scores.' #>   streamable: no #>   id: '#outSAMmode' #>   inputBinding: #>     position: 0 #>     prefix: --outSAMmode #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output #>   sbg:toolDefaultValue: Full #>   required: no #> - type: #>   - 'null' #>   - name: outSAMstrandField #>     symbols: #>     - None #>     - intronMotif #>     type: enum #>   label: Strand field flag #>   description: 'Cufflinks-like strand field flag. None: not used; intronMotif: strand #>     derived from the intron motif. Reads with inconsistent and/or non-canonical introns #>     are filtered out.' #>   streamable: no #>   id: '#outSAMstrandField' #>   inputBinding: #>     position: 0 #>     prefix: --outSAMstrandField #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output #>   sbg:toolDefaultValue: None #>   required: no #> - type: #>   - 'null' #>   - name: outSAMattributes #>     symbols: #>     - Standard #>     - NH #>     - All #>     - None #>     type: enum #>   label: SAM attributes #>   description: 'Desired SAM attributes, in the order desired for the output SAM. NH: #>     any combination in any order; Standard: NH HI AS nM; All: NH HI AS nM NM MD jM #>     jI; None: no attributes.' #>   streamable: no #>   id: '#outSAMattributes' #>   inputBinding: #>     position: 0 #>     prefix: --outSAMattributes #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output #>   sbg:toolDefaultValue: Standard #>   required: no #> - type: #>   - 'null' #>   - name: outSAMunmapped #>     symbols: #>     - None #>     - Within #>     type: enum #>   label: Write unmapped in SAM #>   description: 'Output of unmapped reads in the SAM format. None: no output Within: #>     output unmapped reads within the main SAM file (i.e. Aligned.out.sam).' #>   streamable: no #>   id: '#outSAMunmapped' #>   inputBinding: #>     position: 0 #>     prefix: --outSAMunmapped #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output #>   sbg:toolDefaultValue: None #>   required: no #> - type: #>   - 'null' #>   - name: outSAMorder #>     symbols: #>     - Paired #>     - PairedKeepInputOrder #>     type: enum #>   label: Sorting in SAM #>   description: 'Type of sorting for the SAM output. Paired: one mate after the other #>     for all paired alignments; PairedKeepInputOrder: one mate after the other for #>     all paired alignments, the order is kept the same as in the input FASTQ files.' #>   streamable: no #>   id: '#outSAMorder' #>   inputBinding: #>     position: 0 #>     prefix: --outSAMorder #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output #>   sbg:toolDefaultValue: Paired #>   required: no #> - type: #>   - 'null' #>   - name: outSAMprimaryFlag #>     symbols: #>     - OneBestScore #>     - AllBestScore #>     type: enum #>   label: Primary alignments #>   description: 'Which alignments are considered primary - all others will be marked #>     with 0x100 bit in the FLAG. OneBestScore: only one alignment with the best score #>     is primary; AllBestScore: all alignments with the best score are primary.' #>   streamable: no #>   id: '#outSAMprimaryFlag' #>   inputBinding: #>     position: 0 #>     prefix: --outSAMprimaryFlag #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output #>   sbg:toolDefaultValue: OneBestScore #>   required: no #> - type: #>   - 'null' #>   - name: outSAMreadID #>     symbols: #>     - Standard #>     - Number #>     type: enum #>   label: Read ID #>   description: 'Read ID record type. Standard: first word (until space) from the FASTx #>     read ID line, removing /1,/2 from the end; Number: read number (index) in the #>     FASTx file.' #>   streamable: no #>   id: '#outSAMreadID' #>   inputBinding: #>     position: 0 #>     prefix: --outSAMreadID #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output #>   sbg:toolDefaultValue: Standard #>   required: no #> - type: #>   - 'null' #>   - int #>   label: MAPQ value #>   description: MAPQ value for unique mappers (0 to 255). #>   streamable: no #>   id: '#outSAMmapqUnique' #>   inputBinding: #>     position: 0 #>     prefix: --outSAMmapqUnique #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output #>   sbg:toolDefaultValue: '255' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: OR SAM flag #>   description: Set specific bits of the SAM FLAG. #>   streamable: no #>   id: '#outSAMflagOR' #>   inputBinding: #>     position: 0 #>     prefix: --outSAMflagOR #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output #>   sbg:toolDefaultValue: '0' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: AND SAM flag #>   description: Set specific bits of the SAM FLAG. #>   streamable: no #>   id: '#outSAMflagAND' #>   inputBinding: #>     position: 0 #>     prefix: --outSAMflagAND #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output #>   sbg:toolDefaultValue: '65535' #>   required: no #> - type: #>   - 'null' #>   - string #>   label: SAM header @HD #>   description: '@HD (header) line of the SAM header.' #>   streamable: no #>   id: '#outSAMheaderHD' #>   inputBinding: #>     position: 0 #>     prefix: --outSAMheaderHD #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output #>   sbg:toolDefaultValue: '-' #>   required: no #> - type: #>   - 'null' #>   - string #>   label: SAM header @PG #>   description: Extra @PG (software) line of the SAM header (in addition to STAR). #>   streamable: no #>   id: '#outSAMheaderPG' #>   inputBinding: #>     position: 0 #>     prefix: --outSAMheaderPG #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output #>   sbg:toolDefaultValue: '-' #>   required: no #> - type: #>   - 'null' #>   - string #>   label: Sequencing center #>   description: Specify the sequencing center for RG line. #>   streamable: no #>   id: '#rg_seq_center' #>   sbg:category: Read group #>   sbg:toolDefaultValue: Inferred from metadata #>   required: no #> - type: #>   - 'null' #>   - string #>   label: Library ID #>   description: Specify the library ID for RG line. #>   streamable: no #>   id: '#rg_library_id' #>   sbg:category: Read group #>   sbg:toolDefaultValue: Inferred from metadata #>   required: no #> - type: #>   - 'null' #>   - string #>   label: Median fragment length #>   description: Specify the median fragment length for RG line. #>   streamable: no #>   id: '#rg_mfl' #>   sbg:category: Read group #>   sbg:toolDefaultValue: Inferred from metadata #>   required: no #> - type: #>   - 'null' #>   - name: rg_platform #>     symbols: #>     - LS 454 #>     - Helicos #>     - Illumina #>     - ABI SOLiD #>     - Ion Torrent PGM #>     - PacBio #>     type: enum #>   label: Platform #>   description: Specify the version of the technology that was used for sequencing #>     or assaying. #>   streamable: no #>   id: '#rg_platform' #>   sbg:category: Read group #>   sbg:toolDefaultValue: Inferred from metadata #>   required: no #> - type: #>   - 'null' #>   - string #>   label: Platform unit ID #>   description: Specify the platform unit ID for RG line. #>   streamable: no #>   id: '#rg_platform_unit_id' #>   sbg:category: Read group #>   sbg:toolDefaultValue: Inferred from metadata #>   required: no #> - type: #>   - 'null' #>   - string #>   label: Sample ID #>   description: Specify the sample ID for RG line. #>   streamable: no #>   id: '#rg_sample_id' #>   sbg:category: Read group #>   sbg:toolDefaultValue: Inferred from metadata #>   required: no #> - type: #>   - 'null' #>   - name: outFilterType #>     symbols: #>     - Normal #>     - BySJout #>     type: enum #>   label: Filtering type #>   description: 'Type of filtering. Normal: standard filtering using only current alignment; #>     BySJout: keep only those reads that contain junctions that passed filtering into #>     SJ.out.tab.' #>   streamable: no #>   id: '#outFilterType' #>   inputBinding: #>     position: 0 #>     prefix: --outFilterType #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output filtering #>   sbg:toolDefaultValue: Normal #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Multimapping score range #>   description: The score range below the maximum score for multimapping alignments. #>   streamable: no #>   id: '#outFilterMultimapScoreRange' #>   inputBinding: #>     position: 0 #>     prefix: --outFilterMultimapScoreRange #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output filtering #>   sbg:toolDefaultValue: '1' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max number of mappings #>   description: Read alignments will be output only if the read maps fewer than this #>     value, otherwise no alignments will be output. #>   streamable: no #>   id: '#outFilterMultimapNmax' #>   inputBinding: #>     position: 0 #>     prefix: --outFilterMultimapNmax #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output filtering #>   sbg:toolDefaultValue: '10' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max number of mismatches #>   description: Alignment will be output only if it has fewer mismatches than this #>     value. #>   streamable: no #>   id: '#outFilterMismatchNmax' #>   inputBinding: #>     position: 0 #>     prefix: --outFilterMismatchNmax #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output filtering #>   sbg:toolDefaultValue: '10' #>   required: no #> - type: #>   - 'null' #>   - float #>   label: Mismatches to *mapped* length #>   description: Alignment will be output only if its ratio of mismatches to *mapped* #>     length is less than this value. #>   streamable: no #>   id: '#outFilterMismatchNoverLmax' #>   inputBinding: #>     position: 0 #>     prefix: --outFilterMismatchNoverLmax #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output filtering #>   sbg:toolDefaultValue: '0.3' #>   required: no #> - type: #>   - 'null' #>   - float #>   label: Mismatches to *read* length #>   description: Alignment will be output only if its ratio of mismatches to *read* #>     length is less than this value. #>   streamable: no #>   id: '#outFilterMismatchNoverReadLmax' #>   inputBinding: #>     position: 0 #>     prefix: --outFilterMismatchNoverReadLmax #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output filtering #>   sbg:toolDefaultValue: '1' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Min score #>   description: Alignment will be output only if its score is higher than this value. #>   streamable: no #>   id: '#outFilterScoreMin' #>   inputBinding: #>     position: 0 #>     prefix: --outFilterScoreMin #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output filtering #>   sbg:toolDefaultValue: '0' #>   required: no #> - type: #>   - 'null' #>   - float #>   label: Min score normalized #>   description: '''Minimum score'' normalized to read length (sum of mates'' lengths #>     for paired-end reads).' #>   streamable: no #>   id: '#outFilterScoreMinOverLread' #>   inputBinding: #>     position: 0 #>     prefix: --outFilterScoreMinOverLread #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output filtering #>   sbg:toolDefaultValue: '0.66' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Min matched bases #>   description: Alignment will be output only if the number of matched bases is higher #>     than this value. #>   streamable: no #>   id: '#outFilterMatchNmin' #>   inputBinding: #>     position: 0 #>     prefix: --outFilterMatchNmin #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output filtering #>   sbg:toolDefaultValue: '0' #>   required: no #> - type: #>   - 'null' #>   - float #>   label: Min matched bases normalized #>   description: '''Minimum matched bases'' normalized to read length (sum of mates #>     lengths for paired-end reads).' #>   streamable: no #>   id: '#outFilterMatchNminOverLread' #>   inputBinding: #>     position: 0 #>     prefix: --outFilterMatchNminOverLread #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output filtering #>   sbg:toolDefaultValue: '0.66' #>   required: no #> - type: #>   - 'null' #>   - name: outFilterIntronMotifs #>     symbols: #>     - None #>     - RemoveNoncanonical #>     - RemoveNoncanonicalUnannotated #>     type: enum #>   label: Motifs filtering #>   description: 'Filter alignment using their motifs. None: no filtering; RemoveNoncanonical: #>     filter out alignments that contain non-canonical junctions; RemoveNoncanonicalUnannotated: #>     filter out alignments that contain non-canonical unannotated junctions when using #>     annotated splice junctions database. The annotated non-canonical junctions will #>     be kept.' #>   streamable: no #>   id: '#outFilterIntronMotifs' #>   inputBinding: #>     position: 0 #>     prefix: --outFilterIntronMotifs #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Output filtering #>   sbg:toolDefaultValue: None #>   required: no #> - type: #>   - 'null' #>   - name: outSJfilterReads #>     symbols: #>     - All #>     - Unique #>     type: enum #>   label: Collapsed junctions reads #>   description: 'Which reads to consider for collapsed splice junctions output. All: #>     all reads, unique- and multi-mappers; Unique: uniquely mapping reads only.' #>   streamable: no #>   id: '#outSJfilterReads' #>   inputBinding: #>     position: 0 #>     prefix: --outSJfilterReads #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: 'Output filtering: splice junctions' #>   sbg:toolDefaultValue: All #>   required: no #> - type: #>   - 'null' #>   - items: int #>     type: array #>   label: Min overhang SJ #>   description: Minimum overhang length for splice junctions on both sides for each #>     of the motifs. To set no output for desired motif, assign -1 to the corresponding #>     field. Does not apply to annotated junctions. #>   streamable: no #>   id: '#outSJfilterOverhangMin' #>   inputBinding: #>     position: 0 #>     prefix: --outSJfilterOverhangMin #>     separate: yes #>     itemSeparator: ' ' #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: 'Output filtering: splice junctions' #>   sbg:toolDefaultValue: 30 12 12 12 #>   required: no #> - type: #>   - 'null' #>   - items: int #>     type: array #>   label: Min unique count #>   description: Minimum uniquely mapping read count per junction for each of the motifs. #>     To set no output for desired motif, assign -1 to the corresponding field. Junctions #>     are output if one of --outSJfilterCountUniqueMin OR --outSJfilterCountTotalMin #>     conditions are satisfied. Does not apply to annotated junctions. #>   streamable: no #>   id: '#outSJfilterCountUniqueMin' #>   inputBinding: #>     position: 0 #>     prefix: --outSJfilterCountUniqueMin #>     separate: yes #>     itemSeparator: ' ' #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: 'Output filtering: splice junctions' #>   sbg:toolDefaultValue: 3 1 1 1 #>   required: no #> - type: #>   - 'null' #>   - items: int #>     type: array #>   label: Min total count #>   description: Minimum total (multi-mapping+unique) read count per junction for each #>     of the motifs. To set no output for desired motif, assign -1 to the corresponding #>     field. Junctions are output if one of --outSJfilterCountUniqueMin OR --outSJfilterCountTotalMin #>     conditions are satisfied. Does not apply to annotated junctions. #>   streamable: no #>   id: '#outSJfilterCountTotalMin' #>   inputBinding: #>     position: 0 #>     prefix: --outSJfilterCountTotalMin #>     separate: yes #>     itemSeparator: ' ' #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: 'Output filtering: splice junctions' #>   sbg:toolDefaultValue: 3 1 1 1 #>   required: no #> - type: #>   - 'null' #>   - items: int #>     type: array #>   label: Min distance to other donor/acceptor #>   description: Minimum allowed distance to other junctions' donor/acceptor for each #>     of the motifs (int >= 0). Does not apply to annotated junctions. #>   streamable: no #>   id: '#outSJfilterDistToOtherSJmin' #>   inputBinding: #>     position: 0 #>     prefix: --outSJfilterDistToOtherSJmin #>     separate: yes #>     itemSeparator: ' ' #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: 'Output filtering: splice junctions' #>   sbg:toolDefaultValue: 10 0 5 10 #>   required: no #> - type: #>   - 'null' #>   - items: int #>     type: array #>   label: Max gap allowed #>   description: 'Maximum gap allowed for junctions supported by 1,2,3...N reads (int #>     >= 0) i.e. by default junctions supported by 1 read can have gaps <=50000b, by #>     2 reads: <=100000b, by 3 reads: <=200000. By 4 or more reads: any gap <=alignIntronMax. #>     Does not apply to annotated junctions.' #>   streamable: no #>   id: '#outSJfilterIntronMaxVsReadN' #>   inputBinding: #>     position: 0 #>     prefix: --outSJfilterIntronMaxVsReadN #>     separate: yes #>     itemSeparator: ' ' #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: 'Output filtering: splice junctions' #>   sbg:toolDefaultValue: 50000 100000 200000 #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Gap open penalty #>   description: Gap open penalty. #>   streamable: no #>   id: '#scoreGap' #>   inputBinding: #>     position: 0 #>     prefix: --scoreGap #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Scoring #>   sbg:toolDefaultValue: '0' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Non-canonical gap open #>   description: Non-canonical gap open penalty (in addition to --scoreGap). #>   streamable: no #>   id: '#scoreGapNoncan' #>   inputBinding: #>     position: 0 #>     prefix: --scoreGapNoncan #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Scoring #>   sbg:toolDefaultValue: '-8' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: GC/AG and CT/GC gap open #>   description: GC/AG and CT/GC gap open penalty (in addition to --scoreGap). #>   streamable: no #>   id: '#scoreGapGCAG' #>   inputBinding: #>     position: 0 #>     prefix: --scoreGapGCAG #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Scoring #>   sbg:toolDefaultValue: '-4' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: AT/AC and GT/AT gap open #>   description: AT/AC and GT/AT gap open penalty (in addition to --scoreGap). #>   streamable: no #>   id: '#scoreGapATAC' #>   inputBinding: #>     position: 0 #>     prefix: --scoreGapATAC #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Scoring #>   sbg:toolDefaultValue: '-8' #>   required: no #> - type: #>   - 'null' #>   - float #>   label: Log scaled score #>   description: 'Extra score logarithmically scaled with genomic length of the alignment: #>     <int>*log2(genomicLength).' #>   streamable: no #>   id: '#scoreGenomicLengthLog2scale' #>   inputBinding: #>     position: 0 #>     prefix: --scoreGenomicLengthLog2scale #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Scoring #>   sbg:toolDefaultValue: '-0.25' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Deletion open penalty #>   description: Deletion open penalty. #>   streamable: no #>   id: '#scoreDelOpen' #>   inputBinding: #>     position: 0 #>     prefix: --scoreDelOpen #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Scoring #>   sbg:toolDefaultValue: '-2' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Deletion extension penalty #>   description: Deletion extension penalty per base (in addition to --scoreDelOpen). #>   streamable: no #>   id: '#scoreDelBase' #>   inputBinding: #>     position: 0 #>     prefix: --scoreDelBase #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Scoring #>   sbg:toolDefaultValue: '-2' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Insertion Open Penalty #>   description: Insertion open penalty. #>   streamable: no #>   id: '#scoreInsOpen' #>   inputBinding: #>     position: 0 #>     prefix: --scoreInsOpen #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Scoring #>   sbg:toolDefaultValue: '-2' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Insertion extension penalty #>   description: Insertion extension penalty per base (in addition to --scoreInsOpen). #>   streamable: no #>   id: '#scoreInsBase' #>   inputBinding: #>     position: 0 #>     prefix: --scoreInsBase #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Scoring #>   sbg:toolDefaultValue: '-2' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max score reduction #>   description: Maximum score reduction while searching for SJ boundaries in the stitching #>     step. #>   streamable: no #>   id: '#scoreStitchSJshift' #>   inputBinding: #>     position: 0 #>     prefix: --scoreStitchSJshift #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Scoring #>   sbg:toolDefaultValue: '1' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Search start point #>   description: Defines the search start point through the read - the read is split #>     into pieces no longer than this value (int>0). #>   streamable: no #>   id: '#seedSearchStartLmax' #>   inputBinding: #>     position: 0 #>     prefix: --seedSearchStartLmax #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: '50' #>   required: no #> - type: #>   - 'null' #>   - float #>   label: Search start point normalized #>   description: seedSearchStartLmax normalized to read length (sum of mates' lengths #>     for paired-end reads). #>   streamable: no #>   id: '#seedSearchStartLmaxOverLread' #>   inputBinding: #>     position: 0 #>     prefix: --seedSearchStartLmaxOverLread #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: '1.0' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max seed length #>   description: Defines the maximum length of the seeds, if =0 max seed length is infinite #>     (int>=0). #>   streamable: no #>   id: '#seedSearchLmax' #>   inputBinding: #>     position: 0 #>     prefix: --seedSearchLmax #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: '0' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Filter pieces for stitching #>   description: Only pieces that map fewer than this value are utilized in the stitching #>     procedure (int>=0). #>   streamable: no #>   id: '#seedMultimapNmax' #>   inputBinding: #>     position: 0 #>     prefix: --seedMultimapNmax #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: '10000' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max seeds per read #>   description: Max number of seeds per read (int>=0). #>   streamable: no #>   id: '#seedPerReadNmax' #>   inputBinding: #>     position: 0 #>     prefix: --seedPerReadNmax #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: '1000' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max seeds per window #>   description: Max number of seeds per window (int>=0). #>   streamable: no #>   id: '#seedPerWindowNmax' #>   inputBinding: #>     position: 0 #>     prefix: --seedPerWindowNmax #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: '50' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max one-seed loci per window #>   description: Max number of one seed loci per window (int>=0). #>   streamable: no #>   id: '#seedNoneLociPerWindow' #>   inputBinding: #>     position: 0 #>     prefix: --seedNoneLociPerWindow #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: '10' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Min intron size #>   description: 'Minimum intron size: genomic gap is considered intron if its length #>     >= alignIntronMin, otherwise it is considered Deletion (int>=0).' #>   streamable: no #>   id: '#alignIntronMin' #>   inputBinding: #>     position: 0 #>     prefix: --alignIntronMin #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: '21' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max intron size #>   description: Maximum intron size, if 0, max intron size will be determined by (2^winBinNbits)*winAnchorDistNbins. #>   streamable: no #>   id: '#alignIntronMax' #>   inputBinding: #>     position: 0 #>     prefix: --alignIntronMax #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: '0' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max mates gap #>   description: Maximum gap between two mates, if 0, max intron gap will be determined #>     by (2^winBinNbits)*winAnchorDistNbins. #>   streamable: no #>   id: '#alignMatesGapMax' #>   inputBinding: #>     position: 0 #>     prefix: --alignMatesGapMax #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: '0' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Min overhang #>   description: Minimum overhang (i.e. block size) for spliced alignments (int>0). #>   streamable: no #>   id: '#alignSJoverhangMin' #>   inputBinding: #>     position: 0 #>     prefix: --alignSJoverhangMin #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: '5' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: 'Min overhang: annotated' #>   description: Minimum overhang (i.e. block size) for annotated (sjdb) spliced alignments #>     (int>0). #>   streamable: no #>   id: '#alignSJDBoverhangMin' #>   inputBinding: #>     position: 0 #>     prefix: --alignSJDBoverhangMin #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: '3' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Min mapped length #>   description: Minimum mapped length for a read mate that is spliced (int>0). #>   streamable: no #>   id: '#alignSplicedMateMapLmin' #>   inputBinding: #>     position: 0 #>     prefix: --alignSplicedMateMapLmin #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: '0' #>   required: no #> - type: #>   - 'null' #>   - float #>   label: Min mapped length normalized #>   description: alignSplicedMateMapLmin normalized to mate length (float>0). #>   streamable: no #>   id: '#alignSplicedMateMapLminOverLmate' #>   inputBinding: #>     position: 0 #>     prefix: --alignSplicedMateMapLminOverLmate #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: '0.66' #>   required: no #> - type: #>   - 'null' #>   - float #>   label: Max windows per read #>   description: Max number of windows per read (int>0). #>   streamable: no #>   id: '#alignWindowsPerReadNmax' #>   inputBinding: #>     position: 0 #>     prefix: --alignWindowsPerReadNmax #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: '10000' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max transcripts per window #>   description: Max number of transcripts per window (int>0). #>   streamable: no #>   id: '#alignTranscriptsPerWindowNmax' #>   inputBinding: #>     position: 0 #>     prefix: --alignTranscriptsPerWindowNmax #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: '100' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max transcripts per read #>   description: Max number of different alignments per read to consider (int>0). #>   streamable: no #>   id: '#alignTranscriptsPerReadNmax' #>   inputBinding: #>     position: 0 #>     prefix: --alignTranscriptsPerReadNmax #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: '10000' #>   required: no #> - type: #>   - 'null' #>   - name: alignEndsType #>     symbols: #>     - Local #>     - EndToEnd #>     type: enum #>   label: Alignment type #>   description: 'Type of read ends alignment. Local: standard local alignment with #>     soft-clipping allowed. EndToEnd: force end to end read alignment, do not soft-clip.' #>   streamable: no #>   id: '#alignEndsType' #>   inputBinding: #>     position: 0 #>     prefix: --alignEndsType #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: Local #>   required: no #> - type: #>   - 'null' #>   - name: alignSoftClipAtReferenceEnds #>     symbols: #>     - 'Yes' #>     - 'No' #>     type: enum #>   label: Soft clipping #>   description: 'Option which allows soft clipping of alignments at the reference (chromosome) #>     ends. Can be disabled for compatibility with Cufflinks/Cuffmerge. Yes: Enables #>     soft clipping; No: Disables soft clipping.' #>   streamable: no #>   id: '#alignSoftClipAtReferenceEnds' #>   inputBinding: #>     position: 0 #>     prefix: --alignSoftClipAtReferenceEnds #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Alignments and Seeding #>   sbg:toolDefaultValue: 'Yes' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max loci anchors #>   description: Max number of loci anchors are allowed to map to (int>0). #>   streamable: no #>   id: '#winAnchorMultimapNmax' #>   inputBinding: #>     position: 0 #>     prefix: --winAnchorMultimapNmax #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Windows, Anchors, Binning #>   sbg:toolDefaultValue: '50' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Bin size #>   description: =log2(winBin), where winBin is the size of the bin for the windows/clustering, #>     each window will occupy an integer number of bins (int>0). #>   streamable: no #>   id: '#winBinNbits' #>   inputBinding: #>     position: 0 #>     prefix: --winBinNbits #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Windows, Anchors, Binning #>   sbg:toolDefaultValue: '16' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max bins between anchors #>   description: Max number of bins between two anchors that allows aggregation of anchors #>     into one window (int>0). #>   streamable: no #>   id: '#winAnchorDistNbins' #>   inputBinding: #>     position: 0 #>     prefix: --winAnchorDistNbins #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Windows, Anchors, Binning #>   sbg:toolDefaultValue: '9' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Flanking regions size #>   description: =log2(winFlank), where win Flank is the size of the left and right #>     flanking regions for each window (int>0). #>   streamable: no #>   id: '#winFlankNbins' #>   inputBinding: #>     position: 0 #>     prefix: --winFlankNbins #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Windows, Anchors, Binning #>   sbg:toolDefaultValue: '4' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Min segment length #>   description: Minimum length of chimeric segment length, if =0, no chimeric output #>     (int>=0). #>   streamable: no #>   id: '#chimSegmentMin' #>   inputBinding: #>     position: 0 #>     prefix: --chimSegmentMin #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Chimeric Alignments #>   sbg:toolDefaultValue: '15' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Min total score #>   description: Minimum total (summed) score of the chimeric segments (int>=0). #>   streamable: no #>   id: '#chimScoreMin' #>   inputBinding: #>     position: 0 #>     prefix: --chimScoreMin #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Chimeric Alignments #>   sbg:toolDefaultValue: '0' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max drop score #>   description: Max drop (difference) of chimeric score (the sum of scores of all chimeric #>     segements) from the read length (int>=0). #>   streamable: no #>   id: '#chimScoreDropMax' #>   inputBinding: #>     position: 0 #>     prefix: --chimScoreDropMax #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Chimeric Alignments #>   sbg:toolDefaultValue: '20' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Min separation score #>   description: Minimum difference (separation) between the best chimeric score and #>     the next one (int>=0). #>   streamable: no #>   id: '#chimScoreSeparation' #>   inputBinding: #>     position: 0 #>     prefix: --chimScoreSeparation #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Chimeric Alignments #>   sbg:toolDefaultValue: '10' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Non-GT/AG penalty #>   description: Penalty for a non-GT/AG chimeric junction. #>   streamable: no #>   id: '#chimScoreJunctionNonGTAG' #>   inputBinding: #>     position: 0 #>     prefix: --chimScoreJunctionNonGTAG #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Chimeric Alignments #>   sbg:toolDefaultValue: '-1' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Min junction overhang #>   description: Minimum overhang for a chimeric junction (int>=0). #>   streamable: no #>   id: '#chimJunctionOverhangMin' #>   inputBinding: #>     position: 0 #>     prefix: --chimJunctionOverhangMin #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Chimeric Alignments #>   sbg:toolDefaultValue: '20' #>   required: no #> - type: #>   - 'null' #>   - name: quantMode #>     symbols: #>     - TranscriptomeSAM #>     - GeneCounts #>     type: enum #>   label: Quantification mode #>   description: Types of quantification requested. 'TranscriptomeSAM' option outputs #>     SAM/BAM alignments to transcriptome into a separate file. With 'GeneCounts' option, #>     STAR will count number of reads per gene while mapping. #>   streamable: no #>   id: '#quantMode' #>   sbg:category: Quantification of Annotations #>   sbg:toolDefaultValue: '-' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Reads to process in 1st step #>   description: 'Number of reads to process for the 1st step. 0: 1-step only, no 2nd #>     pass; use very large number to map all reads in the first step (int>0).' #>   streamable: no #>   id: '#twopass1readsN' #>   sbg:category: 2-pass mapping #>   sbg:toolDefaultValue: '-1' #>   required: no #> - type: #>   - 'null' #>   - name: twopassMode #>     symbols: #>     - None #>     - Basic #>     type: enum #>   label: Two-pass mode #>   description: '2-pass mapping mode. None: 1-pass mapping; Basic: basic 2-pass mapping, #>     with all 1st pass junctions inserted into the genome indices on the fly.' #>   streamable: no #>   id: '#twopassMode' #>   inputBinding: #>     position: 0 #>     prefix: --twopassMode #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: 2-pass mapping #>   sbg:toolDefaultValue: None #>   required: no #> - type: #>   - 'null' #>   - string #>   label: Genome dir name #>   description: Name of the directory which contains genome files (when genome.tar #>     is uncompressed). #>   streamable: no #>   id: '#genomeDirName' #>   inputBinding: #>     position: 0 #>     prefix: --genomeDir #>     separate: yes #>     valueFrom: #>       engine: '#cwl-js-engine' #>       script: $job.inputs.genomeDirName || \"genomeDir\" #>       class: Expression #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Basic #>   sbg:toolDefaultValue: genomeDir #>   required: no #> - type: #>   - 'null' #>   - name: sjdbInsertSave #>     symbols: #>     - Basic #>     - All #>     - None #>     type: enum #>   label: Save junction files #>   description: 'Which files to save when sjdb junctions are inserted on the fly at #>     the mapping step. None: not saving files at all; Basic: only small junction/transcript #>     files; All: all files including big Genome, SA and SAindex. These files are output #>     as archive.' #>   streamable: no #>   id: '#sjdbInsertSave' #>   sbg:category: Splice junctions database #>   sbg:toolDefaultValue: None #>   required: no #> - type: #>   - 'null' #>   - string #>   label: Chromosome names #>   description: Prefix for chromosome names in a GTF file (e.g. 'chr' for using ENSMEBL #>     annotations with UCSC geneomes). #>   streamable: no #>   id: '#sjdbGTFchrPrefix' #>   sbg:category: Splice junctions database #>   sbg:toolDefaultValue: '-' #>   required: no #> - type: #>   - 'null' #>   - string #>   label: Set exons feature #>   description: Feature type in GTF file to be used as exons for building transcripts. #>   streamable: no #>   id: '#sjdbGTFfeatureExon' #>   sbg:category: Splice junctions database #>   sbg:toolDefaultValue: exon #>   required: no #> - type: #>   - 'null' #>   - string #>   label: Exons' parents name #>   description: Tag name to be used as exons's transcript-parents. #>   streamable: no #>   id: '#sjdbGTFtagExonParentTranscript' #>   sbg:category: Splice junctions database #>   sbg:toolDefaultValue: transcript_id #>   required: no #> - type: #>   - 'null' #>   - string #>   label: Gene name #>   description: Tag name to be used as exons's gene-parents. #>   streamable: no #>   id: '#sjdbGTFtagExonParentGene' #>   sbg:category: Splice junctions database #>   sbg:toolDefaultValue: gene_id #>   required: no #> - type: #>   - 'null' #>   - int #>   label: '\"Overhang\" length' #>   description: Length of the donor/acceptor sequence on each side of the junctions, #>     ideally = (mate_length - 1) (int >= 0), if int = 0, splice junction database is #>     not used. #>   streamable: no #>   id: '#sjdbOverhang' #>   sbg:category: Splice junctions database #>   sbg:toolDefaultValue: '100' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Extra alignment score #>   description: Extra alignment score for alignments that cross database junctions. #>   streamable: no #>   id: '#sjdbScore' #>   sbg:category: Splice junctions database #>   sbg:toolDefaultValue: '2' #>   required: no #> - type: #>   - 'null' #>   - items: File #>     type: array #>   label: Splice junction file #>   description: Gene model annotations and/or known transcripts. No need to include #>     this input, except in case of using \"on the fly\" annotations. #>   streamable: no #>   id: '#sjdbGTFfile' #>   sbg:category: Basic #>   sbg:fileTypes: GTF, GFF, TXT #>   required: no #> - type: #>   - 'null' #>   - items: int #>     type: array #>   label: Clip 3p bases #>   description: Number of bases to clip from 3p of each mate. In case only one value #>     is given, it will be assumed the same for both mates. #>   streamable: no #>   id: '#clip3pNbases' #>   inputBinding: #>     position: 0 #>     prefix: --clip3pNbases #>     separate: yes #>     itemSeparator: ' ' #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Read parameters #>   sbg:toolDefaultValue: '0' #>   required: no #> - type: #>   - 'null' #>   - items: int #>     type: array #>   label: Clip 5p bases #>   description: Number of bases to clip from 5p of each mate. In case only one value #>     is given, it will be assumed the same for both mates. #>   streamable: no #>   id: '#clip5pNbases' #>   inputBinding: #>     position: 0 #>     prefix: --clip5pNbases #>     separate: yes #>     itemSeparator: ' ' #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Read parameters #>   sbg:toolDefaultValue: '0' #>   required: no #> - type: #>   - 'null' #>   - items: string #>     type: array #>   label: Clip 3p adapter sequence #>   description: Adapter sequence to clip from 3p of each mate. In case only one value #>     is given, it will be assumed the same for both mates. #>   streamable: no #>   id: '#clip3pAdapterSeq' #>   inputBinding: #>     position: 0 #>     prefix: --clip3pAdapterSeq #>     separate: yes #>     itemSeparator: ' ' #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Read parameters #>   sbg:toolDefaultValue: '-' #>   required: no #> - type: #>   - 'null' #>   - items: float #>     type: array #>   label: Max mismatches proportions #>   description: Max proportion of mismatches for 3p adapter clipping for each mate. #>     In case only one value is given, it will be assumed the same for both mates. #>   streamable: no #>   id: '#clip3pAdapterMMp' #>   inputBinding: #>     position: 0 #>     prefix: --clip3pAdapterMMp #>     separate: yes #>     itemSeparator: ' ' #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Read parameters #>   sbg:toolDefaultValue: '0.1' #>   required: no #> - type: #>   - 'null' #>   - items: int #>     type: array #>   label: Clip 3p after adapter seq. #>   description: Number of bases to clip from 3p of each mate after the adapter clipping. #>     In case only one value is given, it will be assumed the same for both mates. #>   streamable: no #>   id: '#clip3pAfterAdapterNbases' #>   inputBinding: #>     position: 0 #>     prefix: --clip3pAfterAdapterNbases #>     separate: yes #>     itemSeparator: ' ' #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Read parameters #>   sbg:toolDefaultValue: '0' #>   required: no #> - type: #>   - 'null' #>   - name: chimOutType #>     symbols: #>     - SeparateSAMold #>     - Within #>     type: enum #>   label: Chimeric output type #>   description: 'Type of chimeric output. SeparateSAMold: output old SAM into separate #>     Chimeric.out.sam file; Within: output into main aligned SAM/BAM files.' #>   streamable: no #>   id: '#chimOutType' #>   sbg:category: Chimeric Alignments #>   sbg:toolDefaultValue: SeparateSAMold #>   required: no #> - type: #>   - File #>   label: Genome files #>   description: Genome files created using STAR Genome Generate. #>   streamable: no #>   id: '#genome' #>   sbg:category: Basic #>   sbg:fileTypes: TAR #>   required: yes #> - type: #>   - 'null' #>   - int #>   label: Max insert junctions #>   description: Maximum number of junction to be inserted to the genome on the fly #>     at the mapping stage, including those from annotations and those detected in the #>     1st step of the 2-pass run. #>   streamable: no #>   id: '#limitSjdbInsertNsj' #>   inputBinding: #>     position: 0 #>     prefix: --limitSjdbInsertNsj #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Limits #>   sbg:toolDefaultValue: '1000000' #>   required: no #> - type: #>   - 'null' #>   - name: quantTranscriptomeBan #>     symbols: #>     - IndelSoftclipSingleend #>     - Singleend #>     type: enum #>   label: Prohibit alignment type #>   description: 'Prohibit various alignment type. IndelSoftclipSingleend: prohibit #>     indels, soft clipping and single-end alignments - compatible with RSEM; Singleend: #>     prohibit single-end alignments.' #>   streamable: no #>   id: '#quantTranscriptomeBan' #>   inputBinding: #>     position: 0 #>     prefix: --quantTranscriptomeBan #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Quantification of Annotations #>   sbg:toolDefaultValue: IndelSoftclipSingleend #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Limit BAM sorting memory #>   description: Maximum available RAM for sorting BAM. If set to 0, it will be set #>     to the genome index size. #>   streamable: no #>   id: '#limitBAMsortRAM' #>   inputBinding: #>     position: 0 #>     prefix: --limitBAMsortRAM #>     separate: yes #>     shellQuote: no #>     sbg:cmdInclude: yes #>     streamable: no #>     separator: ' ' #>   sbg:category: Limits #>   sbg:toolDefaultValue: '0' #>   required: no #> outputs: #> - type: #>   - 'null' #>   - File #>   label: Aligned SAM/BAM #>   description: Aligned sequence in SAM/BAM format. #>   streamable: no #>   id: '#aligned_reads' #>   outputBinding: #>     glob: #>       engine: '#cwl-js-engine' #>       script: |- #>         { #>           if ($job.inputs.outSortingType == 'SortedByCoordinate') { #>             sort_name = '.sortedByCoord' #>           } #>           else { #>             sort_name = '' #>           } #>           if ($job.inputs.outSAMtype == 'BAM') { #>             sam_name = \"*.Aligned\".concat( sort_name, '.out.bam') #>           } #>           else { #>             sam_name = \"*.Aligned.out.sam\" #>           } #>           return sam_name #>         } #>       class: Expression #>   sbg:fileTypes: SAM, BAM #> - type: #>   - 'null' #>   - File #>   label: Transcriptome alignments #>   description: Alignments translated into transcript coordinates. #>   streamable: no #>   id: '#transcriptome_aligned_reads' #>   outputBinding: #>     glob: '*Transcriptome*' #>   sbg:fileTypes: BAM #> - type: #>   - 'null' #>   - File #>   label: Reads per gene #>   description: File with number of reads per gene. A read is counted if it overlaps #>     (1nt or more) one and only one gene. #>   streamable: no #>   id: '#reads_per_gene' #>   outputBinding: #>     glob: '*ReadsPerGene*' #>   sbg:fileTypes: TAB #> - type: #>   - 'null' #>   - items: File #>     type: array #>   label: Log files #>   description: Log files produced during alignment. #>   streamable: no #>   id: '#log_files' #>   outputBinding: #>     glob: '*Log*.out' #>   sbg:fileTypes: OUT #> - type: #>   - 'null' #>   - File #>   label: Splice junctions #>   description: High confidence collapsed splice junctions in tab-delimited format. #>     Only junctions supported by uniquely mapping reads are reported. #>   streamable: no #>   id: '#splice_junctions' #>   outputBinding: #>     glob: '*SJ.out.tab' #>   sbg:fileTypes: TAB #> - type: #>   - 'null' #>   - File #>   label: Chimeric junctions #>   description: If chimSegmentMin in 'Chimeric Alignments' section is set to 0, 'Chimeric #>     Junctions' won't be output. #>   streamable: no #>   id: '#chimeric_junctions' #>   outputBinding: #>     glob: '*Chimeric.out.junction' #>   sbg:fileTypes: JUNCTION #> - type: #>   - 'null' #>   - items: File #>     type: array #>   label: Unmapped reads #>   description: Output of unmapped reads. #>   streamable: no #>   id: '#unmapped_reads' #>   outputBinding: #>     glob: '*Unmapped.out*' #>   sbg:fileTypes: FASTQ #> - type: #>   - 'null' #>   - File #>   label: Intermediate genome files #>   description: Archive with genome files produced when annotations are included on #>     the fly (in the mapping step). #>   streamable: no #>   id: '#intermediate_genome' #>   outputBinding: #>     glob: '*_STARgenome.tar' #>   sbg:fileTypes: TAR #> - type: #>   - 'null' #>   - File #>   label: Chimeric alignments #>   description: Aligned Chimeric sequences SAM - if chimSegmentMin = 0, no Chimeric #>     Alignment SAM and Chimeric Junctions outputs. #>   streamable: no #>   id: '#chimeric_alignments' #>   outputBinding: #>     glob: '*.Chimeric.out.sam' #>   sbg:fileTypes: SAM #> requirements: #> - class: ExpressionEngineRequirement #>   id: '#cwl-js-engine' #>   requirements: #>   - class: DockerRequirement #>     dockerPull: rabix/js-engine #> hints: #> - class: DockerRequirement #>   dockerPull: images.sbgenomics.com/ana_d/star:2.4.2a #>   dockerImageId: a4b0ad2c3cae #> - class: sbg:MemRequirement #>   value: 60000 #> - class: sbg:CPURequirement #>   value: 15 #> label: STAR #> description: STAR is an ultrafast universal RNA-seq aligner. It has very high mapping #>   speed, accurate alignment of contiguous and spliced reads, detection of polyA-tails, #>   non-canonical splices and chimeric (fusion) junctions. It works with reads starting #>   from lengths ~15 bases up to ~300 bases. In case of having longer reads, use of #>   STAR Long is recommended. #> class: CommandLineTool #> baseCommand: #> - tar #> - -xvf #> - class: Expression #>   script: $job.inputs.genome.path #>   engine: '#cwl-js-engine' #> - '&&' #> - /opt/STAR #> - --runThreadN #> - class: Expression #>   script: |- #>     { #>       return $job.allocatedResources.cpu #>     } #>   engine: '#cwl-js-engine' #> arguments: #> - position: 0 #>   separate: yes #>   valueFrom: #>     engine: '#cwl-js-engine' #>     script: |- #>       { #>         file = [].concat($job.inputs.reads)[0].path #>         extension = /(?:\\.([^.]+))?$/.exec(file)[1] #>         if (extension == \"gz\") { #>           return \"--readFilesCommand zcat\" #>         } else if (extension == \"bz2\") { #>           return \"--readFilesCommand bzcat\" #>         } #>       } #>     class: Expression #> - position: 0 #>   separate: yes #>   valueFrom: #>     engine: '#cwl-js-engine' #>     script: \"{\\t\\n  var sjFormat = \\\"False\\\"\\n  var gtfgffFormat = \\\"False\\\"\\n  var #>       list = $job.inputs.sjdbGTFfile\\n  var paths_list = []\\n  var joined_paths = #>       \\\"\\\"\\n  \\n  if (list) {\\n    list.forEach(function(f){return paths_list.push(f.path)})\\n #>       \\   joined_paths = paths_list.join(\\\" \\\")\\n\\n\\n    paths_list.forEach(function(f){\\n #>       \\     ext = f.replace(/^.*\\\\./, '')\\n      if (ext == \\\"gff\\\" || ext == \\\"gtf\\\") #>       {\\n        gtfgffFormat = \\\"True\\\"\\n        return gtfgffFormat\\n      }\\n      if #>       (ext == \\\"txt\\\") {\\n        sjFormat = \\\"True\\\"\\n        return sjFormat\\n      }\\n #>       \\   })\\n\\n    if ($job.inputs.sjdbGTFfile && $job.inputs.sjdbInsertSave != \\\"None\\\") #>       {\\n      if (sjFormat == \\\"True\\\") {\\n        return \\\"--sjdbFileChrStartEnd #>       \\\".concat(joined_paths)\\n      }\\n      else if (gtfgffFormat == \\\"True\\\") {\\n #>       \\       return \\\"--sjdbGTFfile \\\".concat(joined_paths)\\n      }\\n    }\\n  }\\n}\" #>     class: Expression #> - position: 0 #>   separate: yes #>   valueFrom: #>     engine: '#cwl-js-engine' #>     script: \"{\\n  a = b = c = d = e = f = g = []\\n  if ($job.inputs.sjdbGTFchrPrefix) #>       {\\n    a = [\\\"--sjdbGTFchrPrefix\\\", $job.inputs.sjdbGTFchrPrefix]\\n  }\\n  if #>       ($job.inputs.sjdbGTFfeatureExon) {\\n    b = [\\\"--sjdbGTFfeatureExon\\\", $job.inputs.sjdbGTFfeatureExon]\\n #>       \\ }\\n  if ($job.inputs.sjdbGTFtagExonParentTranscript) {\\n    c = [\\\"--sjdbGTFtagExonParentTranscript\\\", #>       $job.inputs.sjdbGTFtagExonParentTranscript]\\n  }\\n  if ($job.inputs.sjdbGTFtagExonParentGene) #>       {\\n    d = [\\\"--sjdbGTFtagExonParentGene\\\", $job.inputs.sjdbGTFtagExonParentGene]\\n #>       \\ }\\n  if ($job.inputs.sjdbOverhang) {\\n    e = [\\\"--sjdbOverhang\\\", $job.inputs.sjdbOverhang]\\n #>       \\ }\\n  if ($job.inputs.sjdbScore) {\\n    f = [\\\"--sjdbScore\\\", $job.inputs.sjdbScore]\\n #>       \\ }\\n  if ($job.inputs.sjdbInsertSave) {\\n    g = [\\\"--sjdbInsertSave\\\", $job.inputs.sjdbInsertSave]\\n #>       \\ }\\n  \\n  \\n  \\n  if ($job.inputs.sjdbInsertSave != \\\"None\\\" && $job.inputs.sjdbGTFfile) #>       {\\n    new_list = a.concat(b, c, d, e, f, g)\\n    return new_list.join(\\\" \\\")\\n #>       \\ }\\n}\" #>     class: Expression #> - position: 0 #>   separate: yes #>   valueFrom: #>     engine: '#cwl-js-engine' #>     script: |- #>       { #>         if ($job.inputs.twopassMode == \"Basic\") { #>           return \"--twopass1readsN \".concat($job.inputs.twopass1readsN) #>         } #>       } #>     class: Expression #> - position: 0 #>   separate: yes #>   valueFrom: #>     engine: '#cwl-js-engine' #>     script: |- #>       { #>         if ($job.inputs.chimOutType == \"Within\") { #>           return \"--chimOutType \".concat(\"Within\", $job.inputs.outSAMtype) #>         } #>         else { #>           return \"--chimOutType SeparateSAMold\" #>         } #>       } #>     class: Expression #> - position: 0 #>   separate: yes #>   valueFrom: #>     engine: '#cwl-js-engine' #>     script: \"{\\n  var param_list = []\\n  \\n  function add_param(key, value){\\n    if #>       (value == \\\"\\\") {\\n      return\\n    }\\n    else {\\n      return param_list.push(key.concat(\\\":\\\", #>       value))\\n    }\\n  }\\n  \\n  add_param('ID', \\\"1\\\")\\n  if ($job.inputs.rg_seq_center) #>       {\\n    add_param('CN', $job.inputs.rg_seq_center)\\n  } else if ([].concat($job.inputs.reads)[0].metadata.seq_center) #>       {\\n    add_param('CN', [].concat($job.inputs.reads)[0].metadata.seq_center)\\n #>       \\ }\\n  if ($job.inputs.rg_library_id) {\\n    add_param('LB', $job.inputs.rg_library_id)\\n #>       \\ } else if ([].concat($job.inputs.reads)[0].metadata.library_id) {\\n    add_param('LB', #>       [].concat($job.inputs.reads)[0].metadata.library_id)\\n  }\\n  if ($job.inputs.rg_mfl) #>       {\\n    add_param('PI', $job.inputs.rg_mfl)\\n  } else if ([].concat($job.inputs.reads)[0].metadata.median_fragment_length) #>       {\\n    add_param('PI', [].concat($job.inputs.reads)[0].metadata.median_fragment_length)\\n #>       \\ }\\n  if ($job.inputs.rg_platform) {\\n    add_param('PL', $job.inputs.rg_platform.replace(/ #>       /g,\\\"_\\\"))\\n  } else if ([].concat($job.inputs.reads)[0].metadata.platform) #>       {\\n    add_param('PL', [].concat($job.inputs.reads)[0].metadata.platform.replace(/ #>       /g,\\\"_\\\"))\\n  }\\n  if ($job.inputs.rg_platform_unit_id) {\\n    add_param('PU', #>       $job.inputs.rg_platform_unit_id)\\n  } else if ([].concat($job.inputs.reads)[0].metadata.platform_unit_id) #>       {\\n    add_param('PU', [].concat($job.inputs.reads)[0].metadata.platform_unit_id)\\n #>       \\ }\\n  if ($job.inputs.rg_sample_id) {\\n    add_param('SM', $job.inputs.rg_sample_id)\\n #>       \\ } else if ([].concat($job.inputs.reads)[0].metadata.sample_id) {\\n    add_param('SM', #>       [].concat($job.inputs.reads)[0].metadata.sample_id)\\n  }\\n  return \\\"--outSAMattrRGline #>       \\\".concat(param_list.join(\\\" \\\"))\\n}\" #>     class: Expression #> - position: 0 #>   separate: yes #>   valueFrom: #>     engine: '#cwl-js-engine' #>     script: |- #>       { #>         if ($job.inputs.sjdbGTFfile && $job.inputs.quantMode) { #>           return \"--quantMode \".concat($job.inputs.quantMode) #>         } #>       } #>     class: Expression #> - position: 100 #>   separate: yes #>   valueFrom: #>     engine: '#cwl-js-engine' #>     script: \"{\\n  function sharedStart(array){\\n  var A= array.concat().sort(), \\n #>       \\     a1= A[0], a2= A[A.length-1], L= a1.length, i= 0;\\n  while(i<L && a1.charAt(i)=== #>       a2.charAt(i)) i++;\\n  return a1.substring(0, i);\\n  }\\n  path_list = []\\n  arr #>       = [].concat($job.inputs.reads)\\n  arr.forEach(function(f){return path_list.push(f.path.replace(/\\\\\\\\/g,'/').replace( #>       /.*\\\\//, '' ))})\\n  common_prefix = sharedStart(path_list)\\n  intermediate = #>       common_prefix.replace( /\\\\-$|\\\\_$|\\\\.$/, '' ).concat(\\\"._STARgenome\\\")\\n  source #>       = \\\"./\\\".concat(intermediate)\\n  destination = intermediate.concat(\\\".tar\\\")\\n #>       \\ if ($job.inputs.sjdbGTFfile && $job.inputs.sjdbInsertSave && $job.inputs.sjdbInsertSave #>       != \\\"None\\\") {\\n    return \\\"&& tar -vcf \\\".concat(destination, \\\" \\\", source)\\n #>       \\ }\\n}\" #>     class: Expression #> - position: 0 #>   prefix: --outFileNamePrefix #>   separate: yes #>   valueFrom: #>     engine: '#cwl-js-engine' #>     script: \"{\\n  function sharedStart(array){\\n  var A= array.concat().sort(), \\n #>       \\     a1= A[0], a2= A[A.length-1], L= a1.length, i= 0;\\n  while(i<L && a1.charAt(i)=== #>       a2.charAt(i)) i++;\\n  return a1.substring(0, i);\\n  }\\n  path_list = []\\n  arr #>       = [].concat($job.inputs.reads)\\n  arr.forEach(function(f){return path_list.push(f.path.replace(/\\\\\\\\/g,'/').replace( #>       /.*\\\\//, '' ))})\\n  common_prefix = sharedStart(path_list)\\n  return \\\"./\\\".concat(common_prefix.replace( #>       /\\\\-$|\\\\_$|\\\\.$/, '' ), \\\".\\\")\\n}\" #>     class: Expression #> - position: 101 #>   separate: yes #>   valueFrom: #>     engine: '#cwl-js-engine' #>     script: \"{\\n  function sharedStart(array){\\n  var A= array.concat().sort(), \\n #>       \\     a1= A[0], a2= A[A.length-1], L= a1.length, i= 0;\\n  while(i<L && a1.charAt(i)=== #>       a2.charAt(i)) i++;\\n  return a1.substring(0, i);\\n  }\\n  path_list = []\\n  arr #>       = [].concat($job.inputs.reads)\\n  arr.forEach(function(f){return path_list.push(f.path.replace(/\\\\\\\\/g,'/').replace( #>       /.*\\\\//, '' ))})\\n  common_prefix = sharedStart(path_list)\\n  mate1 = common_prefix.replace( #>       /\\\\-$|\\\\_$|\\\\.$/, '' ).concat(\\\".Unmapped.out.mate1\\\")\\n  mate2 = common_prefix.replace( #>       /\\\\-$|\\\\_$|\\\\.$/, '' ).concat(\\\".Unmapped.out.mate2\\\")\\n  mate1fq = mate1.concat(\\\".fastq\\\")\\n #>       \\ mate2fq = mate2.concat(\\\".fastq\\\")\\n  if ($job.inputs.outReadsUnmapped == #>       \\\"Fastx\\\" && arr.length > 1) {\\n    return \\\"&& mv \\\".concat(mate1, \\\" \\\", mate1fq, #>       \\\" && mv \\\", mate2, \\\" \\\", mate2fq)\\n  }\\n  else if ($job.inputs.outReadsUnmapped #>       == \\\"Fastx\\\" && arr.length == 1) {\\n    return \\\"&& mv \\\".concat(mate1, \\\" \\\", #>       mate1fq)\\n  }\\n}\" #>     class: Expression #> stdin: '' #> stdout: '' #> successCodes: [] #> temporaryFailCodes: [] #>  # convert to Flow object convert_app(flow.in) #> sbg:validationErrors: [] #> sbg:sbgMaintained: no #> sbg:latestRevision: 2 #> sbg:toolAuthor: Seven Bridges Genomics #> sbg:createdOn: 1463601910 #> sbg:categories: #> - Alignment #> - RNA #> sbg:contributors: #> - tengfei #> sbg:project: tengfei/quickstart #> sbg:createdBy: tengfei #> sbg:toolkitVersion: 2.4.2a #> sbg:id: tengfei/quickstart/rna-seq-alignment-star-demo/2 #> sbg:license: Apache License 2.0 #> sbg:revision: 2 #> sbg:modifiedOn: 1463601974 #> sbg:modifiedBy: tengfei #> sbg:revisionsInfo: #> - sbg:modifiedBy: tengfei #>   sbg:modifiedOn: 1463601910 #>   sbg:revision: 0 #> - sbg:modifiedBy: tengfei #>   sbg:modifiedOn: 1463601952 #>   sbg:revision: 1 #> - sbg:modifiedBy: tengfei #>   sbg:modifiedOn: 1463601974 #>   sbg:revision: 2 #> sbg:toolkit: STAR #> id: '#tengfei/quickstart/rna-seq-alignment-star-demo/2' #> inputs: #> - type: #>   - 'null' #>   - items: File #>     type: array #>   label: sjdbGTFfile #>   streamable: no #>   id: '#sjdbGTFfile' #>   sbg:x: 160.4999759 #>   sbg:y: 195.0833106 #>   required: no #> - type: #>   - items: File #>     type: array #>   label: fastq #>   streamable: no #>   id: '#fastq' #>   sbg:x: 164.2499914 #>   sbg:y: 323.7499502 #>   sbg:includeInPorts: yes #>   required: yes #> - type: #>   - File #>   label: genomeFastaFiles #>   streamable: no #>   id: '#genomeFastaFiles' #>   sbg:x: 167.7499601 #>   sbg:y: 469.9999106 #>   required: yes #> - type: #>   - 'null' #>   - string #>   label: Exons' parents name #>   description: Tag name to be used as exons' transcript-parents. #>   streamable: no #>   id: '#sjdbGTFtagExonParentTranscript' #>   sbg:category: Splice junctions db parameters #>   sbg:x: 200.0 #>   sbg:y: 350.0 #>   sbg:toolDefaultValue: transcript_id #>   required: no #> - type: #>   - 'null' #>   - string #>   label: Gene name #>   description: Tag name to be used as exons' gene-parents. #>   streamable: no #>   id: '#sjdbGTFtagExonParentGene' #>   sbg:category: Splice junctions db parameters #>   sbg:x: 200.0 #>   sbg:y: 400.0 #>   sbg:toolDefaultValue: gene_id #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max loci anchors #>   description: Max number of loci anchors are allowed to map to (int>0). #>   streamable: no #>   id: '#winAnchorMultimapNmax' #>   sbg:category: Windows, Anchors, Binning #>   sbg:x: 200.0 #>   sbg:y: 450.0 #>   sbg:toolDefaultValue: '50' #>   required: no #> - type: #>   - 'null' #>   - int #>   label: Max bins between anchors #>   description: Max number of bins between two anchors that allows aggregation of anchors #>     into one window (int>0). #>   streamable: no #>   id: '#winAnchorDistNbins' #>   sbg:category: Windows, Anchors, Binning #>   sbg:x: 200.0 #>   sbg:y: 500.0 #>   sbg:toolDefaultValue: '9' #>   required: no #> outputs: #> - type: #>   - 'null' #>   - items: File #>     type: array #>   label: unmapped_reads #>   streamable: no #>   id: '#unmapped_reads' #>   source: '#STAR.unmapped_reads' #>   sbg:x: 766.2497863 #>   sbg:y: 159.5833091 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: transcriptome_aligned_reads #>   streamable: no #>   id: '#transcriptome_aligned_reads' #>   source: '#STAR.transcriptome_aligned_reads' #>   sbg:x: 1118.9998003 #>   sbg:y: 86.5833216 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: splice_junctions #>   streamable: no #>   id: '#splice_junctions' #>   source: '#STAR.splice_junctions' #>   sbg:x: 1282.3330177 #>   sbg:y: 167.499976 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: reads_per_gene #>   streamable: no #>   id: '#reads_per_gene' #>   source: '#STAR.reads_per_gene' #>   sbg:x: 1394.4163557 #>   sbg:y: 245.749964 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - items: File #>     type: array #>   label: log_files #>   streamable: no #>   id: '#log_files' #>   source: '#STAR.log_files' #>   sbg:x: 1505.0830269 #>   sbg:y: 322.9999518 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: chimeric_junctions #>   streamable: no #>   id: '#chimeric_junctions' #>   source: '#STAR.chimeric_junctions' #>   sbg:x: 1278.7498062 #>   sbg:y: 446.7499567 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: intermediate_genome #>   streamable: no #>   id: '#intermediate_genome' #>   source: '#STAR.intermediate_genome' #>   sbg:x: 1408.9164783 #>   sbg:y: 386.0832876 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: chimeric_alignments #>   streamable: no #>   id: '#chimeric_alignments' #>   source: '#STAR.chimeric_alignments' #>   sbg:x: 1147.5831348 #>   sbg:y: 503.2499285 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: sorted_bam #>   streamable: no #>   id: '#sorted_bam' #>   source: '#Picard_SortSam.sorted_bam' #>   sbg:x: 934.2498228 #>   sbg:y: 557.2498436 #>   sbg:includeInPorts: yes #>   required: no #> - type: #>   - 'null' #>   - File #>   label: result #>   streamable: no #>   id: '#result' #>   source: '#SBG_FASTQ_Quality_Detector.result' #>   sbg:x: 1431.6666548 #>   sbg:y: 644.9999898 #>   sbg:includeInPorts: yes #>   required: no #> requirements: #> - class: CreateFileRequirement #>   fileDef: [] #> hints: #> - class: sbg:AWSInstanceType #>   value: c3.8xlarge #> label: RNA-seq Alignment - STAR #> description: \"Alignment to a reference genome and transcriptome presents the first #>   step of RNA-Seq analysis. This pipeline uses STAR, an ultrafast RNA-seq aligner #>   capable of mapping full length RNA sequences and detecting de novo canonical junctions, #>   non-canonical splices, and chimeric (fusion) transcripts. It is optimized for mammalian #>   sequence reads, but fine tuning of its parameters enables customization to satisfy #>   unique needs.\\n\\nSTAR accepts one file per sample (or two files for paired-end data). #>   \\ \\nSplice junction annotations can optionally be collected from splice junction #>   databases. Set the \\\"Overhang length\\\" parameter to a value larger than zero in #>   order to use splice junction databases. For constant read length, this value should #>   (ideally) be equal to mate length decreased by 1; for long reads with non-constant #>   length, this value should be 100 (pipeline default). \\nFastQC Analysis on FASTQ #>   files reveals read length distribution. STAR can detect chimeric transcripts, but #>   parameter \\\"Min segment length\\\" in \\\"Chimeric Alignments\\\" category must be adjusted #>   to a desired minimum chimeric segment length. Aligned reads are reported in BAM #>   format and can be viewed in a genome browser (such as IGV). A file containing detected #>   splice junctions is also produced.\\n\\nUnmapped reads are reported in FASTQ format #>   and can be included in an output BAM file. The \\\"Output unmapped reads\\\" and \\\"Write #>   unmapped in SAM\\\" parameters enable unmapped output type selection.\" #> class: Workflow #> steps: #> - id: '#STAR_Genome_Generate' #>   inputs: #>   - id: '#STAR_Genome_Generate.sjdbScore' #>   - id: '#STAR_Genome_Generate.sjdbOverhang' #>   - id: '#STAR_Genome_Generate.sjdbGTFtagExonParentTranscript' #>     source: '#sjdbGTFtagExonParentTranscript' #>   - id: '#STAR_Genome_Generate.sjdbGTFtagExonParentGene' #>     source: '#sjdbGTFtagExonParentGene' #>   - id: '#STAR_Genome_Generate.sjdbGTFfile' #>     source: '#sjdbGTFfile' #>   - id: '#STAR_Genome_Generate.sjdbGTFfeatureExon' #>   - id: '#STAR_Genome_Generate.sjdbGTFchrPrefix' #>   - id: '#STAR_Genome_Generate.genomeSAsparseD' #>   - id: '#STAR_Genome_Generate.genomeSAindexNbases' #>   - id: '#STAR_Genome_Generate.genomeFastaFiles' #>     source: '#genomeFastaFiles' #>   - id: '#STAR_Genome_Generate.genomeChrBinNbits' #>   outputs: #>   - id: '#STAR_Genome_Generate.genome' #>   hints: [] #>   run: #>     sbg:validationErrors: [] #>     sbg:sbgMaintained: no #>     sbg:latestRevision: 1 #>     sbg:job: #>       allocatedResources: #>         mem: 60000 #>         cpu: 15 #>       inputs: #>         sjdbScore: 0 #>         sjdbGTFfeatureExon: sjdbGTFfeatureExon #>         sjdbOverhang: 0 #>         sjdbGTFtagExonParentTranscript: sjdbGTFtagExonParentTranscript #>         genomeChrBinNbits: genomeChrBinNbits #>         genomeSAsparseD: 0 #>         sjdbGTFfile: #>         - size: 0 #>           secondaryFiles: [] #>           class: File #>           path: /demo/test-files/chr20.gtf #>         sjdbGTFtagExonParentGene: sjdbGTFtagExonParentGene #>         genomeFastaFiles: #>           size: 0 #>           secondaryFiles: [] #>           class: File #>           path: /sbgenomics/test-data/chr20.fa #>         sjdbGTFchrPrefix: sjdbGTFchrPrefix #>         genomeSAindexNbases: 0 #>     sbg:toolAuthor: Alexander Dobin/CSHL #>     sbg:createdOn: 1450911469 #>     sbg:categories: #>     - Alignment #>     sbg:contributors: #>     - bix-demo #>     sbg:links: #>     - id: https://github.com/alexdobin/STAR #>       label: Homepage #>     - id: https://github.com/alexdobin/STAR/releases #>       label: Releases #>     - id: https://github.com/alexdobin/STAR/blob/master/doc/STARmanual.pdf #>       label: Manual #>     - id: https://groups.google.com/forum/#!forum/rna-star #>       label: Support #>     - id: http://www.ncbi.nlm.nih.gov/pubmed/23104886 #>       label: Publication #>     sbg:project: bix-demo/star-2-4-2a-demo #>     sbg:createdBy: bix-demo #>     sbg:toolkitVersion: 2.4.2a #>     sbg:id: sevenbridges/public-apps/star-genome-generate/1 #>     sbg:license: GNU General Public License v3.0 only #>     sbg:revision: 1 #>     sbg:cmdPreview: mkdir genomeDir && /opt/STAR --runMode genomeGenerate --genomeDir #>       ./genomeDir --runThreadN 15 --genomeFastaFiles /sbgenomics/test-data/chr20.fa #>       --genomeChrBinNbits genomeChrBinNbits --genomeSAindexNbases 0 --genomeSAsparseD #>       0 --sjdbGTFfeatureExon sjdbGTFfeatureExon --sjdbGTFtagExonParentTranscript sjdbGTFtagExonParentTranscript #>       --sjdbGTFtagExonParentGene sjdbGTFtagExonParentGene --sjdbOverhang 0 --sjdbScore #>       0 --sjdbGTFchrPrefix sjdbGTFchrPrefix  --sjdbGTFfile /demo/test-files/chr20.gtf  && #>       tar -vcf genome.tar ./genomeDir /sbgenomics/test-data/chr20.fa #>     sbg:modifiedOn: 1450911470 #>     sbg:modifiedBy: bix-demo #>     sbg:revisionsInfo: #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911469 #>       sbg:revision: 0 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911470 #>       sbg:revision: 1 #>     sbg:toolkit: STAR #>     id: sevenbridges/public-apps/star-genome-generate/1 #>     inputs: #>     - type: #>       - 'null' #>       - int #>       label: Extra alignment score #>       description: Extra alignment score for alignments that cross database junctions. #>       streamable: no #>       id: '#sjdbScore' #>       inputBinding: #>         position: 0 #>         prefix: --sjdbScore #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Splice junctions db parameters #>       sbg:includeInPorts: yes #>       sbg:toolDefaultValue: '2' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: '\"Overhang\" length' #>       description: Length of the donor/acceptor sequence on each side of the junctions, #>         ideally = (mate_length - 1) (int >= 0), if int = 0, splice junction database #>         is not used. #>       streamable: no #>       id: '#sjdbOverhang' #>       inputBinding: #>         position: 0 #>         prefix: --sjdbOverhang #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Splice junctions db parameters #>       sbg:includeInPorts: yes #>       sbg:toolDefaultValue: '100' #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Exons' parents name #>       description: Tag name to be used as exons' transcript-parents. #>       streamable: no #>       id: '#sjdbGTFtagExonParentTranscript' #>       inputBinding: #>         position: 0 #>         prefix: --sjdbGTFtagExonParentTranscript #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Splice junctions db parameters #>       sbg:toolDefaultValue: transcript_id #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Gene name #>       description: Tag name to be used as exons' gene-parents. #>       streamable: no #>       id: '#sjdbGTFtagExonParentGene' #>       inputBinding: #>         position: 0 #>         prefix: --sjdbGTFtagExonParentGene #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Splice junctions db parameters #>       sbg:toolDefaultValue: gene_id #>       required: no #>     - type: #>       - 'null' #>       - items: File #>         type: array #>       label: Splice junction file #>       description: Gene model annotations and/or known transcripts. #>       streamable: no #>       id: '#sjdbGTFfile' #>       sbg:category: Basic #>       sbg:fileTypes: GTF, GFF, TXT #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Set exons feature #>       description: Feature type in GTF file to be used as exons for building transcripts. #>       streamable: no #>       id: '#sjdbGTFfeatureExon' #>       inputBinding: #>         position: 0 #>         prefix: --sjdbGTFfeatureExon #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Splice junctions db parameters #>       sbg:toolDefaultValue: exon #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Chromosome names #>       description: Prefix for chromosome names in a GTF file (e.g. 'chr' for using #>         ENSMEBL annotations with UCSC geneomes). #>       streamable: no #>       id: '#sjdbGTFchrPrefix' #>       inputBinding: #>         position: 0 #>         prefix: --sjdbGTFchrPrefix #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Splice junctions db parameters #>       sbg:toolDefaultValue: '-' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Suffux array sparsity #>       description: 'Distance between indices: use bigger numbers to decrease needed #>         RAM at the cost of mapping speed reduction (int>0).' #>       streamable: no #>       id: '#genomeSAsparseD' #>       inputBinding: #>         position: 0 #>         prefix: --genomeSAsparseD #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Genome generation parameters #>       sbg:toolDefaultValue: '1' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Pre-indexing string length #>       description: Length (bases) of the SA pre-indexing string. Typically between #>         10 and 15. Longer strings will use much more memory, but allow faster searches. #>         For small genomes, this number needs to be scaled down, with a typical value #>         of min(14, log2(GenomeLength)/2 - 1). For example, for 1 megaBase genome, #>         this is equal to 9, for 100 kiloBase genome, this is equal to 7. #>       streamable: no #>       id: '#genomeSAindexNbases' #>       inputBinding: #>         position: 0 #>         prefix: --genomeSAindexNbases #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Genome generation parameters #>       sbg:toolDefaultValue: '14' #>       required: no #>     - type: #>       - File #>       label: Genome fasta files #>       description: Reference sequence to which to align the reads. #>       streamable: no #>       id: '#genomeFastaFiles' #>       inputBinding: #>         position: 0 #>         prefix: --genomeFastaFiles #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Basic #>       sbg:fileTypes: FASTA, FA #>       required: yes #>     - type: #>       - 'null' #>       - string #>       label: Bins size #>       description: 'Set log2(chrBin), where chrBin is the size (bits) of the bins #>         for genome storage: each chromosome will occupy an integer number of bins. #>         If you are using a genome with a large (>5,000) number of chrosomes/scaffolds, #>         you may need to reduce this number to reduce RAM consumption. The following #>         scaling is recomended: genomeChrBinNbits = min(18, log2(GenomeLength/NumberOfReferences)). #>         For example, for 3 gigaBase genome with 100,000 chromosomes/scaffolds, this #>         is equal to 15.' #>       streamable: no #>       id: '#genomeChrBinNbits' #>       inputBinding: #>         position: 0 #>         prefix: --genomeChrBinNbits #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Genome generation parameters #>       sbg:toolDefaultValue: '18' #>       required: no #>     outputs: #>     - type: #>       - 'null' #>       - File #>       label: Genome Files #>       description: Genome files comprise binary genome sequence, suffix arrays, text #>         chromosome names/lengths, splice junctions coordinates, and transcripts/genes #>         information. #>       streamable: no #>       id: '#genome' #>       outputBinding: #>         glob: '*.tar' #>       sbg:fileTypes: TAR #>     requirements: #>     - class: ExpressionEngineRequirement #>       id: '#cwl-js-engine' #>       requirements: #>       - class: DockerRequirement #>         dockerPull: rabix/js-engine #>     hints: #>     - class: DockerRequirement #>       dockerPull: images.sbgenomics.com/ana_d/star:2.4.2a #>       dockerImageId: a4b0ad2c3cae #>     - class: sbg:CPURequirement #>       value: 15 #>     - class: sbg:MemRequirement #>       value: 60000 #>     label: STAR Genome Generate #>     description: STAR Genome Generate is a tool that generates genome index files. #>       One set of files should be generated per each genome/annotation combination. #>       Once produced, these files could be used as long as genome/annotation combination #>       stays the same. Also, STAR Genome Generate which produced these files and STAR #>       aligner using them must be the same toolkit version. #>     class: CommandLineTool #>     baseCommand: #>     - mkdir #>     - genomeDir #>     - '&&' #>     - /opt/STAR #>     - --runMode #>     - genomeGenerate #>     - --genomeDir #>     - ./genomeDir #>     - --runThreadN #>     - class: Expression #>       script: |- #>         { #>           return $job.allocatedResources.cpu #>         } #>       engine: '#cwl-js-engine' #>     arguments: #>     - position: 99 #>       separate: yes #>       valueFrom: '&& tar -vcf genome.tar ./genomeDir' #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\t\\n  var sjFormat = \\\"False\\\"\\n  var gtfgffFormat = \\\"False\\\"\\n #>           \\ var list = $job.inputs.sjdbGTFfile\\n  var paths_list = []\\n  var joined_paths #>           = \\\"\\\"\\n  \\n  if (list) {\\n    list.forEach(function(f){return paths_list.push(f.path)})\\n #>           \\   joined_paths = paths_list.join(\\\" \\\")\\n\\n\\n    paths_list.forEach(function(f){\\n #>           \\     ext = f.replace(/^.*\\\\./, '')\\n      if (ext == \\\"gff\\\" || ext == #>           \\\"gtf\\\") {\\n        gtfgffFormat = \\\"True\\\"\\n        return gtfgffFormat\\n #>           \\     }\\n      if (ext == \\\"txt\\\") {\\n        sjFormat = \\\"True\\\"\\n        return #>           sjFormat\\n      }\\n    })\\n\\n    if ($job.inputs.sjdbGTFfile && $job.inputs.sjdbInsertSave #>           != \\\"None\\\") {\\n      if (sjFormat == \\\"True\\\") {\\n        return \\\"--sjdbFileChrStartEnd #>           \\\".concat(joined_paths)\\n      }\\n      else if (gtfgffFormat == \\\"True\\\") #>           {\\n        return \\\"--sjdbGTFfile \\\".concat(joined_paths)\\n      }\\n    }\\n #>           \\ }\\n}\" #>         class: Expression #>     stdin: '' #>     stdout: '' #>     successCodes: [] #>     temporaryFailCodes: [] #>     x: 384.0832266 #>     'y': 446.4998957 #>   sbg:x: 100.0 #>   sbg:y: 200.0 #> - id: '#SBG_FASTQ_Quality_Detector' #>   inputs: #>   - id: '#SBG_FASTQ_Quality_Detector.fastq' #>     source: '#fastq' #>   outputs: #>   - id: '#SBG_FASTQ_Quality_Detector.result' #>   hints: [] #>   run: #>     sbg:validationErrors: [] #>     sbg:sbgMaintained: no #>     sbg:latestRevision: 3 #>     sbg:job: #>       allocatedResources: #>         mem: 1000 #>         cpu: 1 #>       inputs: #>         fastq: #>           size: 0 #>           secondaryFiles: [] #>           class: File #>           path: /path/to/fastq.ext #>     sbg:toolAuthor: Seven Bridges Genomics #>     sbg:createdOn: 1450911312 #>     sbg:categories: #>     - FASTQ-Processing #>     sbg:contributors: #>     - bix-demo #>     sbg:project: bix-demo/sbgtools-demo #>     sbg:createdBy: bix-demo #>     sbg:id: sevenbridges/public-apps/sbg-fastq-quality-detector/3 #>     sbg:license: Apache License 2.0 #>     sbg:revision: 3 #>     sbg:cmdPreview: python /opt/sbg_fastq_quality_scale_detector.py --fastq /path/to/fastq.ext #>       /path/to/fastq.ext #>     sbg:modifiedOn: 1450911314 #>     sbg:modifiedBy: bix-demo #>     sbg:revisionsInfo: #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911312 #>       sbg:revision: 0 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911314 #>       sbg:revision: 3 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911313 #>       sbg:revision: 1 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911313 #>       sbg:revision: 2 #>     sbg:toolkit: SBGTools #>     id: sevenbridges/public-apps/sbg-fastq-quality-detector/3 #>     inputs: #>     - type: #>       - File #>       label: Fastq #>       description: FASTQ file. #>       streamable: no #>       id: '#fastq' #>       inputBinding: #>         position: 0 #>         prefix: --fastq #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       required: yes #>     outputs: #>     - type: #>       - 'null' #>       - File #>       label: Result #>       description: Source FASTQ file with updated metadata. #>       streamable: no #>       id: '#result' #>       outputBinding: #>         glob: '*.fastq' #>       sbg:fileTypes: FASTQ #>     requirements: #>     - class: CreateFileRequirement #>       fileDef: [] #>     hints: #>     - class: DockerRequirement #>       dockerPull: images.sbgenomics.com/tziotas/sbg_fastq_quality_scale_detector:1.0 #>       dockerImageId: '' #>     - class: sbg:CPURequirement #>       value: 1 #>     - class: sbg:MemRequirement #>       value: 1000 #>     label: SBG FASTQ Quality Detector #>     description: FASTQ Quality Scale Detector detects which quality encoding scheme #>       was used in your reads and automatically enters the proper value in the \"Quality #>       Scale\" metadata field. #>     class: CommandLineTool #>     baseCommand: #>     - python #>     - /opt/sbg_fastq_quality_scale_detector.py #>     arguments: [] #>     stdin: '' #>     stdout: '' #>     successCodes: [] #>     temporaryFailCodes: [] #>     x: 375.3333179 #>     'y': 323.5833156 #>   sbg:x: 300.0 #>   sbg:y: 200.0 #> - id: '#Picard_SortSam' #>   inputs: #>   - id: '#Picard_SortSam.validation_stringency' #>     default: SILENT #>   - id: '#Picard_SortSam.sort_order' #>     default: Coordinate #>   - id: '#Picard_SortSam.quiet' #>   - id: '#Picard_SortSam.output_type' #>   - id: '#Picard_SortSam.memory_per_job' #>   - id: '#Picard_SortSam.max_records_in_ram' #>   - id: '#Picard_SortSam.input_bam' #>     source: '#STAR.aligned_reads' #>   - id: '#Picard_SortSam.create_index' #>     default: 'True' #>   - id: '#Picard_SortSam.compression_level' #>   outputs: #>   - id: '#Picard_SortSam.sorted_bam' #>   hints: [] #>   run: #>     sbg:validationErrors: [] #>     sbg:sbgMaintained: no #>     sbg:latestRevision: 2 #>     sbg:job: #>       allocatedResources: #>         mem: 2048 #>         cpu: 1 #>       inputs: #>         sort_order: Coordinate #>         input_bam: #>           path: /root/dir/example.tested.bam #>         memory_per_job: 2048 #>         output_type: ~ #>         create_index: ~ #>     sbg:toolAuthor: Broad Institute #>     sbg:createdOn: 1450911168 #>     sbg:categories: #>     - SAM/BAM-Processing #>     sbg:contributors: #>     - bix-demo #>     sbg:links: #>     - id: http://broadinstitute.github.io/picard/index.html #>       label: Homepage #>     - id: https://github.com/broadinstitute/picard/releases/tag/1.138 #>       label: Source Code #>     - id: http://broadinstitute.github.io/picard/ #>       label: Wiki #>     - id: https://github.com/broadinstitute/picard/zipball/master #>       label: Download #>     - id: http://broadinstitute.github.io/picard/ #>       label: Publication #>     sbg:project: bix-demo/picard-1-140-demo #>     sbg:createdBy: bix-demo #>     sbg:toolkitVersion: '1.140' #>     sbg:id: sevenbridges/public-apps/picard-sortsam-1-140/2 #>     sbg:license: MIT License, Apache 2.0 Licence #>     sbg:revision: 2 #>     sbg:cmdPreview: java -Xmx2048M -jar /opt/picard-tools-1.140/picard.jar SortSam #>       OUTPUT=example.tested.sorted.bam INPUT=/root/dir/example.tested.bam SORT_ORDER=coordinate   INPUT=/root/dir/example.tested.bam #>       SORT_ORDER=coordinate  /root/dir/example.tested.bam #>     sbg:modifiedOn: 1450911170 #>     sbg:modifiedBy: bix-demo #>     sbg:revisionsInfo: #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911168 #>       sbg:revision: 0 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911169 #>       sbg:revision: 1 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911170 #>       sbg:revision: 2 #>     sbg:toolkit: Picard #>     id: sevenbridges/public-apps/picard-sortsam-1-140/2 #>     inputs: #>     - type: #>       - 'null' #>       - name: validation_stringency #>         symbols: #>         - STRICT #>         - LENIENT #>         - SILENT #>         type: enum #>       label: Validation stringency #>       description: 'Validation stringency for all SAM files read by this program. #>         Setting stringency to SILENT can improve performance when processing a BAM #>         file in which variable-length data (read, qualities, tags) do not otherwise #>         need to be decoded. This option can be set to ''null'' to clear the default #>         value. Possible values: {STRICT, LENIENT, SILENT}.' #>       streamable: no #>       id: '#validation_stringency' #>       inputBinding: #>         position: 0 #>         prefix: VALIDATION_STRINGENCY= #>         separate: no #>         valueFrom: #>           engine: '#cwl-js-engine' #>           script: |- #>             { #>               if ($job.inputs.validation_stringency) #>               { #>                 return $job.inputs.validation_stringency #>               } #>               else #>               { #>                 return \"SILENT\" #>               } #>             } #>           class: Expression #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Other input types #>       sbg:toolDefaultValue: SILENT #>       required: no #>     - type: #>       - name: sort_order #>         symbols: #>         - Unsorted #>         - Queryname #>         - Coordinate #>         type: enum #>       label: Sort order #>       description: 'Sort order of the output file. Possible values: {unsorted, queryname, #>         coordinate}.' #>       streamable: no #>       id: '#sort_order' #>       inputBinding: #>         position: 3 #>         prefix: SORT_ORDER= #>         separate: no #>         valueFrom: #>           engine: '#cwl-js-engine' #>           script: |- #>             { #>               p = $job.inputs.sort_order.toLowerCase() #>               return p #>             } #>           class: Expression #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Other input types #>       sbg:toolDefaultValue: Coordinate #>       sbg:altPrefix: SO #>       required: yes #>     - type: #>       - 'null' #>       - name: quiet #>         symbols: #>         - 'True' #>         - 'False' #>         type: enum #>       label: Quiet #>       description: 'This parameter indicates whether to suppress job-summary info #>         on System.err. This option can be set to ''null'' to clear the default value. #>         Possible values: {true, false}.' #>       streamable: no #>       id: '#quiet' #>       inputBinding: #>         position: 0 #>         prefix: QUIET= #>         separate: no #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Other input types #>       sbg:toolDefaultValue: 'False' #>       required: no #>     - type: #>       - 'null' #>       - name: output_type #>         symbols: #>         - BAM #>         - SAM #>         - SAME AS INPUT #>         type: enum #>       label: Output format #>       description: Since Picard tools can output both SAM and BAM files, user can #>         choose the format of the output file. #>       streamable: no #>       id: '#output_type' #>       sbg:category: Other input types #>       sbg:toolDefaultValue: SAME AS INPUT #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Memory per job #>       description: Amount of RAM memory to be used per job. Defaults to 2048 MB for #>         single threaded jobs. #>       streamable: no #>       id: '#memory_per_job' #>       sbg:toolDefaultValue: '2048' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max records in RAM #>       description: When writing SAM files that need to be sorted, this parameter will #>         specify the number of records stored in RAM before spilling to disk. Increasing #>         this number reduces the number of file handles needed to sort a SAM file, #>         and increases the amount of RAM needed. This option can be set to 'null' to #>         clear the default value. #>       streamable: no #>       id: '#max_records_in_ram' #>       inputBinding: #>         position: 0 #>         prefix: MAX_RECORDS_IN_RAM= #>         separate: no #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Other input types #>       sbg:toolDefaultValue: '500000' #>       required: no #>     - type: #>       - File #>       label: Input BAM #>       description: The BAM or SAM file to sort. #>       streamable: no #>       id: '#input_bam' #>       inputBinding: #>         position: 1 #>         prefix: INPUT= #>         separate: no #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: File inputs #>       sbg:fileTypes: BAM, SAM #>       sbg:altPrefix: I #>       required: yes #>     - type: #>       - 'null' #>       - name: create_index #>         symbols: #>         - 'True' #>         - 'False' #>         type: enum #>       label: Create index #>       description: 'This parameter indicates whether to create a BAM index when writing #>         a coordinate-sorted BAM file. This option can be set to ''null'' to clear #>         the default value. Possible values: {true, false}.' #>       streamable: no #>       id: '#create_index' #>       inputBinding: #>         position: 5 #>         prefix: CREATE_INDEX= #>         separate: no #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Other input types #>       sbg:toolDefaultValue: 'False' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Compression level #>       description: Compression level for all compressed files created (e.g. BAM and #>         GELI). This option can be set to 'null' to clear the default value. #>       streamable: no #>       id: '#compression_level' #>       inputBinding: #>         position: 0 #>         prefix: COMPRESSION_LEVEL= #>         separate: no #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Other input types #>       sbg:toolDefaultValue: '5' #>       required: no #>     outputs: #>     - type: #>       - 'null' #>       - File #>       label: Sorted BAM/SAM #>       description: Sorted BAM or SAM file. #>       streamable: no #>       id: '#sorted_bam' #>       outputBinding: #>         glob: '*.sorted.?am' #>       sbg:fileTypes: BAM, SAM #>     requirements: #>     - class: ExpressionEngineRequirement #>       id: '#cwl-js-engine' #>       requirements: #>       - class: DockerRequirement #>         dockerPull: rabix/js-engine #>       engineCommand: cwl-engine.js #>     hints: #>     - class: DockerRequirement #>       dockerPull: images.sbgenomics.com/mladenlsbg/picard:1.140 #>       dockerImageId: eab0e70b6629 #>     - class: sbg:CPURequirement #>       value: 1 #>     - class: sbg:MemRequirement #>       value: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  if($job.inputs.memory_per_job){\\n  \\treturn $job.inputs.memory_per_job\\n #>           \\ }\\n  \\treturn 2048\\n}\" #>         class: Expression #>     label: Picard SortSam #>     description: Picard SortSam sorts the input SAM or BAM. Input and output formats #>       are determined by the file extension. #>     class: CommandLineTool #>     baseCommand: #>     - java #>     - class: Expression #>       script: \"{   \\n  if($job.inputs.memory_per_job){\\n    return '-Xmx'.concat($job.inputs.memory_per_job, #>         'M')\\n  }   \\n  \\treturn '-Xmx2048M'\\n}\" #>       engine: '#cwl-js-engine' #>     - -jar #>     - /opt/picard-tools-1.140/picard.jar #>     - SortSam #>     arguments: #>     - position: 0 #>       prefix: OUTPUT= #>       separate: no #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  filename = $job.inputs.input_bam.path\\n  ext = $job.inputs.output_type\\n\\nif #>           (ext === \\\"BAM\\\")\\n{\\n    return filename.split('.').slice(0, -1).concat(\\\"sorted.bam\\\").join(\\\".\\\").replace(/^.*[\\\\\\\\\\\\/]/, #>           '')\\n    }\\n\\nelse if (ext === \\\"SAM\\\")\\n{\\n    return filename.split('.').slice(0, #>           -1).concat(\\\"sorted.sam\\\").join('.').replace(/^.*[\\\\\\\\\\\\/]/, '')\\n}\\n\\nelse #>           \\n{\\n\\treturn filename.split('.').slice(0, -1).concat(\\\"sorted.\\\"+filename.split('.').slice(-1)[0]).join(\\\".\\\").replace(/^.*[\\\\\\\\\\\\/]/, #>           '')\\n}\\n}\" #>         class: Expression #>     - position: 1000 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  filename = $job.inputs.input_bam.path\\n  \\n  /* figuring out #>           output file type */\\n  ext = $job.inputs.output_type\\n  if (ext === \\\"BAM\\\")\\n #>           \\ {\\n    out_extension = \\\"BAM\\\"\\n  }\\n  else if (ext === \\\"SAM\\\")\\n  {\\n #>           \\   out_extension = \\\"SAM\\\"\\n  }\\n  else \\n  {\\n\\tout_extension = filename.split('.').slice(-1)[0].toUpperCase()\\n #>           \\ }  \\n  \\n  /* if exist moving .bai in bam.bai */\\n  if ($job.inputs.create_index #>           === 'True' && $job.inputs.sort_order === 'Coordinate' && out_extension == #>           \\\"BAM\\\")\\n  {\\n    \\n    old_name = filename.split('.').slice(0, -1).concat('sorted.bai').join('.').replace(/^.*[\\\\\\\\\\\\/]/, #>           '')\\n    new_name = filename.split('.').slice(0, -1).concat('sorted.bam.bai').join('.').replace(/^.*[\\\\\\\\\\\\/]/, #>           '')\\n    return \\\"; mv \\\" + \\\" \\\" + old_name + \\\" \\\" + new_name\\n  }\\n\\n}\" #>         class: Expression #>     stdin: '' #>     stdout: '' #>     successCodes: [] #>     temporaryFailCodes: [] #>     x: 773.0831807 #>     'y': 470.9165939 #>   sbg:x: 500.0 #>   sbg:y: 200.0 #> - id: '#STAR' #>   inputs: #>   - id: '#STAR.winFlankNbins' #>   - id: '#STAR.winBinNbits' #>   - id: '#STAR.winAnchorMultimapNmax' #>     source: '#winAnchorMultimapNmax' #>   - id: '#STAR.winAnchorDistNbins' #>     source: '#winAnchorDistNbins' #>   - id: '#STAR.twopassMode' #>   - id: '#STAR.twopass1readsN' #>   - id: '#STAR.sjdbScore' #>   - id: '#STAR.sjdbOverhang' #>     default: 100 #>   - id: '#STAR.sjdbInsertSave' #>   - id: '#STAR.sjdbGTFtagExonParentTranscript' #>   - id: '#STAR.sjdbGTFtagExonParentGene' #>   - id: '#STAR.sjdbGTFfile' #>     source: '#sjdbGTFfile' #>   - id: '#STAR.sjdbGTFfeatureExon' #>   - id: '#STAR.sjdbGTFchrPrefix' #>   - id: '#STAR.seedSearchStartLmaxOverLread' #>   - id: '#STAR.seedSearchStartLmax' #>   - id: '#STAR.seedSearchLmax' #>   - id: '#STAR.seedPerWindowNmax' #>   - id: '#STAR.seedPerReadNmax' #>   - id: '#STAR.seedNoneLociPerWindow' #>   - id: '#STAR.seedMultimapNmax' #>   - id: '#STAR.scoreStitchSJshift' #>   - id: '#STAR.scoreInsOpen' #>   - id: '#STAR.scoreInsBase' #>   - id: '#STAR.scoreGenomicLengthLog2scale' #>   - id: '#STAR.scoreGapNoncan' #>   - id: '#STAR.scoreGapGCAG' #>   - id: '#STAR.scoreGapATAC' #>   - id: '#STAR.scoreGap' #>   - id: '#STAR.scoreDelOpen' #>   - id: '#STAR.scoreDelBase' #>   - id: '#STAR.rg_seq_center' #>   - id: '#STAR.rg_sample_id' #>   - id: '#STAR.rg_platform_unit_id' #>   - id: '#STAR.rg_platform' #>   - id: '#STAR.rg_mfl' #>   - id: '#STAR.rg_library_id' #>   - id: '#STAR.reads' #>     source: '#SBG_FASTQ_Quality_Detector.result' #>   - id: '#STAR.readMatesLengthsIn' #>   - id: '#STAR.readMapNumber' #>   - id: '#STAR.quantTranscriptomeBan' #>   - id: '#STAR.quantMode' #>     default: TranscriptomeSAM #>   - id: '#STAR.outSortingType' #>     default: SortedByCoordinate #>   - id: '#STAR.outSJfilterReads' #>   - id: '#STAR.outSJfilterOverhangMin' #>   - id: '#STAR.outSJfilterIntronMaxVsReadN' #>   - id: '#STAR.outSJfilterDistToOtherSJmin' #>   - id: '#STAR.outSJfilterCountUniqueMin' #>   - id: '#STAR.outSJfilterCountTotalMin' #>   - id: '#STAR.outSAMunmapped' #>   - id: '#STAR.outSAMtype' #>     default: BAM #>   - id: '#STAR.outSAMstrandField' #>   - id: '#STAR.outSAMreadID' #>   - id: '#STAR.outSAMprimaryFlag' #>   - id: '#STAR.outSAMorder' #>   - id: '#STAR.outSAMmode' #>   - id: '#STAR.outSAMmapqUnique' #>   - id: '#STAR.outSAMheaderPG' #>   - id: '#STAR.outSAMheaderHD' #>   - id: '#STAR.outSAMflagOR' #>   - id: '#STAR.outSAMflagAND' #>   - id: '#STAR.outSAMattributes' #>   - id: '#STAR.outReadsUnmapped' #>     default: Fastx #>   - id: '#STAR.outQSconversionAdd' #>   - id: '#STAR.outFilterType' #>   - id: '#STAR.outFilterScoreMinOverLread' #>   - id: '#STAR.outFilterScoreMin' #>   - id: '#STAR.outFilterMultimapScoreRange' #>   - id: '#STAR.outFilterMultimapNmax' #>   - id: '#STAR.outFilterMismatchNoverReadLmax' #>   - id: '#STAR.outFilterMismatchNoverLmax' #>   - id: '#STAR.outFilterMismatchNmax' #>   - id: '#STAR.outFilterMatchNminOverLread' #>   - id: '#STAR.outFilterMatchNmin' #>   - id: '#STAR.outFilterIntronMotifs' #>   - id: '#STAR.limitSjdbInsertNsj' #>   - id: '#STAR.limitOutSJoneRead' #>   - id: '#STAR.limitOutSJcollapsed' #>   - id: '#STAR.limitBAMsortRAM' #>   - id: '#STAR.genomeDirName' #>   - id: '#STAR.genome' #>     source: '#STAR_Genome_Generate.genome' #>   - id: '#STAR.clip5pNbases' #>   - id: '#STAR.clip3pNbases' #>   - id: '#STAR.clip3pAfterAdapterNbases' #>   - id: '#STAR.clip3pAdapterSeq' #>   - id: '#STAR.clip3pAdapterMMp' #>   - id: '#STAR.chimSegmentMin' #>   - id: '#STAR.chimScoreSeparation' #>   - id: '#STAR.chimScoreMin' #>   - id: '#STAR.chimScoreJunctionNonGTAG' #>   - id: '#STAR.chimScoreDropMax' #>   - id: '#STAR.chimOutType' #>   - id: '#STAR.chimJunctionOverhangMin' #>   - id: '#STAR.alignWindowsPerReadNmax' #>   - id: '#STAR.alignTranscriptsPerWindowNmax' #>   - id: '#STAR.alignTranscriptsPerReadNmax' #>   - id: '#STAR.alignSplicedMateMapLminOverLmate' #>   - id: '#STAR.alignSplicedMateMapLmin' #>   - id: '#STAR.alignSoftClipAtReferenceEnds' #>   - id: '#STAR.alignSJoverhangMin' #>   - id: '#STAR.alignSJDBoverhangMin' #>   - id: '#STAR.alignMatesGapMax' #>   - id: '#STAR.alignIntronMin' #>   - id: '#STAR.alignIntronMax' #>   - id: '#STAR.alignEndsType' #>   outputs: #>   - id: '#STAR.unmapped_reads' #>   - id: '#STAR.transcriptome_aligned_reads' #>   - id: '#STAR.splice_junctions' #>   - id: '#STAR.reads_per_gene' #>   - id: '#STAR.log_files' #>   - id: '#STAR.intermediate_genome' #>   - id: '#STAR.chimeric_junctions' #>   - id: '#STAR.chimeric_alignments' #>   - id: '#STAR.aligned_reads' #>   hints: [] #>   run: #>     sbg:validationErrors: [] #>     sbg:sbgMaintained: no #>     sbg:latestRevision: 4 #>     sbg:job: #>       allocatedResources: #>         mem: 60000 #>         cpu: 15 #>       inputs: #>         alignWindowsPerReadNmax: 0 #>         outSAMheaderPG: outSAMheaderPG #>         GENOME_DIR_NAME: '' #>         outFilterMatchNminOverLread: 0 #>         rg_platform_unit_id: rg_platform_unit #>         alignTranscriptsPerReadNmax: 0 #>         readMapNumber: 0 #>         alignSplicedMateMapLminOverLmate: 0 #>         alignMatesGapMax: 0 #>         outFilterMultimapNmax: 0 #>         clip5pNbases: #>         - 0 #>         outSAMstrandField: None #>         readMatesLengthsIn: NotEqual #>         outSAMattributes: Standard #>         seedMultimapNmax: 0 #>         rg_mfl: rg_mfl #>         chimSegmentMin: 0 #>         winAnchorDistNbins: 0 #>         outSortingType: SortedByCoordinate #>         outFilterMultimapScoreRange: 0 #>         sjdbInsertSave: Basic #>         clip3pAfterAdapterNbases: #>         - 0 #>         scoreDelBase: 0 #>         outFilterMatchNmin: 0 #>         twopass1readsN: 0 #>         outSAMunmapped: None #>         genome: #>           size: 0 #>           secondaryFiles: [] #>           class: File #>           path: genome.ext #>         sjdbGTFtagExonParentTranscript: '' #>         limitBAMsortRAM: 0 #>         alignEndsType: Local #>         seedNoneLociPerWindow: 0 #>         rg_sample_id: rg_sample #>         sjdbGTFtagExonParentGene: '' #>         chimScoreMin: 0 #>         outSJfilterIntronMaxVsReadN: #>         - 0 #>         twopassMode: Basic #>         alignSplicedMateMapLmin: 0 #>         outSJfilterReads: All #>         outSAMprimaryFlag: OneBestScore #>         outSJfilterCountTotalMin: #>         - 3 #>         - 1 #>         - 1 #>         - 1 #>         outSAMorder: Paired #>         outSAMflagAND: 0 #>         chimScoreSeparation: 0 #>         alignSJoverhangMin: 0 #>         outFilterScoreMin: 0 #>         seedSearchStartLmax: 0 #>         scoreGapGCAG: 0 #>         scoreGenomicLengthLog2scale: 0 #>         outFilterIntronMotifs: None #>         outFilterMismatchNmax: 0 #>         reads: #>         - size: 0 #>           secondaryFiles: [] #>           class: File #>           metadata: #>             format: fastq #>             paired_end: '1' #>             seq_center: illumina #>           path: /test-data/mate_1.fastq.bz2 #>         scoreGap: 0 #>         outSJfilterOverhangMin: #>         - 30 #>         - 12 #>         - 12 #>         - 12 #>         outSAMflagOR: 0 #>         outSAMmode: Full #>         rg_library_id: '' #>         chimScoreJunctionNonGTAG: 0 #>         scoreInsOpen: 0 #>         clip3pAdapterSeq: #>         - clip3pAdapterSeq #>         chimScoreDropMax: 0 #>         outFilterType: Normal #>         scoreGapATAC: 0 #>         rg_platform: Ion Torrent PGM #>         clip3pAdapterMMp: #>         - 0 #>         sjdbGTFfeatureExon: '' #>         outQSconversionAdd: 0 #>         quantMode: TranscriptomeSAM #>         alignIntronMin: 0 #>         scoreInsBase: 0 #>         scoreGapNoncan: 0 #>         seedSearchLmax: 0 #>         outSJfilterDistToOtherSJmin: #>         - 0 #>         outFilterScoreMinOverLread: 0 #>         alignSJDBoverhangMin: 0 #>         limitOutSJcollapsed: 0 #>         winAnchorMultimapNmax: 0 #>         outFilterMismatchNoverLmax: 0 #>         rg_seq_center: '' #>         outSAMheaderHD: outSAMheaderHD #>         chimOutType: Within #>         quantTranscriptomeBan: IndelSoftclipSingleend #>         limitOutSJoneRead: 0 #>         alignTranscriptsPerWindowNmax: 0 #>         sjdbOverhang: ~ #>         outReadsUnmapped: Fastx #>         scoreStitchSJshift: 0 #>         seedPerWindowNmax: 0 #>         outSJfilterCountUniqueMin: #>         - 3 #>         - 1 #>         - 1 #>         - 1 #>         scoreDelOpen: 0 #>         sjdbGTFfile: #>         - path: /demo/test-data/chr20.gtf #>         clip3pNbases: #>         - 0 #>         - 3 #>         winBinNbits: 0 #>         sjdbScore: ~ #>         seedSearchStartLmaxOverLread: 0 #>         alignIntronMax: 0 #>         seedPerReadNmax: 0 #>         outFilterMismatchNoverReadLmax: 0 #>         winFlankNbins: 0 #>         sjdbGTFchrPrefix: chrPrefix #>         alignSoftClipAtReferenceEnds: 'Yes' #>         outSAMreadID: Standard #>         outSAMtype: BAM #>         chimJunctionOverhangMin: 0 #>         limitSjdbInsertNsj: 0 #>         outSAMmapqUnique: 0 #>     sbg:toolAuthor: Alexander Dobin/CSHL #>     sbg:createdOn: 1450911471 #>     sbg:categories: #>     - Alignment #>     sbg:contributors: #>     - ana_d #>     - bix-demo #>     - uros_sipetic #>     sbg:links: #>     - id: https://github.com/alexdobin/STAR #>       label: Homepage #>     - id: https://github.com/alexdobin/STAR/releases #>       label: Releases #>     - id: https://github.com/alexdobin/STAR/blob/master/doc/STARmanual.pdf #>       label: Manual #>     - id: https://groups.google.com/forum/#!forum/rna-star #>       label: Support #>     - id: http://www.ncbi.nlm.nih.gov/pubmed/23104886 #>       label: Publication #>     sbg:project: bix-demo/star-2-4-2a-demo #>     sbg:createdBy: bix-demo #>     sbg:toolkitVersion: 2.4.2a #>     sbg:id: sevenbridges/public-apps/star/4 #>     sbg:license: GNU General Public License v3.0 only #>     sbg:revision: 4 #>     sbg:cmdPreview: tar -xvf genome.ext && /opt/STAR --runThreadN 15  --readFilesCommand #>       bzcat  --sjdbGTFfile /demo/test-data/chr20.gtf  --sjdbGTFchrPrefix chrPrefix #>       --sjdbInsertSave Basic  --twopass1readsN 0  --chimOutType WithinBAM  --outSAMattrRGline #>       ID:1 CN:illumina PI:rg_mfl PL:Ion_Torrent_PGM PU:rg_platform_unit SM:rg_sample  --quantMode #>       TranscriptomeSAM --outFileNamePrefix ./mate_1.fastq.bz2.  --readFilesIn /test-data/mate_1.fastq.bz2  && #>       tar -vcf mate_1.fastq.bz2._STARgenome.tar ./mate_1.fastq.bz2._STARgenome  && #>       mv mate_1.fastq.bz2.Unmapped.out.mate1 mate_1.fastq.bz2.Unmapped.out.mate1.fastq #>     sbg:modifiedOn: 1462889222 #>     sbg:modifiedBy: ana_d #>     sbg:revisionsInfo: #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911471 #>       sbg:revision: 0 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911473 #>       sbg:revision: 1 #>     - sbg:modifiedBy: bix-demo #>       sbg:modifiedOn: 1450911475 #>       sbg:revision: 2 #>     - sbg:modifiedBy: uros_sipetic #>       sbg:modifiedOn: 1462878528 #>       sbg:revision: 3 #>     - sbg:modifiedBy: ana_d #>       sbg:modifiedOn: 1462889222 #>       sbg:revision: 4 #>     sbg:toolkit: STAR #>     id: sevenbridges/public-apps/star/4 #>     inputs: #>     - type: #>       - 'null' #>       - int #>       label: Flanking regions size #>       description: =log2(winFlank), where win Flank is the size of the left and right #>         flanking regions for each window (int>0). #>       streamable: no #>       id: '#winFlankNbins' #>       inputBinding: #>         position: 0 #>         prefix: --winFlankNbins #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Windows, Anchors, Binning #>       sbg:includeInPorts: yes #>       sbg:toolDefaultValue: '4' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Bin size #>       description: =log2(winBin), where winBin is the size of the bin for the windows/clustering, #>         each window will occupy an integer number of bins (int>0). #>       streamable: no #>       id: '#winBinNbits' #>       inputBinding: #>         position: 0 #>         prefix: --winBinNbits #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Windows, Anchors, Binning #>       sbg:includeInPorts: yes #>       sbg:toolDefaultValue: '16' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max loci anchors #>       description: Max number of loci anchors are allowed to map to (int>0). #>       streamable: no #>       id: '#winAnchorMultimapNmax' #>       inputBinding: #>         position: 0 #>         prefix: --winAnchorMultimapNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Windows, Anchors, Binning #>       sbg:toolDefaultValue: '50' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max bins between anchors #>       description: Max number of bins between two anchors that allows aggregation #>         of anchors into one window (int>0). #>       streamable: no #>       id: '#winAnchorDistNbins' #>       inputBinding: #>         position: 0 #>         prefix: --winAnchorDistNbins #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Windows, Anchors, Binning #>       sbg:toolDefaultValue: '9' #>       required: no #>     - type: #>       - 'null' #>       - name: twopassMode #>         symbols: #>         - None #>         - Basic #>         type: enum #>       label: Two-pass mode #>       description: '2-pass mapping mode. None: 1-pass mapping; Basic: basic 2-pass #>         mapping, with all 1st pass junctions inserted into the genome indices on the #>         fly.' #>       streamable: no #>       id: '#twopassMode' #>       inputBinding: #>         position: 0 #>         prefix: --twopassMode #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: 2-pass mapping #>       sbg:toolDefaultValue: None #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Reads to process in 1st step #>       description: 'Number of reads to process for the 1st step. 0: 1-step only, no #>         2nd pass; use very large number to map all reads in the first step (int>0).' #>       streamable: no #>       id: '#twopass1readsN' #>       sbg:category: 2-pass mapping #>       sbg:toolDefaultValue: '-1' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Extra alignment score #>       description: Extra alignment score for alignments that cross database junctions. #>       streamable: no #>       id: '#sjdbScore' #>       sbg:category: Splice junctions database #>       sbg:toolDefaultValue: '2' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: '\"Overhang\" length' #>       description: Length of the donor/acceptor sequence on each side of the junctions, #>         ideally = (mate_length - 1) (int >= 0), if int = 0, splice junction database #>         is not used. #>       streamable: no #>       id: '#sjdbOverhang' #>       sbg:category: Splice junctions database #>       sbg:toolDefaultValue: '100' #>       required: no #>     - type: #>       - 'null' #>       - name: sjdbInsertSave #>         symbols: #>         - Basic #>         - All #>         - None #>         type: enum #>       label: Save junction files #>       description: 'Which files to save when sjdb junctions are inserted on the fly #>         at the mapping step. None: not saving files at all; Basic: only small junction/transcript #>         files; All: all files including big Genome, SA and SAindex. These files are #>         output as archive.' #>       streamable: no #>       id: '#sjdbInsertSave' #>       sbg:category: Splice junctions database #>       sbg:toolDefaultValue: None #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Exons' parents name #>       description: Tag name to be used as exons' transcript-parents. #>       streamable: no #>       id: '#sjdbGTFtagExonParentTranscript' #>       sbg:category: Splice junctions database #>       sbg:toolDefaultValue: transcript_id #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Gene name #>       description: Tag name to be used as exons' gene-parents. #>       streamable: no #>       id: '#sjdbGTFtagExonParentGene' #>       sbg:category: Splice junctions database #>       sbg:toolDefaultValue: gene_id #>       required: no #>     - type: #>       - 'null' #>       - items: File #>         type: array #>       label: Splice junction file #>       description: Gene model annotations and/or known transcripts. No need to include #>         this input, except in case of using \"on the fly\" annotations. #>       streamable: no #>       id: '#sjdbGTFfile' #>       sbg:category: Basic #>       sbg:fileTypes: GTF, GFF, TXT #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Set exons feature #>       description: Feature type in GTF file to be used as exons for building transcripts. #>       streamable: no #>       id: '#sjdbGTFfeatureExon' #>       sbg:category: Splice junctions database #>       sbg:toolDefaultValue: exon #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Chromosome names #>       description: Prefix for chromosome names in a GTF file (e.g. 'chr' for using #>         ENSMEBL annotations with UCSC geneomes). #>       streamable: no #>       id: '#sjdbGTFchrPrefix' #>       sbg:category: Splice junctions database #>       sbg:toolDefaultValue: '-' #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Search start point normalized #>       description: seedSearchStartLmax normalized to read length (sum of mates' lengths #>         for paired-end reads). #>       streamable: no #>       id: '#seedSearchStartLmaxOverLread' #>       inputBinding: #>         position: 0 #>         prefix: --seedSearchStartLmaxOverLread #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '1.0' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Search start point #>       description: Defines the search start point through the read - the read is split #>         into pieces no longer than this value (int>0). #>       streamable: no #>       id: '#seedSearchStartLmax' #>       inputBinding: #>         position: 0 #>         prefix: --seedSearchStartLmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '50' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max seed length #>       description: Defines the maximum length of the seeds, if =0 max seed length #>         is infinite (int>=0). #>       streamable: no #>       id: '#seedSearchLmax' #>       inputBinding: #>         position: 0 #>         prefix: --seedSearchLmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max seeds per window #>       description: Max number of seeds per window (int>=0). #>       streamable: no #>       id: '#seedPerWindowNmax' #>       inputBinding: #>         position: 0 #>         prefix: --seedPerWindowNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '50' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max seeds per read #>       description: Max number of seeds per read (int>=0). #>       streamable: no #>       id: '#seedPerReadNmax' #>       inputBinding: #>         position: 0 #>         prefix: --seedPerReadNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '1000' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max one-seed loci per window #>       description: Max number of one seed loci per window (int>=0). #>       streamable: no #>       id: '#seedNoneLociPerWindow' #>       inputBinding: #>         position: 0 #>         prefix: --seedNoneLociPerWindow #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '10' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Filter pieces for stitching #>       description: Only pieces that map fewer than this value are utilized in the #>         stitching procedure (int>=0). #>       streamable: no #>       id: '#seedMultimapNmax' #>       inputBinding: #>         position: 0 #>         prefix: --seedMultimapNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '10000' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max score reduction #>       description: Maximum score reduction while searching for SJ boundaries in the #>         stitching step. #>       streamable: no #>       id: '#scoreStitchSJshift' #>       inputBinding: #>         position: 0 #>         prefix: --scoreStitchSJshift #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '1' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Insertion Open Penalty #>       description: Insertion open penalty. #>       streamable: no #>       id: '#scoreInsOpen' #>       inputBinding: #>         position: 0 #>         prefix: --scoreInsOpen #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-2' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Insertion extension penalty #>       description: Insertion extension penalty per base (in addition to --scoreInsOpen). #>       streamable: no #>       id: '#scoreInsBase' #>       inputBinding: #>         position: 0 #>         prefix: --scoreInsBase #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-2' #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Log scaled score #>       description: 'Extra score logarithmically scaled with genomic length of the #>         alignment: <int>*log2(genomicLength).' #>       streamable: no #>       id: '#scoreGenomicLengthLog2scale' #>       inputBinding: #>         position: 0 #>         prefix: --scoreGenomicLengthLog2scale #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-0.25' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Non-canonical gap open #>       description: Non-canonical gap open penalty (in addition to --scoreGap). #>       streamable: no #>       id: '#scoreGapNoncan' #>       inputBinding: #>         position: 0 #>         prefix: --scoreGapNoncan #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-8' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: GC/AG and CT/GC gap open #>       description: GC/AG and CT/GC gap open penalty (in addition to --scoreGap). #>       streamable: no #>       id: '#scoreGapGCAG' #>       inputBinding: #>         position: 0 #>         prefix: --scoreGapGCAG #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-4' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: AT/AC and GT/AT gap open #>       description: AT/AC and GT/AT gap open penalty (in addition to --scoreGap). #>       streamable: no #>       id: '#scoreGapATAC' #>       inputBinding: #>         position: 0 #>         prefix: --scoreGapATAC #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-8' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Gap open penalty #>       description: Gap open penalty. #>       streamable: no #>       id: '#scoreGap' #>       inputBinding: #>         position: 0 #>         prefix: --scoreGap #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Deletion open penalty #>       description: Deletion open penalty. #>       streamable: no #>       id: '#scoreDelOpen' #>       inputBinding: #>         position: 0 #>         prefix: --scoreDelOpen #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-2' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Deletion extension penalty #>       description: Deletion extension penalty per base (in addition to --scoreDelOpen). #>       streamable: no #>       id: '#scoreDelBase' #>       inputBinding: #>         position: 0 #>         prefix: --scoreDelBase #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Scoring #>       sbg:toolDefaultValue: '-2' #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Sequencing center #>       description: Specify the sequencing center for RG line. #>       streamable: no #>       id: '#rg_seq_center' #>       sbg:category: Read group #>       sbg:toolDefaultValue: Inferred from metadata #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Sample ID #>       description: Specify the sample ID for RG line. #>       streamable: no #>       id: '#rg_sample_id' #>       sbg:category: Read group #>       sbg:toolDefaultValue: Inferred from metadata #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Platform unit ID #>       description: Specify the platform unit ID for RG line. #>       streamable: no #>       id: '#rg_platform_unit_id' #>       sbg:category: Read group #>       sbg:toolDefaultValue: Inferred from metadata #>       required: no #>     - type: #>       - 'null' #>       - name: rg_platform #>         symbols: #>         - LS 454 #>         - Helicos #>         - Illumina #>         - ABI SOLiD #>         - Ion Torrent PGM #>         - PacBio #>         type: enum #>       label: Platform #>       description: Specify the version of the technology that was used for sequencing #>         or assaying. #>       streamable: no #>       id: '#rg_platform' #>       sbg:category: Read group #>       sbg:toolDefaultValue: Inferred from metadata #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Median fragment length #>       description: Specify the median fragment length for RG line. #>       streamable: no #>       id: '#rg_mfl' #>       sbg:category: Read group #>       sbg:toolDefaultValue: Inferred from metadata #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Library ID #>       description: Specify the library ID for RG line. #>       streamable: no #>       id: '#rg_library_id' #>       sbg:category: Read group #>       sbg:toolDefaultValue: Inferred from metadata #>       required: no #>     - type: #>       - items: File #>         type: array #>       label: Read sequence #>       description: Read sequence. #>       streamable: no #>       id: '#reads' #>       inputBinding: #>         position: 10 #>         separate: yes #>         itemSeparator: ' ' #>         valueFrom: #>           engine: '#cwl-js-engine' #>           script: \"{\\t\\n  var list = [].concat($job.inputs.reads)\\n  \\n  var resp #>             = []\\n  \\n  if (list.length == 1){\\n    resp.push(list[0].path)\\n    \\n #>             \\ }else if (list.length == 2){    \\n    \\n    left = \\\"\\\"\\n    right = #>             \\\"\\\"\\n      \\n    for (index = 0; index < list.length; ++index) {\\n      \\n #>             \\     if (list[index].metadata != null){\\n        if (list[index].metadata.paired_end #>             == 1){\\n          left = list[index].path\\n        }else if (list[index].metadata.paired_end #>             == 2){\\n          right = list[index].path\\n        }\\n      }\\n    }\\n #>             \\   \\n    if (left != \\\"\\\" && right != \\\"\\\"){      \\n      resp.push(left)\\n #>             \\     resp.push(right)\\n    }\\n  }\\n  else if (list.length > 2){\\n    left #>             = []\\n    right = []\\n      \\n    for (index = 0; index < list.length; #>             ++index) {\\n      \\n      if (list[index].metadata != null){\\n        if #>             (list[index].metadata.paired_end == 1){\\n          left.push(list[index].path)\\n #>             \\       }else if (list[index].metadata.paired_end == 2){\\n          right.push(list[index].path)\\n #>             \\       }\\n      }\\n    }\\n    left_join = left.join()\\n    right_join #>             = right.join()\\n    if (left != [] && right != []){      \\n      resp.push(left_join)\\n #>             \\     resp.push(right_join)\\n    }\\t\\n  }\\n  \\n  if(resp.length > 0){ #>             \\   \\n    return \\\"--readFilesIn \\\".concat(resp.join(\\\" \\\"))\\n  }\\n}\" #>           class: Expression #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Basic #>       sbg:fileTypes: FASTA, FASTQ, FA, FQ, FASTQ.GZ, FQ.GZ, FASTQ.BZ2, FQ.BZ2 #>       required: yes #>     - type: #>       - 'null' #>       - name: readMatesLengthsIn #>         symbols: #>         - NotEqual #>         - Equal #>         type: enum #>       label: Reads lengths #>       description: Equal/Not equal - lengths of names, sequences, qualities for both #>         mates are the same/not the same. \"Not equal\" is safe in all situations. #>       streamable: no #>       id: '#readMatesLengthsIn' #>       inputBinding: #>         position: 0 #>         prefix: --readMatesLengthsIn #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Read parameters #>       sbg:toolDefaultValue: NotEqual #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Reads to map #>       description: Number of reads to map from the beginning of the file. #>       streamable: no #>       id: '#readMapNumber' #>       inputBinding: #>         position: 0 #>         prefix: --readMapNumber #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Read parameters #>       sbg:toolDefaultValue: '-1' #>       required: no #>     - type: #>       - 'null' #>       - name: quantTranscriptomeBan #>         symbols: #>         - IndelSoftclipSingleend #>         - Singleend #>         type: enum #>       label: Prohibit alignment type #>       description: 'Prohibit various alignment type. IndelSoftclipSingleend: prohibit #>         indels, soft clipping and single-end alignments - compatible with RSEM; Singleend: #>         prohibit single-end alignments.' #>       streamable: no #>       id: '#quantTranscriptomeBan' #>       inputBinding: #>         position: 0 #>         prefix: --quantTranscriptomeBan #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Quantification of Annotations #>       sbg:toolDefaultValue: IndelSoftclipSingleend #>       required: no #>     - type: #>       - 'null' #>       - name: quantMode #>         symbols: #>         - TranscriptomeSAM #>         - GeneCounts #>         type: enum #>       label: Quantification mode #>       description: Types of quantification requested. 'TranscriptomeSAM' option outputs #>         SAM/BAM alignments to transcriptome into a separate file. With 'GeneCounts' #>         option, STAR will count number of reads per gene while mapping. #>       streamable: no #>       id: '#quantMode' #>       sbg:category: Quantification of Annotations #>       sbg:toolDefaultValue: '-' #>       required: no #>     - type: #>       - 'null' #>       - name: outSortingType #>         symbols: #>         - Unsorted #>         - SortedByCoordinate #>         - Unsorted SortedByCoordinate #>         type: enum #>       label: Output sorting type #>       description: Type of output sorting. #>       streamable: no #>       id: '#outSortingType' #>       sbg:category: Output #>       sbg:toolDefaultValue: SortedByCoordinate #>       required: no #>     - type: #>       - 'null' #>       - name: outSJfilterReads #>         symbols: #>         - All #>         - Unique #>         type: enum #>       label: Collapsed junctions reads #>       description: 'Which reads to consider for collapsed splice junctions output. #>         All: all reads, unique- and multi-mappers; Unique: uniquely mapping reads #>         only.' #>       streamable: no #>       id: '#outSJfilterReads' #>       inputBinding: #>         position: 0 #>         prefix: --outSJfilterReads #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: 'Output filtering: splice junctions' #>       sbg:toolDefaultValue: All #>       required: no #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Min overhang SJ #>       description: Minimum overhang length for splice junctions on both sides for #>         each of the motifs. To set no output for desired motif, assign -1 to the corresponding #>         field. Does not apply to annotated junctions. #>       streamable: no #>       id: '#outSJfilterOverhangMin' #>       inputBinding: #>         position: 0 #>         prefix: --outSJfilterOverhangMin #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: 'Output filtering: splice junctions' #>       sbg:toolDefaultValue: 30 12 12 12 #>       required: no #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Max gap allowed #>       description: 'Maximum gap allowed for junctions supported by 1,2,3...N reads #>         (int >= 0) i.e. by default junctions supported by 1 read can have gaps <=50000b, #>         by 2 reads: <=100000b, by 3 reads: <=200000. By 4 or more reads: any gap <=alignIntronMax. #>         Does not apply to annotated junctions.' #>       streamable: no #>       id: '#outSJfilterIntronMaxVsReadN' #>       inputBinding: #>         position: 0 #>         prefix: --outSJfilterIntronMaxVsReadN #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: 'Output filtering: splice junctions' #>       sbg:toolDefaultValue: 50000 100000 200000 #>       required: no #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Min distance to other donor/acceptor #>       description: Minimum allowed distance to other junctions' donor/acceptor for #>         each of the motifs (int >= 0). Does not apply to annotated junctions. #>       streamable: no #>       id: '#outSJfilterDistToOtherSJmin' #>       inputBinding: #>         position: 0 #>         prefix: --outSJfilterDistToOtherSJmin #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: 'Output filtering: splice junctions' #>       sbg:toolDefaultValue: 10 0 5 10 #>       required: no #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Min unique count #>       description: Minimum uniquely mapping read count per junction for each of the #>         motifs. To set no output for desired motif, assign -1 to the corresponding #>         field. Junctions are output if one of --outSJfilterCountUniqueMin OR --outSJfilterCountTotalMin #>         conditions are satisfied. Does not apply to annotated junctions. #>       streamable: no #>       id: '#outSJfilterCountUniqueMin' #>       inputBinding: #>         position: 0 #>         prefix: --outSJfilterCountUniqueMin #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: 'Output filtering: splice junctions' #>       sbg:toolDefaultValue: 3 1 1 1 #>       required: no #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Min total count #>       description: Minimum total (multi-mapping+unique) read count per junction for #>         each of the motifs. To set no output for desired motif, assign -1 to the corresponding #>         field. Junctions are output if one of --outSJfilterCountUniqueMin OR --outSJfilterCountTotalMin #>         conditions are satisfied. Does not apply to annotated junctions. #>       streamable: no #>       id: '#outSJfilterCountTotalMin' #>       inputBinding: #>         position: 0 #>         prefix: --outSJfilterCountTotalMin #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: 'Output filtering: splice junctions' #>       sbg:toolDefaultValue: 3 1 1 1 #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMunmapped #>         symbols: #>         - None #>         - Within #>         type: enum #>       label: Write unmapped in SAM #>       description: 'Output of unmapped reads in the SAM format. None: no output Within: #>         output unmapped reads within the main SAM file (i.e. Aligned.out.sam).' #>       streamable: no #>       id: '#outSAMunmapped' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMunmapped #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: None #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMtype #>         symbols: #>         - SAM #>         - BAM #>         type: enum #>       label: Output format #>       description: Format of output alignments. #>       streamable: no #>       id: '#outSAMtype' #>       inputBinding: #>         position: 0 #>         separate: yes #>         valueFrom: #>           engine: '#cwl-js-engine' #>           script: |- #>             { #>               SAM_type = $job.inputs.outSAMtype #>               SORT_type = $job.inputs.outSortingType #>               if (SAM_type && SORT_type) { #>                 return \"--outSAMtype \".concat(SAM_type, \" \", SORT_type) #>               } #>             } #>           class: Expression #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: SAM #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMstrandField #>         symbols: #>         - None #>         - intronMotif #>         type: enum #>       label: Strand field flag #>       description: 'Cufflinks-like strand field flag. None: not used; intronMotif: #>         strand derived from the intron motif. Reads with inconsistent and/or non-canonical #>         introns are filtered out.' #>       streamable: no #>       id: '#outSAMstrandField' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMstrandField #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: None #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMreadID #>         symbols: #>         - Standard #>         - Number #>         type: enum #>       label: Read ID #>       description: 'Read ID record type. Standard: first word (until space) from the #>         FASTx read ID line, removing /1,/2 from the end; Number: read number (index) #>         in the FASTx file.' #>       streamable: no #>       id: '#outSAMreadID' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMreadID #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: Standard #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMprimaryFlag #>         symbols: #>         - OneBestScore #>         - AllBestScore #>         type: enum #>       label: Primary alignments #>       description: 'Which alignments are considered primary - all others will be marked #>         with 0x100 bit in the FLAG. OneBestScore: only one alignment with the best #>         score is primary; AllBestScore: all alignments with the best score are primary.' #>       streamable: no #>       id: '#outSAMprimaryFlag' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMprimaryFlag #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: OneBestScore #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMorder #>         symbols: #>         - Paired #>         - PairedKeepInputOrder #>         type: enum #>       label: Sorting in SAM #>       description: 'Type of sorting for the SAM output. Paired: one mate after the #>         other for all paired alignments; PairedKeepInputOrder: one mate after the #>         other for all paired alignments, the order is kept the same as in the input #>         FASTQ files.' #>       streamable: no #>       id: '#outSAMorder' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMorder #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: Paired #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMmode #>         symbols: #>         - Full #>         - NoQS #>         type: enum #>       label: SAM mode #>       description: 'Mode of SAM output. Full: full SAM output; NoQS: full SAM but #>         without quality scores.' #>       streamable: no #>       id: '#outSAMmode' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMmode #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: Full #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: MAPQ value #>       description: MAPQ value for unique mappers (0 to 255). #>       streamable: no #>       id: '#outSAMmapqUnique' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMmapqUnique #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: '255' #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: SAM header @PG #>       description: Extra @PG (software) line of the SAM header (in addition to STAR). #>       streamable: no #>       id: '#outSAMheaderPG' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMheaderPG #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: '-' #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: SAM header @HD #>       description: '@HD (header) line of the SAM header.' #>       streamable: no #>       id: '#outSAMheaderHD' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMheaderHD #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: '-' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: OR SAM flag #>       description: Set specific bits of the SAM FLAG. #>       streamable: no #>       id: '#outSAMflagOR' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMflagOR #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: AND SAM flag #>       description: Set specific bits of the SAM FLAG. #>       streamable: no #>       id: '#outSAMflagAND' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMflagAND #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: '65535' #>       required: no #>     - type: #>       - 'null' #>       - name: outSAMattributes #>         symbols: #>         - Standard #>         - NH #>         - All #>         - None #>         type: enum #>       label: SAM attributes #>       description: 'Desired SAM attributes, in the order desired for the output SAM. #>         NH: any combination in any order; Standard: NH HI AS nM; All: NH HI AS nM #>         NM MD jM jI; None: no attributes.' #>       streamable: no #>       id: '#outSAMattributes' #>       inputBinding: #>         position: 0 #>         prefix: --outSAMattributes #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: Standard #>       required: no #>     - type: #>       - 'null' #>       - name: outReadsUnmapped #>         symbols: #>         - None #>         - Fastx #>         type: enum #>       label: Output unmapped reads #>       description: 'Output of unmapped reads (besides SAM). None: no output; Fastx: #>         output in separate fasta/fastq files, Unmapped.out.mate1/2.' #>       streamable: no #>       id: '#outReadsUnmapped' #>       inputBinding: #>         position: 0 #>         prefix: --outReadsUnmapped #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: None #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Quality conversion #>       description: Add this number to the quality score (e.g. to convert from Illumina #>         to Sanger, use -31). #>       streamable: no #>       id: '#outQSconversionAdd' #>       inputBinding: #>         position: 0 #>         prefix: --outQSconversionAdd #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - name: outFilterType #>         symbols: #>         - Normal #>         - BySJout #>         type: enum #>       label: Filtering type #>       description: 'Type of filtering. Normal: standard filtering using only current #>         alignment; BySJout: keep only those reads that contain junctions that passed #>         filtering into SJ.out.tab.' #>       streamable: no #>       id: '#outFilterType' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterType #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: Normal #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Min score normalized #>       description: '''Minimum score'' normalized to read length (sum of mates'' lengths #>         for paired-end reads).' #>       streamable: no #>       id: '#outFilterScoreMinOverLread' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterScoreMinOverLread #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '0.66' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min score #>       description: Alignment will be output only if its score is higher than this #>         value. #>       streamable: no #>       id: '#outFilterScoreMin' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterScoreMin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Multimapping score range #>       description: The score range below the maximum score for multimapping alignments. #>       streamable: no #>       id: '#outFilterMultimapScoreRange' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterMultimapScoreRange #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '1' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max number of mappings #>       description: Read alignments will be output only if the read maps fewer than #>         this value, otherwise no alignments will be output. #>       streamable: no #>       id: '#outFilterMultimapNmax' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterMultimapNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '10' #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Mismatches to *read* length #>       description: Alignment will be output only if its ratio of mismatches to *read* #>         length is less than this value. #>       streamable: no #>       id: '#outFilterMismatchNoverReadLmax' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterMismatchNoverReadLmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '1' #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Mismatches to *mapped* length #>       description: Alignment will be output only if its ratio of mismatches to *mapped* #>         length is less than this value. #>       streamable: no #>       id: '#outFilterMismatchNoverLmax' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterMismatchNoverLmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '0.3' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max number of mismatches #>       description: Alignment will be output only if it has fewer mismatches than this #>         value. #>       streamable: no #>       id: '#outFilterMismatchNmax' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterMismatchNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '10' #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Min matched bases normalized #>       description: '''Minimum matched bases'' normalized to read length (sum of mates #>         lengths for paired-end reads).' #>       streamable: no #>       id: '#outFilterMatchNminOverLread' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterMatchNminOverLread #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '0.66' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min matched bases #>       description: Alignment will be output only if the number of matched bases is #>         higher than this value. #>       streamable: no #>       id: '#outFilterMatchNmin' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterMatchNmin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - name: outFilterIntronMotifs #>         symbols: #>         - None #>         - RemoveNoncanonical #>         - RemoveNoncanonicalUnannotated #>         type: enum #>       label: Motifs filtering #>       description: 'Filter alignment using their motifs. None: no filtering; RemoveNoncanonical: #>         filter out alignments that contain non-canonical junctions; RemoveNoncanonicalUnannotated: #>         filter out alignments that contain non-canonical unannotated junctions when #>         using annotated splice junctions database. The annotated non-canonical junctions #>         will be kept.' #>       streamable: no #>       id: '#outFilterIntronMotifs' #>       inputBinding: #>         position: 0 #>         prefix: --outFilterIntronMotifs #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Output filtering #>       sbg:toolDefaultValue: None #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max insert junctions #>       description: Maximum number of junction to be inserted to the genome on the #>         fly at the mapping stage, including those from annotations and those detected #>         in the 1st step of the 2-pass run. #>       streamable: no #>       id: '#limitSjdbInsertNsj' #>       inputBinding: #>         position: 0 #>         prefix: --limitSjdbInsertNsj #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Limits #>       sbg:toolDefaultValue: '1000000' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Junctions max number #>       description: Max number of junctions for one read (including all multi-mappers). #>       streamable: no #>       id: '#limitOutSJoneRead' #>       inputBinding: #>         position: 0 #>         prefix: --limitOutSJoneRead #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Limits #>       sbg:toolDefaultValue: '1000' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Collapsed junctions max number #>       description: Max number of collapsed junctions. #>       streamable: no #>       id: '#limitOutSJcollapsed' #>       inputBinding: #>         position: 0 #>         prefix: --limitOutSJcollapsed #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Limits #>       sbg:toolDefaultValue: '1000000' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Limit BAM sorting memory #>       description: Maximum available RAM for sorting BAM. If set to 0, it will be #>         set to the genome index size. #>       streamable: no #>       id: '#limitBAMsortRAM' #>       inputBinding: #>         position: 0 #>         prefix: --limitBAMsortRAM #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Limits #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - string #>       label: Genome dir name #>       description: Name of the directory which contains genome files (when genome.tar #>         is uncompressed). #>       streamable: no #>       id: '#genomeDirName' #>       inputBinding: #>         position: 0 #>         prefix: --genomeDir #>         separate: yes #>         valueFrom: #>           engine: '#cwl-js-engine' #>           script: $job.inputs.genomeDirName || \"genomeDir\" #>           class: Expression #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Basic #>       sbg:toolDefaultValue: genomeDir #>       required: no #>     - type: #>       - File #>       label: Genome files #>       description: Genome files created using STAR Genome Generate. #>       streamable: no #>       id: '#genome' #>       sbg:category: Basic #>       sbg:fileTypes: TAR #>       required: yes #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Clip 5p bases #>       description: Number of bases to clip from 5p of each mate. In case only one #>         value is given, it will be assumed the same for both mates. #>       streamable: no #>       id: '#clip5pNbases' #>       inputBinding: #>         position: 0 #>         prefix: --clip5pNbases #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Read parameters #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Clip 3p bases #>       description: Number of bases to clip from 3p of each mate. In case only one #>         value is given, it will be assumed the same for both mates. #>       streamable: no #>       id: '#clip3pNbases' #>       inputBinding: #>         position: 0 #>         prefix: --clip3pNbases #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Read parameters #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - items: int #>         type: array #>       label: Clip 3p after adapter seq. #>       description: Number of bases to clip from 3p of each mate after the adapter #>         clipping. In case only one value is given, it will be assumed the same for #>         both mates. #>       streamable: no #>       id: '#clip3pAfterAdapterNbases' #>       inputBinding: #>         position: 0 #>         prefix: --clip3pAfterAdapterNbases #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Read parameters #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - items: string #>         type: array #>       label: Clip 3p adapter sequence #>       description: Adapter sequence to clip from 3p of each mate. In case only one #>         value is given, it will be assumed the same for both mates. #>       streamable: no #>       id: '#clip3pAdapterSeq' #>       inputBinding: #>         position: 0 #>         prefix: --clip3pAdapterSeq #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Read parameters #>       sbg:toolDefaultValue: '-' #>       required: no #>     - type: #>       - 'null' #>       - items: float #>         type: array #>       label: Max mismatches proportions #>       description: Max proportion of mismatches for 3p adapter clipping for each mate. #>         In case only one value is given, it will be assumed the same for both mates. #>       streamable: no #>       id: '#clip3pAdapterMMp' #>       inputBinding: #>         position: 0 #>         prefix: --clip3pAdapterMMp #>         separate: yes #>         itemSeparator: ' ' #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Read parameters #>       sbg:toolDefaultValue: '0.1' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min segment length #>       description: Minimum length of chimeric segment length, if =0, no chimeric output #>         (int>=0). #>       streamable: no #>       id: '#chimSegmentMin' #>       inputBinding: #>         position: 0 #>         prefix: --chimSegmentMin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Chimeric Alignments #>       sbg:toolDefaultValue: '15' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min separation score #>       description: Minimum difference (separation) between the best chimeric score #>         and the next one (int>=0). #>       streamable: no #>       id: '#chimScoreSeparation' #>       inputBinding: #>         position: 0 #>         prefix: --chimScoreSeparation #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Chimeric Alignments #>       sbg:toolDefaultValue: '10' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min total score #>       description: Minimum total (summed) score of the chimeric segments (int>=0). #>       streamable: no #>       id: '#chimScoreMin' #>       inputBinding: #>         position: 0 #>         prefix: --chimScoreMin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Chimeric Alignments #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Non-GT/AG penalty #>       description: Penalty for a non-GT/AG chimeric junction. #>       streamable: no #>       id: '#chimScoreJunctionNonGTAG' #>       inputBinding: #>         position: 0 #>         prefix: --chimScoreJunctionNonGTAG #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Chimeric Alignments #>       sbg:toolDefaultValue: '-1' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max drop score #>       description: Max drop (difference) of chimeric score (the sum of scores of all #>         chimeric segements) from the read length (int>=0). #>       streamable: no #>       id: '#chimScoreDropMax' #>       inputBinding: #>         position: 0 #>         prefix: --chimScoreDropMax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Chimeric Alignments #>       sbg:toolDefaultValue: '20' #>       required: no #>     - type: #>       - 'null' #>       - name: chimOutType #>         symbols: #>         - SeparateSAMold #>         - Within #>         type: enum #>       label: Chimeric output type #>       description: 'Type of chimeric output. SeparateSAMold: output old SAM into separate #>         Chimeric.out.sam file; Within: output into main aligned SAM/BAM files.' #>       streamable: no #>       id: '#chimOutType' #>       sbg:category: Chimeric Alignments #>       sbg:toolDefaultValue: SeparateSAMold #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min junction overhang #>       description: Minimum overhang for a chimeric junction (int>=0). #>       streamable: no #>       id: '#chimJunctionOverhangMin' #>       inputBinding: #>         position: 0 #>         prefix: --chimJunctionOverhangMin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Chimeric Alignments #>       sbg:toolDefaultValue: '20' #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Max windows per read #>       description: Max number of windows per read (int>0). #>       streamable: no #>       id: '#alignWindowsPerReadNmax' #>       inputBinding: #>         position: 0 #>         prefix: --alignWindowsPerReadNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '10000' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max transcripts per window #>       description: Max number of transcripts per window (int>0). #>       streamable: no #>       id: '#alignTranscriptsPerWindowNmax' #>       inputBinding: #>         position: 0 #>         prefix: --alignTranscriptsPerWindowNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '100' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max transcripts per read #>       description: Max number of different alignments per read to consider (int>0). #>       streamable: no #>       id: '#alignTranscriptsPerReadNmax' #>       inputBinding: #>         position: 0 #>         prefix: --alignTranscriptsPerReadNmax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '10000' #>       required: no #>     - type: #>       - 'null' #>       - float #>       label: Min mapped length normalized #>       description: alignSplicedMateMapLmin normalized to mate length (float>0). #>       streamable: no #>       id: '#alignSplicedMateMapLminOverLmate' #>       inputBinding: #>         position: 0 #>         prefix: --alignSplicedMateMapLminOverLmate #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '0.66' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min mapped length #>       description: Minimum mapped length for a read mate that is spliced (int>0). #>       streamable: no #>       id: '#alignSplicedMateMapLmin' #>       inputBinding: #>         position: 0 #>         prefix: --alignSplicedMateMapLmin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - name: alignSoftClipAtReferenceEnds #>         symbols: #>         - 'Yes' #>         - 'No' #>         type: enum #>       label: Soft clipping #>       description: 'Option which allows soft clipping of alignments at the reference #>         (chromosome) ends. Can be disabled for compatibility with Cufflinks/Cuffmerge. #>         Yes: Enables soft clipping; No: Disables soft clipping.' #>       streamable: no #>       id: '#alignSoftClipAtReferenceEnds' #>       inputBinding: #>         position: 0 #>         prefix: --alignSoftClipAtReferenceEnds #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: 'Yes' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min overhang #>       description: Minimum overhang (i.e. block size) for spliced alignments (int>0). #>       streamable: no #>       id: '#alignSJoverhangMin' #>       inputBinding: #>         position: 0 #>         prefix: --alignSJoverhangMin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '5' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: 'Min overhang: annotated' #>       description: Minimum overhang (i.e. block size) for annotated (sjdb) spliced #>         alignments (int>0). #>       streamable: no #>       id: '#alignSJDBoverhangMin' #>       inputBinding: #>         position: 0 #>         prefix: --alignSJDBoverhangMin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '3' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max mates gap #>       description: Maximum gap between two mates, if 0, max intron gap will be determined #>         by (2^winBinNbits)*winAnchorDistNbins. #>       streamable: no #>       id: '#alignMatesGapMax' #>       inputBinding: #>         position: 0 #>         prefix: --alignMatesGapMax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Min intron size #>       description: 'Minimum intron size: genomic gap is considered intron if its length #>         >= alignIntronMin, otherwise it is considered Deletion (int>=0).' #>       streamable: no #>       id: '#alignIntronMin' #>       inputBinding: #>         position: 0 #>         prefix: --alignIntronMin #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '21' #>       required: no #>     - type: #>       - 'null' #>       - int #>       label: Max intron size #>       description: Maximum intron size, if 0, max intron size will be determined by #>         (2^winBinNbits)*winAnchorDistNbins. #>       streamable: no #>       id: '#alignIntronMax' #>       inputBinding: #>         position: 0 #>         prefix: --alignIntronMax #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: '0' #>       required: no #>     - type: #>       - 'null' #>       - name: alignEndsType #>         symbols: #>         - Local #>         - EndToEnd #>         type: enum #>       label: Alignment type #>       description: 'Type of read ends alignment. Local: standard local alignment with #>         soft-clipping allowed. EndToEnd: force end to end read alignment, do not soft-clip.' #>       streamable: no #>       id: '#alignEndsType' #>       inputBinding: #>         position: 0 #>         prefix: --alignEndsType #>         separate: yes #>         shellQuote: no #>         sbg:cmdInclude: yes #>         streamable: no #>         separator: ' ' #>       sbg:category: Alignments and Seeding #>       sbg:toolDefaultValue: Local #>       required: no #>     outputs: #>     - type: #>       - 'null' #>       - items: File #>         type: array #>       label: Unmapped reads #>       description: Output of unmapped reads. #>       streamable: no #>       id: '#unmapped_reads' #>       outputBinding: #>         glob: '*Unmapped.out*' #>       sbg:fileTypes: FASTQ #>     - type: #>       - 'null' #>       - File #>       label: Transcriptome alignments #>       description: Alignments translated into transcript coordinates. #>       streamable: no #>       id: '#transcriptome_aligned_reads' #>       outputBinding: #>         glob: '*Transcriptome*' #>       sbg:fileTypes: BAM #>     - type: #>       - 'null' #>       - File #>       label: Splice junctions #>       description: High confidence collapsed splice junctions in tab-delimited format. #>         Only junctions supported by uniquely mapping reads are reported. #>       streamable: no #>       id: '#splice_junctions' #>       outputBinding: #>         glob: '*SJ.out.tab' #>       sbg:fileTypes: TAB #>     - type: #>       - 'null' #>       - File #>       label: Reads per gene #>       description: File with number of reads per gene. A read is counted if it overlaps #>         (1nt or more) one and only one gene. #>       streamable: no #>       id: '#reads_per_gene' #>       outputBinding: #>         glob: '*ReadsPerGene*' #>       sbg:fileTypes: TAB #>     - type: #>       - 'null' #>       - items: File #>         type: array #>       label: Log files #>       description: Log files produced during alignment. #>       streamable: no #>       id: '#log_files' #>       outputBinding: #>         glob: '*Log*.out' #>       sbg:fileTypes: OUT #>     - type: #>       - 'null' #>       - File #>       label: Intermediate genome files #>       description: Archive with genome files produced when annotations are included #>         on the fly (in the mapping step). #>       streamable: no #>       id: '#intermediate_genome' #>       outputBinding: #>         glob: '*_STARgenome.tar' #>       sbg:fileTypes: TAR #>     - type: #>       - 'null' #>       - File #>       label: Chimeric junctions #>       description: If chimSegmentMin in 'Chimeric Alignments' section is set to 0, #>         'Chimeric Junctions' won't be output. #>       streamable: no #>       id: '#chimeric_junctions' #>       outputBinding: #>         glob: '*Chimeric.out.junction' #>       sbg:fileTypes: JUNCTION #>     - type: #>       - 'null' #>       - File #>       label: Chimeric alignments #>       description: Aligned Chimeric sequences SAM - if chimSegmentMin = 0, no Chimeric #>         Alignment SAM and Chimeric Junctions outputs. #>       streamable: no #>       id: '#chimeric_alignments' #>       outputBinding: #>         glob: '*.Chimeric.out.sam' #>       sbg:fileTypes: SAM #>     - type: #>       - 'null' #>       - File #>       label: Aligned SAM/BAM #>       description: Aligned sequence in SAM/BAM format. #>       streamable: no #>       id: '#aligned_reads' #>       outputBinding: #>         glob: #>           engine: '#cwl-js-engine' #>           script: |- #>             { #>               if ($job.inputs.outSortingType == 'SortedByCoordinate') { #>                 sort_name = '.sortedByCoord' #>               } #>               else { #>                 sort_name = '' #>               } #>               if ($job.inputs.outSAMtype == 'BAM') { #>                 sam_name = \"*.Aligned\".concat( sort_name, '.out.bam') #>               } #>               else { #>                 sam_name = \"*.Aligned.out.sam\" #>               } #>               return sam_name #>             } #>           class: Expression #>       sbg:fileTypes: SAM, BAM #>     requirements: #>     - class: ExpressionEngineRequirement #>       id: '#cwl-js-engine' #>       requirements: #>       - class: DockerRequirement #>         dockerPull: rabix/js-engine #>     hints: #>     - class: DockerRequirement #>       dockerPull: images.sbgenomics.com/ana_d/star:2.4.2a #>       dockerImageId: a4b0ad2c3cae #>     - class: sbg:MemRequirement #>       value: 60000 #>     - class: sbg:CPURequirement #>       value: 15 #>     label: STAR #>     description: STAR is an ultrafast universal RNA-seq aligner. It has very high #>       mapping speed, accurate alignment of contiguous and spliced reads, detection #>       of polyA-tails, non-canonical splices and chimeric (fusion) junctions. It works #>       with reads starting from lengths ~15 bases up to ~300 bases. In case of having #>       longer reads, use of STAR Long is recommended. #>     class: CommandLineTool #>     baseCommand: #>     - tar #>     - -xvf #>     - class: Expression #>       script: $job.inputs.genome.path #>       engine: '#cwl-js-engine' #>     - '&&' #>     - /opt/STAR #>     - --runThreadN #>     - class: Expression #>       script: |- #>         { #>           return $job.allocatedResources.cpu #>         } #>       engine: '#cwl-js-engine' #>     arguments: #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: |- #>           { #>             file = [].concat($job.inputs.reads)[0].path #>             extension = /(?:\\.([^.]+))?$/.exec(file)[1] #>             if (extension == \"gz\") { #>               return \"--readFilesCommand zcat\" #>             } else if (extension == \"bz2\") { #>               return \"--readFilesCommand bzcat\" #>             } #>           } #>         class: Expression #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\t\\n  var sjFormat = \\\"False\\\"\\n  var gtfgffFormat = \\\"False\\\"\\n #>           \\ var list = $job.inputs.sjdbGTFfile\\n  var paths_list = []\\n  var joined_paths #>           = \\\"\\\"\\n  \\n  if (list) {\\n    list.forEach(function(f){return paths_list.push(f.path)})\\n #>           \\   joined_paths = paths_list.join(\\\" \\\")\\n\\n\\n    paths_list.forEach(function(f){\\n #>           \\     ext = f.replace(/^.*\\\\./, '')\\n      if (ext == \\\"gff\\\" || ext == #>           \\\"gtf\\\") {\\n        gtfgffFormat = \\\"True\\\"\\n        return gtfgffFormat\\n #>           \\     }\\n      if (ext == \\\"txt\\\") {\\n        sjFormat = \\\"True\\\"\\n        return #>           sjFormat\\n      }\\n    })\\n\\n    if ($job.inputs.sjdbGTFfile && $job.inputs.sjdbInsertSave #>           != \\\"None\\\") {\\n      if (sjFormat == \\\"True\\\") {\\n        return \\\"--sjdbFileChrStartEnd #>           \\\".concat(joined_paths)\\n      }\\n      else if (gtfgffFormat == \\\"True\\\") #>           {\\n        return \\\"--sjdbGTFfile \\\".concat(joined_paths)\\n      }\\n    }\\n #>           \\ }\\n}\" #>         class: Expression #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  a = b = c = d = e = f = g = []\\n  if ($job.inputs.sjdbGTFchrPrefix) #>           {\\n    a = [\\\"--sjdbGTFchrPrefix\\\", $job.inputs.sjdbGTFchrPrefix]\\n  }\\n #>           \\ if ($job.inputs.sjdbGTFfeatureExon) {\\n    b = [\\\"--sjdbGTFfeatureExon\\\", #>           $job.inputs.sjdbGTFfeatureExon]\\n  }\\n  if ($job.inputs.sjdbGTFtagExonParentTranscript) #>           {\\n    c = [\\\"--sjdbGTFtagExonParentTranscript\\\", $job.inputs.sjdbGTFtagExonParentTranscript]\\n #>           \\ }\\n  if ($job.inputs.sjdbGTFtagExonParentGene) {\\n    d = [\\\"--sjdbGTFtagExonParentGene\\\", #>           $job.inputs.sjdbGTFtagExonParentGene]\\n  }\\n  if ($job.inputs.sjdbOverhang) #>           {\\n    e = [\\\"--sjdbOverhang\\\", $job.inputs.sjdbOverhang]\\n  }\\n  if ($job.inputs.sjdbScore) #>           {\\n    f = [\\\"--sjdbScore\\\", $job.inputs.sjdbScore]\\n  }\\n  if ($job.inputs.sjdbInsertSave) #>           {\\n    g = [\\\"--sjdbInsertSave\\\", $job.inputs.sjdbInsertSave]\\n  }\\n  \\n #>           \\ \\n  \\n  if ($job.inputs.sjdbInsertSave != \\\"None\\\" && $job.inputs.sjdbGTFfile) #>           {\\n    new_list = a.concat(b, c, d, e, f, g)\\n    return new_list.join(\\\" #>           \\\")\\n  }\\n}\" #>         class: Expression #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: |- #>           { #>             if ($job.inputs.twopassMode == \"Basic\") { #>               return \"--twopass1readsN \".concat($job.inputs.twopass1readsN) #>             } #>           } #>         class: Expression #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: |- #>           { #>             if ($job.inputs.chimOutType == \"Within\") { #>               return \"--chimOutType \".concat(\"Within\", $job.inputs.outSAMtype) #>             } #>             else { #>               return \"--chimOutType SeparateSAMold\" #>             } #>           } #>         class: Expression #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  var param_list = []\\n  \\n  function add_param(key, value){\\n #>           \\   if (value == \\\"\\\") {\\n      return\\n    }\\n    else {\\n      return #>           param_list.push(key.concat(\\\":\\\", value))\\n    }\\n  }\\n  \\n  add_param('ID', #>           \\\"1\\\")\\n  if ($job.inputs.rg_seq_center) {\\n    add_param('CN', $job.inputs.rg_seq_center)\\n #>           \\ } else if ([].concat($job.inputs.reads)[0].metadata.seq_center) {\\n    add_param('CN', #>           [].concat($job.inputs.reads)[0].metadata.seq_center)\\n  }\\n  if ($job.inputs.rg_library_id) #>           {\\n    add_param('LB', $job.inputs.rg_library_id)\\n  } else if ([].concat($job.inputs.reads)[0].metadata.library_id) #>           {\\n    add_param('LB', [].concat($job.inputs.reads)[0].metadata.library_id)\\n #>           \\ }\\n  if ($job.inputs.rg_mfl) {\\n    add_param('PI', $job.inputs.rg_mfl)\\n #>           \\ } else if ([].concat($job.inputs.reads)[0].metadata.median_fragment_length) #>           {\\n    add_param('PI', [].concat($job.inputs.reads)[0].metadata.median_fragment_length)\\n #>           \\ }\\n  if ($job.inputs.rg_platform) {\\n    add_param('PL', $job.inputs.rg_platform.replace(/ #>           /g,\\\"_\\\"))\\n  } else if ([].concat($job.inputs.reads)[0].metadata.platform) #>           {\\n    add_param('PL', [].concat($job.inputs.reads)[0].metadata.platform.replace(/ #>           /g,\\\"_\\\"))\\n  }\\n  if ($job.inputs.rg_platform_unit_id) {\\n    add_param('PU', #>           $job.inputs.rg_platform_unit_id)\\n  } else if ([].concat($job.inputs.reads)[0].metadata.platform_unit_id) #>           {\\n    add_param('PU', [].concat($job.inputs.reads)[0].metadata.platform_unit_id)\\n #>           \\ }\\n  if ($job.inputs.rg_sample_id) {\\n    add_param('SM', $job.inputs.rg_sample_id)\\n #>           \\ } else if ([].concat($job.inputs.reads)[0].metadata.sample_id) {\\n    add_param('SM', #>           [].concat($job.inputs.reads)[0].metadata.sample_id)\\n  }\\n  return \\\"--outSAMattrRGline #>           \\\".concat(param_list.join(\\\" \\\"))\\n}\" #>         class: Expression #>     - position: 0 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: |- #>           { #>             if ($job.inputs.sjdbGTFfile && $job.inputs.quantMode) { #>               return \"--quantMode \".concat($job.inputs.quantMode) #>             } #>           } #>         class: Expression #>     - position: 100 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  function sharedStart(array){\\n  var A= array.concat().sort(), #>           \\n      a1= A[0], a2= A[A.length-1], L= a1.length, i= 0;\\n  while(i<L && #>           a1.charAt(i)=== a2.charAt(i)) i++;\\n  return a1.substring(0, i);\\n  }\\n #>           \\ path_list = []\\n  arr = [].concat($job.inputs.reads)\\n  arr.forEach(function(f){return #>           path_list.push(f.path.replace(/\\\\\\\\/g,'/').replace( /.*\\\\//, '' ))})\\n  common_prefix #>           = sharedStart(path_list)\\n  intermediate = common_prefix.replace( /\\\\-$|\\\\_$|\\\\.$/, #>           '' ).concat(\\\"._STARgenome\\\")\\n  source = \\\"./\\\".concat(intermediate)\\n #>           \\ destination = intermediate.concat(\\\".tar\\\")\\n  if ($job.inputs.sjdbGTFfile #>           && $job.inputs.sjdbInsertSave && $job.inputs.sjdbInsertSave != \\\"None\\\") #>           {\\n    return \\\"&& tar -vcf \\\".concat(destination, \\\" \\\", source)\\n  }\\n}\" #>         class: Expression #>     - position: 0 #>       prefix: --outFileNamePrefix #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  function sharedStart(array){\\n  var A= array.concat().sort(), #>           \\n      a1= A[0], a2= A[A.length-1], L= a1.length, i= 0;\\n  while(i<L && #>           a1.charAt(i)=== a2.charAt(i)) i++;\\n  return a1.substring(0, i);\\n  }\\n #>           \\ path_list = []\\n  arr = [].concat($job.inputs.reads)\\n  arr.forEach(function(f){return #>           path_list.push(f.path.replace(/\\\\\\\\/g,'/').replace( /.*\\\\//, '' ))})\\n  common_prefix #>           = sharedStart(path_list)\\n  return \\\"./\\\".concat(common_prefix.replace( #>           /\\\\-$|\\\\_$|\\\\.$/, '' ), \\\".\\\")\\n}\" #>         class: Expression #>     - position: 101 #>       separate: yes #>       valueFrom: #>         engine: '#cwl-js-engine' #>         script: \"{\\n  function sharedStart(array){\\n  var A= array.concat().sort(), #>           \\n      a1= A[0], a2= A[A.length-1], L= a1.length, i= 0;\\n  while(i<L && #>           a1.charAt(i)=== a2.charAt(i)) i++;\\n  return a1.substring(0, i);\\n  }\\n #>           \\ path_list = []\\n  arr = [].concat($job.inputs.reads)\\n  arr.forEach(function(f){return #>           path_list.push(f.path.replace(/\\\\\\\\/g,'/').replace( /.*\\\\//, '' ))})\\n  common_prefix #>           = sharedStart(path_list)\\n  mate1 = common_prefix.replace( /\\\\-$|\\\\_$|\\\\.$/, #>           '' ).concat(\\\".Unmapped.out.mate1\\\")\\n  mate2 = common_prefix.replace( /\\\\-$|\\\\_$|\\\\.$/, #>           '' ).concat(\\\".Unmapped.out.mate2\\\")\\n  mate1fq = mate1.concat(\\\".fastq\\\")\\n #>           \\ mate2fq = mate2.concat(\\\".fastq\\\")\\n  if ($job.inputs.outReadsUnmapped #>           == \\\"Fastx\\\" && arr.length > 1) {\\n    return \\\"&& mv \\\".concat(mate1, \\\" #>           \\\", mate1fq, \\\" && mv \\\", mate2, \\\" \\\", mate2fq)\\n  }\\n  else if ($job.inputs.outReadsUnmapped #>           == \\\"Fastx\\\" && arr.length == 1) {\\n    return \\\"&& mv \\\".concat(mate1, #>           \\\" \\\", mate1fq)\\n  }\\n}\" #>         class: Expression #>     stdin: '' #>     stdout: '' #>     successCodes: [] #>     temporaryFailCodes: [] #>     x: 624.0 #>     'y': 323 #>   sbg:x: 700.0 #>   sbg:y: 200.0 #> sbg:canvas_zoom: 0.6 #> sbg:canvas_y: -16 #> sbg:canvas_x: -41 #>"},{"path":"/reference/cwl-utils.html","id":null,"dir":"Reference","previous_headings":"","what":"Get class from CWL JSON file — get_cwl_class","title":"Get class from CWL JSON file — get_cwl_class","text":"Get class CWL JSON file","code":""},{"path":"/reference/cwl-utils.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get class from CWL JSON file — get_cwl_class","text":"","code":"get_cwl_class(input)"},{"path":"/reference/cwl-utils.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get class from CWL JSON file — get_cwl_class","text":"input cwl json file path","code":""},{"path":"/reference/cwl-utils.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get class from CWL JSON file — get_cwl_class","text":"character cwl class \"Workflow\" \"CommandLineTool\"","code":""},{"path":"/reference/cwl-utils.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get class from CWL JSON file — get_cwl_class","text":"","code":"tool.in <- system.file(\"extdata/app\", \"tool_unpack_fastq.json\", package = \"sevenbridges\") flow.in <- system.file(\"extdata/app\", \"flow_star.json\", package = \"sevenbridges\") get_cwl_class(tool.in) #> [1] \"CommandLineTool\" is_commandlinetool(tool.in) #> [1] TRUE is_workflow(tool.in) #> [1] FALSE get_cwl_class(flow.in) #> [1] \"Workflow\" is_commandlinetool(flow.in) #> [1] FALSE is_workflow(flow.in) #> [1] TRUE"},{"path":"/reference/delete-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete files or folders — delete","title":"Delete files or folders — delete","text":"Delete files folders","code":""},{"path":"/reference/delete-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete files or folders — delete","text":"","code":"delete(obj)  # S4 method for SimpleList delete(obj)  # S4 method for Files delete(obj)  # S4 method for Task delete(obj)"},{"path":"/reference/delete-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete files or folders — delete","text":"obj single File FileList","code":""},{"path":"/reference/delete-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete files or folders — delete","text":"system message","code":""},{"path":"/reference/delete-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delete files or folders — delete","text":"","code":"if (FALSE) { a$project(\"demo\")$file(\"omni\")$delete() # or delete(a$project(\"demo\")$file(\"omni\"))}"},{"path":"/reference/download-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Download files — download","title":"Download files — download","text":"Download files","code":""},{"path":"/reference/download-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download files — download","text":"","code":"download(obj, ...)  # S4 method for FilesList download(obj, ...)  # S4 method for Files download(obj, ...)"},{"path":"/reference/download-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download files — download","text":"obj single File FileList ... passed download()","code":""},{"path":"/reference/download-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download files — download","text":"system message","code":""},{"path":"/reference/download-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download files — download","text":"","code":"if (FALSE) { a$project(\"demo\")$file(\"omni\")$download() # or download(a$project(\"demo\")$file(\"omni\"))}"},{"path":"/reference/get_token.html","id":null,"dir":"Reference","previous_headings":"","what":"Opens web browser to copy the auth token — get_token","title":"Opens web browser to copy the auth token — get_token","text":"Click \"Generate Token\" \"Regenerate\" button, copy paste authentication token string R console. function return token string.","code":""},{"path":"/reference/get_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Opens web browser to copy the auth token — get_token","text":"","code":"get_token(platform = c(\"cgc\", \"aws-us\", \"aws-eu\", \"gcp\", \"cavatica\"))  misc_get_token()"},{"path":"/reference/get_token.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Opens web browser to copy the auth token — get_token","text":"platform Seven Bridges platform use.","code":""},{"path":"/reference/get_token.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Opens web browser to copy the auth token — get_token","text":"auth token","code":""},{"path":"/reference/get_token.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Opens web browser to copy the auth token — get_token","text":"","code":"token <- NULL # Will be prompted to enter the auth token if (FALSE) token = get_token(platform = \"cgc\")"},{"path":"/reference/get_uploader.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Seven Bridges command line uploader and extract to\na specified directory — get_uploader","title":"Download Seven Bridges command line uploader and extract to\na specified directory — get_uploader","text":"function downloads Seven Bridges command line uploader extract .tgz archive specified directory.","code":""},{"path":"/reference/get_uploader.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Seven Bridges command line uploader and extract to\na specified directory — get_uploader","text":"","code":"get_uploader(   platform = c(\"cgc\", \"aws-us\", \"aws-eu\", \"gcp\"),   destdir = NULL,   quiet = FALSE )  misc_get_uploader()"},{"path":"/reference/get_uploader.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Seven Bridges command line uploader and extract to\na specified directory — get_uploader","text":"platform Seven Bridges platform uploader designed. Possible choices : \"cgc\" (Cancer Genomics Cloud), \"aws-us\" (Amazon Web Services US), \"aws-eu\" (Amazon Web Services EU), \"gcp\" (Google Cloud Platform). Default \"cgc\". destdir directory extract downloaded Seven Bridges command line uploader . specified directory present, created. quiet download progress printed?","code":""},{"path":"/reference/get_uploader.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Seven Bridges command line uploader and extract to\na specified directory — get_uploader","text":"0 command line uploader successfully downloaded unarchived.","code":""},{"path":"/reference/get_uploader.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Download Seven Bridges command line uploader and extract to\na specified directory — get_uploader","text":"https://docs.sevenbridges.com/docs/upload-via--command-line","code":""},{"path":"/reference/get_uploader.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download Seven Bridges command line uploader and extract to\na specified directory — get_uploader","text":"","code":"# Download CGC CLI uploader to `~/Downloads` dir <- \"~/Downloads/\" if (FALSE) { get_uploader(\"cgc\", dir)}"},{"path":"/reference/input_output_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Get input/output matrix out of JSON CWL file directly — input_matrix","title":"Get input/output matrix out of JSON CWL file directly — input_matrix","text":"efficient way access JSON file, need convert JSON Tool Flow object access, directly operate list parsed JSON file. Compare convert_app, much faster.","code":""},{"path":"/reference/input_output_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get input/output matrix out of JSON CWL file directly — input_matrix","text":"","code":"input_matrix(   from,   new.order = c(\"id\", \"label\", \"type\", \"required\", \"prefix\", \"fileTypes\"),   required = NULL )  output_matrix(from, new.order = c(\"id\", \"label\", \"type\", \"fileTypes\"))"},{"path":"/reference/input_output_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get input/output matrix out of JSON CWL file directly — input_matrix","text":"JSON file path new.order vector column orders default input \"id\", \"label\", \"type\", \"required\", \"prefix\", \"fileTypes\"; output \"id\", \"label\", \"type\", \"fileTypes\" required logical value, show requried input node .","code":""},{"path":"/reference/input_output_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get input/output matrix out of JSON CWL file directly — input_matrix","text":"data frame input/output information.","code":""},{"path":"/reference/input_output_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get input/output matrix out of JSON CWL file directly — input_matrix","text":"","code":"tool.in <- system.file(\"extdata/app\", \"tool_unpack_fastq.json\", package = \"sevenbridges\") flow.in <- system.file(\"extdata/app\", \"flow_star.json\", package = \"sevenbridges\") input_matrix(tool.in) #>                    id              label type required               prefix #> 1 #input_archive_file Input archive file File     TRUE --input_archive_file #>                                        fileTypes #> 1 TAR, TAR.GZ, TGZ, TAR.BZ2, TBZ2,  GZ, BZ2, ZIP input_matrix(tool.in, required = TRUE) #>                    id              label type required               prefix #> 1 #input_archive_file Input archive file File     TRUE --input_archive_file #>                                        fileTypes #> 1 TAR, TAR.GZ, TGZ, TAR.BZ2, TBZ2,  GZ, BZ2, ZIP input_matrix(flow.in) #>                                id                    label    type required #> 1                    #sjdbGTFfile              sjdbGTFfile File...    FALSE #> 2                          #fastq                    fastq File...     TRUE #> 3               #genomeFastaFiles         genomeFastaFiles    File     TRUE #> 4 #sjdbGTFtagExonParentTranscript      Exons' parents name  string    FALSE #> 5       #sjdbGTFtagExonParentGene                Gene name  string    FALSE #> 6          #winAnchorMultimapNmax         Max loci anchors     int    FALSE #> 7             #winAnchorDistNbins Max bins between anchors     int    FALSE #>   fileTypes #> 1      null #> 2      null #> 3      null #> 4      null #> 5      null #> 6      null #> 7      null input_matrix(flow.in, c(\"id\", \"type\")) #>                                id    type #> 1                    #sjdbGTFfile File... #> 2                          #fastq File... #> 3               #genomeFastaFiles    File #> 4 #sjdbGTFtagExonParentTranscript  string #> 5       #sjdbGTFtagExonParentGene  string #> 6          #winAnchorMultimapNmax     int #> 7             #winAnchorDistNbins     int input_matrix(flow.in, required = TRUE) #>                  id            label    type required fileTypes #> 2            #fastq            fastq File...     TRUE      null #> 3 #genomeFastaFiles genomeFastaFiles    File     TRUE      null tool.in <- system.file(\"extdata/app\", \"tool_unpack_fastq.json\", package = \"sevenbridges\") flow.in <- system.file(\"extdata/app\", \"flow_star.json\", package = \"sevenbridges\") output_matrix(tool.in) #>                    id              label    type fileTypes #> 1 #output_fastq_files Output FASTQ files File...     FASTQ output_matrix(flow.in) #>                              id                       label    type fileTypes #> 1               #unmapped_reads              unmapped_reads File...      null #> 2  #transcriptome_aligned_reads transcriptome_aligned_reads    File      null #> 3             #splice_junctions            splice_junctions    File      null #> 4               #reads_per_gene              reads_per_gene    File      null #> 5                    #log_files                   log_files File...      null #> 6           #chimeric_junctions          chimeric_junctions    File      null #> 7          #intermediate_genome         intermediate_genome    File      null #> 8          #chimeric_alignments         chimeric_alignments    File      null #> 9                   #sorted_bam                  sorted_bam    File      null #> 10                      #result                      result    File      null"},{"path":"/reference/link.html","id":null,"dir":"Reference","previous_headings":"","what":"link two nodes to form a new Workflow — link","title":"link two nodes to form a new Workflow — link","text":"link two nodes form new Workflow","code":""},{"path":"/reference/link.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"link two nodes to form a new Workflow — link","text":"","code":"link(from, to, ...)  # S4 method for Tool,Tool link(   from,   to,   id1,   id2,   flow_id = NULL,   flow_label = NULL,   flow_input = NULL,   flow_output = NULL )  # S4 method for Tool,Workflow link(   from,   to,   id1,   id2,   flow_id = NULL,   flow_label = NULL,   flow_input = NULL,   flow_output = NULL )  # S4 method for Workflow,Tool link(   from,   to,   id1,   id2,   flow_id = NULL,   flow_label = NULL,   flow_input = NULL,   flow_output = NULL )  # S4 method for Workflow,Workflow link(from, to, id1, id2)  # S4 method for App,ToolORWorkflow link(from, to, id1, id2)  # S4 method for ToolORWorkflow,App link(from, to, id1, id2)"},{"path":"/reference/link.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"link two nodes to form a new Workflow — link","text":"either Tool App Workflow object either Tool App Workflow object ... auguments id1 id connected ouput first node id2 id id connected input second first node flow_id workflow id, ignored, going create one joning tool id. flow_label workflow label, ignored, going create one joning tool labels. flow_input full flow input id, e.g. \"#SBG_Unpack_FASTQs.input_archive_file\" flow_output full flow output id, e.g. \"#STAR.log_files\"","code":""},{"path":"/reference/link.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"link two nodes to form a new Workflow — link","text":"Workflow object","code":""},{"path":"/reference/link.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"link two nodes to form a new Workflow — link","text":"Flexible enought allow users connect two objects ids","code":""},{"path":"/reference/link.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"link two nodes to form a new Workflow — link","text":"","code":"t1 <- system.file(\"extdata/app\", \"tool_unpack_fastq.json\", package = \"sevenbridges\") t2 <- system.file(\"extdata/app\", \"tool_star.json\", package = \"sevenbridges\") t1 <- convert_app(t1) t2 <- convert_app(t2) # check possible link link_what(t1, t2) #> $File... #> $File...$from #>                    id              label    type fileTypes          full.name #> 1 #output_fastq_files Output FASTQ files File...     FASTQ #SBG_Unpack_FASTQs #>  #> $File...$to #>              id                label    type required prefix #> 1        #reads        Read sequence File...     TRUE   <NA> #> 95 #sjdbGTFfile Splice junction file File...    FALSE   <NA> #>                                                   fileTypes full.name #> 1  FASTA, FASTQ, FA, FQ, FASTQ.GZ, FQ.GZ, FASTQ.BZ2, FQ.BZ2     #STAR #> 95                                            GTF, GFF, TXT     #STAR #>  #>  # link f1 <- link(t1, t2, \"output_fastq_files\", \"reads\") #> flow_input: #SBG_Unpack_FASTQs.input_archive_file / #STAR.sjdbGTFfile / #STAR.genome #> flow_output: #STAR.aligned_reads / #STAR.transcriptome_aligned_reads / #STAR.reads_per_gene / #STAR.log_files / #STAR.splice_junctions / #STAR.chimeric_junctions / #STAR.unmapped_reads / #STAR.intermediate_genome / #STAR.chimeric_alignments # link f2 <- link(   t1, t2, \"output_fastq_files\", \"reads\",   flow_input = \"#SBG_Unpack_FASTQs.input_archive_file\",   flow_output = \"#STAR.log_files\" ) #> flow_input: #SBG_Unpack_FASTQs.input_archive_file / #STAR.genome #> flow_output: #STAR.log_files"},{"path":"/reference/link_what.html","id":null,"dir":"Reference","previous_headings":"","what":"List possible linking methods — link_what","title":"List possible linking methods — link_what","text":"List possible linking methods","code":""},{"path":"/reference/link_what.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List possible linking methods — link_what","text":"","code":"link_what(from, to, ...)  # S4 method for Tool,Tool link_what(from, to)  # S4 method for Tool,SBGWorkflow link_what(from, to)  # S4 method for SBGWorkflow,Tool link_what(from, to)  # S4 method for SBGWorkflow,SBGWorkflow link_what(from, to)"},{"path":"/reference/link_what.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List possible linking methods — link_what","text":"either Tool App SBGWorkflow object either Tool App Workflow object ... auguments","code":""},{"path":"/reference/link_what.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List possible linking methods — link_what","text":"Workflow object","code":""},{"path":"/reference/link_what.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List possible linking methods — link_what","text":"Given two object Tool, Flow App, list possible input/output match.","code":""},{"path":"/reference/link_what.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List possible linking methods — link_what","text":"","code":"t1 <- system.file(\"extdata/app\", \"tool_unpack_fastq.json\", package = \"sevenbridges\") t2 <- system.file(\"extdata/app\", \"tool_star.json\", package = \"sevenbridges\") t1 <- convert_app(t1) t2 <- convert_app(t2) # check possible link link_what(t1, t2) #> $File... #> $File...$from #>                    id              label    type fileTypes          full.name #> 1 #output_fastq_files Output FASTQ files File...     FASTQ #SBG_Unpack_FASTQs #>  #> $File...$to #>              id                label    type required prefix #> 1        #reads        Read sequence File...     TRUE   <NA> #> 95 #sjdbGTFfile Splice junction file File...    FALSE   <NA> #>                                                   fileTypes full.name #> 1  FASTA, FASTQ, FA, FQ, FASTQ.GZ, FQ.GZ, FASTQ.BZ2, FQ.BZ2     #STAR #> 95                                            GTF, GFF, TXT     #STAR #>  #>  tool.in <- system.file(\"extdata/app\", \"tool_unpack_fastq.json\", package = \"sevenbridges\") flow.in <- system.file(\"extdata/app\", \"flow_star.json\", package = \"sevenbridges\") t1 <- convert_app(tool.in) f2 <- convert_app(flow.in) link_what(t1, f2) #> $File... #> $File...$from #>                    id              label    type fileTypes #> 1 #output_fastq_files Output FASTQ files File...     FASTQ #>  #> $File...$to #>             id       label    type required fileTypes #> 1 #sjdbGTFfile sjdbGTFfile File...    FALSE      null #> 2       #fastq       fastq File...     TRUE      null #>                                                 link_to #> 1 #STAR_Genome_Generate.sjdbGTFfile | #STAR.sjdbGTFfile #> 2                     #SBG_FASTQ_Quality_Detector.fastq #>  #>  tool.in <- system.file(\"extdata/app\", \"tool_unpack_fastq.json\", package = \"sevenbridges\") flow.in <- system.file(\"extdata/app\", \"flow_star.json\", package = \"sevenbridges\") t1 <- convert_app(tool.in) f2 <- convert_app(flow.in) link_what(f2, t1) #> $File #> $File$from #>                              id                       label type required #> 2  #transcriptome_aligned_reads transcriptome_aligned_reads File    FALSE #> 3             #splice_junctions            splice_junctions File    FALSE #> 4               #reads_per_gene              reads_per_gene File    FALSE #> 6           #chimeric_junctions          chimeric_junctions File    FALSE #> 7          #intermediate_genome         intermediate_genome File    FALSE #> 8          #chimeric_alignments         chimeric_alignments File    FALSE #> 9                   #sorted_bam                  sorted_bam File    FALSE #> 10                      #result                      result File    FALSE #>    fileTypes                            link_to #> 2       null  #STAR.transcriptome_aligned_reads #> 3       null             #STAR.splice_junctions #> 4       null               #STAR.reads_per_gene #> 6       null           #STAR.chimeric_junctions #> 7       null          #STAR.intermediate_genome #> 8       null          #STAR.chimeric_alignments #> 9       null         #Picard_SortSam.sorted_bam #> 10      null #SBG_FASTQ_Quality_Detector.result #>  #> $File$to #>                    id              label type required               prefix #> 1 #input_archive_file Input archive file File     TRUE --input_archive_file #>                                        fileTypes #> 1 TAR, TAR.GZ, TGZ, TAR.BZ2, TBZ2,  GZ, BZ2, ZIP #>  #>"},{"path":"/reference/project_details.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the details of the project — project_details","title":"Returns the details of the project — project_details","text":"Returns details project.","code":""},{"path":"/reference/project_details.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the details of the project — project_details","text":"","code":"project_details(token = NULL, project_id = NULL, ...)"},{"path":"/reference/project_details.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the details of the project — project_details","text":"token auth token project_id ID project want access. ... parameters passed api function","code":""},{"path":"/reference/project_details.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the details of the project — project_details","text":"parsed list returned json","code":""},{"path":"/reference/project_details.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns the details of the project — project_details","text":"","code":"token <- \"your_token\" if (FALSE) { req <- project_details(token, project_id = \"your_project_id\")}"},{"path":"/reference/project_members.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns a list of all users invited to the project and their privileges — project_members","title":"Returns a list of all users invited to the project and their privileges — project_members","text":"Returns list users invited project privileges. Project ID specified path parameter. Call returns ID username user privileges.","code":""},{"path":"/reference/project_members.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns a list of all users invited to the project and their privileges — project_members","text":"","code":"project_members(token = NULL, project_id = NULL, ...)"},{"path":"/reference/project_members.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns a list of all users invited to the project and their privileges — project_members","text":"token auth token project_id ID project want access. ... parameters passed api function","code":""},{"path":"/reference/project_members.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns a list of all users invited to the project and their privileges — project_members","text":"parsed list returned json","code":""},{"path":"/reference/project_members.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns a list of all users invited to the project and their privileges — project_members","text":"","code":"token <- \"your_token\" if (FALSE) { req <- project_members(token, project_id = \"your_project_id\")}"},{"path":"/reference/requirements.html","id":null,"dir":"Reference","previous_headings":"","what":"Rabix specifc Requirements — CPURequirement-class","title":"Rabix specifc Requirements — CPURequirement-class","text":"Extends ProcessRequirements. CPURequirement MemRequirement setup CPU Memory requiremnts. requirements hints","code":""},{"path":"/reference/requirements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rabix specifc Requirements — CPURequirement-class","text":"","code":"docker(   pull = NULL,   imageId = NULL,   load = NULL,   file = NULL,   output = NULL,   dockerPull = pull,   dockerImageId = imageId,   dockerLoad = load,   dockerFile = file,   dockerOutputDirectory = output,   ... )  requirements(...)  fileDef(name = NULL, content = NULL)"},{"path":"/reference/requirements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rabix specifc Requirements — CPURequirement-class","text":"pull [short form argument] Docker Repository[:Tag] like rocker/r-base imageId [short form argument] image id used docker run, imageId Optionally set id image get SDK. load [short form argument] Specify HTTP URL download Docker image using docker load. file [short form argument] Supply contents Dockerfile built using docker build. output [short form argument] Set designated output directory specific location inside Docker container. dockerPull Docker Repository[:Tag] like rocker/r-base dockerImageId image id used docker run, imageId Optionally set id image get SDK. dockerLoad Specify HTTP URL download Docker image using docker load. dockerFile Supply contents Dockerfile built using docker build. dockerOutputDirectory Set designated output directory specific location inside Docker container. ... extra aguments passed name file name content file content, script","code":""},{"path":"/reference/requirements.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rabix specifc Requirements — CPURequirement-class","text":"Requirement subclass.","code":""},{"path":"/reference/requirements.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rabix specifc Requirements — CPURequirement-class","text":"constructs ProesssRequirementList object, returned raw list contains requirements.","code":""},{"path":"/reference/requirements.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Rabix specifc Requirements — CPURequirement-class","text":"value [Integer] CPU default 1L, 0L, use CPU. mem, default 1000L. Note: CPU, 0L means multi-tread, non-zero value converted 1L, means single thread.","code":""},{"path":"/reference/requirements.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rabix specifc Requirements — CPURequirement-class","text":"","code":"cpu(1) #> class: sbg:CPURequirement #> value: 1 #>  CPURequirement(value = 1L) #> class: sbg:CPURequirement #> value: 1 #>  docker(\"rocker/r-base\") #> class: DockerRequirement #> dockerPull: rocker/r-base #>  requirements(docker(\"rocker/r-base\"), cpu(1), mem(1024)) #> [[1]] #> class: DockerRequirement #> dockerPull: rocker/r-base #>  #> [[2]] #> class: sbg:CPURequirement #> value: 1 #>  #> [[3]] #> class: sbg:MemRequirement #> value: 1024 #>  mem(2000) #> class: sbg:MemRequirement #> value: 2000 #>  MemRequirement(value = 2000L) #> class: sbg:MemRequirement #> value: 2000 #>  aws(\"c3.8xlarge\") #> class: sbg:AWSInstanceType #> value: c3.8xlarge #>  anyReq(\"any\") #> class: '' #> value: any #>"},{"path":"/reference/response-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Get raw response from an Item object — response","title":"Get raw response from an Item object — response","text":"Get raw response Item object","code":""},{"path":"/reference/response-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get raw response from an Item object — response","text":"","code":"response(x)  response(x) <- value  # S4 method for ANY response(x)  # S4 method for ANY response(x) <- value  # S4 method for Item response(x)  # S4 method for Item response(x) <- value  # S4 method for SimpleList response(x)  # S4 method for SimpleList response(x) <- value"},{"path":"/reference/response-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get raw response from an Item object — response","text":"x object may response. value value replaced.","code":""},{"path":"/reference/response-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get raw response from an Item object — response","text":"raw response httr","code":""},{"path":"/reference/response-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get raw response from an Item object — response","text":"","code":"if (FALSE) { response(x)}"},{"path":"/reference/sbg_get_env.html","id":null,"dir":"Reference","previous_headings":"","what":"Set authentication environment variables for Seven Bridges API — sbg_get_env","title":"Set authentication environment variables for Seven Bridges API — sbg_get_env","text":"Set authentication environment variables Seven Bridges API","code":""},{"path":"/reference/sbg_get_env.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set authentication environment variables for Seven Bridges API — sbg_get_env","text":"","code":"sbg_get_env(x)"},{"path":"/reference/sbg_get_env.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set authentication environment variables for Seven Bridges API — sbg_get_env","text":"x Name system environment variable","code":""},{"path":"/reference/sbg_get_env.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set authentication environment variables for Seven Bridges API — sbg_get_env","text":"value environment variable","code":""},{"path":"/reference/sbg_get_env.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set authentication environment variables for Seven Bridges API — sbg_get_env","text":"","code":"# set and get two environment variables for CGC token <- \"your_token\" if (FALSE) { sbg_set_env(\"https://cgc-api.sbgenomics.com/v2\", token) sbg_get_env(\"SB_API_ENDPOINT\") sbg_get_env(\"SB_AUTH_TOKEN\")}"},{"path":"/reference/sbg_set_env.html","id":null,"dir":"Reference","previous_headings":"","what":"Set authentication environment variables for Seven Bridges API — sbg_set_env","title":"Set authentication environment variables for Seven Bridges API — sbg_set_env","text":"Set authentication environment variables Seven Bridges API","code":""},{"path":"/reference/sbg_set_env.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set authentication environment variables for Seven Bridges API — sbg_set_env","text":"","code":"sbg_set_env(url = NULL, token = NULL)"},{"path":"/reference/sbg_set_env.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set authentication environment variables for Seven Bridges API — sbg_set_env","text":"url Base URL API. token authentication token.","code":""},{"path":"/reference/sbg_set_env.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set authentication environment variables for Seven Bridges API — sbg_set_env","text":"set two environment variables authentication","code":""},{"path":"/reference/sbg_set_env.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set authentication environment variables for Seven Bridges API — sbg_set_env","text":"","code":"# set and get environment variables for CGC token <- \"your_token\" if (FALSE) { sbg_set_env(\"https://cgc-api.sbgenomics.com/v2\", token) sbg_get_env(\"SB_API_ENDPOINT\") sbg_get_env(\"SB_AUTH_TOKEN\")}"},{"path":"/reference/setListClass.html","id":null,"dir":"Reference","previous_headings":"","what":"List Class generator. — setListClass","title":"List Class generator. — setListClass","text":"Extends IRanges SimpleList class return constructor.","code":""},{"path":"/reference/setListClass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Class generator. — setListClass","text":"","code":"setListClass(   elementType = NULL,   suffix = \"List\",   contains = NULL,   where = topenv(parent.frame()) )"},{"path":"/reference/setListClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Class generator. — setListClass","text":"elementType [character] suffix [character] default \"List\" contains [character] class name. environment.","code":""},{"path":"/reference/setListClass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List Class generator. — setListClass","text":"S4 class constructor","code":""},{"path":"/reference/set_test_env.html","id":null,"dir":"Reference","previous_headings":"","what":"Set testing env — set_test_env","title":"Set testing env — set_test_env","text":"Checks docker installed, running required images downloaded creates container","code":""},{"path":"/reference/set_test_env.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set testing env — set_test_env","text":"","code":"set_test_env(   type = \"host\",   docker_image = \"tengfei/testenv\",   data_dir = getwd() )"},{"path":"/reference/set_test_env.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set testing env — set_test_env","text":"type \"dind\" \"host\" docker_image required docker image pre-installed bunny, default: tengfei/testenv data_dir directory data mount (also execution directory)","code":""},{"path":"/reference/set_test_env.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set testing env — set_test_env","text":"docker stdout","code":""},{"path":"/reference/set_test_env.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set testing env — set_test_env","text":"","code":"if (FALSE) { set_test_env(\"dind\", \"tengfei/testenv\", \"/Users/<user>/tools\")}"},{"path":"/reference/sevenbridges-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Seven Bridges Platform API Client and CWL Tool Builder in R — sevenbridges-package","title":"Seven Bridges Platform API Client and CWL Tool Builder in R — sevenbridges-package","text":"R client utilities Seven Bridges platform API, Cancer Genomics Cloud Seven Bridges supported platforms.","code":""},{"path":[]},{"path":"/reference/sevenbridges-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Seven Bridges Platform API Client and CWL Tool Builder in R — sevenbridges-package","text":"Soner Koc <soner.koc@sevenbridges.com> Nan Xiao Tengfei Yin Dusan Randjelovic Emile Young","code":""},{"path":"/reference/shorthand-cwl.html","id":null,"dir":"Reference","previous_headings":"","what":"Shorthand functions for cwl packages constructors — CLB","title":"Shorthand functions for cwl packages constructors — CLB","text":"Shorthand functions cwl packages constructors","code":""},{"path":"/reference/shorthand-cwl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shorthand functions for cwl packages constructors — CLB","text":"type [] Specify valid types data may assigned parameter. label [character] short, human-readable label parameter object. description [character] long, human-readable description parameter object. streamable [logical] Currently applies type File. value true indicates file read written sequentially without seeking. implementation may use flag indicate whether valid stream file contents using named pipe. Default: false. default [] default value parameter provided input object. ... InputParameter, passed [CommandLineBinding], created command CLB. parameters accepted please check CommandLineBiding cwl package. convenience, manual also contain section CommandLineBinding. OutPar OutputParameter, passed CommandOutputParameter. Please check following section well.","code":""},{"path":"/reference/shorthand-cwl.html","id":"shorthand","dir":"Reference","previous_headings":"","what":"Shorthand","title":"Shorthand functions for cwl packages constructors — CLB","text":"CLB <- CommandLineBinding argslist <- CLBList <- CommandLineBindingList COB <- CommandOutputBinding IPList <- InputParameterList OPList <- OutputParameterList InPar <- InputParameter OutPar <- OutputParameter","code":""},{"path":"/reference/shorthand-cwl.html","id":"commandlinebinding","dir":"Reference","previous_headings":"","what":"CommandLineBinding","title":"Shorthand functions for cwl packages constructors — CLB","text":"position [integer] sorting key. Default position 0. prefix [character] Command line prefix add value. separate [logical] true (default) prefix value must added separate command line arguments; false, prefix value must concatenated single command line argument. itemSeparator [character] Join array elements single string elements separated itemSeparator. valueFrom [characterOrExpression] valueFrom constant string value, use value apply binding rules . valueFrom expression, evaluate expression yield actual value use build command line apply binding rules . inputBinding associated input parameter, \"context\" expression value input parameter. binding part CommandLineTool.arguments field, valueFrom field required.","code":""},{"path":"/reference/shorthand-cwl.html","id":"commandoutputparameter","dir":"Reference","previous_headings":"","what":"CommandOutputParameter","title":"Shorthand functions for cwl packages constructors — CLB","text":"glob [characterORExpression] Find files relative output directory, using POSIX glob(3) pathname matching. provided array, match patterns array. provided expression, expression must return string array strings, evaluated glob pattern. files actually exist matched returned. outputEval [Expression] Evaluate expression generate output value. glob specified, script context array containing files matched. Additionally, loadContents true, file objects include first 64 KiB file contents contents field. loadContents [logical] applies type File. Read first 64 KiB text file place \"contents\" field file object manipulation expressions. secondaryFiles applies type File. Describes files must included alongside primary file. value Expression, context expression input output File parameter binding applies. value string, specifies following pattern applied primary file: string begins one caret characters, caret, remove last file extension path (last period . following characters). file extensions, path unchanged.  Append remainder string end file path.","code":""},{"path":"/reference/shorthand-cwl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shorthand functions for cwl packages constructors — CLB","text":"","code":"ipl <- IPList(   input(     id = \"bam\",     type = \"File\",     label = \"Bam file\",     description = \"Input bam file\",     position = 1L,     separate = TRUE   ),   input(     id = \"level\",     type = \"Integer\",     label = \"Compression Level\",     description = \"Set compression level, from 0 (uncompressed) to 9 (best)\",     position = 2L   ),   input(     id = \"prefix\",     type = \"String\",     label = \"Prefix\",     description = \"Write temporary files to PREFIX.nnnn.bam\",     position = 3L   ) )"},{"path":"/reference/status_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Check request status — status_check","title":"Check request status — status_check","text":"Check request status","code":""},{"path":"/reference/status_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check request status — status_check","text":"","code":"status_check(req, as = \"parsed\", ...)"},{"path":"/reference/status_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check request status — status_check","text":"request content message","code":""},{"path":"/reference/tag-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Set file tags — set_tag","title":"Set file tags — set_tag","text":"Set file tags Add new file tags keep old tags","code":""},{"path":"/reference/tag-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set file tags — set_tag","text":"","code":"set_tag(obj, ...)  # S4 method for FilesList set_tag(obj, ...)  # S4 method for Files set_tag(obj, ...)  add_tag(obj, ...)  # S4 method for FilesList add_tag(obj, ...)  # S4 method for Files add_tag(obj, ...)"},{"path":"/reference/tag-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set file tags — set_tag","text":"obj single File FileList ... passed obj$set_tag() obj$add_tag()","code":""},{"path":"/reference/tag-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set file tags — set_tag","text":"tag list tag list","code":""},{"path":"/reference/tag-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set file tags — set_tag","text":"","code":"if (FALSE) { fl <- a$project(\"demo\")$file(\"omni\") set_tag(fl, \"new tag\") set_tag(fl, list(\"new tag\", \"new tag 2\"))} if (FALSE) { fl <- a$project(\"demo\")$file(\"omni\") add_tag(fl, \"new tag\") add_tag(fl, list(\"new tag\", \"new tag 2\"))}"},{"path":"/reference/test_tool_bunny.html","id":null,"dir":"Reference","previous_headings":"","what":"Test tools in rabix/bunny — test_tool_bunny","title":"Test tools in rabix/bunny — test_tool_bunny","text":"Test tools locally rabix/bunny inside docker container","code":""},{"path":"/reference/test_tool_bunny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test tools in rabix/bunny — test_tool_bunny","text":"","code":"test_tool_bunny(rabix_tool, inputs)"},{"path":"/reference/test_tool_bunny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test tools in rabix/bunny — test_tool_bunny","text":"rabix_tool rabix tool Tool class inputs input parameters declared json (yaml) string","code":""},{"path":"/reference/test_tool_bunny.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test tools in rabix/bunny — test_tool_bunny","text":"bunny stdout","code":""},{"path":[]},{"path":"/reference/test_tool_cwlrun.html","id":null,"dir":"Reference","previous_headings":"","what":"Test tools with cwl-runner — test_tool_cwlrun","title":"Test tools with cwl-runner — test_tool_cwlrun","text":"Test tools locally cwl-runner (https://github.com/common-workflow-language/cwltool)","code":""},{"path":"/reference/test_tool_cwlrun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test tools with cwl-runner — test_tool_cwlrun","text":"","code":"test_tool_cwlrun(rabix_tool, inputs = list())"},{"path":"/reference/test_tool_cwlrun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test tools with cwl-runner — test_tool_cwlrun","text":"rabix_tool rabix tool Tool class inputs input parameters declared json (yaml) string","code":""},{"path":"/reference/test_tool_cwlrun.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test tools with cwl-runner — test_tool_cwlrun","text":"cwl-runner stdout","code":""},{"path":[]},{"path":"/reference/test_tool_rabix.html","id":null,"dir":"Reference","previous_headings":"","what":"Test tools in rabix/rabix-devel (DEPRECATED) — test_tool_rabix","title":"Test tools in rabix/rabix-devel (DEPRECATED) — test_tool_rabix","text":"Test tools locally rabix/rabix-devel python executor (DEPRECATED)","code":""},{"path":"/reference/test_tool_rabix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test tools in rabix/rabix-devel (DEPRECATED) — test_tool_rabix","text":"","code":"test_tool_rabix(rabix_tool, inputs = list())"},{"path":"/reference/test_tool_rabix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test tools in rabix/rabix-devel (DEPRECATED) — test_tool_rabix","text":"rabix_tool rabix tool Tool class inputs input parameters declared json (yaml) string","code":""},{"path":"/reference/test_tool_rabix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test tools in rabix/rabix-devel (DEPRECATED) — test_tool_rabix","text":"rabix stdout","code":""},{"path":[]},{"path":"/reference/upload_complete_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Reports the complete file upload — upload_complete_all","title":"Reports the complete file upload — upload_complete_all","text":"whole parts uploaded, provided ETags correct, file assembled made available SBG platform.","code":""},{"path":"/reference/upload_complete_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reports the complete file upload — upload_complete_all","text":"","code":"upload_complete_all(token = NULL, upload_id = NULL, ...)"},{"path":"/reference/upload_complete_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reports the complete file upload — upload_complete_all","text":"token auth token upload_id ID upload ... parameters passed api function","code":""},{"path":"/reference/upload_complete_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reports the complete file upload — upload_complete_all","text":"parsed list returned json","code":""},{"path":"/reference/upload_complete_all.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reports the complete file upload — upload_complete_all","text":"","code":"token <- \"your_token\" if (FALSE) { req <- upload_complete_all(token, upload_id = \"your_upload_id\")}"},{"path":"/reference/upload_complete_part.html","id":null,"dir":"Reference","previous_headings":"","what":"Reports the completion of the part upload — upload_complete_part","title":"Reports the completion of the part upload — upload_complete_part","text":"ETag provided correctness check upon completion whole upload. Value ETag provided AWS S3 service uploading file ETag header.","code":""},{"path":"/reference/upload_complete_part.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reports the completion of the part upload — upload_complete_part","text":"","code":"upload_complete_part(   token = NULL,   upload_id = NULL,   part_number = NULL,   e_tag = NULL,   ... )"},{"path":"/reference/upload_complete_part.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reports the completion of the part upload — upload_complete_part","text":"token auth token upload_id ID upload part_number ID part wish report completed e_tag Value ETag header returned AWS S3 uploading part file. ... parameters passed api function","code":""},{"path":"/reference/upload_complete_part.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reports the completion of the part upload — upload_complete_part","text":"parsed list returned json","code":""},{"path":"/reference/upload_complete_part.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reports the completion of the part upload — upload_complete_part","text":"","code":"token <- \"your_token\" if (FALSE) { req <- upload_complete_part(   token, upload_id = \"your_upload_id\",   part_number = \"1\", e_tag = \"your_e_tag\" )}"},{"path":"/reference/upload_delete.html","id":null,"dir":"Reference","previous_headings":"","what":"Abort the upload — upload_delete","title":"Abort the upload — upload_delete","text":"Abort upload; upload records file deleted.","code":""},{"path":"/reference/upload_delete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Abort the upload — upload_delete","text":"","code":"upload_delete(token = NULL, upload_id = NULL, ...)"},{"path":"/reference/upload_delete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abort the upload — upload_delete","text":"token auth token upload_id ID upload ... parameters passed api function","code":""},{"path":"/reference/upload_delete.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Abort the upload — upload_delete","text":"parsed list returned json","code":""},{"path":"/reference/upload_delete.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Abort the upload — upload_delete","text":"","code":"token <- \"your_token\" if (FALSE) { req <- upload_delete(token, upload_id = \"your_upload_id\")}"},{"path":"/reference/upload_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns upload information for the ongoing upload — upload_info","title":"Returns upload information for the ongoing upload — upload_info","text":"Returns upload information ongoing upload.","code":""},{"path":"/reference/upload_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns upload information for the ongoing upload — upload_info","text":"","code":"upload_info(token = NULL, upload_id = NULL, ...)"},{"path":"/reference/upload_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns upload information for the ongoing upload — upload_info","text":"token auth token upload_id ID upload ... parameters passed api function","code":""},{"path":"/reference/upload_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns upload information for the ongoing upload — upload_info","text":"parsed list returned json","code":""},{"path":"/reference/upload_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns upload information for the ongoing upload — upload_info","text":"","code":"token <- \"your_token\" if (FALSE) req <- upload_info(token, upload_id = \"your_upload_id\")"},{"path":"/reference/upload_info_part.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns AWS S3 signed URL for a part of the file upload — upload_info_part","title":"Returns AWS S3 signed URL for a part of the file upload — upload_info_part","text":"Gets signed URL upload specified part. Note URLs valid 60 seconds initiate upload signed URL time frame.","code":""},{"path":"/reference/upload_info_part.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns AWS S3 signed URL for a part of the file upload — upload_info_part","text":"","code":"upload_info_part(token = NULL, upload_id = NULL, part_number = NULL, ...)"},{"path":"/reference/upload_info_part.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns AWS S3 signed URL for a part of the file upload — upload_info_part","text":"token auth token upload_id ID upload part_number Number upload file part wish access ... parameters passed api function","code":""},{"path":"/reference/upload_info_part.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns AWS S3 signed URL for a part of the file upload — upload_info_part","text":"parsed list returned json","code":""},{"path":"/reference/upload_info_part.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns AWS S3 signed URL for a part of the file upload — upload_info_part","text":"","code":"token <- \"your_token\" if (FALSE) { req <- upload_info_part(token, upload_id = \"your_upload_id\", part_number = 1)}"},{"path":"/reference/upload_init.html","id":null,"dir":"Reference","previous_headings":"","what":"Initializes the upload of the specified file — upload_init","title":"Initializes the upload of the specified file — upload_init","text":"first operation performed wish upload file. Operation initialized providing file name, project id wish file uploaded (specified, defaults user's stash) optionally providing wanted part size. may wish set part size low value experience problems uploading large file parts, although default value 5MB good enough users.","code":""},{"path":"/reference/upload_init.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initializes the upload of the specified file — upload_init","text":"","code":"upload_init(   token = NULL,   project_id = NULL,   name = NULL,   size = NULL,   part_size = NULL,   ... )"},{"path":"/reference/upload_init.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initializes the upload of the specified file — upload_init","text":"token auth token project_id ID project wish upload name Name file wish upload size Size file wish upload part_size Requested part size. Note API may reject requested part size return proper one response. ... parameters passed api function","code":""},{"path":"/reference/upload_init.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initializes the upload of the specified file — upload_init","text":"parsed list returned json","code":""},{"path":"/reference/upload_init.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Initializes the upload of the specified file — upload_init","text":"Limits: Maximum number parts 10000 Maximum file size 5TB Maximum part size 5GB Default part size 5MB","code":""},{"path":"/reference/upload_init.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initializes the upload of the specified file — upload_init","text":"","code":"token <- \"your_token\" if (FALSE) { req <- upload_init(   token,   project_id = \"your_project_id\",   name = \"Sample1_RNASeq_chr20.pe_1.fastq\", size = 5242880 )}"},{"path":[]},{"path":"/news/index.html","id":"bug-fixes-1-19-3","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"sevenbridges 1.19.3","text":"Fixed issue stoping fetching project tags","code":""},{"path":[]},{"path":"/news/index.html","id":"improvements-1-19-2","dir":"Changelog","previous_headings":"","what":"Improvements","title":"sevenbridges 1.19.2","text":"Transfer package maintainership.","code":""},{"path":[]},{"path":"/news/index.html","id":"bug-fixes-1-19-1","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"sevenbridges 1.19.1","text":"Fixed API issue invalid JSON running tasks. Fixed subtle column class mismatch issue binding data frames since R 4.0.0.","code":""},{"path":"/news/index.html","id":"improvements-1-19-1","dir":"Changelog","previous_headings":"","what":"Improvements","title":"sevenbridges 1.19.1","text":"Use data.table::rbindlist() possible increase data frame binding performance.","code":""},{"path":[]},{"path":"/news/index.html","id":"bug-fixes-1-17-1","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"sevenbridges 1.17.1","text":"Fix build issues R 4.0.0, default value stringsAsFactors changed FALSE. Updated affected data.frame() calls rely default automatic vector expansion behavior explicit stringsAsFactors = TRUE.","code":""},{"path":[]},{"path":"/news/index.html","id":"improvements-1-15-2","dir":"Changelog","previous_headings":"","what":"Improvements","title":"sevenbridges 1.15.2","text":"Added new argument authorization Auth api() allow specifying token access token Seven Bridges single sign-(SSO).","code":""},{"path":[]},{"path":"/news/index.html","id":"improvements-1-15-1","dir":"Changelog","previous_headings":"","what":"Improvements","title":"sevenbridges 1.15.1","text":"Added new fields created_by, created_on, modified_on Project class following recent API improvements. enables better project filtering querying projects. See vignette details.","code":""},{"path":[]},{"path":"/news/index.html","id":"improvements-1-13-5","dir":"Changelog","previous_headings":"","what":"Improvements","title":"sevenbridges 1.13.5","text":"Added new platform options recently introduced environments. Now can choose \"aws-us\", \"aws-eu\", \"ali-cn\", \"cgc\", \"cavatica\", \"f4c\" Auth() calls.","code":""},{"path":[]},{"path":"/news/index.html","id":"new-features-1-13-4","dir":"Changelog","previous_headings":"","what":"New Features","title":"sevenbridges 1.13.4","text":"Added support Markers API (Advance Access feature). See Markers API section vignette details. Added support Actions API. See Actions API section vignette details.","code":""},{"path":"/news/index.html","id":"improvements-1-13-4","dir":"Changelog","previous_headings":"","what":"Improvements","title":"sevenbridges 1.13.4","text":"Added new field description Files class following recent API improvements. Updated API vignette reflect platform default setting update spot instances (spot now enabled default).","code":""},{"path":[]},{"path":"/news/index.html","id":"new-features-1-13-3","dir":"Changelog","previous_headings":"","what":"New Features","title":"sevenbridges 1.13.3","text":"Added support Enterprise API. See Enterprise API section vignette details.","code":""},{"path":"/news/index.html","id":"improvements-1-13-3","dir":"Changelog","previous_headings":"","what":"Improvements","title":"sevenbridges 1.13.3","text":"Removed unnecessary package dependencies optimize time needed package installation loading. New look documentation website improved text readability.","code":""},{"path":[]},{"path":"/news/index.html","id":"new-features-1-13-2","dir":"Changelog","previous_headings":"","what":"New Features","title":"sevenbridges 1.13.2","text":"Added support Folder API. See Folders API section vignette details.","code":""},{"path":"/news/index.html","id":"improvements-1-13-2","dir":"Changelog","previous_headings":"","what":"Improvements","title":"sevenbridges 1.13.2","text":"Added floating TOC changed vignette theme HTML vignettes available Bioconductor, improve browsing experience long vignettes.","code":""},{"path":"/news/index.html","id":"bug-fixes-1-13-2","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"sevenbridges 1.13.2","text":"Fixed Docker image build issue updated Bunny version.","code":""},{"path":[]},{"path":"/news/index.html","id":"new-features-1-13-1","dir":"Changelog","previous_headings":"","what":"New Features","title":"sevenbridges 1.13.1","text":"Added support setting execution hints per task run drafting new tasks.","code":""},{"path":[]},{"path":"/news/index.html","id":"bug-fixes-1-11-5","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"sevenbridges 1.11.5","text":"Fixed issues related hints creating CWL tools (#65) R 3.5.x.","code":""},{"path":[]},{"path":"/news/index.html","id":"bug-fixes-1-11-4","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"sevenbridges 1.11.4","text":"Fixed several compatibility issues CWL app conversion caused newly introduced fields.","code":""},{"path":[]},{"path":"/news/index.html","id":"improvements-1-11-3","dir":"Changelog","previous_headings":"","what":"Improvements","title":"sevenbridges 1.11.3","text":"Added better support spot instance feature, introducing new argument use_interruptible project_new() use_interruptible_instances task_add(). allow users enable/disable spot instance feature project level individual task level. See new section “Run tasks using spot instances” API vignette details.","code":""},{"path":[]},{"path":"/news/index.html","id":"improvements-1-11-2","dir":"Changelog","previous_headings":"","what":"Improvements","title":"sevenbridges 1.11.2","text":"remove words related previous installation method per Bioconductor’s request.","code":""},{"path":[]},{"path":"/news/index.html","id":"improvements-1-11-1","dir":"Changelog","previous_headings":"","what":"Improvements","title":"sevenbridges 1.11.1","text":"Use new Bioconductor package manager BiocManager installation instructions.","code":""},{"path":[]},{"path":"/news/index.html","id":"bug-fixes-1-9-1","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"sevenbridges 1.9.1","text":"Removed functions prevents Shiny apps load package loaded (#63).","code":""},{"path":[]},{"path":"/news/index.html","id":"improvements-1-7-5","dir":"Changelog","previous_headings":"","what":"Improvements","title":"sevenbridges 1.7.5","text":"Update rabix-cli (Bunny) 1.0.2 Docker container.","code":""},{"path":[]},{"path":"/news/index.html","id":"bug-fixes-1-7-4","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"sevenbridges 1.7.4","text":"Fixed baseCommand conversion issue (#59).","code":""},{"path":[]},{"path":"/news/index.html","id":"improvements-1-7-3","dir":"Changelog","previous_headings":"","what":"Improvements","title":"sevenbridges 1.7.3","text":"Use system font stack instead Google Fonts vignettes avoid pandoc SSL issue.","code":""},{"path":[]},{"path":"/news/index.html","id":"bug-fixes-1-7-2","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"sevenbridges 1.7.2","text":"Fixed task creation issues introducting new field use_interruptible_instances supports latest spot instance feature (ea14d5c).","code":""},{"path":[]},{"path":"/news/index.html","id":"new-features-1-7-1","dir":"Changelog","previous_headings":"","what":"New Features","title":"sevenbridges 1.7.1","text":"Added new argument (global option) advance_access enabling access Advance Access features.","code":""},{"path":[]},{"path":[]},{"path":"/news/index.html","id":"seven-bridges-command-line-uploader-interface-1-5-9","dir":"Changelog","previous_headings":"New Features","what":"Seven Bridges Command Line Uploader Interface","title":"sevenbridges 1.5.9","text":"update, users able download Seven Bridges command line uploader (Java-based) corresponding platform, control command line uploader within R directly. offers another option uploading (large) files addition API file uploading. Related changes : New function get_uploader() downloading Seven Bridges command line uploader specific platforms. old function misc_get_uploader() deprecated. New functions cli_upload(), cli_list_projects(), cli_list_tags() R interface Seven Bridges command line uploader. old function misc_upload_cli() deprecated. detailed usage functions, please check section vignette.","code":""},{"path":"/news/index.html","id":"bug-fixes-1-5-9","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"sevenbridges 1.5.9","text":"Fixed task output files download issue (#52). Fixed IDE Docker image build issues; removed libssl-dev dependency; updated Dockerfile (#50).","code":""},{"path":"/news/index.html","id":"improvements-1-5-9","dir":"Changelog","previous_headings":"","what":"Improvements","title":"sevenbridges 1.5.9","text":"New function get_token() getting authentication token different Seven Bridges platforms. old function misc_get_token() deprecated. misc_make_metadata() deprecated, use Metadata() metadata constructor instead. API status code updated latest version. Added docker pull stats badge (#49).","code":""},{"path":[]},{"path":"/news/index.html","id":"bug-fixes-1-5-8","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"sevenbridges 1.5.8","text":"Fixed task creation issues introduced recently added field created_time API (#51). Fixed user configuration file path (~/.sevenbridges/credential ~/.sevenbridges/credentials), following authentication specification. Thanks: Fabian Zimmer","code":""},{"path":[]},{"path":[]},{"path":"/news/index.html","id":"api-client-1-5-6","dir":"Changelog","previous_headings":"Improvements","what":"API Client","title":"sevenbridges 1.5.6","text":"Added fields query default API calls, limit, offset; now requests file details use fields = \"_all\" directly one request issued. applies updating upload logic folder/multiple files (54488bc). Thanks: Raunaq Malhotra. Added functions input_matrix() output_matrix() (2ec7c84) extract input/output matrix CWL JSON files directly, without converting CWL JSON Tool Flow objects. faster implementation compared old method, stable custom fields.","code":""},{"path":"/news/index.html","id":"cwl-1-5-6","dir":"Changelog","previous_headings":"Improvements","what":"CWL","title":"sevenbridges 1.5.6","text":"Added default SBG fields fix conversion errors; support array type enum (79274b8, 8ff4c68).","code":""},{"path":[]},{"path":"/news/index.html","id":"cwl-1-5-6-1","dir":"Changelog","previous_headings":"Bug Fixes","what":"CWL","title":"sevenbridges 1.5.6","text":"Fixed filename fileContent conversion Expression (4c0a686).","code":""},{"path":[]},{"path":[]},{"path":"/news/index.html","id":"api-client-authentication-1-5-5","dir":"Changelog","previous_headings":"Improvements","what":"API Client (Authentication)","title":"sevenbridges 1.5.5","text":"Support three authentication methods: direct authentication, via environment variables, via user configuration file. Compliant new API client authentication specification. Please check latest vignette vignette(\"api\", package = \"sevenbridges\") current authentication methods. Updated platform types: now users can choose \"cgc\", \"aws-us\", \"aws-eu\", \"gcp\", \"cavatica\" Auth() avoid using API base URLs explicitly. Removed credential information parsing package loaded.","code":""},{"path":"/news/index.html","id":"api-client-task-and-upload-1-5-5","dir":"Changelog","previous_headings":"Improvements","what":"API Client (Task and Upload)","title":"sevenbridges 1.5.5","text":"File ID support task input (directly) (#27) New argument keep_test task_add() added: users push Tool object sbg:job information, can still use keep_test = TRUE keep previous test information. (#31) Support manifest file upload fitler subsetting uploader (#46)","code":""},{"path":"/news/index.html","id":"docker-image-1-5-5","dir":"Changelog","previous_headings":"Improvements","what":"Docker Image","title":"sevenbridges 1.5.5","text":"Migrated Docker images Seven Bridges Docker Hub account (#43), now users use docker pull sevenbridges/sevenbridges-r","code":""},{"path":"/news/index.html","id":"cwl-support-1-5-5","dir":"Changelog","previous_headings":"Improvements","what":"CWL Support","title":"sevenbridges 1.5.5","text":"Improved robustness convert_app() CWL JSON fields defined (#44)","code":""},{"path":"/news/index.html","id":"miscellaneous-1-5-5","dir":"Changelog","previous_headings":"Improvements","what":"Miscellaneous","title":"sevenbridges 1.5.5","text":"New vignette style (#38)","code":""},{"path":[]},{"path":"/news/index.html","id":"bug-fixes-1-5-4","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"sevenbridges 1.5.4","text":"Big fix batch mode: (b6a91f2) Bug fix IDE Dockerfile (838856b)","code":""},{"path":"/news/index.html","id":"improvements-1-5-4","dir":"Changelog","previous_headings":"","what":"Improvements","title":"sevenbridges 1.5.4","text":"Decoupled Files class (CWL) File class; updated Files class support latest API Updated error status code latest version","code":""},{"path":[]},{"path":"/news/index.html","id":"bug-fixes-1-5-3","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"sevenbridges 1.5.3","text":"Fixed build error Windows caused unexpected UTF-8 characters (b03ed45) Removed BiocStyle avoid naming scheme conflicts Added essential dependencies, miniUI, shiny, rstudioapi ready RStudio addins Fixed batch mode input checking. Thanks: Fabian Zimmer","code":""},{"path":"/news/index.html","id":"improvements-1-5-3","dir":"Changelog","previous_headings":"","what":"Improvements","title":"sevenbridges 1.5.3","text":"New website function references vignettes: https://sbg.github.io/sevenbridges-r/ Added continuous integration (new badge) Windows Structural style improvements README.md General R code style improvements","code":""},{"path":[]},{"path":"/news/index.html","id":"new-features-1-1-16","dir":"Changelog","previous_headings":"","what":"New Features","title":"sevenbridges 1.1.16","text":"Full support API V2, user-friendly call R CWL Draft 2+ generator R, create JSON/YAML tool directly 5 Vignettes added comprehensive tutorials reference Three examples inlcuded inst/docker CWL app examples Auth configuration file maintain multiple platforms user account Works multiple Seven Bridges supported platforms features like task hook function ease automation","code":""},{"path":[]},{"path":"/news/index.html","id":"new-features-1-0-0","dir":"Changelog","previous_headings":"","what":"New Features","title":"sevenbridges 1.0.0","text":"Initial version APIs SBG platform supported First vignette added","code":""}]
